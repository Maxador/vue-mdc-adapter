{"version":3,"file":"select.min.js","sources":["../../components/base/custom-event.js","../../components/base/dispatch-focus-mixin.js","../../components/select/mdc-native-select.vue","../../node_modules/@material/base/foundation.js","../../node_modules/@material/menu/constants.js","../../node_modules/@material/menu/adapter.js","../../node_modules/@material/menu/foundation.js","../../node_modules/@material/menu/util.js","../../components/base/base-plugin.js","../../components/menu/mdc-menu.vue","../../node_modules/@material/base/component.js","../../node_modules/@material/select/constants.js","../../node_modules/@material/select/foundation.js","../../node_modules/@material/menu/index.js","../../node_modules/@material/select/bottom-line/constants.js","../../node_modules/@material/select/bottom-line/adapter.js","../../node_modules/@material/select/bottom-line/foundation.js","../../node_modules/@material/select/label/constants.js","../../node_modules/@material/select/label/adapter.js","../../node_modules/@material/select/label/foundation.js","../../components/select/mdc-menu-select.vue","../../components/select/mdc-multi-select.vue","../../components/select/mdc-select.vue","../../components/select/mdc-native-option.vue","../../components/select/mdc-menu-option.vue","../../components/select/mdc-multi-option.vue","../../components/select/mdc-option.vue","../../components/base/auto-init.js","../../components/select/entry.js"],"sourcesContent":["/* global CustomEvent */\n\nexport function emitCustomEvent (el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","export const DispatchFocusMixin = {\n  data () {\n    return  {hasFocus: false}\n  },\n  methods: {\n    onMouseDown() {\n      this._active = true\n    },\n    onMouseUp () {\n      this._active = false\n    },\n    onFocusEvent () {\n      // dispatch async to let time to other focus event to propagate\n      setTimeout(() => this.dispatchFocusEvent(),0)\n    },\n    onBlurEvent () {\n      // dispatch async to let time to other focus event to propagate\n      // also filtur blur if mousedown\n      this._active || setTimeout(() => this.dispatchFocusEvent(),0)\n    },\n    dispatchFocusEvent() {\n      let hasFocus = this.$el === document.activeElement || this.$el.contains(document.activeElement);\n      if (hasFocus != this.hasFocus) {\n        this.$emit(hasFocus ? 'focus' : 'blur')\n        this.hasFocus = hasFocus\n      }\n    }\n  },\n  mounted () {\n    this.$el.addEventListener('focusin', this.onFocusEvent)\n    this.$el.addEventListener('focusout', this.onBlurEvent)\n    this.$el.addEventListener('mousedown', this.onMouseDown)\n    this.$el.addEventListener('mouseup', this.onMouseUp)\n  },\n  beforeDestroy () {\n    this.$el.removeEventListener('focusin', this.onFocusEvent)\n    this.$el.removeEventListener('focusout', this.onBlurEvent)\n    this.$el.removeEventListener('mousedown', this.onMouseDown)\n    this.$el.removeEventListener('mouseup', this.onMouseUp)\n  }\n}\n","<template>\n  <select ref=\"root\" class=\"mdc-select mdc-native-select\" \n    v-model=\"selected\" :disabled=\"disabled\"\n    @change=\"onChange\"\n  >\n    <option disabled value=\"\" v-if=\"label\">{{ label }}</option>\n    <slot></slot>\n  </select>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-native-select',\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    value: [String, Array],\n    disabled: Boolean,\n    label: String\n  },\n  data () {\n    return {\n      selected: this.value\n    }\n  },\n  methods: {\n    onChange () {\n      this.$emit('change', this.selected)\n    }\n  },\n  watch: {\n    value (newValue) {\n      this.selected = newValue;\n    },\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-menu',\n  OPEN: 'mdc-menu--open',\n  ANIMATING_OPEN: 'mdc-menu--animating-open',\n  ANIMATING_CLOSED: 'mdc-menu--animating-closed',\n  SELECTED_LIST_ITEM: 'mdc-list-item--selected',\n};\n\n/** @enum {string} */\nconst strings = {\n  ITEMS_SELECTOR: '.mdc-menu__items',\n  SELECTED_EVENT: 'MDCMenu:selected',\n  CANCEL_EVENT: 'MDCMenu:cancel',\n  ARIA_DISABLED_ATTR: 'aria-disabled',\n};\n\n/** @enum {number} */\nconst numbers = {\n  // Amount of time to wait before triggering a selected event on the menu. Note that this time\n  // will most likely be bumped up once interactive lists are supported to allow for the ripple to\n  // animate before closing the menu\n  SELECTED_TRIGGER_DELAY: 50,\n  // Total duration of menu open animation.\n  TRANSITION_OPEN_DURATION: 120,\n  // Total duration of menu close animation.\n  TRANSITION_CLOSE_DURATION: 75,\n  // Margin left to the edge of the viewport when menu is at maximum possible height.\n  MARGIN_TO_EDGE: 32,\n  // Ratio of anchor width to menu width for switching from corner positioning to center positioning.\n  ANCHOR_TO_MENU_WIDTH_RATIO: 0.67,\n  // Ratio of vertical offset to menu height for switching from corner to mid-way origin positioning.\n  OFFSET_TO_MENU_HEIGHT_RATIO: 0.1,\n};\n\n/**\n * Enum for bits in the {@see Corner) bitmap.\n * @enum {number}\n */\nconst CornerBit = {\n  BOTTOM: 1,\n  CENTER: 2,\n  RIGHT: 4,\n  FLIP_RTL: 8,\n};\n\n/**\n * Enum for representing an element corner for positioning the menu.\n *\n * The START constants map to LEFT if element directionality is left\n * to right and RIGHT if the directionality is right to left.\n * Likewise END maps to RIGHT or LEFT depending on the directionality.\n *\n * @enum {number}\n */\nconst Corner = {\n  TOP_LEFT: 0,\n  TOP_RIGHT: CornerBit.RIGHT,\n  BOTTOM_LEFT: CornerBit.BOTTOM,\n  BOTTOM_RIGHT: CornerBit.BOTTOM | CornerBit.RIGHT,\n  TOP_START: CornerBit.FLIP_RTL,\n  TOP_END: CornerBit.FLIP_RTL | CornerBit.RIGHT,\n  BOTTOM_START: CornerBit.BOTTOM | CornerBit.FLIP_RTL,\n  BOTTOM_END: CornerBit.BOTTOM | CornerBit.RIGHT | CornerBit.FLIP_RTL,\n};\n\n\nexport {cssClasses, strings, numbers, CornerBit, Corner};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Menu. Provides an interface for managing\n * - classes\n * - dom\n * - focus\n * - position\n * - dimensions\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCMenuAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /** @return {boolean} */\n  hasNecessaryDom() {}\n\n  /**\n   * @param {EventTarget} target\n   * @param {string} attributeName\n   * @return {string}\n   */\n  getAttributeForEventTarget(target, attributeName) {}\n\n  /** @return {{ width: number, height: number }} */\n  getInnerDimensions() {}\n\n  /** @return {boolean} */\n  hasAnchor() {}\n\n  /** @return {{width: number, height: number, top: number, right: number, bottom: number, left: number}} */\n  getAnchorDimensions() {}\n\n  /** @return {{ width: number, height: number }} */\n  getWindowDimensions() {}\n\n  /** @return {number} */\n  getNumberOfItems() {}\n\n  /**\n   * @param {string} type\n   * @param {function(!Event)} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {function(!Event)} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /** @param {function(!Event)} handler */\n  registerBodyClickHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterBodyClickHandler(handler) {}\n\n  /**\n   * @param {EventTarget} target\n   * @return {number}\n   */\n  getIndexForEventTarget(target) {}\n\n  /** @param {{index: number}} evtData */\n  notifySelected(evtData) {}\n\n  notifyCancel() {}\n\n  saveFocus() {}\n\n  restoreFocus() {}\n\n  /** @return {boolean} */\n  isFocused() {}\n\n  focus() {}\n\n  /** @return {number} */\n  getFocusedItemIndex() /* number */ {}\n\n  /** @param {number} index */\n  focusItemAtIndex(index) {}\n\n  /** @return {boolean} */\n  isRtl() {}\n\n  /** @param {string} origin */\n  setTransformOrigin(origin) {}\n\n  /** @param {{\n  *   top: (string|undefined),\n  *   right: (string|undefined),\n  *   bottom: (string|undefined),\n  *   left: (string|undefined)\n  * }} position */\n  setPosition(position) {}\n\n  /** @param {string} height */\n  setMaxHeight(height) {}\n\n  /**\n   * @param {number} index\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttrForOptionAtIndex(index, attr, value) {}\n\n  /**\n   * @param {number} index\n   * @param {string} attr\n   */\n  rmAttrForOptionAtIndex(index, attr) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  addClassForOptionAtIndex(index, className) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  rmClassForOptionAtIndex(index, className) {}\n}\n\nexport {MDCMenuAdapter};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nlet AnchorMargin;\n\n/* eslint-disable no-unused-vars */\n/**\n * @typedef {{\n *   viewport: { width: number, height: number },\n *   viewportDistance: {top: number, right: number, bottom: number, left: number},\n *   anchorHeight: number,\n *   anchorWidth: number,\n *   menuHeight: number,\n *   menuWidth: number,\n * }}\n */\nlet AutoLayoutMeasurements;\n/* eslint-enable no-unused-vars */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCMenuAdapter} from './adapter';\nimport {cssClasses, strings, numbers, Corner, CornerBit} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCMenuAdapter>}\n */\nclass MDCMenuFoundation extends MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return enum{number} */\n  static get Corner() {\n    return Corner;\n  }\n\n  /**\n   * {@see MDCMenuAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCMenuAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCMenuAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => false,\n      hasNecessaryDom: () => false,\n      getAttributeForEventTarget: () => {},\n      getInnerDimensions: () => ({}),\n      hasAnchor: () => false,\n      getAnchorDimensions: () => ({}),\n      getWindowDimensions: () => ({}),\n      getNumberOfItems: () => 0,\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      registerBodyClickHandler: () => {},\n      deregisterBodyClickHandler: () => {},\n      getIndexForEventTarget: () => 0,\n      notifySelected: () => {},\n      notifyCancel: () => {},\n      saveFocus: () => {},\n      restoreFocus: () => {},\n      isFocused: () => false,\n      focus: () => {},\n      getFocusedItemIndex: () => -1,\n      focusItemAtIndex: () => {},\n      isRtl: () => false,\n      setTransformOrigin: () => {},\n      setPosition: () => {},\n      setMaxHeight: () => {},\n      setAttrForOptionAtIndex: () => {},\n      rmAttrForOptionAtIndex: () => {},\n      addClassForOptionAtIndex: () => {},\n      rmClassForOptionAtIndex: () => {},\n    });\n  }\n\n  /** @param {!MDCMenuAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCMenuFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event)} */\n    this.clickHandler_ = (evt) => this.handlePossibleSelected_(evt);\n    /** @private {function(!Event)} */\n    this.keydownHandler_ = (evt) => this.handleKeyboardDown_(evt);\n    /** @private {function(!Event)} */\n    this.keyupHandler_ = (evt) => this.handleKeyboardUp_(evt);\n    /** @private {function(!Event)} */\n    this.documentClickHandler_ = (evt) => this.handleDocumentClick_(evt);\n    /** @private {boolean} */\n    this.isOpen_ = false;\n    /** @private {number} */\n    this.openAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.closeAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.selectedTriggerTimerId_ = 0;\n    /** @private {number} */\n    this.animationRequestId_ = 0;\n    /** @private {!{ width: number, height: number }} */\n    this.dimensions_;\n    /** @private {number} */\n    this.itemHeight_;\n    /** @private {Corner} */\n    this.anchorCorner_ = Corner.TOP_START;\n    /** @private {AnchorMargin} */\n    this.anchorMargin_ = {top: 0, right: 0, bottom: 0, left: 0};\n    /** @private {?AutoLayoutMeasurements} */\n    this.measures_ = null;\n    /** @private {number} */\n    this.selectedIndex_ = -1;\n    /** @private {boolean} */\n    this.rememberSelection_ = false;\n    /** @private {boolean} */\n    this.quickOpen_ = false;\n\n    // A keyup event on the menu needs to have a corresponding keydown\n    // event on the menu. If the user opens the menu with a keydown event on a\n    // button, the menu will only get the key up event causing buggy behavior with selected elements.\n    /** @private {boolean} */\n    this.keyDownWithinMenu_ = false;\n  }\n\n  init() {\n    const {ROOT, OPEN} = MDCMenuFoundation.cssClasses;\n\n    if (!this.adapter_.hasClass(ROOT)) {\n      throw new Error(`${ROOT} class required in root element.`);\n    }\n\n    if (!this.adapter_.hasNecessaryDom()) {\n      throw new Error(`Required DOM nodes missing in ${ROOT} component.`);\n    }\n\n    if (this.adapter_.hasClass(OPEN)) {\n      this.isOpen_ = true;\n    }\n\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n  }\n\n  destroy() {\n    clearTimeout(this.selectedTriggerTimerId_);\n    clearTimeout(this.openAnimationEndTimerId_);\n    clearTimeout(this.closeAnimationEndTimerId_);\n    // Cancel any currently running animations.\n    cancelAnimationFrame(this.animationRequestId_);\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterBodyClickHandler(this.documentClickHandler_);\n  }\n\n  /**\n   * @param {!Corner} corner Default anchor corner alignment of top-left menu corner.\n   */\n  setAnchorCorner(corner) {\n    this.anchorCorner_ = corner;\n  }\n\n  /**\n   * @param {!AnchorMargin} margin 4-plet of margins from anchor.\n   */\n  setAnchorMargin(margin) {\n    this.anchorMargin_.top = typeof margin.top === 'number' ? margin.top : 0;\n    this.anchorMargin_.right = typeof margin.right === 'number' ? margin.right : 0;\n    this.anchorMargin_.bottom = typeof margin.bottom === 'number' ? margin.bottom : 0;\n    this.anchorMargin_.left = typeof margin.left === 'number' ? margin.left : 0;\n  }\n\n  /** @param {boolean} rememberSelection */\n  setRememberSelection(rememberSelection) {\n    this.rememberSelection_ = rememberSelection;\n    this.setSelectedIndex(-1);\n  }\n\n  /** @param {boolean} quickOpen */\n  setQuickOpen(quickOpen) {\n    this.quickOpen_ = quickOpen;\n  }\n\n  /**\n   * @param {?number} focusIndex\n   * @private\n   */\n  focusOnOpen_(focusIndex) {\n    if (focusIndex === null) {\n      // If this instance of MDCMenu remembers selections, and the user has\n      // made a selection, then focus the last selected item\n      if (this.rememberSelection_ && this.selectedIndex_ >= 0) {\n        this.adapter_.focusItemAtIndex(this.selectedIndex_);\n        return;\n      }\n\n      this.adapter_.focus();\n      // If that doesn't work, focus first item instead.\n      if (!this.adapter_.isFocused()) {\n        this.adapter_.focusItemAtIndex(0);\n      }\n    } else {\n      this.adapter_.focusItemAtIndex(focusIndex);\n    }\n  }\n\n  /**\n   * Handle clicks and cancel the menu if not a child list-item\n   * @param {!Event} evt\n   * @private\n   */\n  handleDocumentClick_(evt) {\n    let el = evt.target;\n\n    while (el && el !== document.documentElement) {\n      if (this.adapter_.getIndexForEventTarget(el) !== -1) {\n        return;\n      }\n      el = el.parentNode;\n    }\n\n    this.adapter_.notifyCancel();\n    this.close(evt);\n  };\n\n  /**\n   * Handle keys that we want to repeat on hold (tab and arrows).\n   * @param {!Event} evt\n   * @return {boolean}\n   * @private\n   */\n  handleKeyboardDown_(evt) {\n    // Do nothing if Alt, Ctrl or Meta are pressed.\n    if (evt.altKey || evt.ctrlKey || evt.metaKey) {\n      return true;\n    }\n\n    const {keyCode, key, shiftKey} = evt;\n    const isTab = key === 'Tab' || keyCode === 9;\n    const isArrowUp = key === 'ArrowUp' || keyCode === 38;\n    const isArrowDown = key === 'ArrowDown' || keyCode === 40;\n    const isSpace = key === 'Space' || keyCode === 32;\n    const isEnter = key === 'Enter' || keyCode === 13;\n    // The menu needs to know if the keydown event was triggered on the menu\n    this.keyDownWithinMenu_ = isEnter || isSpace;\n\n    const focusedItemIndex = this.adapter_.getFocusedItemIndex();\n    const lastItemIndex = this.adapter_.getNumberOfItems() - 1;\n\n    if (shiftKey && isTab && focusedItemIndex === 0) {\n      this.adapter_.focusItemAtIndex(lastItemIndex);\n      evt.preventDefault();\n      return false;\n    }\n\n    if (!shiftKey && isTab && focusedItemIndex === lastItemIndex) {\n      this.adapter_.focusItemAtIndex(0);\n      evt.preventDefault();\n      return false;\n    }\n\n    // Ensure Arrow{Up,Down} and space do not cause inadvertent scrolling\n    if (isArrowUp || isArrowDown || isSpace) {\n      evt.preventDefault();\n    }\n\n    if (isArrowUp) {\n      if (focusedItemIndex === 0 || this.adapter_.isFocused()) {\n        this.adapter_.focusItemAtIndex(lastItemIndex);\n      } else {\n        this.adapter_.focusItemAtIndex(focusedItemIndex - 1);\n      }\n    } else if (isArrowDown) {\n      if (focusedItemIndex === lastItemIndex || this.adapter_.isFocused()) {\n        this.adapter_.focusItemAtIndex(0);\n      } else {\n        this.adapter_.focusItemAtIndex(focusedItemIndex + 1);\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle keys that we don't want to repeat on hold (Enter, Space, Escape).\n   * @param {!Event} evt\n   * @return {boolean}\n   * @private\n   */\n  handleKeyboardUp_(evt) {\n    // Do nothing if Alt, Ctrl or Meta are pressed.\n    if (evt.altKey || evt.ctrlKey || evt.metaKey) {\n      return true;\n    }\n\n    const {keyCode, key} = evt;\n    const isEnter = key === 'Enter' || keyCode === 13;\n    const isSpace = key === 'Space' || keyCode === 32;\n    const isEscape = key === 'Escape' || keyCode === 27;\n\n    if (isEnter || isSpace) {\n      // If the keydown event didn't occur on the menu, then it should\n      // disregard the possible selected event.\n      if (this.keyDownWithinMenu_) {\n        this.handlePossibleSelected_(evt);\n      }\n      this.keyDownWithinMenu_ = false;\n    }\n\n    if (isEscape) {\n      this.adapter_.notifyCancel();\n      this.close();\n    }\n\n    return true;\n  }\n\n  /**\n   * @param {!Event} evt\n   * @private\n   */\n  handlePossibleSelected_(evt) {\n    if (this.adapter_.getAttributeForEventTarget(evt.target, strings.ARIA_DISABLED_ATTR) === 'true') {\n      return;\n    }\n    const targetIndex = this.adapter_.getIndexForEventTarget(evt.target);\n    if (targetIndex < 0) {\n      return;\n    }\n    // Debounce multiple selections\n    if (this.selectedTriggerTimerId_) {\n      return;\n    }\n    this.selectedTriggerTimerId_ = setTimeout(() => {\n      this.selectedTriggerTimerId_ = 0;\n      this.close();\n      if (this.rememberSelection_) {\n        this.setSelectedIndex(targetIndex);\n      }\n      this.adapter_.notifySelected({index: targetIndex});\n    }, numbers.SELECTED_TRIGGER_DELAY);\n  }\n\n  /**\n   * @return {AutoLayoutMeasurements} Measurements used to position menu popup.\n   */\n  getAutoLayoutMeasurements_() {\n    const anchorRect = this.adapter_.getAnchorDimensions();\n    const viewport = this.adapter_.getWindowDimensions();\n\n    return {\n      viewport: viewport,\n      viewportDistance: {\n        top: anchorRect.top,\n        right: viewport.width - anchorRect.right,\n        left: anchorRect.left,\n        bottom: viewport.height - anchorRect.bottom,\n      },\n      anchorHeight: anchorRect.height,\n      anchorWidth: anchorRect.width,\n      menuHeight: this.dimensions_.height,\n      menuWidth: this.dimensions_.width,\n    };\n  }\n\n  /**\n   * Computes the corner of the anchor from which to animate and position the menu.\n   * @return {Corner}\n   * @private\n   */\n  getOriginCorner_() {\n    // Defaults: open from the top left.\n    let corner = Corner.TOP_LEFT;\n\n    const {viewportDistance, anchorHeight, anchorWidth, menuHeight, menuWidth} = this.measures_;\n    const isBottomAligned = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    const availableTop = isBottomAligned ? viewportDistance.top + anchorHeight + this.anchorMargin_.bottom\n      : viewportDistance.top + this.anchorMargin_.top;\n    const availableBottom = isBottomAligned ? viewportDistance.bottom - this.anchorMargin_.bottom\n      : viewportDistance.bottom + anchorHeight - this.anchorMargin_.top;\n\n    const topOverflow = menuHeight - availableTop;\n    const bottomOverflow = menuHeight - availableBottom;\n    if (bottomOverflow > 0 && topOverflow < bottomOverflow) {\n      corner |= CornerBit.BOTTOM;\n    }\n\n    const isRtl = this.adapter_.isRtl();\n    const isFlipRtl = Boolean(this.anchorCorner_ & CornerBit.FLIP_RTL);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n    const isAlignedRight = (avoidHorizontalOverlap && !isRtl) ||\n      (!avoidHorizontalOverlap && isFlipRtl && isRtl);\n    const availableLeft = isAlignedRight ? viewportDistance.left + anchorWidth + this.anchorMargin_.right :\n      viewportDistance.left + this.anchorMargin_.left;\n    const availableRight = isAlignedRight ? viewportDistance.right - this.anchorMargin_.right :\n      viewportDistance.right + anchorWidth - this.anchorMargin_.left;\n\n    const leftOverflow = menuWidth - availableLeft;\n    const rightOverflow = menuWidth - availableRight;\n\n    if ((leftOverflow < 0 && isAlignedRight && isRtl) ||\n        (avoidHorizontalOverlap && !isAlignedRight && leftOverflow < 0) ||\n        (rightOverflow > 0 && leftOverflow < rightOverflow)) {\n      corner |= CornerBit.RIGHT;\n    }\n\n    return corner;\n  }\n\n  /**\n   * @param {Corner} corner Origin corner of the menu.\n   * @return {number} Horizontal offset of menu origin corner from corresponding anchor corner.\n   * @private\n   */\n  getHorizontalOriginOffset_(corner) {\n    const {anchorWidth} = this.measures_;\n    const isRightAligned = Boolean(corner & CornerBit.RIGHT);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n    let x = 0;\n    if (isRightAligned) {\n      const rightOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.left : this.anchorMargin_.right;\n      x = rightOffset;\n    } else {\n      const leftOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.right : this.anchorMargin_.left;\n      x = leftOffset;\n    }\n    return x;\n  }\n\n  /**\n   * @param {Corner} corner Origin corner of the menu.\n   * @return {number} Vertical offset of menu origin corner from corresponding anchor corner.\n   * @private\n   */\n  getVerticalOriginOffset_(corner) {\n    const {viewport, viewportDistance, anchorHeight, menuHeight} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n    const {MARGIN_TO_EDGE} = MDCMenuFoundation.numbers;\n    const avoidVerticalOverlap = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    const canOverlapVertically = !avoidVerticalOverlap;\n    let y = 0;\n\n    if (isBottomAligned) {\n      y = avoidVerticalOverlap ? anchorHeight - this.anchorMargin_.top : -this.anchorMargin_.bottom;\n      // adjust for when menu can overlap anchor, but too tall to be aligned to bottom\n      // anchor corner. Bottom margin is ignored in such cases.\n      if (canOverlapVertically && menuHeight > viewportDistance.top + anchorHeight) {\n        y = -(Math.min(menuHeight, viewport.height - MARGIN_TO_EDGE) - (viewportDistance.top + anchorHeight));\n      }\n    } else {\n      y = avoidVerticalOverlap ? (anchorHeight + this.anchorMargin_.bottom) : this.anchorMargin_.top;\n      // adjust for when menu can overlap anchor, but too tall to be aligned to top\n      // anchor corners. Top margin is ignored in that case.\n      if (canOverlapVertically && menuHeight > viewportDistance.bottom + anchorHeight) {\n        y = -(Math.min(menuHeight, viewport.height - MARGIN_TO_EDGE) - (viewportDistance.bottom + anchorHeight));\n      }\n    }\n    return y;\n  }\n\n  /**\n   * @param {Corner} corner Origin corner of the menu.\n   * @return {number} Maximum height of the menu, based on available space. 0 indicates should not be set.\n   * @private\n   */\n  getMenuMaxHeight_(corner) {\n    let maxHeight = 0;\n    const {viewportDistance} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n\n    // When maximum height is not specified, it is handled from css.\n    if (this.anchorCorner_ & CornerBit.BOTTOM) {\n      if (isBottomAligned) {\n        maxHeight = viewportDistance.top + this.anchorMargin_.top;\n      } else {\n        maxHeight = viewportDistance.bottom - this.anchorMargin_.bottom;\n      }\n    }\n\n    return maxHeight;\n  }\n\n  /** @private */\n  autoPosition_() {\n    if (!this.adapter_.hasAnchor()) {\n      return;\n    }\n\n    // Compute measurements for autoposition methods reuse.\n    this.measures_ = this.getAutoLayoutMeasurements_();\n\n    const corner = this.getOriginCorner_();\n    const maxMenuHeight = this.getMenuMaxHeight_(corner);\n    let verticalAlignment = (corner & CornerBit.BOTTOM) ? 'bottom' : 'top';\n    let horizontalAlignment = (corner & CornerBit.RIGHT) ? 'right' : 'left';\n    const horizontalOffset = this.getHorizontalOriginOffset_(corner);\n    const verticalOffset = this.getVerticalOriginOffset_(corner);\n    const position = {\n      [horizontalAlignment]: horizontalOffset ? horizontalOffset + 'px' : '0',\n      [verticalAlignment]: verticalOffset ? verticalOffset + 'px' : '0',\n    };\n    const {anchorWidth, menuHeight, menuWidth} = this.measures_;\n    // Center align when anchor width is comparable or greater than menu, otherwise keep corner.\n    if (anchorWidth / menuWidth > numbers.ANCHOR_TO_MENU_WIDTH_RATIO) {\n      horizontalAlignment = 'center';\n    }\n\n    // Adjust vertical origin when menu is positioned with significant offset from anchor. This is done so that\n    // scale animation is \"anchored\" on the anchor.\n    if (!(this.anchorCorner_ & CornerBit.BOTTOM) &&\n        Math.abs(verticalOffset / menuHeight) > numbers.OFFSET_TO_MENU_HEIGHT_RATIO) {\n      const verticalOffsetPercent = Math.abs(verticalOffset / menuHeight) * 100;\n      const originPercent = (corner & CornerBit.BOTTOM) ? 100 - verticalOffsetPercent : verticalOffsetPercent;\n      verticalAlignment = Math.round(originPercent * 100) / 100 + '%';\n    }\n\n    this.adapter_.setTransformOrigin(`${horizontalAlignment} ${verticalAlignment}`);\n    this.adapter_.setPosition(position);\n    this.adapter_.setMaxHeight(maxMenuHeight ? maxMenuHeight + 'px' : '');\n\n    // Clear measures after positioning is complete.\n    this.measures_ = null;\n  }\n\n  /**\n   * Open the menu.\n   * @param {{focusIndex: ?number}=} options\n   */\n  open({focusIndex = null} = {}) {\n    this.adapter_.saveFocus();\n\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuFoundation.cssClasses.ANIMATING_OPEN);\n    }\n\n    this.animationRequestId_ = requestAnimationFrame(() => {\n      this.dimensions_ = this.adapter_.getInnerDimensions();\n      this.autoPosition_();\n      this.adapter_.addClass(MDCMenuFoundation.cssClasses.OPEN);\n      this.focusOnOpen_(focusIndex);\n      this.adapter_.registerBodyClickHandler(this.documentClickHandler_);\n      if (!this.quickOpen_) {\n        this.openAnimationEndTimerId_ = setTimeout(() => {\n          this.openAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuFoundation.cssClasses.ANIMATING_OPEN);\n        }, numbers.TRANSITION_OPEN_DURATION);\n      }\n    });\n    this.isOpen_ = true;\n  }\n\n  /**\n   * Closes the menu.\n   * @param {Event=} evt\n   */\n  close(evt = null) {\n    const targetIsDisabled = evt ?\n      this.adapter_.getAttributeForEventTarget(evt.target, strings.ARIA_DISABLED_ATTR) === 'true' :\n      false;\n\n    if (targetIsDisabled) {\n      return;\n    }\n\n    this.adapter_.deregisterBodyClickHandler(this.documentClickHandler_);\n\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuFoundation.cssClasses.ANIMATING_CLOSED);\n    }\n\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(MDCMenuFoundation.cssClasses.OPEN);\n      if (!this.quickOpen_) {\n        this.closeAnimationEndTimerId_ = setTimeout(() => {\n          this.closeAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuFoundation.cssClasses.ANIMATING_CLOSED);\n        }, numbers.TRANSITION_CLOSE_DURATION);\n      }\n    });\n    this.isOpen_ = false;\n    this.adapter_.restoreFocus();\n  }\n\n  /** @return {boolean} */\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /** @return {number} */\n  getSelectedIndex() {\n    return this.selectedIndex_;\n  }\n\n  /**\n   * @param {number} index Index of the item to set as selected.\n   */\n  setSelectedIndex(index) {\n    if (index === this.selectedIndex_) {\n      return;\n    }\n\n    const prevSelectedIndex = this.selectedIndex_;\n    if (prevSelectedIndex >= 0) {\n      this.adapter_.rmAttrForOptionAtIndex(prevSelectedIndex, 'aria-selected');\n      this.adapter_.rmClassForOptionAtIndex(prevSelectedIndex, cssClasses.SELECTED_LIST_ITEM);\n    }\n\n    this.selectedIndex_ = index >= 0 && index < this.adapter_.getNumberOfItems() ? index : -1;\n    if (this.selectedIndex_ >= 0) {\n      this.adapter_.setAttrForOptionAtIndex(this.selectedIndex_, 'aria-selected', 'true');\n      this.adapter_.addClassForOptionAtIndex(this.selectedIndex_, cssClasses.SELECTED_LIST_ITEM);\n    }\n  }\n}\n\nexport {MDCMenuFoundation, AnchorMargin};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @type {string|undefined} */\nlet storedTransformPropertyName_;\n\n/**\n * Returns the name of the correct transform property to use on the current browser.\n * @param {!Window} globalObj\n * @param {boolean=} forceRefresh\n * @return {string}\n */\nfunction getTransformPropertyName(globalObj, forceRefresh = false) {\n  if (storedTransformPropertyName_ === undefined || forceRefresh) {\n    const el = globalObj.document.createElement('div');\n    const transformPropertyName = ('transform' in el.style ? 'transform' : 'webkitTransform');\n    storedTransformPropertyName_ = transformPropertyName;\n  }\n\n  return storedTransformPropertyName_;\n}\n\n/**\n * Clamps a value between the minimum and the maximum, returning the clamped value.\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nfunction clamp(value, min = 0, max = 1) {\n  return Math.min(max, Math.max(min, value));\n}\n\n\n/**\n * Returns the easing value to apply at time t, for a given cubic bezier curve.\n * Control points P0 and P3 are assumed to be (0,0) and (1,1), respectively.\n * Parameters are as follows:\n * - time: The current time in the animation, scaled between 0 and 1.\n * - x1: The x value of control point P1.\n * - y1: The y value of control point P1.\n * - x2: The x value of control point P2.\n * - y2: The y value of control point P2.\n * @param {number} time\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @return {number}\n */\nfunction bezierProgress(time, x1, y1, x2, y2) {\n  return getBezierCoordinate_(solvePositionFromXValue_(time, x1, x2), y1, y2);\n}\n\n/**\n * Compute a single coordinate at a position point between 0 and 1.\n * c1 and c2 are the matching coordinate on control points P1 and P2, respectively.\n * Control points P0 and P3 are assumed to be (0,0) and (1,1), respectively.\n * Adapted from https://github.com/google/closure-library/blob/master/closure/goog/math/bezier.js.\n * @param {number} t\n * @param {number} c1\n * @param {number} c2\n * @return {number}\n */\nfunction getBezierCoordinate_(t, c1, c2) {\n  // Special case start and end.\n  if (t === 0 || t === 1) {\n    return t;\n  }\n\n  // Step one - from 4 points to 3\n  let ic0 = t * c1;\n  let ic1 = c1 + t * (c2 - c1);\n  const ic2 = c2 + t * (1 - c2);\n\n  // Step two - from 3 points to 2\n  ic0 += t * (ic1 - ic0);\n  ic1 += t * (ic2 - ic1);\n\n  // Final step - last point\n  return ic0 + t * (ic1 - ic0);\n}\n\n/**\n * Project a point onto the Bezier curve, from a given X. Calculates the position t along the curve.\n * Adapted from https://github.com/google/closure-library/blob/master/closure/goog/math/bezier.js.\n * @param {number} xVal\n * @param {number} x1\n * @param {number} x2\n * @return {number}\n */\nfunction solvePositionFromXValue_(xVal, x1, x2) {\n  const EPSILON = 1e-6;\n  const MAX_ITERATIONS = 8;\n\n  if (xVal <= 0) {\n    return 0;\n  } else if (xVal >= 1) {\n    return 1;\n  }\n\n  // Initial estimate of t using linear interpolation.\n  let t = xVal;\n\n  // Try gradient descent to solve for t. If it works, it is very fast.\n  let tMin = 0;\n  let tMax = 1;\n  let value = 0;\n  for (let i = 0; i < MAX_ITERATIONS; i++) {\n    value = getBezierCoordinate_(t, x1, x2);\n    const derivative = (getBezierCoordinate_(t + EPSILON, x1, x2) - value) / EPSILON;\n    if (Math.abs(value - xVal) < EPSILON) {\n      return t;\n    } else if (Math.abs(derivative) < EPSILON) {\n      break;\n    } else {\n      if (value < xVal) {\n        tMin = t;\n      } else {\n        tMax = t;\n      }\n      t -= (value - xVal) / derivative;\n    }\n  }\n\n  // If the gradient descent got stuck in a local minimum, e.g. because\n  // the derivative was close to 0, use a Dichotomy refinement instead.\n  // We limit the number of interations to 8.\n  for (let i = 0; Math.abs(value - xVal) > EPSILON && i < MAX_ITERATIONS; i++) {\n    if (value < xVal) {\n      tMin = t;\n      t = (t + tMax) / 2;\n    } else {\n      tMax = t;\n      t = (t + tMin) / 2;\n    }\n    value = getBezierCoordinate_(t, x1, x2);\n  }\n  return t;\n}\n\nexport {getTransformPropertyName, clamp, bezierProgress};\n","export function BasePlugin (components) { \n  return {\n    version: '__VERSION__',\n    install: (vm) => {\n      for (let key in components) {\n        let component = components[key]\n          vm.component(component.name,component)\n      }\n    },\n    components\n  } \n}\n\n","<template>\n  <div ref=\"root\" class=\"mdc-menu mdc-simple-menu\"\n    :class=\"classes\" :style=\"styles\" \n    tabindex=\"-1\">\n    <ul ref=\"items\" class=\"mdc-simple-menu__items mdc-list\" \n      role=\"menu\" aria-hidden=\"true\">\n      <slot></slot>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { MDCMenuFoundation } from '@material/menu/foundation';\nimport { getTransformPropertyName } from '@material/menu/util';\nimport { emitCustomEvent } from '../base';\n\nexport default {\n  name: 'mdc-menu',\n  props: {\n    'open-from-top-left': Boolean,\n    'open-from-top-right': Boolean,\n    'open-from-bottom-left': Boolean,\n    'open-from-bottom-right': Boolean,\n    'quick-open': Boolean,\n    'anchor-corner': [String, Number],\n    'anchor-margin': Object,\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-simple-menu--open-from-top-left': this.openFromTopLeft,\n        'mdc-simple-menu--open-from-top-right': this.openFromTopRight,\n        'mdc-simple-menu--open-from-bottom-left': this.openFromBottomLeft,\n        'mdc-simple-menu--open-from-bottom-right': this.openFromBottomRight,\n      },\n      styles: {},\n      items: [],\n    };\n  },\n  methods: {\n    show(options) {\n      this.foundation.open(options);\n    },\n    hide() {\n      this.foundation.close();\n    },\n    isOpen() {\n      return this.foundation ? this.foundation.isOpen() : false;\n    },\n  },\n  mounted() {\n    const refreshItems = () => {\n      this.items = [].slice.call(\n        this.$refs.items.querySelectorAll('.mdc-list-item[role]'),\n      );\n      this.$emit('update');\n    };\n    this.slotObserver = new MutationObserver(() => refreshItems());\n    this.slotObserver.observe(this.$el, { childList: true, subtree: true });\n\n    this._previousFocus = undefined;\n\n    this.foundation = new MDCMenuFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      hasClass: className => this.$refs.root.classList.contains(className),\n      hasNecessaryDom: () => Boolean(this.$refs.items),\n      getAttributeForEventTarget: (target, attributeName) =>\n        target.getAttribute(attributeName),\n      getInnerDimensions: () => ({\n        width: this.$refs.items.offsetWidth,\n        height: this.$refs.items.offsetHeight,\n      }),\n      hasAnchor: () =>\n        this.$refs.root.parentElement &&\n        this.$refs.root.parentElement.classList.contains('mdc-menu-anchor'),\n      getAnchorDimensions: () =>\n        this.$refs.root.parentElement.getBoundingClientRect(),\n      getWindowDimensions: () => ({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      }),\n      getNumberOfItems: () => this.items.length,\n      registerInteractionHandler: (type, handler) =>\n        this.$refs.root.addEventListener(type, handler),\n      deregisterInteractionHandler: (type, handler) =>\n        this.$refs.root.removeEventListener(type, handler),\n      registerBodyClickHandler: handler =>\n        document.body.addEventListener('click', handler),\n      deregisterBodyClickHandler: handler =>\n        document.body.removeEventListener('click', handler),\n      getIndexForEventTarget: target => this.items.indexOf(target),\n      notifySelected: evtData => {\n        const evt = {\n          index: evtData.index,\n          item: this.items[evtData.index],\n        };\n        this.$emit('select', evt);\n        emitCustomEvent(\n          this.$el,\n          MDCMenuFoundation.strings.SELECTED_EVENT,\n          evt,\n        );\n      },\n      notifyCancel: () => {\n        this.$emit('cancel');\n        emitCustomEvent(this.$el, MDCMenuFoundation.strings.CANCEL_EVENT, {});\n      },\n      saveFocus: () => {\n        this._previousFocus = document.activeElement;\n      },\n      restoreFocus: () => {\n        if (this._previousFocus) {\n          this._previousFocus.focus();\n        }\n      },\n      isFocused: () => document.activeElement === this.$refs.root,\n      focus: () => this.$refs.root.focus(),\n      getFocusedItemIndex: () => this.items.indexOf(document.activeElement),\n      focusItemAtIndex: index => this.items[index].focus(),\n      isRtl: () =>\n        getComputedStyle(this.$refs.root).getPropertyValue('direction') ===\n        'rtl',\n      setTransformOrigin: origin => {\n        this.$set(\n          this.styles,\n          `${getTransformPropertyName(window)}-origin`,\n          origin,\n        );\n      },\n      setPosition: position => {\n        this.$set(this.styles, 'left', position.left);\n        this.$set(this.styles, 'right', position.right);\n        this.$set(this.styles, 'top', position.top);\n        this.$set(this.styles, 'bottom', position.bottom);\n      },\n      setMaxHeight: height => {\n        this.$set(this.styles, 'max-height', height);\n      },\n      setAttrForOptionAtIndex: (index, attr, value) => {\n        this.items[index].setAttribute(attr, value);\n      },\n      rmAttrForOptionAtIndex: (index, attr) => {\n        this.items[index].removeAttribute(attr);\n      },\n      addClassForOptionAtIndex: (index, className) => {\n        this.items[index].classList.add(className);\n      },\n      rmClassForOptionAtIndex: (index, className) => {\n        this.items[index].classList.remove(className);\n      },\n    });\n\n    refreshItems();\n    this.foundation.init();\n    if (this.anchorCorner !== void 0) {\n      this.foundation.setAnchorCorner(Number(this.anchorCorner));\n    }\n    if (this.anchorMargin !== void 0) {\n      this.foundation.setAnchorMargin(this.anchorMargin);\n    }\n  },\n  watch: {\n    quickOpen(nv) {\n      this.foundation.setQuickOpen(nv);\n    },\n    anchorCorner(nv) {\n      this.foundation.setAnchorCorner(Number(nv));\n    },\n    anchorMargin(nv) {\n      this.foundation.setAnchorMargin(nv);\n    },\n  },\n  beforeDestroy() {\n    this._previousFocus = null;\n    this.slotObserver.disconnect();\n    this.foundation.destroy();\n  },\n};\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const cssClasses = {\n  BOX: 'mdc-select--box',\n  DISABLED: 'mdc-select--disabled',\n  OPEN: 'mdc-select--open',\n  ROOT: 'mdc-select',\n  SCROLL_LOCK: 'mdc-select-scroll-lock',\n};\n\nexport const strings = {\n  CHANGE_EVENT: 'MDCSelect:change',\n  BOTTOM_LINE_SELECTOR: '.mdc-select__bottom-line',\n  LABEL_SELECTOR: '.mdc-select__label',\n  MENU_SELECTOR: '.mdc-select__menu',\n  SURFACE_SELECTOR: '.mdc-select__surface',\n  SELECTED_TEXT_SELECTOR: '.mdc-select__selected-text',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {cssClasses, strings} from './constants';\nimport {MDCMenuFoundation} from '@material/menu/index';\n\nconst OPENER_KEYS = [\n  {key: 'ArrowUp', keyCode: 38, forType: 'keydown'},\n  {key: 'ArrowDown', keyCode: 40, forType: 'keydown'},\n  {key: 'Space', keyCode: 32, forType: 'keyup'},\n];\n\nexport default class MDCSelectFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      floatLabel: (/* value: boolean */) => {},\n      activateBottomLine: () => {},\n      deactivateBottomLine: () => {},\n      addBodyClass: (/* className: string */) => {},\n      removeBodyClass: (/* className: string */) => {},\n      setAttr: (/* attr: string, value: string */) => {},\n      rmAttr: (/* attr: string */) => {},\n      computeBoundingRect: () => /* {left: number, top: number} */ ({left: 0, top: 0}),\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      focus: () => {},\n      makeTabbable: () => {},\n      makeUntabbable: () => {},\n      getComputedStyleValue: (/* propertyName: string */) => /* string */ '',\n      setStyle: (/* propertyName: string, value: string */) => {},\n      create2dRenderingContext: () => /* {font: string, measureText: (string) => {width: number}} */ ({\n        font: '',\n        measureText: () => ({width: 0}),\n      }),\n      setMenuElStyle: (/* propertyName: string, value: string */) => {},\n      setMenuElAttr: (/* attr: string, value: string */) => {},\n      rmMenuElAttr: (/* attr: string */) => {},\n      getMenuElOffsetHeight: () => /* number */ 0,\n      openMenu: (/* focusIndex: number */) => {},\n      isMenuOpen: () => /* boolean */ false,\n      setSelectedTextContent: (/* textContent: string */) => {},\n      getNumberOfOptions: () => /* number */ 0,\n      getTextForOptionAtIndex: (/* index: number */) => /* string */ '',\n      getValueForOptionAtIndex: (/* index: number */) => /* string */ '',\n      setAttrForOptionAtIndex: (/* index: number, attr: string, value: string */) => {},\n      rmAttrForOptionAtIndex: (/* index: number, attr: string */) => {},\n      getOffsetTopForOptionAtIndex: (/* index: number */) => /* number */ 0,\n      registerMenuInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterMenuInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      notifyChange: () => {},\n      getWindowInnerHeight: () => /* number */ 0,\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCSelectFoundation.defaultAdapter, adapter));\n    this.ctx_ = null;\n    this.selectedIndex_ = -1;\n    this.disabled_ = false;\n    this.isFocused_ = false;\n\n    /** @private {number} */\n    this.animationRequestId_ = 0;\n\n    this.displayHandler_ = (evt) => {\n      evt.preventDefault();\n      if (!this.adapter_.isMenuOpen()) {\n        this.open_();\n      }\n    };\n    this.displayViaKeyboardHandler_ = (evt) => this.handleDisplayViaKeyboard_(evt);\n    this.selectionHandler_ = ({detail}) => {\n      const {index} = detail;\n\n      if (index !== this.selectedIndex_) {\n        this.setSelectedIndex(index);\n        this.adapter_.notifyChange();\n      }\n      this.close_();\n    };\n    this.cancelHandler_ = () => {\n      this.close_();\n      if (this.selectedIndex_ === -1) {\n        this.adapter_.floatLabel(false);\n      }\n    };\n  }\n\n  init() {\n    this.ctx_ = this.adapter_.create2dRenderingContext();\n    this.adapter_.registerInteractionHandler('click', this.displayHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.displayViaKeyboardHandler_);\n    this.adapter_.registerInteractionHandler('keyup', this.displayViaKeyboardHandler_);\n    this.adapter_.registerMenuInteractionHandler(\n      MDCMenuFoundation.strings.SELECTED_EVENT, this.selectionHandler_);\n    this.adapter_.registerMenuInteractionHandler(\n      MDCMenuFoundation.strings.CANCEL_EVENT, this.cancelHandler_);\n    this.resize();\n  }\n\n  destroy() {\n    // Drop reference to context object to prevent potential leaks\n    this.ctx_ = null;\n    cancelAnimationFrame(this.animationRequestId_);\n    this.adapter_.deregisterInteractionHandler('click', this.displayHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.displayViaKeyboardHandler_);\n    this.adapter_.deregisterInteractionHandler('keyup', this.displayViaKeyboardHandler_);\n    this.adapter_.deregisterMenuInteractionHandler(\n      MDCMenuFoundation.strings.SELECTED_EVENT, this.selectionHandler_);\n    this.adapter_.deregisterMenuInteractionHandler(\n      MDCMenuFoundation.strings.CANCEL_EVENT, this.cancelHandler_);\n  }\n\n  getValue() {\n    return this.selectedIndex_ >= 0 ? this.adapter_.getValueForOptionAtIndex(this.selectedIndex_) : '';\n  }\n\n  getSelectedIndex() {\n    return this.selectedIndex_;\n  }\n\n  setSelectedIndex(index) {\n    const prevSelectedIndex = this.selectedIndex_;\n    if (prevSelectedIndex >= 0) {\n      this.adapter_.rmAttrForOptionAtIndex(this.selectedIndex_, 'aria-selected');\n    }\n\n    this.selectedIndex_ = index >= 0 && index < this.adapter_.getNumberOfOptions() ? index : -1;\n    let selectedTextContent = '';\n    if (this.selectedIndex_ >= 0) {\n      selectedTextContent = this.adapter_.getTextForOptionAtIndex(this.selectedIndex_).trim();\n      this.adapter_.setAttrForOptionAtIndex(this.selectedIndex_, 'aria-selected', 'true');\n      this.adapter_.floatLabel(true);\n    } else {\n      if (!this.adapter_.isMenuOpen()) {\n        this.adapter_.floatLabel(false);\n      }\n    }\n    this.adapter_.setSelectedTextContent(selectedTextContent);\n  }\n\n  isDisabled() {\n    return this.disabled_;\n  }\n\n  setDisabled(disabled) {\n    const {DISABLED} = MDCSelectFoundation.cssClasses;\n    this.disabled_ = disabled;\n    if (this.disabled_) {\n      this.adapter_.addClass(DISABLED);\n      this.adapter_.setAttr('aria-disabled', 'true');\n      this.adapter_.makeUntabbable();\n    } else {\n      this.adapter_.removeClass(DISABLED);\n      this.adapter_.rmAttr('aria-disabled');\n      this.adapter_.makeTabbable();\n    }\n  }\n\n  resize() {\n    const font = this.adapter_.getComputedStyleValue('font');\n    const letterSpacing = parseFloat(this.adapter_.getComputedStyleValue('letter-spacing'));\n\n    if (font) {\n      this.ctx_.font = font;\n    } else {\n      const primaryFontFamily = this.adapter_.getComputedStyleValue('font-family').split(',')[0];\n      const fontSize = this.adapter_.getComputedStyleValue('font-size');\n      this.ctx_.font = `${fontSize} ${primaryFontFamily}`;\n    }\n\n    let maxTextLength = 0;\n\n    for (let i = 0, l = this.adapter_.getNumberOfOptions(); i < l; i++) {\n      const surfacePaddingRight = parseInt(this.adapter_.getComputedStyleValue('padding-right'), 10);\n      const surfacePaddingLeft = parseInt(this.adapter_.getComputedStyleValue('padding-left'), 10);\n      const selectBoxAddedPadding = surfacePaddingRight + surfacePaddingLeft;\n      const txt = this.adapter_.getTextForOptionAtIndex(i).trim();\n      const {width} = this.ctx_.measureText(txt);\n      const addedSpace = letterSpacing * txt.length;\n\n      maxTextLength =\n        Math.max(maxTextLength, Math.ceil(width + addedSpace + selectBoxAddedPadding));\n    }\n\n    this.adapter_.setStyle('width', `${maxTextLength}px`);\n  }\n\n  open_() {\n    this.disableScroll_();\n    const {OPEN} = MDCSelectFoundation.cssClasses;\n    const focusIndex = this.selectedIndex_ < 0 ? 0 : this.selectedIndex_;\n\n    this.setMenuStylesForOpenAtIndex_(focusIndex);\n    this.adapter_.floatLabel(true);\n    this.adapter_.activateBottomLine();\n    this.adapter_.addClass(OPEN);\n    this.animationRequestId_ = requestAnimationFrame(() => {\n      this.adapter_.openMenu(focusIndex);\n      this.isFocused_ = true;\n    });\n  }\n\n  setMenuStylesForOpenAtIndex_(index) {\n    const innerHeight = this.adapter_.getWindowInnerHeight();\n    const {left, top} = this.adapter_.computeBoundingRect();\n\n    this.adapter_.setMenuElAttr('aria-hidden', 'true');\n    this.adapter_.setMenuElStyle('display', 'block');\n    const menuHeight = this.adapter_.getMenuElOffsetHeight();\n    const itemOffsetTop = this.adapter_.getOffsetTopForOptionAtIndex(index);\n    this.adapter_.setMenuElStyle('display', '');\n    this.adapter_.rmMenuElAttr('aria-hidden');\n\n    let adjustedTop = top - itemOffsetTop;\n    const overflowsTop = adjustedTop < 0;\n    const overflowsBottom = adjustedTop + menuHeight > innerHeight;\n    if (overflowsTop) {\n      adjustedTop = 0;\n    } else if (overflowsBottom) {\n      adjustedTop = Math.max(0, innerHeight - menuHeight);\n    };\n\n    this.adapter_.setMenuElStyle('left', `${left}px`);\n    this.adapter_.setMenuElStyle('top', `${adjustedTop}px`);\n    this.adapter_.setMenuElStyle('transform-origin', `center ${itemOffsetTop}px`);\n  }\n\n  close_() {\n    const {OPEN} = MDCSelectFoundation.cssClasses;\n    this.adapter_.removeClass(OPEN);\n    this.adapter_.deactivateBottomLine();\n    this.adapter_.focus();\n    this.enableScroll_();\n  }\n\n  handleDisplayViaKeyboard_(evt) {\n    // We use a hard-coded 2 instead of Event.AT_TARGET to avoid having to reference a browser\n    // global.\n    const EVENT_PHASE_AT_TARGET = 2;\n    if (evt.eventPhase !== EVENT_PHASE_AT_TARGET) {\n      return;\n    }\n\n    // Prevent pressing space down from scrolling the page\n    const isSpaceDown = evt.type === 'keydown' && (evt.key === 'Space' || evt.keyCode === 32);\n    if (isSpaceDown) {\n      evt.preventDefault();\n    }\n\n    const isOpenerKey = OPENER_KEYS.some(({key, keyCode, forType}) => {\n      return evt.type === forType && (evt.key === key || evt.keyCode === keyCode);\n    });\n\n    if (isOpenerKey) {\n      this.displayHandler_(evt);\n    }\n  }\n\n  disableScroll_() {\n    this.adapter_.addBodyClass(cssClasses.SCROLL_LOCK);\n  }\n\n  enableScroll_() {\n    this.adapter_.removeBodyClass(cssClasses.SCROLL_LOCK);\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCComponent from '@material/base/component';\nimport {getTransformPropertyName} from './util';\nimport {MDCMenuFoundation, AnchorMargin} from './foundation';\nimport {Corner, CornerBit} from './constants';\n\n/**\n * @extends MDCComponent<!MDCMenuFoundation>\n */\nclass MDCMenu extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n    /** @private {!Element} */\n    this.previousFocus_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCMenu}\n   */\n  static attachTo(root) {\n    return new MDCMenu(root);\n  }\n\n  /** @return {boolean} */\n  get open() {\n    return this.foundation_.isOpen();\n  }\n\n  /** @param {boolean} value */\n  set open(value) {\n    if (value) {\n      this.foundation_.open();\n    } else {\n      this.foundation_.close();\n    }\n  }\n\n  /** @param {{focusIndex: ?number}=} options */\n  show({focusIndex = null} = {}) {\n    this.foundation_.open({focusIndex: focusIndex});\n  }\n\n  hide() {\n    this.foundation_.close();\n  }\n\n  /**\n   * @param {Corner} corner Default anchor corner alignment of top-left\n   *     menu corner.\n   */\n  setAnchorCorner(corner) {\n    this.foundation_.setAnchorCorner(corner);\n  }\n\n  /**\n   * @param {AnchorMargin} margin\n   */\n  setAnchorMargin(margin) {\n    this.foundation_.setAnchorMargin(margin);\n  }\n\n  /**\n   * Return the item container element inside the component.\n   * @return {?Element}\n   */\n  get itemsContainer_() {\n    return this.root_.querySelector(MDCMenuFoundation.strings.ITEMS_SELECTOR);\n  }\n\n  /**\n   * Return the items within the menu. Note that this only contains the set of elements within\n   * the items container that are proper list items, and not supplemental / presentational DOM\n   * elements.\n   * @return {!Array<!Element>}\n   */\n  get items() {\n    const {itemsContainer_: itemsContainer} = this;\n    return [].slice.call(itemsContainer.querySelectorAll('.mdc-list-item[role]'));\n  }\n\n  /**\n   * Return the item within the menu that is selected.\n   * @param {number} index\n   * @return {?Element}\n   */\n  getOptionByIndex(index) {\n    const items = this.items;\n\n    if (index < items.length) {\n      return this.items[index];\n    } else {\n      return null;\n    }\n  }\n\n  /** @param {number} index */\n  set selectedItemIndex(index) {\n    this.foundation_.setSelectedIndex(index);\n  }\n\n  /** @return {number} */\n  get selectedItemIndex() {\n    return this.foundation_.getSelectedIndex();\n  }\n\n  /** @param {!boolean} rememberSelection */\n  set rememberSelection(rememberSelection) {\n    this.foundation_.setRememberSelection(rememberSelection);\n  }\n\n  /** @param {boolean} quickOpen */\n  set quickOpen(quickOpen) {\n    this.foundation_.setQuickOpen(quickOpen);\n  }\n\n  /** @return {!MDCMenuFoundation} */\n  getDefaultFoundation() {\n    return new MDCMenuFoundation({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      hasClass: (className) => this.root_.classList.contains(className),\n      hasNecessaryDom: () => Boolean(this.itemsContainer_),\n      getAttributeForEventTarget: (target, attributeName) => target.getAttribute(attributeName),\n      getInnerDimensions: () => {\n        const {itemsContainer_: itemsContainer} = this;\n        return {width: itemsContainer.offsetWidth, height: itemsContainer.offsetHeight};\n      },\n      hasAnchor: () => this.root_.parentElement && this.root_.parentElement.classList.contains('mdc-menu-anchor'),\n      getAnchorDimensions: () => this.root_.parentElement.getBoundingClientRect(),\n      getWindowDimensions: () => {\n        return {width: window.innerWidth, height: window.innerHeight};\n      },\n      getNumberOfItems: () => this.items.length,\n      registerInteractionHandler: (type, handler) => this.root_.addEventListener(type, handler),\n      deregisterInteractionHandler: (type, handler) => this.root_.removeEventListener(type, handler),\n      registerBodyClickHandler: (handler) => document.body.addEventListener('click', handler),\n      deregisterBodyClickHandler: (handler) => document.body.removeEventListener('click', handler),\n      getIndexForEventTarget: (target) => this.items.indexOf(target),\n      notifySelected: (evtData) => this.emit(MDCMenuFoundation.strings.SELECTED_EVENT, {\n        index: evtData.index,\n        item: this.items[evtData.index],\n      }),\n      notifyCancel: () => this.emit(MDCMenuFoundation.strings.CANCEL_EVENT, {}),\n      saveFocus: () => {\n        this.previousFocus_ = document.activeElement;\n      },\n      restoreFocus: () => {\n        if (this.previousFocus_) {\n          this.previousFocus_.focus();\n        }\n      },\n      isFocused: () => document.activeElement === this.root_,\n      focus: () => this.root_.focus(),\n      getFocusedItemIndex: () => this.items.indexOf(document.activeElement),\n      focusItemAtIndex: (index) => this.items[index].focus(),\n      isRtl: () => getComputedStyle(this.root_).getPropertyValue('direction') === 'rtl',\n      setTransformOrigin: (origin) => {\n        this.root_.style[`${getTransformPropertyName(window)}-origin`] = origin;\n      },\n      setPosition: (position) => {\n        this.root_.style.left = 'left' in position ? position.left : null;\n        this.root_.style.right = 'right' in position ? position.right : null;\n        this.root_.style.top = 'top' in position ? position.top : null;\n        this.root_.style.bottom = 'bottom' in position ? position.bottom : null;\n      },\n      setMaxHeight: (height) => {\n        this.root_.style.maxHeight = height;\n      },\n      setAttrForOptionAtIndex: (index, attr, value) => this.items[index].setAttribute(attr, value),\n      rmAttrForOptionAtIndex: (index, attr) => this.items[index].removeAttribute(attr),\n      addClassForOptionAtIndex: (index, className) => this.items[index].classList.add(className),\n      rmClassForOptionAtIndex: (index, className) => this.items[index].classList.remove(className),\n    });\n  }\n}\n\nexport {MDCMenuFoundation, MDCMenu, AnchorMargin, Corner, CornerBit};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  BOTTOM_LINE_ACTIVE: 'mdc-select__bottom-line--active',\n};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Select Bottom Line.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Select label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCSelectBottomLineAdapter {\n  /**\n   * Adds a class to the bottom line element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the bottom line element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n}\n\nexport default MDCSelectBottomLineAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSelectBottomLineAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCSelectBottomLineAdapter>}\n * @final\n */\nclass MDCSelectBottomLineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCSelectBottomLineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCSelectBottomLineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSelectBottomLineAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n    });\n  }\n\n  /**\n   * Adds the active class to bottom line\n   */\n  activate() {\n    this.adapter_.addClass(cssClasses.BOTTOM_LINE_ACTIVE);\n  }\n\n  /**\n   * Removes the active class from the bottom line\n   */\n  deactivate() {\n    this.adapter_.removeClass(cssClasses.BOTTOM_LINE_ACTIVE);\n  }\n\n  /**\n   * @param {!MDCSelectBottomLineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSelectBottomLineFoundation.defaultAdapter, adapter));\n  }\n}\n\nexport default MDCSelectBottomLineFoundation;\n","export const cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-select__label--float-above',\n};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Select Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Select label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCSelectLabelAdapter {\n  /**\n   * Adds a class to the label element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the label element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n}\n\nexport default MDCSelectLabelAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSelectLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCSelectLabelAdapter>}\n * @final\n */\nclass MDCSelectLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCSelectLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCSelectLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSelectLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCSelectLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSelectLabelFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Styles the label to float or defloat as necessary.\n   * @param {string} value The value of the input.\n   */\n  styleFloat(value) {\n    const {LABEL_FLOAT_ABOVE} = MDCSelectLabelFoundation.cssClasses;\n    if (!!value) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n    }\n  }\n}\n\nexport default MDCSelectLabelFoundation;\n","<template>\r\n  <div class=\"mdc-select mdc-menu-select\" \r\n    role=\"listbox\" \r\n    :class=\"classes\">\r\n    <div ref=\"surface\" class=\"mdc-select__surface\"\r\n      :style=\"surfaceStyles\" :tabindex=\"tabIndex\">\r\n        <div ref=\"label\" class=\"mdc-select__label\"\r\n          :class=\"labelClasses\"\r\n        >{{label}}</div>\r\n        <div ref=\"selectedContent\" class=\"mdc-select__selected-text\" \r\n        >{{selectedTextContent}}</div>\r\n        <div ref=\"bottomLine\" class=\"mdc-select__bottom-line\"\r\n          :class=\"bottomLineClasses\"></div>\r\n    </div>\r\n    <mdc-menu ref=\"menu\" \r\n      class=\"mdc-select__menu\"\r\n      @update=\"refreshIndex\">\r\n      <slot></slot>\r\n    </mdc-menu>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mdcMenu } from '../menu';\r\nimport MDCSelectFoundation from '@material/select/foundation';\r\nimport MDCSelectBottomLineFoundation from '@material/select/bottom-line/foundation';\r\nimport MDCSelectLabelFoundation from '@material/select/label/foundation';\r\n\r\nexport default {\r\n  name: 'mdc-menu-select',\r\n  model: {\r\n    prop: 'value',\r\n    event: 'change',\r\n  },\r\n  props: {\r\n    multiple: Boolean,\r\n    value: [String, Array],\r\n    disabled: Boolean,\r\n    label: String,\r\n    box: Boolean,\r\n  },\r\n  data() {\r\n    return {\r\n      classes: {\r\n        'mdc-select--box': this.box,\r\n      },\r\n      labelClasses: {},\r\n      bottomLineClasses: {},\r\n      surfaceStyles: {},\r\n      tabIndex: 0,\r\n      selectedTextContent: '',\r\n    };\r\n  },\r\n  components: {\r\n    'mdc-menu': mdcMenu,\r\n  },\r\n  watch: {\r\n    disabled(value) {\r\n      this.foundation && this.foundation.setDisabled(value);\r\n    },\r\n    value() {\r\n      this.refreshIndex();\r\n    },\r\n    box() {\r\n      this.$set(this.classes, 'mdc-select--box', this.box);\r\n    },\r\n  },\r\n  methods: {\r\n    refreshIndex() {\r\n      if (this.foundation) {\r\n        let options = this.$refs.menu.items;\r\n        for (let i = 0; i < options.length; i++) {\r\n          let optionValue =\r\n            options[i].getAttribute('data-value') ||\r\n            options[i].textContent.trim();\r\n          if (this.value == optionValue) {\r\n            this.foundation.setSelectedIndex(i);\r\n            //TODO: MDCFIX force float above if value is valid\r\n            this.$set(\r\n              this.labelClasses,\r\n              'mdc-select__label--float-above',\r\n              true,\r\n            );\r\n            return;\r\n          }\r\n        }\r\n        //TODO: MDCFIX force float above if value is valid\r\n        this.foundation.setSelectedIndex(-1);\r\n        this.$set(this.labelClasses, 'mdc-select__label--float-above', false);\r\n        this.$emit('change', this.foundation.getValue()); // TODO: MDCFIX\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.labelFoundation = new MDCSelectLabelFoundation({\r\n      addClass: className => this.$set(this.labelClasses, className, true),\r\n      removeClass: className => this.$delete(this.labelClasses, className),\r\n    });\r\n\r\n    this.bottomLineFoundation = new MDCSelectBottomLineFoundation({\r\n      addClass: className => {\r\n        this.$set(this.bottomLineClasses, className, true);\r\n      },\r\n      removeClass: className => {\r\n        this.$delete(this.bottomLineClasses, className);\r\n      },\r\n    });\r\n    this.bottomLineFoundation.init();\r\n\r\n    this.foundation = new MDCSelectFoundation({\r\n      addClass: className => this.$set(this.classes, className, true),\r\n      removeClass: className => this.$delete(this.classes, className),\r\n      floatLabel: value => {\r\n        this.labelFoundation.styleFloat(value);\r\n      },\r\n      activateBottomLine: () => {\r\n        this.bottomLineFoundation.activate();\r\n      },\r\n      deactivateBottomLine: () => {\r\n        this.bottomLineFoundation.deactivate();\r\n      },\r\n      setAttr: (attr, value) => this.$el.setAttribute(attr, value),\r\n      rmAttr: (attr, value) => this.$el.removeAttribute(attr, value),\r\n      computeBoundingRect: () => this.$refs.surface.getBoundingClientRect(),\r\n      registerInteractionHandler: (type, handler) =>\r\n        this.$refs.surface.addEventListener(type, handler),\r\n      deregisterInteractionHandler: (type, handler) =>\r\n        this.$refs.surface.removeEventListener(type, handler),\r\n      focus: () => this.$refs.surface.focus(),\r\n      makeTabbable: () => {\r\n        this.tabIndex = 0;\r\n      },\r\n      makeUntabbable: () => {\r\n        this.tabIndex = -1;\r\n      },\r\n      getComputedStyleValue: prop =>\r\n        window.getComputedStyle(this.$refs.surface).getPropertyValue(prop),\r\n      setStyle: (propertyName, value) =>\r\n        this.$set(this.surfaceStyles, propertyName, value),\r\n      create2dRenderingContext: () =>\r\n        document.createElement('canvas').getContext('2d'),\r\n      setMenuElStyle: (propertyName, value) =>\r\n        (this.$refs.menu.$el.style[propertyName] = value),\r\n      setMenuElAttr: (attr, value) =>\r\n        this.$refs.menu.$el.setAttribute(attr, value),\r\n      rmMenuElAttr: attr => this.$refs.menu.$el.removeAttribute(attr),\r\n      getMenuElOffsetHeight: () => this.$refs.menu.$el.offsetHeight,\r\n      openMenu: focusIndex => this.$refs.menu.show({ focusIndex }),\r\n      isMenuOpen: () => this.$refs.menu.isOpen(),\r\n      setSelectedTextContent: selectedTextContent => {\r\n        this.selectedTextContent = selectedTextContent;\r\n      },\r\n      getNumberOfOptions: () => this.$refs.menu.items.length,\r\n      getTextForOptionAtIndex: index =>\r\n        this.$refs.menu.items[index].textContent.trim(),\r\n      getValueForOptionAtIndex: index => {\r\n        return (\r\n          this.$refs.menu.items[index].getAttribute('data-value') ||\r\n          this.$refs.menu.items[index].textContent.trim()\r\n        );\r\n      },\r\n      setAttrForOptionAtIndex: (index, attr, value) =>\r\n        this.$refs.menu.items[index].setAttribute(attr, value),\r\n      rmAttrForOptionAtIndex: (index, attr) =>\r\n        this.$refs.menu.items[index].removeAttribute(attr),\r\n      getOffsetTopForOptionAtIndex: index =>\r\n        this.$refs.menu.items[index].offsetTop,\r\n      registerMenuInteractionHandler: (type, handler) =>\r\n        this.$refs.menu.$el.addEventListener(type, handler),\r\n      deregisterMenuInteractionHandler: (type, handler) =>\r\n        this.$refs.menu.$el.removeEventListener(type, handler),\r\n      notifyChange: () => {\r\n        this.$emit('change', this.foundation.getValue());\r\n      },\r\n      getWindowInnerHeight: () => window.innerHeight,\r\n      addBodyClass: className => document.body.classList.add(className),\r\n      removeBodyClass: className => document.body.classList.remove(className),\r\n    });\r\n\r\n    //TODO: MDCFIX\r\n    let foundation = this.foundation;\r\n    if (foundation) {\r\n      foundation.resize = () => {\r\n        if (!foundation.ctx_) {\r\n          return;\r\n        }\r\n        const font = foundation.adapter_.getComputedStyleValue('font');\r\n        const letterSpacing = parseFloat(\r\n          foundation.adapter_.getComputedStyleValue('letter-spacing'),\r\n        );\r\n        if (font) {\r\n          foundation.ctx_.font = font;\r\n        } else {\r\n          const primaryFontFamily = foundation.adapter_\r\n            .getComputedStyleValue('font-family')\r\n            .split(',')[0];\r\n          const fontSize = foundation.adapter_.getComputedStyleValue(\r\n            'font-size',\r\n          );\r\n          foundation.ctx_.font = `${fontSize} ${primaryFontFamily}`;\r\n        }\r\n\r\n        let maxTextLength = 0;\r\n\r\n        const surfacePaddingRight = parseInt(\r\n          foundation.adapter_.getComputedStyleValue('padding-right'),\r\n          10,\r\n        );\r\n        const surfacePaddingLeft = parseInt(\r\n          foundation.adapter_.getComputedStyleValue('padding-left'),\r\n          10,\r\n        );\r\n        const selectBoxAddedPadding = surfacePaddingRight + surfacePaddingLeft;\r\n\r\n        for (\r\n          let i = 0, l = foundation.adapter_.getNumberOfOptions();\r\n          i < l;\r\n          i++\r\n        ) {\r\n          const txt = foundation.adapter_.getTextForOptionAtIndex(i).trim();\r\n          const { width } = foundation.ctx_.measureText(txt);\r\n          const addedSpace = letterSpacing * txt.length;\r\n\r\n          maxTextLength = Math.max(\r\n            maxTextLength,\r\n            Math.ceil(width + addedSpace + selectBoxAddedPadding),\r\n          );\r\n        }\r\n\r\n        const labelTxt = this.label;\r\n        const { width } = foundation.ctx_.measureText(labelTxt);\r\n        const addedSpace = letterSpacing * labelTxt.length;\r\n\r\n        maxTextLength = Math.max(\r\n          maxTextLength,\r\n          Math.ceil(width + addedSpace + selectBoxAddedPadding),\r\n        );\r\n\r\n        foundation.adapter_.setStyle('width', `${maxTextLength}px`);\r\n      };\r\n    }\r\n    ///\r\n    this.labelFoundation.init();\r\n    this.foundation.init();\r\n    this.foundation.setDisabled(this.disabled);\r\n    this.refreshIndex();\r\n    if (this.value !== this.foundation.getValue()) {\r\n      this.$emit('change', this.foundation.getValue());\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    let foundation = this.foundation;\r\n    this.foundation = null;\r\n    foundation.destroy();\r\n\r\n    let labelFoundation = this.labelFoundation;\r\n    this.labelFoundation = null;\r\n    labelFoundation.destroy();\r\n\r\n    let bottomLineFoundation = this.bottomLineFoundation;\r\n    this.bottomLineFoundation = null;\r\n    bottomLineFoundation.destroy();\r\n  },\r\n};\r\n</script>\r\n","<template>\r\n  <select :multiple=\"multiple\"  ref=\"root\" v-model=\"selected\" \r\n    :disabled=\"disabled\"  :style=\"styles\"  \r\n    class=\"mdc-select mdc-multi-select mdc-list\"\r\n    @change=\"onChange\"\r\n  >\r\n    <optgroup ref=\"optgroup\" class=\"mdc-list-group\" :label=\"label\" v-if=\"label\">\r\n        <slot></slot>\r\n    </optgroup>\r\n    <slot v-else></slot>\r\n  </select>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'mdc-multi-select',\r\n  model: {\r\n    prop: 'value',\r\n    event: 'change'\r\n  },\r\n  props: {\r\n    multiple: Boolean,\r\n    value: [String, Array],\r\n    disabled: Boolean,\r\n    label: String,\r\n    maxSize: {\r\n      type: [String, Number],\r\n      default: 4\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      selected: this.value,\r\n      size: undefined,\r\n      count: undefined\r\n    }\r\n  },\r\n  computed: {\r\n    styles () {\r\n      let scroll = (this.count > this.size)\r\n      let size = 48* this.size + (scroll? 0 : 16)\r\n\r\n      let styles =  {\r\n        'height': size + 'px',\r\n        'overflow-y':  scroll ? 'scroll' : 'hidden'\r\n      }\r\n      if (!scroll) {\r\n        styles['background-image'] = 'unset'\r\n      }\r\n      return styles\r\n    }\r\n  },\r\n  methods: {\r\n    onChange () {\r\n      this.$emit('change', this.selected)\r\n    }\r\n  },\r\n  mounted () {\r\n    const refreshSize = () => {\r\n      let count = this.$refs.root.querySelectorAll('option, optgroup').length\r\n      this.count = count\r\n      let max = Number(this.maxSize)\r\n      if (this.label) {\r\n        max += 1\r\n      }\r\n      this.size = Math.min(count, max)\r\n    }\r\n\r\n    this.slotObserver = new MutationObserver(() => refreshSize())\r\n    this.slotObserver.observe(this.$el, { childList: true, subtree: true })\r\n\r\n    refreshSize()\r\n  },\r\n  beforeDestroy () {\r\n    this.slotObserver.disconnect()\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <component :is=\"type\" :multiple=\"multiple\"\r\n    :label=\"label\" \r\n    :value=\"value\" @change=\"onChange\"\r\n    v-bind=\"$attrs\"\r\n  >\r\n    <slot></slot>\r\n  </component>\r\n</template>\r\n\r\n<script>\r\nimport MDCNativeSelect from './mdc-native-select.vue';\r\nimport MDCMenuSelect from './mdc-menu-select.vue';\r\nimport MDCMultiSelect from './mdc-multi-select.vue';\r\nimport { DispatchFocusMixin } from '../base';\r\n\r\nconst media = new class {\r\n  get mobile() {\r\n    return (\r\n      this._mobile ||\r\n      (this._mobile = window.matchMedia(\r\n        '(max-width: 600px) and (pointer: coarse)',\r\n      ))\r\n    );\r\n  }\r\n}();\r\n\r\nexport default {\r\n  name: 'mdc-select',\r\n  mixins: [DispatchFocusMixin],\r\n  model: {\r\n    prop: 'value',\r\n    event: 'change',\r\n  },\r\n  props: {\r\n    multiple: Boolean,\r\n    value: [String, Array],\r\n    label: String,\r\n    native: Boolean,\r\n    menu: Boolean,\r\n  },\r\n  provide() {\r\n    return { mdcSelect: this };\r\n  },\r\n  components: {\r\n    'mdc-native-select': MDCNativeSelect,\r\n    'mdc-menu-select': MDCMenuSelect,\r\n    'mdc-multi-select': MDCMultiSelect,\r\n  },\r\n  data() {\r\n    return {\r\n      mobile: window ? media.mobile.matches : true,\r\n    };\r\n  },\r\n  computed: {\r\n    type() {\r\n      return this.multiple\r\n        ? 'mdc-multi-select'\r\n        : this.menu\r\n          ? 'mdc-menu-select'\r\n          : this.isNative ? 'mdc-native-select' : 'mdc-menu-select';\r\n    },\r\n    isNative() {\r\n      return this.native || this.multiple || this.mobile;\r\n    },\r\n  },\r\n  methods: {\r\n    onChange(value) {\r\n      this.$emit('change', value);\r\n    },\r\n    refreshMedia() {\r\n      this.mobile = media.mobile.matches;\r\n    },\r\n  },\r\n  beforeMount() {\r\n    media.mobile.addListener(this.refreshMedia);\r\n    this.refreshMedia();\r\n  },\r\n  beforeDestroy() {\r\n    media.mobile.removeListener(this.refreshMedia);\r\n  },\r\n};\r\n</script>\r\n","<template>\n   <option :disabled=\"disabled\" :value=\"value\" v-if=\"hasValue\"\n    class=\"mdc-option mdc-native-option\">\n     <slot></slot>\n   </option>\n   <option :disabled=\"disabled\" v-else\n    class=\"mdc-option mdc-native-option\">\n     <slot></slot>\n   </option>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-native-option',\n  props: {\n    value: String,\n    disabled: Boolean\n  },\n  computed: {\n    hasValue () {\n      return !(typeof this.value === 'undefined')\n    }\n  }\n}\n</script>\n","<template>\n   <li class=\"mdc-option mdc-menu-option mdc-list-item\" \n    role=\"option\" \n    :tabindex=\"disabled?-1:0\"\n    :aria-disabled=\"disabled\"\n    :data-value=\"value\">\n     <slot></slot>\n   </li>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-menu-option',\n  props: {\n    value: String,\n    disabled: Boolean\n  }\n}\n</script>\n","<template>\n   <option class=\"mdc-option mdc-multi-option mdc-list-item\" \n    :disabled=\"disabled\" :value=\"value\" v-if=\"hasValue\">\n     <slot></slot>\n   </option>\n   <option class=\"mdc-option mdc-multi-option mdc-list-item\" \n    :disabled=\"disabled\" v-else>\n     <slot></slot>\n   </option>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-multi-option',\n  props: {\n    value: String,\n    disabled: Boolean\n  },\n  computed: {\n    hasValue () {\n      return !(typeof this.value === 'undefined')\n    }\n  }\n}\n</script>\n","<template>\n  <component :is=\"type\" :disabled=\"disabled\" :value=value>\n    <slot></slot>\n  </component>\n</template>\n\n<script>\nimport MDCNativeOption from './mdc-native-option.vue';\nimport MDCMenuOption from './mdc-menu-option.vue';\nimport MDCMultiOption from './mdc-multi-option.vue';\n\nexport default {\n  name: 'mdc-option',\n  props: {\n    value: String,\n    disabled: Boolean,\n  },\n  inject: ['mdcSelect'],\n  components: {\n    'mdc-native-option': MDCNativeOption,\n    'mdc-multi-option': MDCMultiOption,\n    'mdc-menu-option': MDCMenuOption,\n  },\n  computed: {\n    isNative() {\n      return this.mdcSelect.isNative;\n    },\n    multiple() {\n      return this.mdcSelect.multiple;\n    },\n    menu() {\n      return this.mdcSelect.menu;\n    },\n    type() {\n      return this.multiple\n        ? 'mdc-multi-option'\n        : this.menu\n          ? 'mdc-menu-option'\n          : this.isNative ? 'mdc-native-option' : 'mdc-menu-option';\n    },\n  },\n};\n</script>\n","export function autoInit (plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n  ","import './styles.scss'\nimport {autoInit} from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["emitCustomEvent","el","evtType","evtData","shouldBubble","evt","CustomEvent","document","createEvent","initCustomEvent","dispatchEvent","DispatchFocusMixin","hasFocus","_active","_this","dispatchFocusEvent","setTimeout","_this2","this","$el","activeElement","contains","$emit","addEventListener","onFocusEvent","onBlurEvent","onMouseDown","onMouseUp","removeEventListener","render","String","Array","Boolean","value","selected","newValue","MDCFoundation","adapter","adapter_","cssClasses","className","target","attributeName","type","handler","index","origin","position","height","attr","strings","numbers","CornerBit","Corner","MDCMenuFoundation","babelHelpers.extends","defaultAdapter","clickHandler_","handlePossibleSelected_","keydownHandler_","handleKeyboardDown_","keyupHandler_","handleKeyboardUp_","documentClickHandler_","handleDocumentClick_","isOpen_","openAnimationEndTimerId_","closeAnimationEndTimerId_","selectedTriggerTimerId_","animationRequestId_","dimensions_","itemHeight_","anchorCorner_","TOP_START","anchorMargin_","top","right","bottom","left","measures_","selectedIndex_","rememberSelection_","quickOpen_","keyDownWithinMenu_","ROOT","OPEN","hasClass","Error","hasNecessaryDom","registerInteractionHandler","deregisterInteractionHandler","deregisterBodyClickHandler","corner","margin","rememberSelection","setSelectedIndex","quickOpen","focusIndex","focusItemAtIndex","focus","isFocused","documentElement","getIndexForEventTarget","parentNode","notifyCancel","close","altKey","ctrlKey","metaKey","keyCode","key","shiftKey","isTab","isArrowUp","isArrowDown","isSpace","isEnter","focusedItemIndex","getFocusedItemIndex","lastItemIndex","getNumberOfItems","preventDefault","isEscape","getAttributeForEventTarget","ARIA_DISABLED_ATTR","targetIndex","notifySelected","SELECTED_TRIGGER_DELAY","anchorRect","getAnchorDimensions","viewport","getWindowDimensions","width","TOP_LEFT","viewportDistance","anchorHeight","anchorWidth","menuHeight","menuWidth","isBottomAligned","availableTop","bottomOverflow","isRtl","isFlipRtl","avoidHorizontalOverlap","isAlignedRight","leftOverflow","rightOverflow","isRightAligned","x","MARGIN_TO_EDGE","avoidVerticalOverlap","canOverlapVertically","y","Math","min","maxHeight","hasAnchor","getAutoLayoutMeasurements_","getOriginCorner_","maxMenuHeight","getMenuMaxHeight_","verticalAlignment","horizontalAlignment","horizontalOffset","getHorizontalOriginOffset_","verticalOffset","getVerticalOriginOffset_","ANCHOR_TO_MENU_WIDTH_RATIO","abs","OFFSET_TO_MENU_HEIGHT_RATIO","verticalOffsetPercent","originPercent","round","setTransformOrigin","setPosition","setMaxHeight","saveFocus","addClass","ANIMATING_OPEN","requestAnimationFrame","_this3","getInnerDimensions","autoPosition_","focusOnOpen_","registerBodyClickHandler","removeClass","TRANSITION_OPEN_DURATION","ANIMATING_CLOSED","_this4","TRANSITION_CLOSE_DURATION","restoreFocus","prevSelectedIndex","rmAttrForOptionAtIndex","rmClassForOptionAtIndex","SELECTED_LIST_ITEM","setAttrForOptionAtIndex","addClassForOptionAtIndex","storedTransformPropertyName_","getTransformPropertyName","globalObj","forceRefresh","undefined","transformPropertyName","createElement","style","components","Number","Object","openFromTopLeft","openFromTopRight","openFromBottomLeft","openFromBottomRight","options","foundation","open","isOpen","refreshItems","items","slice","call","$refs","querySelectorAll","slotObserver","MutationObserver","observe","childList","subtree","_previousFocus","$set","classes","$delete","root","classList","getAttribute","offsetWidth","offsetHeight","parentElement","getBoundingClientRect","window","innerWidth","innerHeight","length","body","indexOf","SELECTED_EVENT","CANCEL_EVENT","getComputedStyle","getPropertyValue","styles","setAttribute","removeAttribute","add","remove","init","anchorCorner","setAnchorCorner","anchorMargin","setAnchorMargin","nv","setQuickOpen","disconnect","destroy","MDCComponent","root_","args","initialize","foundation_","getDefaultFoundation","initialSyncWithDOM","OPENER_KEYS","previousFocus_","itemsContainer_","itemsContainer","emit","querySelector","ITEMS_SELECTOR","getSelectedIndex","setRememberSelection","MDCMenu","forType","MDCSelectFoundation","ctx_","disabled_","isFocused_","displayHandler_","isMenuOpen","open_","displayViaKeyboardHandler_","handleDisplayViaKeyboard_","selectionHandler_","detail","notifyChange","close_","cancelHandler_","floatLabel","create2dRenderingContext","registerMenuInteractionHandler","resize","deregisterMenuInteractionHandler","getValueForOptionAtIndex","getNumberOfOptions","selectedTextContent","getTextForOptionAtIndex","trim","setSelectedTextContent","disabled","DISABLED","setAttr","makeUntabbable","rmAttr","makeTabbable","font","getComputedStyleValue","letterSpacing","parseFloat","primaryFontFamily","split","fontSize","maxTextLength","i","l","selectBoxAddedPadding","parseInt","txt","measureText","addedSpace","max","ceil","setStyle","disableScroll_","setMenuStylesForOpenAtIndex_","activateBottomLine","openMenu","getWindowInnerHeight","computeBoundingRect","setMenuElAttr","setMenuElStyle","getMenuElOffsetHeight","itemOffsetTop","getOffsetTopForOptionAtIndex","rmMenuElAttr","adjustedTop","overflowsBottom","deactivateBottomLine","enableScroll_","eventPhase","some","addBodyClass","SCROLL_LOCK","removeBodyClass","MDCSelectBottomLineFoundation","BOTTOM_LINE_ACTIVE","MDCSelectLabelFoundation","LABEL_FLOAT_ABOVE","box","mdcMenu","setDisabled","refreshIndex","menu","optionValue","textContent","labelClasses","getValue","labelFoundation","bottomLineFoundation","bottomLineClasses","styleFloat","activate","deactivate","surface","tabIndex","prop","propertyName","surfaceStyles","getContext","show","offsetTop","labelTxt","label","scroll","count","size","refreshSize","maxSize","media","_mobile","matchMedia","mdcSelect","MDCNativeSelect","MDCMenuSelect","MDCMultiSelect","mobile","matches","multiple","isNative","native","addListener","refreshMedia","removeListener","MDCNativeOption","MDCMultiOption","MDCMenuOption","vm","component","name","plugin","_Vue","Vue","global","use"],"mappings":"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"}