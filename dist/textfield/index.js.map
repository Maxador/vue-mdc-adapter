{"version":3,"file":"index.js","sources":["../../components/base/base-plugin.js","../../components/base/custom-element.js","../../components/base/custom-event.js","../../components/base/custom-icon.js","../../components/base/dispatch-focus-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/textfield/helper-text/adapter.js","../../node_modules/@material/textfield/helper-text/constants.js","../../node_modules/@material/textfield/helper-text/foundation.js","../../node_modules/@material/textfield/icon/adapter.js","../../node_modules/@material/textfield/icon/constants.js","../../node_modules/@material/textfield/icon/foundation.js","../../node_modules/@material/textfield/adapter.js","../../node_modules/@material/line-ripple/adapter.js","../../node_modules/@material/line-ripple/constants.js","../../node_modules/@material/line-ripple/foundation.js","../../node_modules/@material/floating-label/adapter.js","../../node_modules/@material/floating-label/constants.js","../../node_modules/@material/floating-label/foundation.js","../../node_modules/@material/notched-outline/adapter.js","../../node_modules/@material/notched-outline/constants.js","../../node_modules/@material/notched-outline/foundation.js","../../node_modules/@material/textfield/constants.js","../../node_modules/@material/textfield/foundation.js","../../components/textfield/mdc-textfield.vue","../../components/textfield/index.js"],"sourcesContent":["export function BasePlugin (components) { \n  return {\n    version: '__VERSION__',\n    install: (vm) => {\n      for (let key in components) {\n        let component = components[key]\n          vm.component(component.name,component)\n      }\n    },\n    components\n  } \n}\n\n","export const CustomElement = {\n  functional: true,\n  render (createElement, context) {\n    return createElement(\n      context.props.is || context.props.tag || 'div', \n      context.data,\n      context.children)\n  }\n}\n\nexport const CustomElementMixin = {\n  components: {\n    CustomElement\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent (el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","export function extractIconProp (iconProp) {\n    if (typeof iconProp === 'string') {\n      return {\n        classes: { 'material-icons' : true},\n        content: iconProp \n      }\n    }\n    else if (iconProp instanceof Array){\n      return { \n        classes: iconProp.reduce(\n          (result, value) => Object.assign(result,{[value]:true}),\n          {}),\n        }\n    }\n    else if (typeof iconProp === 'object'){\n      return { \n        classes: iconProp.className.split(' ').reduce(\n          (result, value) => Object.assign(result,{[value]:true}),\n          {}),\n        content: iconProp.textContent \n      }\n    }\n  }\n","export const DispatchFocusMixin = {\n  data () {\n    return  {hasFocus: false}\n  },\n  methods: {\n    onMouseDown() {\n      this._active = true\n    },\n    onMouseUp () {\n      this._active = false\n    },\n    onFocusEvent () {\n      // dispatch async to let time to other focus event to propagate\n      setTimeout(() => this.dispatchFocusEvent(),0)\n    },\n    onBlurEvent () {\n      // dispatch async to let time to other focus event to propagate\n      // also filtur blur if mousedown\n      this._active || setTimeout(() => this.dispatchFocusEvent(),0)\n    },\n    dispatchFocusEvent() {\n      let hasFocus = this.$el === document.activeElement || this.$el.contains(document.activeElement);\n      if (hasFocus != this.hasFocus) {\n        this.$emit(hasFocus ? 'focus' : 'blur')\n        this.hasFocus = hasFocus\n      }\n    }\n  },\n  mounted () {\n    this.$el.addEventListener('focusin', this.onFocusEvent)\n    this.$el.addEventListener('focusout', this.onBlurEvent)\n    this.$el.addEventListener('mousedown', this.onMouseDown)\n    this.$el.addEventListener('mouseup', this.onMouseUp)\n  },\n  beforeDestroy () {\n    this.$el.removeEventListener('focusin', this.onFocusEvent)\n    this.$el.removeEventListener('focusout', this.onBlurEvent)\n    this.$el.removeEventListener('mousedown', this.onMouseDown)\n    this.$el.removeEventListener('mouseup', this.onMouseUp)\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Helper Text.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the TextField helper text into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldHelperTextAdapter {\n  /**\n   * Adds a class to the helper text element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the helper text element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns whether or not the helper text element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the helper text element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the helper text element.\n   * @param {string} attr\n   */\n  removeAttr(attr) {}\n\n  /**\n   * Sets the text content for the helper text element.\n   * @param {string} content\n   */\n  setContent(content) {}\n}\n\nexport default MDCTextFieldHelperTextAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_HIDDEN: 'aria-hidden',\n  ROLE: 'role',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',\n  HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldHelperTextAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}\n * @final\n */\nclass MDCTextFieldHelperTextFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldHelperTextAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldHelperTextAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldHelperTextAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {string} content\n   */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /** @param {boolean} isPersistent Sets the persistency of the helper text. */\n  setPersistent(isPersistent) {\n    if (isPersistent) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    }\n  }\n\n  /**\n   * @param {boolean} isValidation True to make the helper text act as an\n   *   error validation message.\n   */\n  setValidation(isValidation) {\n    if (isValidation) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    }\n  }\n\n  /** Makes the helper text visible to the screen reader. */\n  showToScreenReader() {\n    this.adapter_.removeAttr(strings.ARIA_HIDDEN);\n  }\n\n  /**\n   * Sets the validity of the helper text based on the input validity.\n   * @param {boolean} inputIsValid\n   */\n  setValidity(inputIsValid) {\n    const helperTextIsPersistent = this.adapter_.hasClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    const helperTextIsValidationMsg = this.adapter_.hasClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    const validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;\n\n    if (validationMsgNeedsDisplay) {\n      this.adapter_.setAttr(strings.ROLE, 'alert');\n    } else {\n      this.adapter_.removeAttr(strings.ROLE);\n    }\n\n    if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n      this.hide_();\n    }\n  }\n\n  /**\n   * Hides the help text from screen readers.\n   * @private\n   */\n  hide_() {\n    this.adapter_.setAttr(strings.ARIA_HIDDEN, 'true');\n  }\n}\n\nexport default MDCTextFieldHelperTextFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Icon.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the text field icon into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldIconAdapter {\n  /**\n   * Sets an attribute on the icon element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Registers an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * Emits a custom event \"MDCTextField:icon\" denoting a user has clicked the icon.\n   */\n  notifyIconAction() {}\n}\n\nexport default MDCTextFieldIconAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ICON_EVENT: 'MDCTextField:icon',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldIconAdapter from './adapter';\nimport {strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}\n * @final\n */\nclass MDCTextFieldIconFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldIconAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldIconAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldIconAdapter} */ ({\n      setAttr: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      notifyIconAction: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldIconAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldIconFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction(evt);\n  }\n\n  init() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {boolean} disabled\n   */\n  setDisabled(disabled) {\n    if (disabled) {\n      this.adapter_.setAttr('tabindex', '-1');\n    } else {\n      this.adapter_.setAttr('tabindex', '0');\n    }\n  }\n\n  /**\n   * Handles an interaction event\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyIconAction();\n    }\n  }\n}\n\nexport default MDCTextFieldIconFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * @typedef {{\n *   value: string,\n *   disabled: boolean,\n *   badInput: boolean,\n *   validity: {\n *     badInput: boolean,\n *     valid: boolean,\n *   },\n * }}\n */\nlet NativeInputType;\n\n/**\n * @typedef {{\n *   helperText: (!MDCTextFieldHelperTextFoundation|undefined),\n *   icon: (!MDCTextFieldIconFoundation|undefined),\n * }}\n */\nlet FoundationMapType;\n\n/**\n * Adapter for MDC Text Field.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Text Field into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Registers a validation attribute change listener on the input element.\n   * @param {function(!Array): undefined} handler\n   * @return {!MutationObserver}\n   */\n  registerValidationAttributeChangeHandler(handler) {}\n\n  /**\n   * Disconnects a validation attribute observer on the input element.\n   * @param {!MutationObserver} observer\n   */\n  deregisterValidationAttributeChangeHandler(observer) {}\n\n  /**\n   * Returns an object representing the native text input element, with a\n   * similar API shape. The object returned should include the value, disabled\n   * and badInput properties, as well as the checkValidity() function. We never\n   * alter the value within our code, however we do update the disabled\n   * property, so if you choose to duck-type the return value for this method\n   * in your implementation it's important to keep this in mind. Also note that\n   * this method can return null, which the foundation will handle gracefully.\n   * @return {?Element|?NativeInputType}\n   */\n  getNativeInput() {}\n\n  /**\n   * Returns true if the textfield is focused.\n   * We achieve this via `document.activeElement === this.root_`.\n   * @return {boolean}\n   */\n  isFocused() {}\n\n  /**\n   * Returns true if the direction of the root element is set to RTL.\n   * @return {boolean}\n   */\n  isRtl() {}\n\n  /**\n   * Activates the line ripple.\n   */\n  activateLineRipple() {}\n\n  /**\n   * Deactivates the line ripple.\n   */\n  deactivateLineRipple() {}\n\n  /**\n   * Sets the transform origin of the line ripple.\n   * @param {number} normalizedX\n   */\n  setLineRippleTransformOrigin(normalizedX) {}\n\n  /**\n   * Only implement if label exists.\n   * Shakes label if shouldShake is true.\n   * @param {boolean} shouldShake\n   */\n  shakeLabel(shouldShake) {}\n\n  /**\n   * Only implement if label exists.\n   * Floats the label above the input element if shouldFloat is true.\n   * @param {boolean} shouldFloat\n   */\n  floatLabel(shouldFloat) {}\n\n  /**\n   * Returns true if label element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasLabel() {}\n\n  /**\n   * Only implement if label exists.\n   * Returns width of label in pixels.\n   * @return {number}\n   */\n  getLabelWidth() {}\n\n  /**\n   * Returns true if outline element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasOutline() {}\n\n  /**\n   * Only implement if outline element exists.\n   * Updates SVG Path on outline element based on the\n   * label element width and RTL context.\n   * @param {number} labelWidth\n   * @param {boolean} isRtl\n   */\n  updateOutlinePath(labelWidth, isRtl) {}\n}\n\nexport {MDCTextFieldAdapter, NativeInputType, FoundationMapType};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC TextField Line Ripple.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the line ripple into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCLineRippleAdapter {\n  /**\n   * Adds a class to the line ripple element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the line ripple element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the line ripple element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Registers an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerEventHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterEventHandler(evtType, handler) {}\n}\n\nexport default MDCLineRippleAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',\n  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCLineRippleAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCLineRippleAdapter>}\n * @final\n */\nclass MDCLineRippleFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCLineRippleAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCLineRippleAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCLineRippleAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCLineRippleAdapter=} adapter\n   */\n  constructor(adapter = /** @type {!MDCLineRippleAdapter} */ ({})) {\n    super(Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd(evt);\n  }\n\n  init() {\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  /**\n   * Activates the line ripple\n   */\n  activate() {\n    this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n  }\n\n  /**\n   * Sets the center of the ripple animation to the given X coordinate.\n   * @param {!number} xCoordinate\n   */\n  setRippleCenter(xCoordinate) {\n    const attributeString =\n        `transform-origin: ${xCoordinate}px center`;\n\n    this.adapter_.setAttr('style', attributeString);\n  }\n\n  /**\n   * Deactivates the line ripple\n   */\n  deactivate() {\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n  }\n\n  /**\n   * Handles a transition end event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Wait for the line ripple to be either transparent or opaque\n    // before emitting the animation end event\n    const isDeactivating = this.adapter_.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n    if (evt.propertyName === 'opacity') {\n      if (isDeactivating) {\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n      }\n    }\n  }\n}\n\nexport default MDCLineRippleFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Floating Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the floating label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCFloatingLabelAdapter {\n  /**\n   * Adds a class to the label element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the label element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Registers an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n}\n\nexport default MDCFloatingLabelAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',\n  LABEL_SHAKE: 'mdc-floating-label--shake',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFloatingLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}\n * @final\n */\nclass MDCFloatingLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCFloatingLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCFloatingLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCFloatingLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCFloatingLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCFloatingLabelFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.shakeAnimationEndHandler_ = () => this.handleShakeAnimationEnd_();\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {\n    return this.adapter_.getWidth();\n  }\n\n  /**\n   * Styles the label to produce the label shake for errors.\n   * @param {boolean} shouldShake adds shake class if true,\n   * otherwise removes shake class.\n   */\n  shake(shouldShake) {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldShake) {\n      this.adapter_.addClass(LABEL_SHAKE);\n    } else {\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Styles the label to float or dock.\n   * @param {boolean} shouldFloat adds float class if true, otherwise remove\n   * float and shake class to dock label.\n   */\n  float(shouldFloat) {\n    const {LABEL_FLOAT_ABOVE, LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldFloat) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   */\n  handleShakeAnimationEnd_() {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    this.adapter_.removeClass(LABEL_SHAKE);\n  }\n}\n\nexport default MDCFloatingLabelFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Notched Outline.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Notched Outline into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCNotchedOutlineAdapter {\n  /**\n   * Returns the width of the root element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Returns the height of the root element.\n   * @return {number}\n   */\n  getHeight() {}\n\n  /**\n   * Sets the \"d\" attribute of the outline element's SVG path.\n   * @param {string} value\n   */\n  setOutlinePathAttr(value) {}\n\n  /**\n   * Returns the idle outline element's computed style value of the given css property `propertyName`.\n   * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getIdleOutlineStyleValue(propertyName) {}\n}\n\nexport default MDCNotchedOutlineAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  PATH_SELECTOR: '.mdc-notched-outline__path',\n  IDLE_OUTLINE_SELECTOR: '.mdc-notched-outline__idle',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCNotchedOutlineAdapter from './adapter';\nimport {strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}\n * @final\n */\nclass MDCNotchedOutlineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCNotchedOutlineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCNotchedOutlineAdapter} */ ({\n      getWidth: () => {},\n      getHeight: () => {},\n      setOutlinePathAttr: () => {},\n      getIdleOutlineStyleValue: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCNotchedOutlineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCNotchedOutlineFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Updates the SVG path of the focus outline element based on the notchWidth\n   * and the RTL context.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   */\n  updateSvgPath(notchWidth, isRtl = false) {\n    // Fall back to reading a specific corner's style because Firefox doesn't report the style on border-radius.\n    const radiusStyleValue = this.adapter_.getIdleOutlineStyleValue('border-radius') ||\n        this.adapter_.getIdleOutlineStyleValue('border-top-left-radius');\n    const radius = parseFloat(radiusStyleValue);\n    const width = this.adapter_.getWidth();\n    const height = this.adapter_.getHeight();\n    const cornerWidth = radius + 1.2;\n    const leadingStrokeLength = Math.abs(11 - cornerWidth);\n    const paddedNotchWidth = notchWidth + 8;\n\n    // The right, bottom, and left sides of the outline follow the same SVG path.\n    const pathMiddle = 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius\n      + 'v' + (height - (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius\n      + 'h' + (-width + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius\n      + 'v' + (-height + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;\n\n    let path;\n    if (!isRtl) {\n      path = 'M' + (cornerWidth + leadingStrokeLength + paddedNotchWidth) + ',' + 1\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength)\n        + pathMiddle\n        + 'h' + leadingStrokeLength;\n    } else {\n      path = 'M' + (width - cornerWidth - leadingStrokeLength) + ',' + 1\n        + 'h' + leadingStrokeLength\n        + pathMiddle\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength);\n    }\n\n    this.adapter_.setOutlinePathAttr(path);\n  }\n}\n\nexport default MDCNotchedOutlineFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_CONTROLS: 'aria-controls',\n  INPUT_SELECTOR: '.mdc-text-field__input',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  ICON_SELECTOR: '.mdc-text-field__icon',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n  BOTTOM_LINE_SELECTOR: '.mdc-line-ripple',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-text-field',\n  UPGRADED: 'mdc-text-field--upgraded',\n  DISABLED: 'mdc-text-field--disabled',\n  DENSE: 'mdc-text-field--dense',\n  FOCUSED: 'mdc-text-field--focused',\n  INVALID: 'mdc-text-field--invalid',\n  BOX: 'mdc-text-field--box',\n  OUTLINED: 'mdc-text-field--outlined',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n  DENSE_LABEL_SCALE: 0.923,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCTextFieldAdapter, NativeInputType, FoundationMapType} from './adapter';\n/* eslint-disable no-unused-vars */\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation';\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\nimport MDCFloatingLabelFoundation from '@material/floating-label/foundation';\nimport MDCNotchedOutlineFoundation from '@material/notched-outline/foundation';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n\n// whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n// under section: `Validation-related attributes`\nconst VALIDATION_ATTR_WHITELIST = [\n  'pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength',\n];\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldAdapter>}\n * @final\n */\nclass MDCTextFieldFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {boolean} */\n  get shouldShake() {\n    return !this.isValid() && !this.isFocused_;\n  }\n\n  /** @return {boolean} */\n  get shouldFloat() {\n    return !this.isBadInput_() && (!!this.getValue() || this.isFocused_);\n  }\n\n  /**\n   * {@see MDCTextFieldAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      registerTextFieldInteractionHandler: () => {},\n      deregisterTextFieldInteractionHandler: () => {},\n      registerInputInteractionHandler: () => {},\n      deregisterInputInteractionHandler: () => {},\n      registerValidationAttributeChangeHandler: () => {},\n      deregisterValidationAttributeChangeHandler: () => {},\n      getNativeInput: () => {},\n      isFocused: () => {},\n      isRtl: () => {},\n      activateLineRipple: () => {},\n      deactivateLineRipple: () => {},\n      setLineRippleTransformOrigin: () => {},\n      shakeLabel: () => {},\n      floatLabel: () => {},\n      hasLabel: () => {},\n      getLabelWidth: () => {},\n      hasOutline: () => {},\n      updateOutlinePath: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldAdapter} adapter\n   * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.\n   */\n  constructor(adapter, foundationMap = /** @type {!FoundationMapType} */ ({})) {\n    super(Object.assign(MDCTextFieldFoundation.defaultAdapter, adapter));\n\n    /** @type {!MDCTextFieldHelperTextFoundation|undefined} */\n    this.helperText_ = foundationMap.helperText;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    this.icon_ = foundationMap.icon;\n\n    /** @private {boolean} */\n    this.isFocused_ = false;\n    /** @private {boolean} */\n    this.receivedUserInput_ = false;\n    /** @private {boolean} */\n    this.useCustomValidityChecking_ = false;\n    /** @private {boolean} */\n    this.isValid_ = true;\n    /** @private {function(): undefined} */\n    this.inputFocusHandler_ = () => this.activateFocus();\n    /** @private {function(): undefined} */\n    this.inputBlurHandler_ = () => this.deactivateFocus();\n    /** @private {function(): undefined} */\n    this.inputInputHandler_ = () => this.autoCompleteFocus();\n    /** @private {function(!Event): undefined} */\n    this.setPointerXOffset_ = (evt) => this.setTransformOrigin(evt);\n    /** @private {function(!Event): undefined} */\n    this.textFieldInteractionHandler_ = () => this.handleTextFieldInteraction();\n    /** @private {function(!Array): undefined} */\n    this.validationAttributeChangeHandler_ = (mutations) => this.handleValidationAttributeMutation_(mutations);\n    /** @private {!MutationObserver} */\n    this.validationObserver_;\n  }\n\n  init() {\n    this.adapter_.addClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n    // Ensure label does not collide with any pre-filled value.\n    if (this.adapter_.hasLabel() && this.getValue()) {\n      this.adapter_.floatLabel(this.shouldFloat);\n    }\n\n    if (this.adapter_.isFocused()) {\n      this.inputFocusHandler_();\n    }\n\n    this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.registerInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.validationObserver_ = this.adapter_.registerValidationAttributeChangeHandler(\n      this.validationAttributeChangeHandler_);\n  }\n\n  destroy() {\n    this.adapter_.removeClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n    this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.deregisterInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);\n  }\n\n  /**\n   * Handles user interactions with the Text Field.\n   */\n  handleTextFieldInteraction() {\n    if (this.adapter_.getNativeInput().disabled) {\n      return;\n    }\n    this.receivedUserInput_ = true;\n  }\n\n  /**\n   * Handles validation attribute changes\n   * @param {Array<MutationRecord>} mutationsList\n   * @private\n   */\n  handleValidationAttributeMutation_(mutationsList) {\n    mutationsList.some((mutation) => {\n      if (VALIDATION_ATTR_WHITELIST.indexOf(mutation.attributeName) > -1) {\n        this.styleValidity_(true);\n        return true;\n      }\n    });\n  }\n\n  /**\n   * Updates the focus outline for outlined text fields.\n   */\n  updateOutline() {\n    if (!this.adapter_.hasOutline() || !this.adapter_.hasLabel()) {\n      return;\n    }\n\n    const isDense = this.adapter_.hasClass(cssClasses.DENSE);\n    const labelScale = isDense ? numbers.DENSE_LABEL_SCALE : numbers.LABEL_SCALE;\n    const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n    const isRtl = this.adapter_.isRtl();\n    this.adapter_.updateOutlinePath(labelWidth, isRtl);\n  }\n\n  /**\n   * Activates the text field focus state.\n   */\n  activateFocus() {\n    this.isFocused_ = true;\n    this.styleFocused_(this.isFocused_);\n    this.adapter_.activateLineRipple();\n    this.updateOutline();\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n    }\n    if (this.helperText_) {\n      this.helperText_.showToScreenReader();\n    }\n  }\n\n  /**\n   * Sets the line ripple's transform origin, so that the line ripple activate\n   * animation will animate out from the user's click location.\n   * @param {!Event} evt\n   */\n  setTransformOrigin(evt) {\n    const targetClientRect = evt.target.getBoundingClientRect();\n    const evtCoords = {x: evt.clientX, y: evt.clientY};\n    const normalizedX = evtCoords.x - targetClientRect.left;\n    this.adapter_.setLineRippleTransformOrigin(normalizedX);\n  }\n\n  /**\n   * Activates the Text Field's focus state in cases when the input value\n   * changes without user input (e.g. programatically).\n   */\n  autoCompleteFocus() {\n    if (!this.receivedUserInput_) {\n      this.activateFocus();\n    }\n  }\n\n  /**\n   * Deactivates the Text Field's focus state.\n   */\n  deactivateFocus() {\n    this.isFocused_ = false;\n    this.adapter_.deactivateLineRipple();\n    const input = this.getNativeInput_();\n    const shouldRemoveLabelFloat = !input.value && !this.isBadInput_();\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    this.styleFocused_(this.isFocused_);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n    }\n    if (shouldRemoveLabelFloat) {\n      this.receivedUserInput_ = false;\n    }\n  }\n\n  /**\n   * @return {string} The value of the input Element.\n   */\n  getValue() {\n    return this.getNativeInput_().value;\n  }\n\n  /**\n   * @param {string} value The value to set on the input Element.\n   */\n  setValue(value) {\n    this.getNativeInput_().value = value;\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n    }\n  }\n\n  /**\n   * @return {boolean} If a custom validity is set, returns that value.\n   *     Otherwise, returns the result of native validity checks.\n   */\n  isValid() {\n    return this.useCustomValidityChecking_\n      ? this.isValid_ : this.isNativeInputValid_();\n  }\n\n  /**\n   * @param {boolean} isValid Sets the validity state of the Text Field.\n   */\n  setValid(isValid) {\n    this.useCustomValidityChecking_ = true;\n    this.isValid_ = isValid;\n    // Retrieve from the getter to ensure correct logic is applied.\n    isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field is disabled.\n   */\n  isDisabled() {\n    return this.getNativeInput_().disabled;\n  }\n\n  /**\n   * @param {boolean} disabled Sets the text-field disabled or enabled.\n   */\n  setDisabled(disabled) {\n    this.getNativeInput_().disabled = disabled;\n    this.styleDisabled_(disabled);\n  }\n\n  /**\n   * @param {string} content Sets the content of the helper text.\n   */\n  setHelperTextContent(content) {\n    if (this.helperText_) {\n      this.helperText_.setContent(content);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field input fails in converting the\n   *     user-supplied value.\n   * @private\n   */\n  isBadInput_() {\n    return this.getNativeInput_().validity.badInput;\n  }\n\n  /**\n   * @return {boolean} The result of native validity checking\n   *     (ValidityState.valid).\n   */\n  isNativeInputValid_() {\n    return this.getNativeInput_().validity.valid;\n  }\n\n  /**\n   * Styles the component based on the validity state.\n   * @param {boolean} isValid\n   * @private\n   */\n  styleValidity_(isValid) {\n    const {INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isValid) {\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.addClass(INVALID);\n    }\n    if (this.helperText_) {\n      this.helperText_.setValidity(isValid);\n    }\n  }\n\n  /**\n   * Styles the component based on the focused state.\n   * @param {boolean} isFocused\n   * @private\n   */\n  styleFocused_(isFocused) {\n    const {FOCUSED} = MDCTextFieldFoundation.cssClasses;\n    if (isFocused) {\n      this.adapter_.addClass(FOCUSED);\n    } else {\n      this.adapter_.removeClass(FOCUSED);\n    }\n  }\n\n  /**\n   * Styles the component based on the disabled state.\n   * @param {boolean} isDisabled\n   * @private\n   */\n  styleDisabled_(isDisabled) {\n    const {DISABLED, INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isDisabled) {\n      this.adapter_.addClass(DISABLED);\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n    if (this.icon_) {\n      this.icon_.setDisabled(isDisabled);\n    }\n  }\n\n  /**\n   * @return {!Element|!NativeInputType} The native text input from the\n   * host environment, or a dummy if none exists.\n   * @private\n   */\n  getNativeInput_() {\n    return this.adapter_.getNativeInput() ||\n    /** @type {!NativeInputType} */ ({\n      value: '',\n      disabled: false,\n      validity: {\n        badInput: false,\n        valid: true,\n      },\n    });\n  }\n}\n\nexport default MDCTextFieldFoundation;\n","<template>\r\n  <div class=\"mdc-textfield-wrapper\" :style=\"{width:fullwidth?'100%':undefined}\">\r\n\r\n    <div ref=\"root\" :class=\"rootClasses\">\r\n\r\n      <i ref=\"icon\" v-if=\"!!hasLeadingIcon\"\r\n        tabindex=\"0\"\r\n        class=\"mdc-text-field__icon\"\r\n        :class=\"hasLeadingIcon.classes\">\r\n        <slot name=\"leading-icon\">{{ hasLeadingIcon.content }}</slot>\r\n      </i>\r\n\r\n      <textarea ref=\"input\" v-if=\"multiline\"\r\n        v-on=\"$listeners\"\r\n        v-bind=\"inputAttrs\"\r\n        :class=\"inputClasses\"\r\n        @input=\"updateValue($event.target.value)\"\r\n        :minlength=\"minlength\" :maxlength=\"maxlength\"\r\n        :placeholder=\"inputPlaceHolder\"\r\n        :aria-label=\"inputPlaceHolder\"\r\n        :aria-controls=\"inputAriaControls\"\r\n        :rows=\"rows\" :cols=\"cols\"\r\n        ></textarea>\r\n\r\n      <input ref=\"input\" v-else\r\n        v-on=\"$listeners\"\r\n        v-bind=\"inputAttrs\"\r\n        :class=\"inputClasses\"\r\n        @input=\"updateValue($event.target.value)\"\r\n        :type=\"type\"\r\n        :minlength=\"minlength\" :maxlength=\"maxlength\"\r\n        :placeholder=\"inputPlaceHolder\"\r\n        :aria-label=\"inputPlaceHolder\"\r\n        :aria-controls=\"inputAriaControls\"\r\n        />\r\n\r\n      <label ref=\"label\" :class=\"labelClassesUpgraded\" :for=\"_uid\"  v-if=\"hasLabel\">\r\n        {{ label }}\r\n      </label>\r\n\r\n      <i ref=\"icon\" v-if=\"!!hasTrailingIcon\"\r\n        tabindex=\"0\"\r\n        class=\"mdc-text-field__icon\"\r\n        :class=\"hasTrailingIcon.classes\">\r\n        <slot name=\"trailing-icon\">{{ hasTrailingIcon.content }}</slot>\r\n      </i>\r\n\r\n      <div ref=\"outline\" class=\"mdc-notched-outline\" v-if=\"hasOutline\">\r\n        <svg>\r\n          <path class=\"mdc-notched-outline__path\" :d=\"outlinePathAttr\" />\r\n        </svg>\r\n      </div>\r\n      <div ref=\"outlineIdle\" class=\"mdc-notched-outline__idle\" v-if=\"hasOutline\"></div>\r\n      <div ref=\"bottom\" :class=\"bottomClasses\" v-if=\"hasBottomLine\"></div>\r\n\r\n    </div>\r\n\r\n    <p ref=\"help\" :id=\"'help-'+_uid\" :class=\"helpClasses\"\r\n      aria-hidden=\"true\" v-if=\"helptext\">\r\n      {{ helptext  }}\r\n    </p>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MDCTextfieldFoundation from '@material/textfield/foundation';\r\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation';\r\nimport MDCTextFieldHelperTextFoundation from '@material/textfield/helper-text/foundation';\r\nimport MDCTextFieldIconFoundation from '@material/textfield/icon/foundation';\r\nimport MDCFloatingLabelFoundation from '@material/floating-label/foundation';\r\nimport MDCNotchedOutlineFoundation from '@material/notched-outline/foundation';\r\n\r\nimport {\r\n  extractIconProp,\r\n  DispatchFocusMixin,\r\n  CustomElementMixin,\r\n} from '../base';\r\nimport { RippleBase } from '../ripple';\r\n\r\nexport default {\r\n  name: 'mdc-textfield',\r\n  mixins: [CustomElementMixin, DispatchFocusMixin],\r\n  model: {\r\n    prop: 'value',\r\n    event: 'model',\r\n  },\r\n  props: {\r\n    value: String,\r\n    type: {\r\n      type: String,\r\n      default: 'text',\r\n      validator: function(value) {\r\n        return (\r\n          ['text', 'email', 'search', 'password', 'tel', 'url'].indexOf(\r\n            value,\r\n          ) !== -1\r\n        );\r\n      },\r\n    },\r\n    dense: Boolean,\r\n    label: String,\r\n    helptext: String,\r\n    helptextPersistent: Boolean,\r\n    helptextValidation: Boolean,\r\n    box: Boolean,\r\n    outline: Boolean,\r\n    disabled: Boolean,\r\n    required: Boolean,\r\n    valid: { type: Boolean, default: undefined },\r\n    fullwidth: Boolean,\r\n    multiline: Boolean,\r\n    leadingIcon: [String, Array, Object],\r\n    trailingIcon: [String, Array, Object],\r\n    size: { type: [Number, String], default: 20 },\r\n    minlength: { type: [Number, String], default: undefined },\r\n    maxlength: { type: [Number, String], default: undefined },\r\n    rows: { type: [Number, String], default: 8 },\r\n    cols: { type: [Number, String], default: 40 },\r\n\r\n    // other input props\r\n    name: String,\r\n    readonly: Boolean,\r\n    autocomplete: Boolean,\r\n    autofocus: Boolean,\r\n  },\r\n  data: function() {\r\n    return {\r\n      text: this.value,\r\n      rootClasses: {\r\n        'mdc-textfield': true,\r\n        'mdc-text-field': true,\r\n        'mdc-text-field--upgraded': true,\r\n        'mdc-text-field--disabled': this.disabled,\r\n        'mdc-text-field--dense': this.dense,\r\n        'mdc-text-field--fullwidth': this.fullwidth,\r\n        'mdc-text-field--textarea': this.multiline,\r\n        'mdc-text-field--box': !this.fullwidth && this.box,\r\n        'mdc-text-field--outlined': !this.fullwidth && this.outline,\r\n      },\r\n      inputClasses: {\r\n        'mdc-text-field__input': true,\r\n      },\r\n      labelClasses: {\r\n        'mdc-floating-label': true,\r\n      },\r\n      bottomClasses: {\r\n        'mdc-line-ripple': true,\r\n      },\r\n      helpClasses: {\r\n        'mdc-text-field-helper-text': true,\r\n        'mdc-text-field-helper-text--persistent': this.helptextPersistent,\r\n        'mdc-text-field-helper-text--validation-msg': this.helptextValidation,\r\n      },\r\n      outlinePathAttr: undefined,\r\n    };\r\n  },\r\n  watch: {\r\n    disabled() {\r\n      this.foundation && this.foundation.setDisabled(this.disabled);\r\n    },\r\n    required() {\r\n      this.$refs.input && (this.$refs.input.required = this.required);\r\n    },\r\n    valid() {\r\n      if (typeof this.valid !== 'undefined') {\r\n        this.foundation && this.foundation.setValid(this.valid);\r\n      }\r\n    },\r\n    dense() {\r\n      this.$set(this.rootClasses, 'mdc-text-field--dense', this.dense);\r\n    },\r\n    helptextPersistent() {\r\n      this.helperTextFoundation &&\r\n        this.helperTextFoundation.setPersistent(this.helptextPersistent);\r\n    },\r\n    helptextValidation() {\r\n      this.helperTextFoundation &&\r\n        this.helperTextFoundation.setValidation(this.helptextValidation);\r\n    },\r\n    value(value) {\r\n      if (this.foundation) {\r\n        if (value !== this.foundation.getValue()) {\r\n          this.foundation.setValue(value);\r\n        }\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    updateValue(value) {\r\n      this.$emit('model', value);\r\n    },\r\n    focus() {\r\n      this.$refs.input && this.$refs.input.focus();\r\n    },\r\n    blur() {\r\n      this.$refs.input && this.$refs.input.blur();\r\n    },\r\n  },\r\n  computed: {\r\n    inputAttrs() {\r\n      let { name, readonly, autocomplete, autofocus } = this;\r\n      return { name, readonly, autocomplete, autofocus };\r\n    },\r\n    inputPlaceHolder() {\r\n      return this.fullwidth ? this.label : undefined;\r\n    },\r\n    inputAriaControls() {\r\n      return this.help ? 'help-' + this._uid : undefined;\r\n    },\r\n    hasLabel() {\r\n      return !this.fullwidth && this.label;\r\n    },\r\n    hasOutline() {\r\n      return !this.fullwidth && this.outline;\r\n    },\r\n    hasBottomLine() {\r\n      return !this.hasOutline && !this.multiline;\r\n    },\r\n    hasLeadingIcon() {\r\n      if (\r\n        (this.leadingIcon || this.$slots['leading-icon']) &&\r\n        !(this.trailingIcon || this.$slots['trailing-icon'])\r\n      ) {\r\n        return this.leadingIcon ? extractIconProp(this.leadingIcon) : {};\r\n      }\r\n      return false;\r\n    },\r\n    hasTrailingIcon() {\r\n      if (this.trailingIcon || this.$slots['trailing-icon']) {\r\n        return this.trailingIcon ? extractIconProp(this.trailingIcon) : {};\r\n      }\r\n      return false;\r\n    },\r\n    labelClassesUpgraded() {\r\n      return Object.assign(this.labelClasses, {\r\n        'mdc-floating-label--float-above': this.value,\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    if (this.$refs.bottom) {\r\n      this.bottomLineFoundation = new MDCLineRippleFoundation({\r\n        addClass: className => {\r\n          this.$set(this.bottomClasses, className, true);\r\n        },\r\n        removeClass: className => {\r\n          this.$delete(this.bottomClasses, className);\r\n        },\r\n        hasClass: className => {\r\n          this.$refs.bottom.classList.contains(className);\r\n        },\r\n        setAttr: (name, value) => {\r\n          this.$refs.bottom.setAttribute(name, value);\r\n        },\r\n        registerEventHandler: (evtType, handler) => {\r\n          this.$refs.bottom.addEventListener(evtType, handler);\r\n        },\r\n        deregisterEventHandler: (evtType, handler) => {\r\n          this.$refs.bottom.removeEventListener(evtType, handler);\r\n        },\r\n      });\r\n      this.bottomLineFoundation.init();\r\n    }\r\n\r\n    if (this.$refs.help) {\r\n      this.helperTextFoundation = new MDCTextFieldHelperTextFoundation({\r\n        addClass: className => {\r\n          this.$set(this.helpClasses, className, true);\r\n        },\r\n        removeClass: className => {\r\n          this.$delete(this.helpClasses, className);\r\n        },\r\n        hasClass: className => {\r\n          return this.$refs.help.classList.contains(className);\r\n        },\r\n        setAttr: (name, value) => {\r\n          this.$refs.help.setAttribute(name, value);\r\n        },\r\n        removeAttr: name => {\r\n          this.$refs.help.removeAttribute(name);\r\n        },\r\n        setContent: (/*content*/) => {\r\n          // help text get's updated from {{helptext}}\r\n          // this.$refs.help.textContent = content;\r\n        },\r\n      });\r\n      this.helperTextFoundation.init();\r\n    }\r\n\r\n    if (this.$refs.icon) {\r\n      if (this.hasLeadingIcon) {\r\n        this.$set(this.rootClasses, 'mdc-text-field--with-leading-icon', true);\r\n      } else if (this.hasTrailingIcon) {\r\n        this.$set(this.rootClasses, 'mdc-text-field--with-trailing-icon', true);\r\n      }\r\n\r\n      this.iconFoundation = new MDCTextFieldIconFoundation({\r\n        setAttr: (attr, value) => this.$refs.icon.setAttribute(attr, value),\r\n        registerInteractionHandler: (evtType, handler) => {\r\n          this.$refs.icon.addEventListener(evtType, handler);\r\n        },\r\n        deregisterInteractionHandler: (evtType, handler) => {\r\n          this.$refs.icon.removeEventListener(evtType, handler);\r\n        },\r\n        notifyIconAction: () => this.$emit('icon-action'),\r\n      });\r\n      this.iconFoundation.init();\r\n    }\r\n\r\n    if (this.$refs.label) {\r\n      this.labelFoundation = new MDCFloatingLabelFoundation({\r\n        addClass: className => {\r\n          this.$set(this.labelClasses, className, true);\r\n        },\r\n        removeClass: className => {\r\n          this.$delete(this.labelClasses, className);\r\n        },\r\n        getWidth: () => this.$refs.label.offsetWidth,\r\n        registerInteractionHandler: (evtType, handler) => {\r\n          this.$refs.label.addEventListener(evtType, handler);\r\n        },\r\n        deregisterInteractionHandler: (evtType, handler) => {\r\n          this.$refs.label.removeEventListener(evtType, handler);\r\n        },\r\n      });\r\n      this.labelFoundation.init();\r\n    }\r\n\r\n    if (this.$refs.outline) {\r\n      this.outlineFoundation = new MDCNotchedOutlineFoundation({\r\n        getWidth: () => this.$refs.outline.offsetWidth,\r\n        getHeight: () => this.$refs.outline.offsetHeight,\r\n        setOutlinePathAttr: value => {\r\n          this.outlinePathAttr = value;\r\n        },\r\n        getIdleOutlineStyleValue: propertyName => {\r\n          const idleOutlineElement = this.$refs.outlineIdle;\r\n          if (idleOutlineElement) {\r\n            return window\r\n              .getComputedStyle(idleOutlineElement)\r\n              .getPropertyValue(propertyName);\r\n          }\r\n        },\r\n      });\r\n      this.outlineFoundation.init();\r\n    }\r\n\r\n    this.foundation = new MDCTextfieldFoundation(\r\n      {\r\n        addClass: className => {\r\n          this.$set(this.rootClasses, className, true);\r\n        },\r\n        removeClass: className => {\r\n          this.$delete(this.rootClasses, className);\r\n        },\r\n        hasClass: className => {\r\n          this.$refs.root.classList.contains(className);\r\n        },\r\n        registerTextFieldInteractionHandler: (evtType, handler) => {\r\n          this.$refs.root.addEventListener(evtType, handler);\r\n        },\r\n        deregisterTextFieldInteractionHandler: (evtType, handler) => {\r\n          this.$refs.root.removeEventListener(evtType, handler);\r\n        },\r\n        isFocused: () => {\r\n          return document.activeElement === this.$refs.input;\r\n        },\r\n        isRtl: () =>\r\n          window\r\n            .getComputedStyle(this.$refs.root)\r\n            .getPropertyValue('direction') === 'rtl',\r\n        deactivateLineRipple: () => {\r\n          if (this.bottom) {\r\n            this.bottom.deactivate();\r\n          }\r\n        },\r\n        activateLineRipple: () => {\r\n          if (this.bottom) {\r\n            this.bottom.activate();\r\n          }\r\n        },\r\n        setLineRippleTransformOrigin: normalizedX => {\r\n          if (this.bottom) {\r\n            this.bottom.setRippleCenter(normalizedX);\r\n          }\r\n        },\r\n        registerInputInteractionHandler: (evtType, handler) => {\r\n          this.$refs.input.addEventListener(evtType, handler);\r\n        },\r\n        deregisterInputInteractionHandler: (evtType, handler) => {\r\n          this.$refs.input.removeEventListener(evtType, handler);\r\n        },\r\n        registerValidationAttributeChangeHandler: handler => {\r\n          const observer = new MutationObserver(handler);\r\n          const targetNode = this.$refs.input;\r\n          const config = { attributes: true };\r\n          observer.observe(targetNode, config);\r\n          return observer;\r\n        },\r\n        deregisterValidationAttributeChangeHandler: observer => {\r\n          observer.disconnect();\r\n        },\r\n        shakeLabel: shouldShake => {\r\n          this.labelFoundation.shake(shouldShake);\r\n        },\r\n        floatLabel: shouldFloat => {\r\n          this.labelFoundation.float(shouldFloat);\r\n        },\r\n        hasLabel: () => {\r\n          return !!this.$refs.label;\r\n        },\r\n        getLabelWidth: () => {\r\n          return this.labelFoundation.getWidth();\r\n        },\r\n        getNativeInput: () => {\r\n          return this.$refs.input;\r\n        },\r\n        hasOutline: () => !!this.hasOutline,\r\n        updateOutlinePath: (labelWidth, isRtl) => {\r\n          this.outlineFoundation.updateSvgPath(labelWidth, isRtl);\r\n        },\r\n      },\r\n      {\r\n        bottomLine: this.bottomLineFoundation,\r\n        helperText: this.helperTextFoundation,\r\n        icon: this.iconFoundation,\r\n        label: this.labelFoundation,\r\n        outline: this.outlineFoundation,\r\n      },\r\n    );\r\n\r\n    this.foundation.init();\r\n    this.foundation.setValue(this.value);\r\n    this.foundation.setDisabled(this.disabled);\r\n    this.$refs.input && (this.$refs.input.required = this.required);\r\n    if (typeof this.valid !== 'undefined') {\r\n      this.foundation.setValid(this.valid);\r\n    }\r\n\r\n    if (this.textbox) {\r\n      this.ripple = new RippleBase(this);\r\n      this.ripple.init();\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    this.foundation && this.foundation.destroy();\r\n    this.bottomLineFoundation && this.bottomLineFoundation.destroy();\r\n    this.helperTextFoundation && this.helperTextFoundation.destroy();\r\n    this.iconFoundation && this.iconFoundation.destroy();\r\n    this.labelFoundation && this.labelFoundation.destroy();\r\n    this.outlineFoundation && this.outlineFoundation.destroy();\r\n    this.ripple && this.ripple.destroy();\r\n  },\r\n};\r\n</script>\r\n","import {BasePlugin} from '../base'\nimport mdcTextField from './mdc-textfield.vue'\n\nexport {mdcTextField}\n\nexport default BasePlugin({\n  mdcTextField\n})\n"],"names":["BasePlugin","components","vm","key","component","name","CustomElement","createElement","context","props","is","tag","data","children","CustomElementMixin","extractIconProp","iconProp","Array","reduce","result","value","babelHelpers.extends","className","split","textContent","DispatchFocusMixin","hasFocus","_active","dispatchFocusEvent","setTimeout","$el","document","activeElement","contains","$emit","addEventListener","onFocusEvent","onBlurEvent","onMouseDown","onMouseUp","removeEventListener","MDCFoundation","adapter","adapter_","MDCTextFieldHelperTextAdapter","attr","content","strings","cssClasses","MDCTextFieldHelperTextFoundation","defaultAdapter","setContent","isPersistent","addClass","HELPER_TEXT_PERSISTENT","removeClass","isValidation","HELPER_TEXT_VALIDATION_MSG","removeAttr","ARIA_HIDDEN","inputIsValid","helperTextIsPersistent","hasClass","helperTextIsValidationMsg","validationMsgNeedsDisplay","setAttr","ROLE","hide_","MDCTextFieldIconAdapter","evtType","handler","MDCTextFieldIconFoundation","interactionHandler_","evt","handleInteraction","forEach","registerInteractionHandler","deregisterInteractionHandler","disabled","type","keyCode","notifyIconAction","MDCTextFieldAdapter","observer","normalizedX","shouldShake","shouldFloat","labelWidth","isRtl","MDCLineRippleAdapter","MDCLineRippleFoundation","transitionEndHandler_","handleTransitionEnd","registerEventHandler","deregisterEventHandler","LINE_RIPPLE_DEACTIVATING","LINE_RIPPLE_ACTIVE","xCoordinate","attributeString","isDeactivating","propertyName","MDCFloatingLabelAdapter","MDCFloatingLabelFoundation","shakeAnimationEndHandler_","handleShakeAnimationEnd_","getWidth","LABEL_SHAKE","LABEL_FLOAT_ABOVE","MDCNotchedOutlineAdapter","MDCNotchedOutlineFoundation","notchWidth","radiusStyleValue","getIdleOutlineStyleValue","radius","parseFloat","width","height","getHeight","cornerWidth","leadingStrokeLength","Math","abs","paddedNotchWidth","pathMiddle","path","setOutlinePathAttr","numbers","VALIDATION_ATTR_WHITELIST","MDCTextFieldFoundation","isValid","isFocused_","isBadInput_","getValue","foundationMap","helperText_","helperText","icon_","icon","receivedUserInput_","useCustomValidityChecking_","isValid_","inputFocusHandler_","activateFocus","inputBlurHandler_","deactivateFocus","inputInputHandler_","autoCompleteFocus","setPointerXOffset_","setTransformOrigin","textFieldInteractionHandler_","handleTextFieldInteraction","validationAttributeChangeHandler_","mutations","handleValidationAttributeMutation_","validationObserver_","UPGRADED","hasLabel","floatLabel","isFocused","registerInputInteractionHandler","registerTextFieldInteractionHandler","registerValidationAttributeChangeHandler","deregisterInputInteractionHandler","deregisterTextFieldInteractionHandler","deregisterValidationAttributeChangeHandler","getNativeInput","mutationsList","some","mutation","indexOf","attributeName","styleValidity_","hasOutline","isDense","DENSE","labelScale","DENSE_LABEL_SCALE","LABEL_SCALE","getLabelWidth","updateOutlinePath","styleFocused_","activateLineRipple","updateOutline","shakeLabel","showToScreenReader","targetClientRect","target","getBoundingClientRect","evtCoords","x","clientX","y","clientY","left","setLineRippleTransformOrigin","deactivateLineRipple","input","getNativeInput_","shouldRemoveLabelFloat","isNativeInputValid_","styleDisabled_","validity","badInput","valid","INVALID","setValidity","FOCUSED","isDisabled","DISABLED","setDisabled","render","String","Boolean","default","undefined","Object","Number","dense","fullwidth","multiline","box","outline","helptextPersistent","helptextValidation","foundation","$refs","required","setValid","$set","rootClasses","helperTextFoundation","setPersistent","setValidation","setValue","focus","blur","readonly","autocomplete","autofocus","label","help","_uid","leadingIcon","$slots","trailingIcon","labelClasses","bottom","bottomLineFoundation","bottomClasses","$delete","classList","setAttribute","init","helpClasses","removeAttribute","hasLeadingIcon","hasTrailingIcon","iconFoundation","labelFoundation","offsetWidth","outlineFoundation","offsetHeight","outlinePathAttr","idleOutlineElement","outlineIdle","window","getComputedStyle","getPropertyValue","MDCTextfieldFoundation","root","deactivate","activate","setRippleCenter","MutationObserver","targetNode","config","attributes","observe","disconnect","shake","float","updateSvgPath","textbox","ripple","RippleBase","destroy"],"mappings":";;;;;;;;;;;;AAAO,SAASA,UAAT,CAAqBC,UAArB,EAAiC;SAC/B;aACI,QADJ;aAEI,iBAACC,EAAD,EAAQ;WACV,IAAIC,GAAT,IAAgBF,UAAhB,EAA4B;YACtBG,YAAYH,WAAWE,GAAX,CAAhB;WACKC,SAAH,CAAaA,UAAUC,IAAvB,EAA4BD,SAA5B;;KALD;;GAAP;;;ACDK,IAAME,gBAAgB;cACf,IADe;QAAA,kBAEnBC,aAFmB,EAEJC,OAFI,EAEK;WACvBD,cACLC,QAAQC,KAAR,CAAcC,EAAd,IAAoBF,QAAQC,KAAR,CAAcE,GAAlC,IAAyC,KADpC,EAELH,QAAQI,IAFH,EAGLJ,QAAQK,QAHH,CAAP;;CAHG;;AAUP,AAAO,IAAMC,qBAAqB;cACpB;;;CADP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVP;;ACAO,SAASC,eAAT,CAA0BC,QAA1B,EAAoC;MACnC,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;WACzB;eACI,EAAE,kBAAmB,IAArB,EADJ;eAEIA;KAFX;GADF,MAMK,IAAIA,oBAAoBC,KAAxB,EAA8B;WAC1B;eACID,SAASE,MAAT,CACP,UAACC,MAAD,EAASC,KAAT;eAAmBC,SAAcF,MAAd,qBAAuBC,KAAvB,EAA8B,IAA9B,EAAnB;OADO,EAEP,EAFO;KADX;GADG,MAOA,IAAI,QAAOJ,QAAP,yCAAOA,QAAP,OAAoB,QAAxB,EAAiC;WAC7B;eACIA,SAASM,SAAT,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8BL,MAA9B,CACP,UAACC,MAAD,EAASC,KAAT;eAAmBC,SAAcF,MAAd,qBAAuBC,KAAvB,EAA8B,IAA9B,EAAnB;OADO,EAEP,EAFO,CADJ;eAIIJ,SAASQ;KAJpB;;;;ACfC,IAAMC,qBAAqB;MAAA,kBACxB;WACE,EAACC,UAAU,KAAX,EAAR;GAF8B;;WAIvB;eAAA,yBACO;WACPC,OAAL,GAAe,IAAf;KAFK;aAAA,uBAIM;WACNA,OAAL,GAAe,KAAf;KALK;gBAAA,0BAOS;;;;iBAEH;eAAM,MAAKC,kBAAL,EAAN;OAAX,EAA2C,CAA3C;KATK;eAAA,yBAWQ;;;;;WAGRD,OAAL,IAAgBE,WAAW;eAAM,OAAKD,kBAAL,EAAN;OAAX,EAA2C,CAA3C,CAAhB;KAdK;sBAAA,gCAgBc;UACfF,WAAW,KAAKI,GAAL,KAAaC,SAASC,aAAtB,IAAuC,KAAKF,GAAL,CAASG,QAAT,CAAkBF,SAASC,aAA3B,CAAtD;UACIN,YAAY,KAAKA,QAArB,EAA+B;aACxBQ,KAAL,CAAWR,WAAW,OAAX,GAAqB,MAAhC;aACKA,QAAL,GAAgBA,QAAhB;;;GAxB0B;SAAA,qBA4BrB;SACJI,GAAL,CAASK,gBAAT,CAA0B,SAA1B,EAAqC,KAAKC,YAA1C;SACKN,GAAL,CAASK,gBAAT,CAA0B,UAA1B,EAAsC,KAAKE,WAA3C;SACKP,GAAL,CAASK,gBAAT,CAA0B,WAA1B,EAAuC,KAAKG,WAA5C;SACKR,GAAL,CAASK,gBAAT,CAA0B,SAA1B,EAAqC,KAAKI,SAA1C;GAhC8B;eAAA,2BAkCf;SACVT,GAAL,CAASU,mBAAT,CAA6B,SAA7B,EAAwC,KAAKJ,YAA7C;SACKN,GAAL,CAASU,mBAAT,CAA6B,UAA7B,EAAyC,KAAKH,WAA9C;SACKP,GAAL,CAASU,mBAAT,CAA6B,WAA7B,EAA0C,KAAKF,WAA/C;SACKR,GAAL,CAASU,mBAAT,CAA6B,SAA7B,EAAwC,KAAKD,SAA7C;;CAtCG;;ACAP;;;;;;;;;;;;;;;;;;;;IAoBME;;;;;2BAEoB;;;aAGf,EAAP;;;;;;;2BAImB;;;aAGZ,EAAP;;;;;;;2BAImB;;;aAGZ,EAAP;;;;;;;2BAI0B;;;;aAInB,EAAP;;;;;;;;;2BAMwB;QAAdC,OAAc,uEAAJ,EAAI;;;;SAEnBC,QAAL,GAAgBD,OAAhB;;;;;2BAGK;;;;;8BAIG;;;;;;;AC9DZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6BME;;;;;;;;;;;;6BAKKtB,WAAW;;;;;;;;;gCAMRA,WAAW;;;;;;;;;;6BAOdA,WAAW;;;;;;;;;;4BAOZuB,MAAMzB,OAAO;;;;;;;;;+BAMVyB,MAAM;;;;;;;;;+BAMNC,SAAS;;;;;AClEtB;;;;;;;;;;;;;;;;;;AAkBA,IAAMC,UAAU;eACD,aADC;QAER;CAFR;;;AAMA,IAAMC,aAAa;0BACO,wCADP;8BAEW;CAF9B;;ACxBA;;;;;;;;;;;;;;;;;;;;;;IA0BMC;;;;;;2BAEoB;aACfD,UAAP;;;;;;;2BAImB;aACZD,OAAP;;;;;;;;;;;2BAQ0B;2DAC4B;oBAC1C,oBAAM,EADoC;uBAEvC,uBAAM,EAFiC;oBAG1C,oBAAM,EAHoC;mBAI3C,mBAAM,EAJqC;sBAKxC,sBAAM,EALkC;sBAMxC,sBAAM;;;;;;;;;;;4CAOVL,OAAZ,EAAqB;;8JACbrB,SAAc4B,iCAAiCC,cAA/C,EAA+DR,OAA/D,CADa;;;;;;;;;;;+BAQVI,SAAS;WACbH,QAAL,CAAcQ,UAAd,CAAyBL,OAAzB;;;;;;;kCAIYM,cAAc;UACtBA,YAAJ,EAAkB;aACXT,QAAL,CAAcU,QAAd,CAAuBL,WAAWM,sBAAlC;OADF,MAEO;aACAX,QAAL,CAAcY,WAAd,CAA0BP,WAAWM,sBAArC;;;;;;;;;;;kCAQUE,cAAc;UACtBA,YAAJ,EAAkB;aACXb,QAAL,CAAcU,QAAd,CAAuBL,WAAWS,0BAAlC;OADF,MAEO;aACAd,QAAL,CAAcY,WAAd,CAA0BP,WAAWS,0BAArC;;;;;;;;yCAKiB;WACdd,QAAL,CAAce,UAAd,CAAyBX,QAAQY,WAAjC;;;;;;;;;;gCAOUC,cAAc;UAClBC,yBAAyB,KAAKlB,QAAL,CAAcmB,QAAd,CAAuBd,WAAWM,sBAAlC,CAA/B;UACMS,4BAA4B,KAAKpB,QAAL,CAAcmB,QAAd,CAAuBd,WAAWS,0BAAlC,CAAlC;UACMO,4BAA4BD,6BAA6B,CAACH,YAAhE;;UAEII,yBAAJ,EAA+B;aACxBrB,QAAL,CAAcsB,OAAd,CAAsBlB,QAAQmB,IAA9B,EAAoC,OAApC;OADF,MAEO;aACAvB,QAAL,CAAce,UAAd,CAAyBX,QAAQmB,IAAjC;;;UAGE,CAACL,sBAAD,IAA2B,CAACG,yBAAhC,EAA2D;aACpDG,KAAL;;;;;;;;;;;4BAQI;WACDxB,QAAL,CAAcsB,OAAd,CAAsBlB,QAAQY,WAA9B,EAA2C,MAA3C;;;;EA7F2ClB;;AC1B/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6BM2B;;;;;;;;;;;;;4BAMIvB,MAAMzB,OAAO;;;;;;;;;;+CAOMiD,SAASC,SAAS;;;;;;;;;;iDAOhBD,SAASC,SAAS;;;;;;;;uCAK5B;;;;;ACtDrB;;;;;;;;;;;;;;;;;;AAkBA,IAAMvB,YAAU;cACF;CADd;;AClBA;;;;;;;;;;;;;;;;;;;;;;IA0BMwB;;;;;;2BAEiB;aACZxB,SAAP;;;;;;;;;;;2BAQ0B;qDACsB;mBACrC,mBAAM,EAD+B;sCAElB,sCAAM,EAFY;wCAGhB,wCAAM,EAHU;4BAI5B,4BAAM;;;;;;;;;;;sCAOhBL,OAAZ,EAAqB;;;;uJACbrB,SAAckD,2BAA2BrB,cAAzC,EAAyDR,OAAzD,CADa;;UAId8B,mBAAL,GAA2B,UAACC,GAAD;aAAS,MAAKC,iBAAL,CAAuBD,GAAvB,CAAT;KAA3B;;;;;;2BAGK;;;OACJ,OAAD,EAAU,SAAV,EAAqBE,OAArB,CAA6B,UAACN,OAAD,EAAa;eACnC1B,QAAL,CAAciC,0BAAd,CAAyCP,OAAzC,EAAkD,OAAKG,mBAAvD;OADF;;;;8BAKQ;;;OACP,OAAD,EAAU,SAAV,EAAqBG,OAArB,CAA6B,UAACN,OAAD,EAAa;eACnC1B,QAAL,CAAckC,4BAAd,CAA2CR,OAA3C,EAAoD,OAAKG,mBAAzD;OADF;;;;;;;;;;gCASUM,UAAU;UAChBA,QAAJ,EAAc;aACPnC,QAAL,CAAcsB,OAAd,CAAsB,UAAtB,EAAkC,IAAlC;OADF,MAEO;aACAtB,QAAL,CAAcsB,OAAd,CAAsB,UAAtB,EAAkC,GAAlC;;;;;;;;;;;sCAQcQ,KAAK;UACjBA,IAAIM,IAAJ,KAAa,OAAb,IAAwBN,IAAItE,GAAJ,KAAY,OAApC,IAA+CsE,IAAIO,OAAJ,KAAgB,EAAnE,EAAuE;aAChErC,QAAL,CAAcsC,gBAAd;;;;;EA5DmCxC;;AC1BzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsDMyC;;;;;;;;;;;;6BAKK5D,WAAW;;;;;;;;;gCAMRA,WAAW;;;;;;;;;;6BAOdA,WAAW;;;;;;;;;;wDAOgByD,MAAMT,SAAS;;;;;;;;;;0DAObS,MAAMT,SAAS;;;;;;;;;;oDAOrBD,SAASC,SAAS;;;;;;;;;;sDAOhBD,SAASC,SAAS;;;;;;;;;;6DAOXA,SAAS;;;;;;;;;+DAMPa,UAAU;;;;;;;;;;;;;;;qCAYpC;;;;;;;;;;gCAOL;;;;;;;;;4BAMJ;;;;;;;;yCAKa;;;;;;;;2CAKE;;;;;;;;;iDAMMC,aAAa;;;;;;;;;;+BAO/BC,aAAa;;;;;;;;;;+BAObC,aAAa;;;;;;;;;+BAMb;;;;;;;;;;oCAOK;;;;;;;;;iCAMH;;;;;;;;;;;;sCASKC,YAAYC,OAAO;;;;;ACpMvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6BMC;;;;;;;;;;;;6BAKKnE,WAAW;;;;;;;;;gCAMRA,WAAW;;;;;;;;;6BAMdA,WAAW;;;;;;;;;;4BAOZuB,MAAMzB,OAAO;;;;;;;;;;yCAOAiD,SAASC,SAAS;;;;;;;;;;2CAOhBD,SAASC,SAAS;;;;;ACnE3C;;;;;;;;;;;;;;;;;;AAkBA,IAAMtB,eAAa;sBACG,yBADH;4BAES;CAF5B;;AClBA;;;;;;;;;;;;;;;;;;;;;;IA0BM0C;;;;;;2BAEoB;aACf1C,YAAP;;;;;;;;;;;2BAQ0B;kDACmB;oBACjC,oBAAM,EAD2B;uBAE9B,uBAAM,EAFwB;oBAGjC,oBAAM,EAH2B;mBAIlC,mBAAM,EAJ4B;gCAKrB,gCAAM,EALe;kCAMnB,kCAAM;;;;;;;;;;;qCAO+B;QAArDN,OAAqD,2GAAL,EAAK;;;;iJACzDrB,SAAcqE,wBAAwBxC,cAAtC,EAAsDR,OAAtD,CADyD;;UAI1DiD,qBAAL,GAA6B,UAAClB,GAAD;aAAS,MAAKmB,mBAAL,CAAyBnB,GAAzB,CAAT;KAA7B;;;;;;2BAGK;WACA9B,QAAL,CAAckD,oBAAd,CAAmC,eAAnC,EAAoD,KAAKF,qBAAzD;;;;8BAGQ;WACHhD,QAAL,CAAcmD,sBAAd,CAAqC,eAArC,EAAsD,KAAKH,qBAA3D;;;;;;;;;+BAMS;WACJhD,QAAL,CAAcY,WAAd,CAA0BP,aAAW+C,wBAArC;WACKpD,QAAL,CAAcU,QAAd,CAAuBL,aAAWgD,kBAAlC;;;;;;;;;;oCAOcC,aAAa;UACrBC,yCACmBD,WADnB,cAAN;;WAGKtD,QAAL,CAAcsB,OAAd,CAAsB,OAAtB,EAA+BiC,eAA/B;;;;;;;;;iCAMW;WACNvD,QAAL,CAAcU,QAAd,CAAuBL,aAAW+C,wBAAlC;;;;;;;;;;wCAOkBtB,KAAK;;;UAGjB0B,iBAAiB,KAAKxD,QAAL,CAAcmB,QAAd,CAAuBd,aAAW+C,wBAAlC,CAAvB;;UAEItB,IAAI2B,YAAJ,KAAqB,SAAzB,EAAoC;YAC9BD,cAAJ,EAAoB;eACbxD,QAAL,CAAcY,WAAd,CAA0BP,aAAWgD,kBAArC;eACKrD,QAAL,CAAcY,WAAd,CAA0BP,aAAW+C,wBAArC;;;;;;EA9E8BtD;;AC1BtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6BM4D;;;;;;;;;;;;6BAKK/E,WAAW;;;;;;;;;gCAMRA,WAAW;;;;;;;;;+BAMZ;;;;;;;;;;+CAOgB+C,SAASC,SAAS;;;;;;;;;;iDAOhBD,SAASC,SAAS;;;;;AC5DjD;;;;;;;;;;;;;;;;;;AAkBA,IAAMtB,eAAa;qBACE,iCADF;eAEJ;CAFf;;AClBA;;;;;;;;;;;;;;;;;;;;;;IAyBMsD;;;;;;2BAEoB;aACftD,YAAP;;;;;;;;;;;2BAQ0B;qDACsB;oBACpC,oBAAM,EAD8B;uBAEjC,uBAAM,EAF2B;oBAGpC,oBAAM,EAH8B;sCAIlB,sCAAM,EAJY;wCAKhB,wCAAM;;;;;;;;;;;sCAO5BN,OAAZ,EAAqB;;;;uJACbrB,SAAciF,2BAA2BpD,cAAzC,EAAyDR,OAAzD,CADa;;UAId6D,yBAAL,GAAiC;aAAM,MAAKC,wBAAL,EAAN;KAAjC;;;;;;2BAGK;WACA7D,QAAL,CAAciC,0BAAd,CAAyC,cAAzC,EAAyD,KAAK2B,yBAA9D;;;;8BAGQ;WACH5D,QAAL,CAAckC,4BAAd,CAA2C,cAA3C,EAA2D,KAAK0B,yBAAhE;;;;;;;;;;+BAOS;aACF,KAAK5D,QAAL,CAAc8D,QAAd,EAAP;;;;;;;;;;;0BAQIpB,aAAa;UACVqB,WADU,GACKJ,2BAA2BtD,UADhC,CACV0D,WADU;;UAEbrB,WAAJ,EAAiB;aACV1C,QAAL,CAAcU,QAAd,CAAuBqD,WAAvB;OADF,MAEO;aACA/D,QAAL,CAAcY,WAAd,CAA0BmD,WAA1B;;;;;;;;;;;;0BASEpB,aAAa;kCACwBgB,2BAA2BtD,UADnD;UACV2D,iBADU,yBACVA,iBADU;UACSD,WADT,yBACSA,WADT;;UAEbpB,WAAJ,EAAiB;aACV3C,QAAL,CAAcU,QAAd,CAAuBsD,iBAAvB;OADF,MAEO;aACAhE,QAAL,CAAcY,WAAd,CAA0BoD,iBAA1B;aACKhE,QAAL,CAAcY,WAAd,CAA0BmD,WAA1B;;;;;;;;;;+CAOuB;UAClBA,WADkB,GACHJ,2BAA2BtD,UADxB,CAClB0D,WADkB;;WAEpB/D,QAAL,CAAcY,WAAd,CAA0BmD,WAA1B;;;;EAjFqCjE;;ACzBzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6BMmE;;;;;;;;;;;;+BAKO;;;;;;;;;gCAMC;;;;;;;;;uCAMOxF,OAAO;;;;;;;;;;;6CAQDgF,cAAc;;;;;ACtDzC;;;;;;;;;;;;;;;;;;AAkBA,IAAMrD,YAAU;iBACC,4BADD;yBAES;CAFzB;;AClBA;;;;;;;;;;;;;;;;;;;;;;IAyBM8D;;;;;;2BAEiB;aACZ9D,SAAP;;;;;;;;;;;2BAQ0B;sDACuB;oBACrC,oBAAM,EAD+B;qBAEpC,qBAAM,EAF8B;8BAG3B,8BAAM,EAHqB;oCAIrB,oCAAM;;;;;;;;;;;uCAOxBL,OAAZ,EAAqB;;oJACbrB,SAAcwF,4BAA4B3D,cAA1C,EAA0DR,OAA1D,CADa;;;;;;;;;;;;;kCAUPoE,YAA2B;UAAftB,KAAe,uEAAP,KAAO;;;UAEjCuB,mBAAmB,KAAKpE,QAAL,CAAcqE,wBAAd,CAAuC,eAAvC,KACrB,KAAKrE,QAAL,CAAcqE,wBAAd,CAAuC,wBAAvC,CADJ;UAEMC,SAASC,WAAWH,gBAAX,CAAf;UACMI,QAAQ,KAAKxE,QAAL,CAAc8D,QAAd,EAAd;UACMW,SAAS,KAAKzE,QAAL,CAAc0E,SAAd,EAAf;UACMC,cAAcL,SAAS,GAA7B;UACMM,sBAAsBC,KAAKC,GAAL,CAAS,KAAKH,WAAd,CAA5B;UACMI,mBAAmBZ,aAAa,CAAtC;;;UAGMa,aAAa,MAAMV,MAAN,GAAe,GAAf,GAAqBA,MAArB,GAA8B,SAA9B,GAA0CA,MAA1C,GAAmD,GAAnD,GAAyDA,MAAzD,GACf,GADe,IACRG,SAAU,IAAIE,WADN,IAEf,GAFe,GAETL,MAFS,GAEA,GAFA,GAEMA,MAFN,GAEe,SAFf,GAE2B,CAACA,MAF5B,GAEqC,GAFrC,GAE2CA,MAF3C,GAGf,GAHe,IAGR,CAACE,KAAD,GAAU,IAAIG,WAHN,IAIf,GAJe,GAITL,MAJS,GAIA,GAJA,GAIMA,MAJN,GAIe,SAJf,GAI2B,CAACA,MAJ5B,GAIqC,GAJrC,GAI2C,CAACA,MAJ5C,GAKf,GALe,IAKR,CAACG,MAAD,GAAW,IAAIE,WALP,IAMf,GANe,GAMTL,MANS,GAMA,GANA,GAMMA,MANN,GAMe,SANf,GAM2BA,MAN3B,GAMoC,GANpC,GAM0C,CAACA,MAN9D;;UAQIW,aAAJ;UACI,CAACpC,KAAL,EAAY;eACH,OAAO8B,cAAcC,mBAAd,GAAoCG,gBAA3C,IAA+D,GAA/D,GAAqE,CAArE,GACH,GADG,IACIP,QAAS,IAAIG,WAAb,GAA4BI,gBAA5B,GAA+CH,mBADnD,IAEHI,UAFG,GAGH,GAHG,GAGGJ,mBAHV;OADF,MAKO;eACE,OAAOJ,QAAQG,WAAR,GAAsBC,mBAA7B,IAAoD,GAApD,GAA0D,CAA1D,GACH,GADG,GACGA,mBADH,GAEHI,UAFG,GAGH,GAHG,IAGIR,QAAS,IAAIG,WAAb,GAA4BI,gBAA5B,GAA+CH,mBAHnD,CAAP;;;WAMG5E,QAAL,CAAckF,kBAAd,CAAiCD,IAAjC;;;;EAlEsCnF;;ACzB1C;;;;;;;;;;;;;;;;;;AAkBA,IAAMM,YAAU;iBACC,eADD;kBAEE,wBAFF;kBAGE,qBAHF;iBAIC,uBAJD;oBAKI,sBALJ;wBAMQ;CANxB;;;AAUA,IAAMC,eAAa;QACX,gBADW;YAEP,0BAFO;YAGP,0BAHO;SAIV,uBAJU;WAKR,yBALQ;WAMR,yBANQ;OAOZ,qBAPY;YAQP;CARZ;;;AAYA,IAAM8E,UAAU;eACD,IADC;qBAEK;CAFrB;;ACxCA;;;;;;;;;;;;;;;;;;;AA+BA,IAAMC,4BAA4B,CAChC,SADgC,EACrB,KADqB,EACd,KADc,EACP,UADO,EACK,MADL,EACa,WADb,EAC0B,WAD1B,CAAlC;;;;;;;IAQMC;;;;;;;2BAiBc;aACT,CAAC,KAAKC,OAAL,EAAD,IAAmB,CAAC,KAAKC,UAAhC;;;;;;;2BAIgB;aACT,CAAC,KAAKC,WAAL,EAAD,KAAwB,CAAC,CAAC,KAAKC,QAAL,EAAF,IAAqB,KAAKF,UAAlD,CAAP;;;;;;;;;;;;;2BArBsB;aACflF,YAAP;;;;;;;2BAImB;aACZD,SAAP;;;;;;;2BAImB;aACZ+E,OAAP;;;;2BAkB0B;iDACkB;oBAChC,oBAAM,EAD0B;uBAE7B,uBAAM,EAFuB;oBAGhC,oBAAM,EAH0B;+CAIL,+CAAM,EAJD;iDAKH,iDAAM,EALH;2CAMT,2CAAM,EANG;6CAOP,6CAAM,EAPC;oDAQA,oDAAM,EARN;sDASE,sDAAM,EATR;0BAU1B,0BAAM,EAVoB;qBAW/B,qBAAM,EAXyB;iBAYnC,iBAAM,EAZ6B;8BAatB,8BAAM,EAbgB;gCAcpB,gCAAM,EAdc;wCAeZ,wCAAM,EAfM;sBAgB9B,sBAAM,EAhBwB;sBAiB9B,sBAAM,EAjBwB;oBAkBhC,oBAAM,EAlB0B;yBAmB3B,yBAAM,EAnBqB;sBAoB9B,sBAAM,EApBwB;6BAqBvB,6BAAM;;;;;;;;;;;;kCAQjBpF,OAAZ,EAA6E;QAAxD2F,aAAwD,wGAAL,EAAK;;;;+IACrEhH,SAAc2G,uBAAuB9E,cAArC,EAAqDR,OAArD,CADqE;;UAItE4F,WAAL,GAAmBD,cAAcE,UAAjC;;UAEKC,KAAL,GAAaH,cAAcI,IAA3B;;;UAGKP,UAAL,GAAkB,KAAlB;;UAEKQ,kBAAL,GAA0B,KAA1B;;UAEKC,0BAAL,GAAkC,KAAlC;;UAEKC,QAAL,GAAgB,IAAhB;;UAEKC,kBAAL,GAA0B;aAAM,MAAKC,aAAL,EAAN;KAA1B;;UAEKC,iBAAL,GAAyB;aAAM,MAAKC,eAAL,EAAN;KAAzB;;UAEKC,kBAAL,GAA0B;aAAM,MAAKC,iBAAL,EAAN;KAA1B;;UAEKC,kBAAL,GAA0B,UAAC1E,GAAD;aAAS,MAAK2E,kBAAL,CAAwB3E,GAAxB,CAAT;KAA1B;;UAEK4E,4BAAL,GAAoC;aAAM,MAAKC,0BAAL,EAAN;KAApC;;UAEKC,iCAAL,GAAyC,UAACC,SAAD;aAAe,MAAKC,kCAAL,CAAwCD,SAAxC,CAAf;KAAzC;;UAEKE,mBAAL;;;;;;2BAGK;;;WACA/G,QAAL,CAAcU,QAAd,CAAuB2E,uBAAuBhF,UAAvB,CAAkC2G,QAAzD;;UAEI,KAAKhH,QAAL,CAAciH,QAAd,MAA4B,KAAKxB,QAAL,EAAhC,EAAiD;aAC1CzF,QAAL,CAAckH,UAAd,CAAyB,KAAKvE,WAA9B;;;UAGE,KAAK3C,QAAL,CAAcmH,SAAd,EAAJ,EAA+B;aACxBjB,kBAAL;;;WAGGlG,QAAL,CAAcoH,+BAAd,CAA8C,OAA9C,EAAuD,KAAKlB,kBAA5D;WACKlG,QAAL,CAAcoH,+BAAd,CAA8C,MAA9C,EAAsD,KAAKhB,iBAA3D;WACKpG,QAAL,CAAcoH,+BAAd,CAA8C,OAA9C,EAAuD,KAAKd,kBAA5D;OACC,WAAD,EAAc,YAAd,EAA4BtE,OAA5B,CAAoC,UAACN,OAAD,EAAa;eAC1C1B,QAAL,CAAcoH,+BAAd,CAA8C1F,OAA9C,EAAuD,OAAK8E,kBAA5D;OADF;OAGC,OAAD,EAAU,SAAV,EAAqBxE,OAArB,CAA6B,UAACN,OAAD,EAAa;eACnC1B,QAAL,CAAcqH,mCAAd,CAAkD3F,OAAlD,EAA2D,OAAKgF,4BAAhE;OADF;WAGKK,mBAAL,GAA2B,KAAK/G,QAAL,CAAcsH,wCAAd,CACzB,KAAKV,iCADoB,CAA3B;;;;8BAIQ;;;WACH5G,QAAL,CAAcY,WAAd,CAA0ByE,uBAAuBhF,UAAvB,CAAkC2G,QAA5D;WACKhH,QAAL,CAAcuH,iCAAd,CAAgD,OAAhD,EAAyD,KAAKrB,kBAA9D;WACKlG,QAAL,CAAcuH,iCAAd,CAAgD,MAAhD,EAAwD,KAAKnB,iBAA7D;WACKpG,QAAL,CAAcuH,iCAAd,CAAgD,OAAhD,EAAyD,KAAKjB,kBAA9D;OACC,WAAD,EAAc,YAAd,EAA4BtE,OAA5B,CAAoC,UAACN,OAAD,EAAa;eAC1C1B,QAAL,CAAcuH,iCAAd,CAAgD7F,OAAhD,EAAyD,OAAK8E,kBAA9D;OADF;OAGC,OAAD,EAAU,SAAV,EAAqBxE,OAArB,CAA6B,UAACN,OAAD,EAAa;eACnC1B,QAAL,CAAcwH,qCAAd,CAAoD9F,OAApD,EAA6D,OAAKgF,4BAAlE;OADF;WAGK1G,QAAL,CAAcyH,0CAAd,CAAyD,KAAKV,mBAA9D;;;;;;;;;iDAM2B;UACvB,KAAK/G,QAAL,CAAc0H,cAAd,GAA+BvF,QAAnC,EAA6C;;;WAGxC4D,kBAAL,GAA0B,IAA1B;;;;;;;;;;;uDAQiC4B,eAAe;;;oBAClCC,IAAd,CAAmB,UAACC,QAAD,EAAc;YAC3BzC,0BAA0B0C,OAA1B,CAAkCD,SAASE,aAA3C,IAA4D,CAAC,CAAjE,EAAoE;iBAC7DC,cAAL,CAAoB,IAApB;iBACO,IAAP;;OAHJ;;;;;;;;;oCAWc;UACV,CAAC,KAAKhI,QAAL,CAAciI,UAAd,EAAD,IAA+B,CAAC,KAAKjI,QAAL,CAAciH,QAAd,EAApC,EAA8D;;;;UAIxDiB,UAAU,KAAKlI,QAAL,CAAcmB,QAAd,CAAuBd,aAAW8H,KAAlC,CAAhB;UACMC,aAAaF,UAAU/C,QAAQkD,iBAAlB,GAAsClD,QAAQmD,WAAjE;UACM1F,aAAa,KAAK5C,QAAL,CAAcuI,aAAd,KAAgCH,UAAnD;UACMvF,QAAQ,KAAK7C,QAAL,CAAc6C,KAAd,EAAd;WACK7C,QAAL,CAAcwI,iBAAd,CAAgC5F,UAAhC,EAA4CC,KAA5C;;;;;;;;;oCAMc;WACT0C,UAAL,GAAkB,IAAlB;WACKkD,aAAL,CAAmB,KAAKlD,UAAxB;WACKvF,QAAL,CAAc0I,kBAAd;WACKC,aAAL;UACI,KAAK3I,QAAL,CAAciH,QAAd,EAAJ,EAA8B;aACvBjH,QAAL,CAAc4I,UAAd,CAAyB,KAAKlG,WAA9B;aACK1C,QAAL,CAAckH,UAAd,CAAyB,KAAKvE,WAA9B;;UAEE,KAAKgD,WAAT,EAAsB;aACfA,WAAL,CAAiBkD,kBAAjB;;;;;;;;;;;;uCASe/G,KAAK;UAChBgH,mBAAmBhH,IAAIiH,MAAJ,CAAWC,qBAAX,EAAzB;UACMC,YAAY,EAACC,GAAGpH,IAAIqH,OAAR,EAAiBC,GAAGtH,IAAIuH,OAAxB,EAAlB;UACM5G,cAAcwG,UAAUC,CAAV,GAAcJ,iBAAiBQ,IAAnD;WACKtJ,QAAL,CAAcuJ,4BAAd,CAA2C9G,WAA3C;;;;;;;;;;wCAOkB;UACd,CAAC,KAAKsD,kBAAV,EAA8B;aACvBI,aAAL;;;;;;;;;;sCAOc;WACXZ,UAAL,GAAkB,KAAlB;WACKvF,QAAL,CAAcwJ,oBAAd;UACMC,QAAQ,KAAKC,eAAL,EAAd;UACMC,yBAAyB,CAACF,MAAMhL,KAAP,IAAgB,CAAC,KAAK+G,WAAL,EAAhD;UACMF,UAAU,KAAKA,OAAL,EAAhB;WACK0C,cAAL,CAAoB1C,OAApB;WACKmD,aAAL,CAAmB,KAAKlD,UAAxB;UACI,KAAKvF,QAAL,CAAciH,QAAd,EAAJ,EAA8B;aACvBjH,QAAL,CAAc4I,UAAd,CAAyB,KAAKlG,WAA9B;aACK1C,QAAL,CAAckH,UAAd,CAAyB,KAAKvE,WAA9B;;UAEEgH,sBAAJ,EAA4B;aACrB5D,kBAAL,GAA0B,KAA1B;;;;;;;;;;+BAOO;aACF,KAAK2D,eAAL,GAAuBjL,KAA9B;;;;;;;;;6BAMOA,OAAO;WACTiL,eAAL,GAAuBjL,KAAvB,GAA+BA,KAA/B;UACM6G,UAAU,KAAKA,OAAL,EAAhB;WACK0C,cAAL,CAAoB1C,OAApB;UACI,KAAKtF,QAAL,CAAciH,QAAd,EAAJ,EAA8B;aACvBjH,QAAL,CAAc4I,UAAd,CAAyB,KAAKlG,WAA9B;aACK1C,QAAL,CAAckH,UAAd,CAAyB,KAAKvE,WAA9B;;;;;;;;;;;8BAQM;aACD,KAAKqD,0BAAL,GACH,KAAKC,QADF,GACa,KAAK2D,mBAAL,EADpB;;;;;;;;;6BAOOtE,SAAS;WACXU,0BAAL,GAAkC,IAAlC;WACKC,QAAL,GAAgBX,OAAhB;;gBAEU,KAAKA,OAAL,EAAV;WACK0C,cAAL,CAAoB1C,OAApB;UACI,KAAKtF,QAAL,CAAciH,QAAd,EAAJ,EAA8B;aACvBjH,QAAL,CAAc4I,UAAd,CAAyB,KAAKlG,WAA9B;;;;;;;;;;iCAOS;aACJ,KAAKgH,eAAL,GAAuBvH,QAA9B;;;;;;;;;gCAMUA,UAAU;WACfuH,eAAL,GAAuBvH,QAAvB,GAAkCA,QAAlC;WACK0H,cAAL,CAAoB1H,QAApB;;;;;;;;;yCAMmBhC,SAAS;UACxB,KAAKwF,WAAT,EAAsB;aACfA,WAAL,CAAiBnF,UAAjB,CAA4BL,OAA5B;;;;;;;;;;;;kCASU;aACL,KAAKuJ,eAAL,GAAuBI,QAAvB,CAAgCC,QAAvC;;;;;;;;;;0CAOoB;aACb,KAAKL,eAAL,GAAuBI,QAAvB,CAAgCE,KAAvC;;;;;;;;;;;mCAQa1E,SAAS;UACf2E,OADe,GACJ5E,uBAAuBhF,UADnB,CACf4J,OADe;;UAElB3E,OAAJ,EAAa;aACNtF,QAAL,CAAcY,WAAd,CAA0BqJ,OAA1B;OADF,MAEO;aACAjK,QAAL,CAAcU,QAAd,CAAuBuJ,OAAvB;;UAEE,KAAKtE,WAAT,EAAsB;aACfA,WAAL,CAAiBuE,WAAjB,CAA6B5E,OAA7B;;;;;;;;;;;;kCASU6B,WAAW;UAChBgD,OADgB,GACL9E,uBAAuBhF,UADlB,CAChB8J,OADgB;;UAEnBhD,SAAJ,EAAe;aACRnH,QAAL,CAAcU,QAAd,CAAuByJ,OAAvB;OADF,MAEO;aACAnK,QAAL,CAAcY,WAAd,CAA0BuJ,OAA1B;;;;;;;;;;;;mCASWC,YAAY;kCACG/E,uBAAuBhF,UAD1B;UAClBgK,QADkB,yBAClBA,QADkB;UACRJ,OADQ,yBACRA,OADQ;;UAErBG,UAAJ,EAAgB;aACTpK,QAAL,CAAcU,QAAd,CAAuB2J,QAAvB;aACKrK,QAAL,CAAcY,WAAd,CAA0BqJ,OAA1B;OAFF,MAGO;aACAjK,QAAL,CAAcY,WAAd,CAA0ByJ,QAA1B;;UAEE,KAAKxE,KAAT,EAAgB;aACTA,KAAL,CAAWyE,WAAX,CAAuBF,UAAvB;;;;;;;;;;;;sCASc;aACT,KAAKpK,QAAL,CAAc0H,cAAd;qCAC0B;eACxB,EADwB;kBAErB,KAFqB;kBAGrB;oBACE,KADF;iBAED;;OANX;;;;EAhXiC5H;;ACyCrC,mBAAe,EAACyK;;;;;;GAAD,qBAAA;QACP,eADO;UAEL,CAACpM,kBAAD,EAAqBW,kBAArB,CAFK;SAGN;UACC,OADD;WAEE;GALI;SAON;WACE0L,MADF;UAEC;YACEA,MADF;eAEK,MAFL;iBAGO,mBAAS/L,KAAT,EAAgB;eAEvB,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4B,UAA5B,EAAwC,KAAxC,EAA+C,KAA/C,EAAsDqJ,OAAtD,CACErJ,KADF,MAEM,CAAC,CAHT;;KANC;WAaEgM,OAbF;WAcED,MAdF;cAeKA,MAfL;wBAgBeC,OAhBf;wBAiBeA,OAjBf;SAkBAA,OAlBA;aAmBIA,OAnBJ;cAoBKA,OApBL;cAqBKA,OArBL;WAsBE,EAAErI,MAAMqI,OAAR,EAAiBC,SAASC,SAA1B,EAtBF;eAuBMF,OAvBN;eAwBMA,OAxBN;iBAyBQ,CAACD,MAAD,EAASlM,KAAT,EAAgBsM,MAAhB,CAzBR;kBA0BS,CAACJ,MAAD,EAASlM,KAAT,EAAgBsM,MAAhB,CA1BT;UA2BC,EAAExI,MAAM,CAACyI,MAAD,EAASL,MAAT,CAAR,EAA0BE,SAAS,EAAnC,EA3BD;eA4BM,EAAEtI,MAAM,CAACyI,MAAD,EAASL,MAAT,CAAR,EAA0BE,SAASC,SAAnC,EA5BN;eA6BM,EAAEvI,MAAM,CAACyI,MAAD,EAASL,MAAT,CAAR,EAA0BE,SAASC,SAAnC,EA7BN;UA8BC,EAAEvI,MAAM,CAACyI,MAAD,EAASL,MAAT,CAAR,EAA0BE,SAAS,CAAnC,EA9BD;UA+BC,EAAEtI,MAAM,CAACyI,MAAD,EAASL,MAAT,CAAR,EAA0BE,SAAS,EAAnC,EA/BD;;;UAkCCF,MAlCD;cAmCKC,OAnCL;kBAoCSA,OApCT;eAqCMA;GA5CA;QA8CP,gBAAW;WACR;YACC,KAAKhM,KADN;mBAEQ;yBACM,IADN;0BAEO,IAFP;oCAGiB,IAHjB;oCAIiB,KAAK0D,QAJtB;iCAKc,KAAK2I,KALnB;qCAMkB,KAAKC,SANvB;oCAOiB,KAAKC,SAPtB;+BAQY,CAAC,KAAKD,SAAN,IAAmB,KAAKE,GARpC;oCASiB,CAAC,KAAKF,SAAN,IAAmB,KAAKG;OAXjD;oBAaS;iCACa;OAdtB;oBAgBS;8BACU;OAjBnB;qBAmBU;2BACM;OApBhB;mBAsBQ;sCACmB,IADnB;kDAE+B,KAAKC,kBAFpC;sDAGmC,KAAKC;OAzBhD;uBA2BYT;KA3BnB;GA/CW;SA6EN;YAAA,sBACM;WACJU,UAAL,IAAmB,KAAKA,UAAL,CAAgBf,WAAhB,CAA4B,KAAKnI,QAAjC,CAAnB;KAFG;YAAA,sBAIM;WACJmJ,KAAL,CAAW7B,KAAX,KAAqB,KAAK6B,KAAL,CAAW7B,KAAX,CAAiB8B,QAAjB,GAA4B,KAAKA,QAAtD;KALG;SAAA,mBAOG;UACF,OAAO,KAAKvB,KAAZ,KAAsB,WAA1B,EAAuC;aAChCqB,UAAL,IAAmB,KAAKA,UAAL,CAAgBG,QAAhB,CAAyB,KAAKxB,KAA9B,CAAnB;;KATC;SAAA,mBAYG;WACDyB,IAAL,CAAU,KAAKC,WAAf,EAA4B,uBAA5B,EAAqD,KAAKZ,KAA1D;KAbG;sBAAA,gCAegB;WACda,oBAAL,IACE,KAAKA,oBAAL,CAA0BC,aAA1B,CAAwC,KAAKT,kBAA7C,CADF;KAhBG;sBAAA,gCAmBgB;WACdQ,oBAAL,IACE,KAAKA,oBAAL,CAA0BE,aAA1B,CAAwC,KAAKT,kBAA7C,CADF;KApBG;SAAA,iBAuBC3M,MAvBD,EAuBQ;UACP,KAAK4M,UAAT,EAAqB;YACf5M,WAAU,KAAK4M,UAAL,CAAgB5F,QAAhB,EAAd,EAA0C;eACnC4F,UAAL,CAAgBS,QAAhB,CAAyBrN,MAAzB;;;;GAvGK;WA4GJ;eAAA,uBACKA,KADL,EACY;WACZc,KAAL,CAAW,OAAX,EAAoBd,KAApB;KAFK;SAAA,mBAIC;WACD6M,KAAL,CAAW7B,KAAX,IAAoB,KAAK6B,KAAL,CAAW7B,KAAX,CAAiBsC,KAAjB,EAApB;KALK;QAAA,kBAOA;WACAT,KAAL,CAAW7B,KAAX,IAAoB,KAAK6B,KAAL,CAAW7B,KAAX,CAAiBuC,IAAjB,EAApB;;GApHS;YAuHH;cAAA,wBACK;UACLtO,IADK,GACuC,IADvC,CACLA,IADK;UACCuO,QADD,GACuC,IADvC,CACCA,QADD;UACWC,YADX,GACuC,IADvC,CACWA,YADX;UACyBC,SADzB,GACuC,IADvC,CACyBA,SADzB;;aAEJ,EAAEzO,UAAF,EAAQuO,kBAAR,EAAkBC,0BAAlB,EAAgCC,oBAAhC,EAAP;KAHM;oBAAA,8BAKW;aACV,KAAKpB,SAAL,GAAiB,KAAKqB,KAAtB,GAA8BzB,SAArC;KANM;qBAAA,+BAQY;aACX,KAAK0B,IAAL,GAAY,UAAU,KAAKC,IAA3B,GAAkC3B,SAAzC;KATM;YAAA,sBAWG;aACF,CAAC,KAAKI,SAAN,IAAmB,KAAKqB,KAA/B;KAZM;cAAA,wBAcK;aACJ,CAAC,KAAKrB,SAAN,IAAmB,KAAKG,OAA/B;KAfM;iBAAA,2BAiBQ;aACP,CAAC,KAAKjD,UAAN,IAAoB,CAAC,KAAK+C,SAAjC;KAlBM;kBAAA,4BAoBS;UAEb,CAAC,KAAKuB,WAAL,IAAoB,KAAKC,MAAL,CAAY,cAAZ,CAArB,KACA,EAAE,KAAKC,YAAL,IAAqB,KAAKD,MAAL,CAAY,eAAZ,CAAvB,CAFF,EAGE;eACO,KAAKD,WAAL,GAAmBnO,gBAAgB,KAAKmO,WAArB,CAAnB,GAAuD,EAA9D;;aAEK,KAAP;KA3BM;mBAAA,6BA6BU;UACZ,KAAKE,YAAL,IAAqB,KAAKD,MAAL,CAAY,eAAZ,CAAzB,EAAuD;eAC9C,KAAKC,YAAL,GAAoBrO,gBAAgB,KAAKqO,YAArB,CAApB,GAAyD,EAAhE;;aAEK,KAAP;KAjCM;wBAAA,kCAmCe;aACd/N,SAAc,KAAKgO,YAAnB,EAAiC;2CACH,KAAKjO;OADnC,CAAP;;GA3JS;SAAA,qBAgKH;;;QACJ,KAAK6M,KAAL,CAAWqB,MAAf,EAAuB;WAChBC,oBAAL,GAA4B,IAAI7J,uBAAJ,CAA4B;kBAC5C,6BAAa;gBAChB0I,IAAL,CAAU,MAAKoB,aAAf,EAA8BlO,SAA9B,EAAyC,IAAzC;SAFoD;qBAIzC,gCAAa;gBACnBmO,OAAL,CAAa,MAAKD,aAAlB,EAAiClO,SAAjC;SALoD;kBAO5C,6BAAa;gBAChB2M,KAAL,CAAWqB,MAAX,CAAkBI,SAAlB,CAA4BzN,QAA5B,CAAqCX,SAArC;SARoD;iBAU7C,iBAACjB,IAAD,EAAOe,KAAP,EAAiB;gBACnB6M,KAAL,CAAWqB,MAAX,CAAkBK,YAAlB,CAA+BtP,IAA/B,EAAqCe,KAArC;SAXoD;8BAahC,8BAACiD,OAAD,EAAUC,OAAV,EAAsB;gBACrC2J,KAAL,CAAWqB,MAAX,CAAkBnN,gBAAlB,CAAmCkC,OAAnC,EAA4CC,OAA5C;SAdoD;gCAgB9B,gCAACD,OAAD,EAAUC,OAAV,EAAsB;gBACvC2J,KAAL,CAAWqB,MAAX,CAAkB9M,mBAAlB,CAAsC6B,OAAtC,EAA+CC,OAA/C;;OAjBwB,CAA5B;WAoBKiL,oBAAL,CAA0BK,IAA1B;;;QAGE,KAAK3B,KAAL,CAAWe,IAAf,EAAqB;WACdV,oBAAL,GAA4B,IAAIrL,gCAAJ,CAAqC;kBACrD,6BAAa;gBAChBmL,IAAL,CAAU,MAAKyB,WAAf,EAA4BvO,SAA5B,EAAuC,IAAvC;SAF6D;qBAIlD,gCAAa;gBACnBmO,OAAL,CAAa,MAAKI,WAAlB,EAA+BvO,SAA/B;SAL6D;kBAOrD,6BAAa;iBACd,MAAK2M,KAAL,CAAWe,IAAX,CAAgBU,SAAhB,CAA0BzN,QAA1B,CAAmCX,SAAnC,CAAP;SAR6D;iBAUtD,iBAACjB,IAAD,EAAOe,KAAP,EAAiB;gBACnB6M,KAAL,CAAWe,IAAX,CAAgBW,YAAhB,CAA6BtP,IAA7B,EAAmCe,KAAnC;SAX6D;oBAanD,0BAAQ;gBACb6M,KAAL,CAAWe,IAAX,CAAgBc,eAAhB,CAAgCzP,IAAhC;SAd6D;oBAgBnD,iCAAiB;;;;OAhBH,CAA5B;WAqBKiO,oBAAL,CAA0BsB,IAA1B;;;QAGE,KAAK3B,KAAL,CAAWxF,IAAf,EAAqB;UACf,KAAKsH,cAAT,EAAyB;aAClB3B,IAAL,CAAU,KAAKC,WAAf,EAA4B,mCAA5B,EAAiE,IAAjE;OADF,MAEO,IAAI,KAAK2B,eAAT,EAA0B;aAC1B5B,IAAL,CAAU,KAAKC,WAAf,EAA4B,oCAA5B,EAAkE,IAAlE;;;WAGG4B,cAAL,GAAsB,IAAI1L,0BAAJ,CAA+B;iBAC1C,iBAAC1B,IAAD,EAAOzB,KAAP;iBAAiB,MAAK6M,KAAL,CAAWxF,IAAX,CAAgBkH,YAAhB,CAA6B9M,IAA7B,EAAmCzB,KAAnC,CAAjB;SAD0C;oCAEvB,oCAACiD,OAAD,EAAUC,OAAV,EAAsB;gBAC3C2J,KAAL,CAAWxF,IAAX,CAAgBtG,gBAAhB,CAAiCkC,OAAjC,EAA0CC,OAA1C;SAHiD;sCAKrB,sCAACD,OAAD,EAAUC,OAAV,EAAsB;gBAC7C2J,KAAL,CAAWxF,IAAX,CAAgBjG,mBAAhB,CAAoC6B,OAApC,EAA6CC,OAA7C;SANiD;0BAQjC;iBAAM,MAAKpC,KAAL,CAAW,aAAX,CAAN;;OARE,CAAtB;WAUK+N,cAAL,CAAoBL,IAApB;;;QAGE,KAAK3B,KAAL,CAAWc,KAAf,EAAsB;WACfmB,eAAL,GAAuB,IAAI5J,0BAAJ,CAA+B;kBAC1C,6BAAa;gBAChB8H,IAAL,CAAU,MAAKiB,YAAf,EAA6B/N,SAA7B,EAAwC,IAAxC;SAFkD;qBAIvC,gCAAa;gBACnBmO,OAAL,CAAa,MAAKJ,YAAlB,EAAgC/N,SAAhC;SALkD;kBAO1C;iBAAM,MAAK2M,KAAL,CAAWc,KAAX,CAAiBoB,WAAvB;SAP0C;oCAQxB,oCAAC9L,OAAD,EAAUC,OAAV,EAAsB;gBAC3C2J,KAAL,CAAWc,KAAX,CAAiB5M,gBAAjB,CAAkCkC,OAAlC,EAA2CC,OAA3C;SATkD;sCAWtB,sCAACD,OAAD,EAAUC,OAAV,EAAsB;gBAC7C2J,KAAL,CAAWc,KAAX,CAAiBvM,mBAAjB,CAAqC6B,OAArC,EAA8CC,OAA9C;;OAZmB,CAAvB;WAeK4L,eAAL,CAAqBN,IAArB;;;QAGE,KAAK3B,KAAL,CAAWJ,OAAf,EAAwB;WACjBuC,iBAAL,GAAyB,IAAIvJ,2BAAJ,CAAgC;kBAC7C;iBAAM,MAAKoH,KAAL,CAAWJ,OAAX,CAAmBsC,WAAzB;SAD6C;mBAE5C;iBAAM,MAAKlC,KAAL,CAAWJ,OAAX,CAAmBwC,YAAzB;SAF4C;4BAGnC,mCAAS;gBACtBC,eAAL,GAAuBlP,KAAvB;SAJqD;kCAM7B,gDAAgB;cAClCmP,qBAAqB,MAAKtC,KAAL,CAAWuC,WAAtC;cACID,kBAAJ,EAAwB;mBACfE,OACJC,gBADI,CACaH,kBADb,EAEJI,gBAFI,CAEavK,YAFb,CAAP;;;OATmB,CAAzB;WAeKgK,iBAAL,CAAuBR,IAAvB;;;SAGG5B,UAAL,GAAkB,IAAI4C,sBAAJ,CAChB;gBACY,6BAAa;cAChBxC,IAAL,CAAU,MAAKC,WAAf,EAA4B/M,SAA5B,EAAuC,IAAvC;OAFJ;mBAIe,gCAAa;cACnBmO,OAAL,CAAa,MAAKpB,WAAlB,EAA+B/M,SAA/B;OALJ;gBAOY,6BAAa;cAChB2M,KAAL,CAAW4C,IAAX,CAAgBnB,SAAhB,CAA0BzN,QAA1B,CAAmCX,SAAnC;OARJ;2CAUuC,6CAAC+C,OAAD,EAAUC,OAAV,EAAsB;cACpD2J,KAAL,CAAW4C,IAAX,CAAgB1O,gBAAhB,CAAiCkC,OAAjC,EAA0CC,OAA1C;OAXJ;6CAayC,+CAACD,OAAD,EAAUC,OAAV,EAAsB;cACtD2J,KAAL,CAAW4C,IAAX,CAAgBrO,mBAAhB,CAAoC6B,OAApC,EAA6CC,OAA7C;OAdJ;iBAgBa,qBAAM;eACRvC,SAASC,aAAT,KAA2B,MAAKiM,KAAL,CAAW7B,KAA7C;OAjBJ;aAmBS;eACLqE,OACGC,gBADH,CACoB,MAAKzC,KAAL,CAAW4C,IAD/B,EAEGF,gBAFH,CAEoB,WAFpB,MAEqC,KAHhC;OAnBT;4BAuBwB,gCAAM;YACtB,MAAKrB,MAAT,EAAiB;gBACVA,MAAL,CAAYwB,UAAZ;;OAzBN;0BA4BsB,8BAAM;YACpB,MAAKxB,MAAT,EAAiB;gBACVA,MAAL,CAAYyB,QAAZ;;OA9BN;oCAiCgC,mDAAe;YACvC,MAAKzB,MAAT,EAAiB;gBACVA,MAAL,CAAY0B,eAAZ,CAA4B5L,WAA5B;;OAnCN;uCAsCmC,yCAACf,OAAD,EAAUC,OAAV,EAAsB;cAChD2J,KAAL,CAAW7B,KAAX,CAAiBjK,gBAAjB,CAAkCkC,OAAlC,EAA2CC,OAA3C;OAvCJ;yCAyCqC,2CAACD,OAAD,EAAUC,OAAV,EAAsB;cAClD2J,KAAL,CAAW7B,KAAX,CAAiB5J,mBAAjB,CAAqC6B,OAArC,EAA8CC,OAA9C;OA1CJ;gDA4C4C,2DAAW;YAC7Ca,WAAW,IAAI8L,gBAAJ,CAAqB3M,OAArB,CAAjB;YACM4M,aAAa,MAAKjD,KAAL,CAAW7B,KAA9B;YACM+E,SAAS,EAAEC,YAAY,IAAd,EAAf;iBACSC,OAAT,CAAiBH,UAAjB,EAA6BC,MAA7B;eACOhM,QAAP;OAjDJ;kDAmD8C,8DAAY;iBAC7CmM,UAAT;OApDJ;kBAsDc,iCAAe;cACpBpB,eAAL,CAAqBqB,KAArB,CAA2BlM,WAA3B;OAvDJ;kBAyDc,iCAAe;cACpB6K,eAAL,CAAqBsB,KAArB,CAA2BlM,WAA3B;OA1DJ;gBA4DY,oBAAM;eACP,CAAC,CAAC,MAAK2I,KAAL,CAAWc,KAApB;OA7DJ;qBA+DiB,yBAAM;eACZ,MAAKmB,eAAL,CAAqBzJ,QAArB,EAAP;OAhEJ;sBAkEkB,0BAAM;eACb,MAAKwH,KAAL,CAAW7B,KAAlB;OAnEJ;kBAqEc;eAAM,CAAC,CAAC,MAAKxB,UAAb;OArEd;yBAsEqB,2BAACrF,UAAD,EAAaC,KAAb,EAAuB;cACnC4K,iBAAL,CAAuBqB,aAAvB,CAAqClM,UAArC,EAAiDC,KAAjD;;KAxEY,EA2EhB;kBACc,KAAK+J,oBADnB;kBAEc,KAAKjB,oBAFnB;YAGQ,KAAK2B,cAHb;aAIS,KAAKC,eAJd;eAKW,KAAKE;KAhFA,CAAlB;;SAoFKpC,UAAL,CAAgB4B,IAAhB;SACK5B,UAAL,CAAgBS,QAAhB,CAAyB,KAAKrN,KAA9B;SACK4M,UAAL,CAAgBf,WAAhB,CAA4B,KAAKnI,QAAjC;SACKmJ,KAAL,CAAW7B,KAAX,KAAqB,KAAK6B,KAAL,CAAW7B,KAAX,CAAiB8B,QAAjB,GAA4B,KAAKA,QAAtD;QACI,OAAO,KAAKvB,KAAZ,KAAsB,WAA1B,EAAuC;WAChCqB,UAAL,CAAgBG,QAAhB,CAAyB,KAAKxB,KAA9B;;;QAGE,KAAK+E,OAAT,EAAkB;WACXC,MAAL,GAAc,IAAIC,UAAJ,CAAe,IAAf,CAAd;WACKD,MAAL,CAAY/B,IAAZ;;GA1WS;eAAA,2BA6WG;SACT5B,UAAL,IAAmB,KAAKA,UAAL,CAAgB6D,OAAhB,EAAnB;SACKtC,oBAAL,IAA6B,KAAKA,oBAAL,CAA0BsC,OAA1B,EAA7B;SACKvD,oBAAL,IAA6B,KAAKA,oBAAL,CAA0BuD,OAA1B,EAA7B;SACK5B,cAAL,IAAuB,KAAKA,cAAL,CAAoB4B,OAApB,EAAvB;SACK3B,eAAL,IAAwB,KAAKA,eAAL,CAAqB2B,OAArB,EAAxB;SACKzB,iBAAL,IAA0B,KAAKA,iBAAL,CAAuByB,OAAvB,EAA1B;SACKF,MAAL,IAAe,KAAKA,MAAL,CAAYE,OAAZ,EAAf;;CApXJ;;AC3EA,YAAe7R,WAAW;;CAAX,CAAf;;;;;"}