/**
* @module vue-mdc-adapter 0.13.2
* @exports VueMDCAdapter
* @copyright (c) 2017-present, Sebastien Tasson
* @license https://opensource.org/licenses/MIT
* @implements {"material-components-web":"^0.33.0"}
* @requires {"vue":"^2.5.6"}
* @see https://github.com/stasson/vue-mdc-adapter
*/

(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global.VueMDCAdapter = factory());
}(this, (function () { 'use strict';

  function ___$insertStyle(css) {
    if (!css) {
      return;
    }
    if (typeof window === 'undefined') {
      return;
    }

    var style = document.createElement('style');

    style.setAttribute('type', 'text/css');
    style.innerHTML = css;
    document.head.appendChild(style);

    return css;
  }

  ___$insertStyle("@-webkit-keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-in {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: 0; }\n  to {\n    opacity: var(--mdc-ripple-fg-opacity, 0); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: 0; }\n  to {\n    opacity: var(--mdc-ripple-fg-opacity, 0); } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-out {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: var(--mdc-ripple-fg-opacity, 0); }\n  to {\n    opacity: 0; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: var(--mdc-ripple-fg-opacity, 0); }\n  to {\n    opacity: 0; } }\n\n.mdc-ripple-surface--test-edge-var-bug {\n  --mdc-ripple-surface-test-edge-var: 1px solid #000;\n  visibility: hidden; }\n  .mdc-ripple-surface--test-edge-var-bug::before {\n    border: var(--mdc-ripple-surface-test-edge-var); }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n * $opacity-boost.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-value(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-button {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 2.25rem;\n  font-weight: 500;\n  letter-spacing: 0.04em;\n  text-decoration: none;\n  text-transform: uppercase;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: transparent;\n  will-change: transform, opacity;\n  display: inline-block;\n  position: relative;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  min-width: 64px;\n  height: 36px;\n  padding: 0 16px;\n  border: none;\n  outline: none;\n  text-align: center;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  -webkit-appearance: none;\n  overflow: hidden;\n  vertical-align: middle;\n  border-radius: 2px; }\n  .mdc-button::before, .mdc-button::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-button::before {\n    -webkit-transition: opacity 15ms linear;\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-button.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-button.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-button.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-button.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-button.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-button::before, .mdc-button::after {\n    top: calc(50% - 100%);\n    /* @noflip */\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%; }\n  .mdc-button.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-button::-moz-focus-inner {\n    padding: 0;\n    border: 0; }\n  .mdc-button:active {\n    outline: none; }\n  .mdc-button:hover {\n    cursor: pointer; }\n  .mdc-button:disabled {\n    background-color: transparent;\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));\n    cursor: default;\n    pointer-events: none; }\n  .mdc-button:not(:disabled) {\n    background-color: transparent; }\n  .mdc-button:not(:disabled) {\n    color: #6200ee;\n    /* @alternate */\n    color: var(--mdc-theme-primary, #6200ee); }\n  .mdc-button::before, .mdc-button::after {\n    background-color: #6200ee; }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-button::before, .mdc-button::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-primary, #6200ee); } }\n  .mdc-button:hover::before {\n    opacity: 0.04; }\n  .mdc-button:not(.mdc-ripple-upgraded):focus::before, .mdc-button.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-button:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  .mdc-button:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-button.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n  .mdc-button .mdc-button__icon, .mdc-button .mdc-icon {\n    /* @noflip */\n    margin-left: 0;\n    /* @noflip */\n    margin-right: 8px;\n    display: inline-block;\n    width: 18px;\n    height: 18px;\n    font-size: 18px;\n    line-height: inherit;\n    vertical-align: top; }\n    [dir=\"rtl\"] .mdc-button .mdc-button__icon, [dir=\"rtl\"] .mdc-button .mdc-icon, .mdc-button .mdc-button__icon[dir=\"rtl\"], .mdc-button .mdc-icon[dir=\"rtl\"] {\n      /* @noflip */\n      margin-left: 8px;\n      /* @noflip */\n      margin-right: 0; }\n  .mdc-button svg.mdc-button__icon, .mdc-button svg.mdc-icon {\n    /* @noflip */\n    margin-left: 0;\n    /* @noflip */\n    margin-right: 8px;\n    margin-top: -2px;\n    fill: currentColor;\n    vertical-align: middle; }\n    [dir=\"rtl\"] .mdc-button svg.mdc-button__icon, [dir=\"rtl\"] .mdc-button svg.mdc-icon, .mdc-button svg.mdc-button__icon[dir=\"rtl\"], .mdc-button svg.mdc-icon[dir=\"rtl\"] {\n      /* @noflip */\n      margin-left: 8px;\n      /* @noflip */\n      margin-right: 0; }\n\n.mdc-button--raised:disabled,\n.mdc-button--unelevated:disabled {\n  background-color: rgba(0, 0, 0, 0.12);\n  color: rgba(0, 0, 0, 0.38);\n  /* @alternate */\n  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }\n\n.mdc-button--raised:not(:disabled),\n.mdc-button--unelevated:not(:disabled) {\n  background-color: #6200ee; }\n  @supports not (-ms-ime-align: auto) {\n    .mdc-button--raised:not(:disabled),\n    .mdc-button--unelevated:not(:disabled) {\n      /* @alternate */\n      background-color: var(--mdc-theme-primary, #6200ee); } }\n\n.mdc-button--raised:not(:disabled),\n.mdc-button--unelevated:not(:disabled) {\n  color: white;\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-primary, white); }\n\n.mdc-button--raised::before, .mdc-button--raised::after,\n.mdc-button--unelevated::before,\n.mdc-button--unelevated::after {\n  background-color: white; }\n  @supports not (-ms-ime-align: auto) {\n    .mdc-button--raised::before, .mdc-button--raised::after,\n    .mdc-button--unelevated::before,\n    .mdc-button--unelevated::after {\n      /* @alternate */\n      background-color: var(--mdc-theme-text-primary-on-primary, white); } }\n\n.mdc-button--raised:hover::before,\n.mdc-button--unelevated:hover::before {\n  opacity: 0.08; }\n\n.mdc-button--raised:not(.mdc-ripple-upgraded):focus::before, .mdc-button--raised.mdc-ripple-upgraded--background-focused::before,\n.mdc-button--unelevated:not(.mdc-ripple-upgraded):focus::before,\n.mdc-button--unelevated.mdc-ripple-upgraded--background-focused::before {\n  -webkit-transition-duration: 75ms;\n          transition-duration: 75ms;\n  opacity: 0.24; }\n\n.mdc-button--raised:not(.mdc-ripple-upgraded)::after,\n.mdc-button--unelevated:not(.mdc-ripple-upgraded)::after {\n  -webkit-transition: opacity 150ms linear;\n  transition: opacity 150ms linear; }\n\n.mdc-button--raised:not(.mdc-ripple-upgraded):active::after,\n.mdc-button--unelevated:not(.mdc-ripple-upgraded):active::after {\n  -webkit-transition-duration: 75ms;\n          transition-duration: 75ms;\n  opacity: 0.32; }\n\n.mdc-button--raised.mdc-ripple-upgraded,\n.mdc-button--unelevated.mdc-ripple-upgraded {\n  --mdc-ripple-fg-opacity: $opacity; }\n\n.mdc-button--raised {\n  -webkit-box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  -webkit-transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); }\n  .mdc-button--raised:hover, .mdc-button--raised:focus {\n    -webkit-box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n            box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n  .mdc-button--raised:active {\n    -webkit-box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n            box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\n  .mdc-button--raised:disabled {\n    -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n            box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-button--stroked {\n  border-style: solid;\n  padding-right: 14px;\n  padding-left: 14px;\n  border-width: 2px;\n  line-height: 32px; }\n  .mdc-button--stroked:disabled {\n    border-color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    border-color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }\n  .mdc-button--stroked.mdc-button--dense {\n    line-height: 27px; }\n  .mdc-button--stroked:not(:disabled) {\n    border-color: #6200ee;\n    /* @alternate */\n    border-color: var(--mdc-theme-primary, #6200ee); }\n\n.mdc-button--dense {\n  height: 32px;\n  font-size: .8125rem;\n  line-height: 32px; }\n\n.mdc-button--accent.mdc-button:not(:disabled) {\n  color: #018786;\n  /* @alternate */\n  color: var(--mdc-theme-secondary, #018786); }\n\n.mdc-button--accent.mdc-button::before, .mdc-button--accent.mdc-button::after {\n  background-color: #018786; }\n  @supports not (-ms-ime-align: auto) {\n    .mdc-button--accent.mdc-button::before, .mdc-button--accent.mdc-button::after {\n      /* @alternate */\n      background-color: var(--mdc-theme-secondary, #018786); } }\n\n.mdc-button--accent.mdc-button:hover::before {\n  opacity: 0.04; }\n\n.mdc-button--accent.mdc-button:not(.mdc-ripple-upgraded):focus::before, .mdc-button--accent.mdc-button.mdc-ripple-upgraded--background-focused::before {\n  -webkit-transition-duration: 75ms;\n          transition-duration: 75ms;\n  opacity: 0.12; }\n\n.mdc-button--accent.mdc-button:not(.mdc-ripple-upgraded)::after {\n  -webkit-transition: opacity 150ms linear;\n  transition: opacity 150ms linear; }\n\n.mdc-button--accent.mdc-button:not(.mdc-ripple-upgraded):active::after {\n  -webkit-transition-duration: 75ms;\n          transition-duration: 75ms;\n  opacity: 0.16; }\n\n.mdc-button--accent.mdc-button.mdc-ripple-upgraded {\n  --mdc-ripple-fg-opacity: $opacity; }\n\n.mdc-button--accent.mdc-button--raised:not(:disabled), .mdc-button--accent.mdc-button--unelevated:not(:disabled) {\n  background-color: #018786; }\n  @supports not (-ms-ime-align: auto) {\n    .mdc-button--accent.mdc-button--raised:not(:disabled), .mdc-button--accent.mdc-button--unelevated:not(:disabled) {\n      /* @alternate */\n      background-color: var(--mdc-theme-secondary, #018786); } }\n\n.mdc-button--accent.mdc-button--raised:not(:disabled), .mdc-button--accent.mdc-button--unelevated:not(:disabled) {\n  color: white;\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-secondary, white); }\n\n.mdc-button--accent.mdc-button--raised::before, .mdc-button--accent.mdc-button--raised::after, .mdc-button--accent.mdc-button--unelevated::before, .mdc-button--accent.mdc-button--unelevated::after {\n  background-color: white; }\n  @supports not (-ms-ime-align: auto) {\n    .mdc-button--accent.mdc-button--raised::before, .mdc-button--accent.mdc-button--raised::after, .mdc-button--accent.mdc-button--unelevated::before, .mdc-button--accent.mdc-button--unelevated::after {\n      /* @alternate */\n      background-color: var(--mdc-theme-text-primary-on-secondary, white); } }\n\n.mdc-button--accent.mdc-button--raised:hover::before, .mdc-button--accent.mdc-button--unelevated:hover::before {\n  opacity: 0.08; }\n\n.mdc-button--accent.mdc-button--raised:not(.mdc-ripple-upgraded):focus::before, .mdc-button--accent.mdc-button--raised.mdc-ripple-upgraded--background-focused::before, .mdc-button--accent.mdc-button--unelevated:not(.mdc-ripple-upgraded):focus::before, .mdc-button--accent.mdc-button--unelevated.mdc-ripple-upgraded--background-focused::before {\n  -webkit-transition-duration: 75ms;\n          transition-duration: 75ms;\n  opacity: 0.24; }\n\n.mdc-button--accent.mdc-button--raised:not(.mdc-ripple-upgraded)::after, .mdc-button--accent.mdc-button--unelevated:not(.mdc-ripple-upgraded)::after {\n  -webkit-transition: opacity 150ms linear;\n  transition: opacity 150ms linear; }\n\n.mdc-button--accent.mdc-button--raised:not(.mdc-ripple-upgraded):active::after, .mdc-button--accent.mdc-button--unelevated:not(.mdc-ripple-upgraded):active::after {\n  -webkit-transition-duration: 75ms;\n          transition-duration: 75ms;\n  opacity: 0.32; }\n\n.mdc-button--accent.mdc-button--raised.mdc-ripple-upgraded, .mdc-button--accent.mdc-button--unelevated.mdc-ripple-upgraded {\n  --mdc-ripple-fg-opacity: $opacity; }\n\n.mdc-button--accent.mdc-button--stroked:not(:disabled) {\n  border-color: #018786;\n  /* @alternate */\n  border-color: var(--mdc-theme-secondary, #018786); }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n * $opacity-boost.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-value(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-button {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 2.25rem;\n  font-weight: 500;\n  letter-spacing: 0.04em;\n  text-decoration: none;\n  text-transform: uppercase;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: transparent;\n  will-change: transform, opacity;\n  display: inline-block;\n  position: relative;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  min-width: 64px;\n  height: 36px;\n  padding: 0 16px;\n  border: none;\n  outline: none;\n  text-align: center;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  -webkit-appearance: none;\n  overflow: hidden;\n  vertical-align: middle;\n  border-radius: 2px; }\n  .mdc-button::before, .mdc-button::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-button::before {\n    -webkit-transition: opacity 15ms linear;\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-button.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-button.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-button.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-button.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-button.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-button::before, .mdc-button::after {\n    top: calc(50% - 100%);\n    /* @noflip */\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%; }\n  .mdc-button.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-button::-moz-focus-inner {\n    padding: 0;\n    border: 0; }\n  .mdc-button:active {\n    outline: none; }\n  .mdc-button:hover {\n    cursor: pointer; }\n  .mdc-button:disabled {\n    background-color: transparent;\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));\n    cursor: default;\n    pointer-events: none; }\n  .mdc-button:not(:disabled) {\n    background-color: transparent; }\n  .mdc-button:not(:disabled) {\n    color: #6200ee;\n    /* @alternate */\n    color: var(--mdc-theme-primary, #6200ee); }\n  .mdc-button::before, .mdc-button::after {\n    background-color: #6200ee; }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-button::before, .mdc-button::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-primary, #6200ee); } }\n  .mdc-button:hover::before {\n    opacity: 0.04; }\n  .mdc-button:not(.mdc-ripple-upgraded):focus::before, .mdc-button.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-button:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  .mdc-button:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-button.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n  .mdc-button .mdc-button__icon, .mdc-button .mdc-icon {\n    /* @noflip */\n    margin-left: 0;\n    /* @noflip */\n    margin-right: 8px;\n    display: inline-block;\n    width: 18px;\n    height: 18px;\n    font-size: 18px;\n    line-height: inherit;\n    vertical-align: top; }\n    [dir=\"rtl\"] .mdc-button .mdc-button__icon, [dir=\"rtl\"] .mdc-button .mdc-icon, .mdc-button .mdc-button__icon[dir=\"rtl\"], .mdc-button .mdc-icon[dir=\"rtl\"] {\n      /* @noflip */\n      margin-left: 8px;\n      /* @noflip */\n      margin-right: 0; }\n  .mdc-button svg.mdc-button__icon, .mdc-button svg.mdc-icon {\n    /* @noflip */\n    margin-left: 0;\n    /* @noflip */\n    margin-right: 8px;\n    margin-top: -2px;\n    fill: currentColor;\n    vertical-align: middle; }\n    [dir=\"rtl\"] .mdc-button svg.mdc-button__icon, [dir=\"rtl\"] .mdc-button svg.mdc-icon, .mdc-button svg.mdc-button__icon[dir=\"rtl\"], .mdc-button svg.mdc-icon[dir=\"rtl\"] {\n      /* @noflip */\n      margin-left: 8px;\n      /* @noflip */\n      margin-right: 0; }\n\n.mdc-button--raised:disabled,\n.mdc-button--unelevated:disabled {\n  background-color: rgba(0, 0, 0, 0.12);\n  color: rgba(0, 0, 0, 0.38);\n  /* @alternate */\n  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }\n\n.mdc-button--raised:not(:disabled),\n.mdc-button--unelevated:not(:disabled) {\n  background-color: #6200ee; }\n  @supports not (-ms-ime-align: auto) {\n    .mdc-button--raised:not(:disabled),\n    .mdc-button--unelevated:not(:disabled) {\n      /* @alternate */\n      background-color: var(--mdc-theme-primary, #6200ee); } }\n\n.mdc-button--raised:not(:disabled),\n.mdc-button--unelevated:not(:disabled) {\n  color: white;\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-primary, white); }\n\n.mdc-button--raised::before, .mdc-button--raised::after,\n.mdc-button--unelevated::before,\n.mdc-button--unelevated::after {\n  background-color: white; }\n  @supports not (-ms-ime-align: auto) {\n    .mdc-button--raised::before, .mdc-button--raised::after,\n    .mdc-button--unelevated::before,\n    .mdc-button--unelevated::after {\n      /* @alternate */\n      background-color: var(--mdc-theme-text-primary-on-primary, white); } }\n\n.mdc-button--raised:hover::before,\n.mdc-button--unelevated:hover::before {\n  opacity: 0.08; }\n\n.mdc-button--raised:not(.mdc-ripple-upgraded):focus::before, .mdc-button--raised.mdc-ripple-upgraded--background-focused::before,\n.mdc-button--unelevated:not(.mdc-ripple-upgraded):focus::before,\n.mdc-button--unelevated.mdc-ripple-upgraded--background-focused::before {\n  -webkit-transition-duration: 75ms;\n          transition-duration: 75ms;\n  opacity: 0.24; }\n\n.mdc-button--raised:not(.mdc-ripple-upgraded)::after,\n.mdc-button--unelevated:not(.mdc-ripple-upgraded)::after {\n  -webkit-transition: opacity 150ms linear;\n  transition: opacity 150ms linear; }\n\n.mdc-button--raised:not(.mdc-ripple-upgraded):active::after,\n.mdc-button--unelevated:not(.mdc-ripple-upgraded):active::after {\n  -webkit-transition-duration: 75ms;\n          transition-duration: 75ms;\n  opacity: 0.32; }\n\n.mdc-button--raised.mdc-ripple-upgraded,\n.mdc-button--unelevated.mdc-ripple-upgraded {\n  --mdc-ripple-fg-opacity: $opacity; }\n\n.mdc-button--raised {\n  -webkit-box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  -webkit-transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); }\n  .mdc-button--raised:hover, .mdc-button--raised:focus {\n    -webkit-box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n            box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n  .mdc-button--raised:active {\n    -webkit-box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n            box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\n  .mdc-button--raised:disabled {\n    -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n            box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-button--stroked {\n  border-style: solid;\n  padding-right: 14px;\n  padding-left: 14px;\n  border-width: 2px;\n  line-height: 32px; }\n  .mdc-button--stroked:disabled {\n    border-color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    border-color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }\n  .mdc-button--stroked.mdc-button--dense {\n    line-height: 27px; }\n  .mdc-button--stroked:not(:disabled) {\n    border-color: #6200ee;\n    /* @alternate */\n    border-color: var(--mdc-theme-primary, #6200ee); }\n\n.mdc-button--dense {\n  height: 32px;\n  font-size: .8125rem;\n  line-height: 32px; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n * $opacity-boost.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-value(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n.mdc-card {\n  background-color: #fff;\n  /* @alternate */\n  background-color: var(--mdc-theme-background, #fff);\n  border-radius: 2px;\n  -webkit-box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box; }\n\n.mdc-card--stroked {\n  -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  border: 1px solid #dbdbdb; }\n\n.mdc-card__media {\n  position: relative;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover; }\n  .mdc-card__media::before {\n    display: block;\n    content: \"\"; }\n\n.mdc-card__media:first-child {\n  border-top-left-radius: inherit;\n  border-top-right-radius: inherit; }\n\n.mdc-card__media:last-child {\n  border-bottom-left-radius: inherit;\n  border-bottom-right-radius: inherit; }\n\n.mdc-card__media--square::before {\n  margin-top: 100%; }\n\n.mdc-card__media--16-9::before {\n  margin-top: 56.25%; }\n\n.mdc-card__media-content {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box; }\n\n.mdc-card__primary-action {\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: transparent;\n  will-change: transform, opacity;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  position: relative;\n  outline: none;\n  color: inherit;\n  text-decoration: none;\n  cursor: pointer;\n  overflow: hidden; }\n  .mdc-card__primary-action::before, .mdc-card__primary-action::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-card__primary-action::before {\n    -webkit-transition: opacity 15ms linear;\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-card__primary-action.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-card__primary-action.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-card__primary-action.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-card__primary-action.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-card__primary-action.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-card__primary-action::before, .mdc-card__primary-action::after {\n    top: calc(50% - 100%);\n    /* @noflip */\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%; }\n  .mdc-card__primary-action.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-card__primary-action::before, .mdc-card__primary-action::after {\n    background-color: black; }\n  .mdc-card__primary-action:hover::before {\n    opacity: 0.04; }\n  .mdc-card__primary-action:not(.mdc-ripple-upgraded):focus::before, .mdc-card__primary-action.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-card__primary-action:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  .mdc-card__primary-action:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-card__primary-action.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n\n.mdc-card__primary-action:first-child {\n  border-top-left-radius: inherit;\n  border-top-right-radius: inherit; }\n\n.mdc-card__primary-action:last-child {\n  border-bottom-left-radius: inherit;\n  border-bottom-right-radius: inherit; }\n\n.mdc-card__actions {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  min-height: 52px;\n  padding: 8px; }\n\n.mdc-card__actions--full-bleed {\n  padding: 0; }\n\n.mdc-card__action-buttons,\n.mdc-card__action-icons {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box; }\n\n.mdc-card__action-icons {\n  color: rgba(0, 0, 0, 0.38);\n  /* @alternate */\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n  -webkit-box-flex: 1;\n      -ms-flex-positive: 1;\n          flex-grow: 1;\n  -webkit-box-pack: end;\n      -ms-flex-pack: end;\n          justify-content: flex-end; }\n\n.mdc-card__action-buttons + .mdc-card__action-icons {\n  /* @noflip */\n  margin-left: 16px;\n  /* @noflip */\n  margin-right: 0; }\n  [dir=\"rtl\"] .mdc-card__action-buttons + .mdc-card__action-icons, .mdc-card__action-buttons + .mdc-card__action-icons[dir=\"rtl\"] {\n    /* @noflip */\n    margin-left: 0;\n    /* @noflip */\n    margin-right: 16px; }\n\n.mdc-card__action {\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none; }\n  .mdc-card__action:focus {\n    outline: none; }\n\n.mdc-card__action--button {\n  /* @noflip */\n  margin-left: 0;\n  /* @noflip */\n  margin-right: 8px;\n  padding: 0 8px; }\n  [dir=\"rtl\"] .mdc-card__action--button, .mdc-card__action--button[dir=\"rtl\"] {\n    /* @noflip */\n    margin-left: 8px;\n    /* @noflip */\n    margin-right: 0; }\n  .mdc-card__action--button:last-child {\n    /* @noflip */\n    margin-left: 0;\n    /* @noflip */\n    margin-right: 0; }\n    [dir=\"rtl\"] .mdc-card__action--button:last-child, .mdc-card__action--button:last-child[dir=\"rtl\"] {\n      /* @noflip */\n      margin-left: 0;\n      /* @noflip */\n      margin-right: 0; }\n\n.mdc-card__actions--full-bleed .mdc-card__action--button {\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n  width: 100%;\n  height: auto;\n  max-height: none;\n  margin: 0;\n  padding: 8px 16px;\n  text-align: left; }\n  [dir=\"rtl\"] .mdc-card__actions--full-bleed .mdc-card__action--button, .mdc-card__actions--full-bleed .mdc-card__action--button[dir=\"rtl\"] {\n    text-align: right; }\n\n.mdc-card__action--icon {\n  margin: -6px 0;\n  padding: 12px; }\n\n.mdc-card__action--icon:not(:disabled) {\n  color: rgba(0, 0, 0, 0.38);\n  /* @alternate */\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38)); }\n\n.mdc-card-media {\n  background-size: cover;\n  background-repeat: no-repeat; }\n\n.mdc-button--accent.mdc-card__actionn:not(:disabled) {\n  color: #018786;\n  /* @alternate */\n  color: var(--mdc-theme-secondary, #018786); }\n\n.mdc-button--accent.mdc-card__actionn::before, .mdc-button--accent.mdc-card__actionn::after {\n  background-color: #018786; }\n  @supports not (-ms-ime-align: auto) {\n    .mdc-button--accent.mdc-card__actionn::before, .mdc-button--accent.mdc-card__actionn::after {\n      /* @alternate */\n      background-color: var(--mdc-theme-secondary, #018786); } }\n\n.mdc-button--accent.mdc-card__actionn:hover::before {\n  opacity: 0.04; }\n\n.mdc-button--accent.mdc-card__actionn:not(.mdc-ripple-upgraded):focus::before, .mdc-button--accent.mdc-card__actionn.mdc-ripple-upgraded--background-focused::before {\n  -webkit-transition-duration: 75ms;\n          transition-duration: 75ms;\n  opacity: 0.12; }\n\n.mdc-button--accent.mdc-card__actionn:not(.mdc-ripple-upgraded)::after {\n  -webkit-transition: opacity 150ms linear;\n  transition: opacity 150ms linear; }\n\n.mdc-button--accent.mdc-card__actionn:not(.mdc-ripple-upgraded):active::after {\n  -webkit-transition-duration: 75ms;\n          transition-duration: 75ms;\n  opacity: 0.16; }\n\n.mdc-button--accent.mdc-card__actionn.mdc-ripple-upgraded {\n  --mdc-ripple-fg-opacity: $opacity; }\n\n.mdc-card__title {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 1.5rem;\n  font-weight: 500;\n  letter-spacing: 0.04em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n  margin: -.063rem 0; }\n\n.mdc-card__title--large {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1.5rem;\n  line-height: 2rem;\n  font-weight: 400;\n  letter-spacing: normal;\n  text-decoration: inherit;\n  text-transform: inherit;\n  margin: 0; }\n\n.mdc-card__primary {\n  padding: 16px; }\n  .mdc-card__primary .mdc-card__title--large {\n    padding-top: 8px; }\n  .mdc-card__primary:last-child {\n    padding-bottom: 24px; }\n\n.mdc-card__supporting-text {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  padding: 8px 16px; }\n  .mdc-card__primary + .mdc-card__supporting-text {\n    margin-top: -8px;\n    padding-top: 0; }\n  .mdc-card__supporting-text:last-child {\n    padding-bottom: 24px; }\n\n.mdc-card__subtitle {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n  margin: -.063rem 0; }\n\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* stylelint-disable selector-max-type */\n.mdc-form-field {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  vertical-align: middle; }\n  .mdc-form-field > label {\n    -webkit-box-ordinal-group: 1;\n        -ms-flex-order: 0;\n            order: 0;\n    margin-right: auto;\n    padding-left: 4px; }\n  [dir=\"rtl\"] .mdc-form-field > label, .mdc-form-field[dir=\"rtl\"] > label {\n    margin-left: auto;\n    padding-right: 4px; }\n\n.mdc-form-field--align-end > label {\n  -webkit-box-ordinal-group: 0;\n      -ms-flex-order: -1;\n          order: -1;\n  margin-left: auto;\n  padding-right: 4px; }\n\n[dir=\"rtl\"] .mdc-form-field--align-end > label, .mdc-form-field--align-end[dir=\"rtl\"] > label {\n  margin-right: auto;\n  padding-left: 4px; }\n\n/* stylelint-enable selector-max-type */\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n@-webkit-keyframes mdc-checkbox-unchecked-checked-checkmark-path {\n  0%,\n  50% {\n    stroke-dashoffset: 29.78334; }\n  50% {\n    -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }\n  100% {\n    stroke-dashoffset: 0; } }\n@keyframes mdc-checkbox-unchecked-checked-checkmark-path {\n  0%,\n  50% {\n    stroke-dashoffset: 29.78334; }\n  50% {\n    -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }\n  100% {\n    stroke-dashoffset: 0; } }\n\n@-webkit-keyframes mdc-checkbox-unchecked-indeterminate-mixedmark {\n  0%,\n  68.2% {\n    -webkit-transform: scaleX(0);\n            transform: scaleX(0); }\n  68.2% {\n    -webkit-animation-timing-function: cubic-bezier(0, 0, 0, 1);\n            animation-timing-function: cubic-bezier(0, 0, 0, 1); }\n  100% {\n    -webkit-transform: scaleX(1);\n            transform: scaleX(1); } }\n\n@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark {\n  0%,\n  68.2% {\n    -webkit-transform: scaleX(0);\n            transform: scaleX(0); }\n  68.2% {\n    -webkit-animation-timing-function: cubic-bezier(0, 0, 0, 1);\n            animation-timing-function: cubic-bezier(0, 0, 0, 1); }\n  100% {\n    -webkit-transform: scaleX(1);\n            transform: scaleX(1); } }\n\n@-webkit-keyframes mdc-checkbox-checked-unchecked-checkmark-path {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 1, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 1, 1);\n    opacity: 1;\n    stroke-dashoffset: 0; }\n  to {\n    opacity: 0;\n    stroke-dashoffset: -29.78334; } }\n\n@keyframes mdc-checkbox-checked-unchecked-checkmark-path {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 1, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 1, 1);\n    opacity: 1;\n    stroke-dashoffset: 0; }\n  to {\n    opacity: 0;\n    stroke-dashoffset: -29.78334; } }\n\n@-webkit-keyframes mdc-checkbox-checked-indeterminate-checkmark {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    opacity: 1; }\n  to {\n    -webkit-transform: rotate(45deg);\n            transform: rotate(45deg);\n    opacity: 0; } }\n\n@keyframes mdc-checkbox-checked-indeterminate-checkmark {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    opacity: 1; }\n  to {\n    -webkit-transform: rotate(45deg);\n            transform: rotate(45deg);\n    opacity: 0; } }\n\n@-webkit-keyframes mdc-checkbox-indeterminate-checked-checkmark {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.14, 0, 0, 1);\n            animation-timing-function: cubic-bezier(0.14, 0, 0, 1);\n    -webkit-transform: rotate(45deg);\n            transform: rotate(45deg);\n    opacity: 0; }\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n    opacity: 1; } }\n\n@keyframes mdc-checkbox-indeterminate-checked-checkmark {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.14, 0, 0, 1);\n            animation-timing-function: cubic-bezier(0.14, 0, 0, 1);\n    -webkit-transform: rotate(45deg);\n            transform: rotate(45deg);\n    opacity: 0; }\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n    opacity: 1; } }\n\n@-webkit-keyframes mdc-checkbox-checked-indeterminate-mixedmark {\n  from {\n    -webkit-animation-timing-function: mdc-animation-deceleration-curve-timing-function;\n            animation-timing-function: mdc-animation-deceleration-curve-timing-function;\n    -webkit-transform: rotate(-45deg);\n            transform: rotate(-45deg);\n    opacity: 0; }\n  to {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    opacity: 1; } }\n\n@keyframes mdc-checkbox-checked-indeterminate-mixedmark {\n  from {\n    -webkit-animation-timing-function: mdc-animation-deceleration-curve-timing-function;\n            animation-timing-function: mdc-animation-deceleration-curve-timing-function;\n    -webkit-transform: rotate(-45deg);\n            transform: rotate(-45deg);\n    opacity: 0; }\n  to {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    opacity: 1; } }\n\n@-webkit-keyframes mdc-checkbox-indeterminate-checked-mixedmark {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.14, 0, 0, 1);\n            animation-timing-function: cubic-bezier(0.14, 0, 0, 1);\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    opacity: 1; }\n  to {\n    -webkit-transform: rotate(315deg);\n            transform: rotate(315deg);\n    opacity: 0; } }\n\n@keyframes mdc-checkbox-indeterminate-checked-mixedmark {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.14, 0, 0, 1);\n            animation-timing-function: cubic-bezier(0.14, 0, 0, 1);\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    opacity: 1; }\n  to {\n    -webkit-transform: rotate(315deg);\n            transform: rotate(315deg);\n    opacity: 0; } }\n\n@-webkit-keyframes mdc-checkbox-indeterminate-unchecked-mixedmark {\n  0% {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    -webkit-transform: scaleX(1);\n            transform: scaleX(1);\n    opacity: 1; }\n  32.8%,\n  100% {\n    -webkit-transform: scaleX(0);\n            transform: scaleX(0);\n    opacity: 0; } }\n\n@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark {\n  0% {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    -webkit-transform: scaleX(1);\n            transform: scaleX(1);\n    opacity: 1; }\n  32.8%,\n  100% {\n    -webkit-transform: scaleX(0);\n            transform: scaleX(0);\n    opacity: 0; } }\n\n.mdc-checkbox {\n  display: inline-block;\n  position: relative;\n  -webkit-box-flex: 0;\n      -ms-flex: 0 0 18px;\n          flex: 0 0 18px;\n  -webkit-box-sizing: content-box;\n          box-sizing: content-box;\n  width: 18px;\n  height: 18px;\n  padding: 11px;\n  line-height: 0;\n  white-space: nowrap;\n  cursor: pointer;\n  vertical-align: bottom;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: transparent;\n  will-change: transform, opacity; }\n  .mdc-checkbox::before, .mdc-checkbox::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-checkbox::before {\n    -webkit-transition: opacity 15ms linear;\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-checkbox.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-checkbox.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-checkbox.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-checkbox.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-checkbox.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-checkbox::before, .mdc-checkbox::after {\n    background-color: #018786; }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-checkbox::before, .mdc-checkbox::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-secondary, #018786); } }\n  .mdc-checkbox:hover::before {\n    opacity: 0.04; }\n  .mdc-checkbox:not(.mdc-ripple-upgraded):focus::before, .mdc-checkbox.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-checkbox:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  .mdc-checkbox:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-checkbox.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n  .mdc-checkbox::before, .mdc-checkbox::after {\n    top: calc(50% - 50%);\n    /* @noflip */\n    left: calc(50% - 50%);\n    width: 100%;\n    height: 100%; }\n  .mdc-checkbox.mdc-ripple-upgraded::before, .mdc-checkbox.mdc-ripple-upgraded::after {\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    /* @noflip */\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-checkbox.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n\n.mdc-checkbox__checkmark-path {\n  stroke: white !important; }\n\n.mdc-checkbox__mixedmark {\n  background-color: white; }\n\n.mdc-checkbox__background::before {\n  background-color: #018786; }\n  @supports not (-ms-ime-align: auto) {\n    .mdc-checkbox__background::before {\n      /* @alternate */\n      background-color: var(--mdc-theme-secondary, #018786); } }\n\n.mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background {\n  border-color: rgba(0, 0, 0, 0.54);\n  background-color: transparent; }\n\n.mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background,\n.mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background {\n  border-color: #018786;\n  /* @alternate */\n  border-color: var(--mdc-theme-secondary, #018786);\n  background-color: #018786;\n  /* @alternate */\n  background-color: var(--mdc-theme-secondary, #018786); }\n\n@-webkit-keyframes mdc-checkbox-fade-in-background-0 {\n  0% {\n    border-color: rgba(0, 0, 0, 0.54);\n    background-color: transparent; }\n  50% {\n    border-color: #018786;\n    /* @alternate */\n    border-color: var(--mdc-theme-secondary, #018786);\n    background-color: #018786;\n    /* @alternate */\n    background-color: var(--mdc-theme-secondary, #018786); } }\n\n@keyframes mdc-checkbox-fade-in-background-0 {\n  0% {\n    border-color: rgba(0, 0, 0, 0.54);\n    background-color: transparent; }\n  50% {\n    border-color: #018786;\n    /* @alternate */\n    border-color: var(--mdc-theme-secondary, #018786);\n    background-color: #018786;\n    /* @alternate */\n    background-color: var(--mdc-theme-secondary, #018786); } }\n\n@-webkit-keyframes mdc-checkbox-fade-out-background-0 {\n  0%, 80% {\n    border-color: #018786;\n    /* @alternate */\n    border-color: var(--mdc-theme-secondary, #018786);\n    background-color: #018786;\n    /* @alternate */\n    background-color: var(--mdc-theme-secondary, #018786); }\n  100% {\n    border-color: rgba(0, 0, 0, 0.54);\n    background-color: transparent; } }\n\n@keyframes mdc-checkbox-fade-out-background-0 {\n  0%, 80% {\n    border-color: #018786;\n    /* @alternate */\n    border-color: var(--mdc-theme-secondary, #018786);\n    background-color: #018786;\n    /* @alternate */\n    background-color: var(--mdc-theme-secondary, #018786); }\n  100% {\n    border-color: rgba(0, 0, 0, 0.54);\n    background-color: transparent; } }\n\n.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n  -webkit-animation-name: mdc-checkbox-fade-in-background-0;\n          animation-name: mdc-checkbox-fade-in-background-0; }\n\n.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n  -webkit-animation-name: mdc-checkbox-fade-out-background-0;\n          animation-name: mdc-checkbox-fade-out-background-0; }\n\n.mdc-checkbox__native-control:disabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background {\n  border-color: rgba(0, 0, 0, 0.26); }\n\n.mdc-checkbox__native-control:disabled:checked ~ .mdc-checkbox__background,\n.mdc-checkbox__native-control:disabled:indeterminate ~ .mdc-checkbox__background {\n  border-color: transparent;\n  background-color: rgba(0, 0, 0, 0.26); }\n\n.mdc-checkbox--disabled {\n  cursor: default;\n  pointer-events: none; }\n\n.mdc-checkbox__background {\n  /* @noflip */\n  left: 11px;\n  /* @noflip */\n  right: initial;\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  position: absolute;\n  top: 11px;\n  bottom: 0;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  width: 45%;\n  height: 45%;\n  -webkit-transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  border: 2px solid currentColor;\n  border-radius: 2px;\n  background-color: transparent;\n  pointer-events: none;\n  will-change: background-color, border-color; }\n  .mdc-checkbox[dir=\"rtl\"] .mdc-checkbox__background,\n  [dir=\"rtl\"] .mdc-checkbox .mdc-checkbox__background {\n    /* @noflip */\n    left: initial;\n    /* @noflip */\n    right: 11px; }\n\n.mdc-checkbox__checkmark {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  -webkit-transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  opacity: 0; }\n  .mdc-checkbox--upgraded .mdc-checkbox__checkmark {\n    opacity: 1; }\n\n.mdc-checkbox__checkmark-path {\n  -webkit-transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  stroke-width: 3.12px;\n  stroke-dashoffset: 29.78334;\n  stroke-dasharray: 29.78334; }\n\n.mdc-checkbox__mixedmark {\n  width: 100%;\n  height: 2px;\n  -webkit-transform: scaleX(0) rotate(0deg);\n          transform: scaleX(0) rotate(0deg);\n  -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  opacity: 0; }\n\n.mdc-checkbox--upgraded .mdc-checkbox__background,\n.mdc-checkbox--upgraded .mdc-checkbox__checkmark,\n.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,\n.mdc-checkbox--upgraded .mdc-checkbox__mixedmark {\n  -webkit-transition: none !important;\n  transition: none !important; }\n\n.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background, .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background, .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background, .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background {\n  -webkit-animation-duration: 180ms;\n          animation-duration: 180ms;\n  -webkit-animation-timing-function: linear;\n          animation-timing-function: linear; }\n\n.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path {\n  -webkit-animation: 180ms linear 0s mdc-checkbox-unchecked-checked-checkmark-path;\n          animation: 180ms linear 0s mdc-checkbox-unchecked-checked-checkmark-path;\n  -webkit-transition: none;\n  transition: none; }\n\n.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark {\n  -webkit-animation: 90ms linear 0s mdc-checkbox-unchecked-indeterminate-mixedmark;\n          animation: 90ms linear 0s mdc-checkbox-unchecked-indeterminate-mixedmark;\n  -webkit-transition: none;\n  transition: none; }\n\n.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path {\n  -webkit-animation: 90ms linear 0s mdc-checkbox-checked-unchecked-checkmark-path;\n          animation: 90ms linear 0s mdc-checkbox-checked-unchecked-checkmark-path;\n  -webkit-transition: none;\n  transition: none; }\n\n.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark {\n  -webkit-animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-checkmark;\n          animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-checkmark;\n  -webkit-transition: none;\n  transition: none; }\n\n.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark {\n  -webkit-animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-mixedmark;\n          animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-mixedmark;\n  -webkit-transition: none;\n  transition: none; }\n\n.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark {\n  -webkit-animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-checkmark;\n          animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-checkmark;\n  -webkit-transition: none;\n  transition: none; }\n\n.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark {\n  -webkit-animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-mixedmark;\n          animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-mixedmark;\n  -webkit-transition: none;\n  transition: none; }\n\n.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark {\n  -webkit-animation: 300ms linear 0s mdc-checkbox-indeterminate-unchecked-mixedmark;\n          animation: 300ms linear 0s mdc-checkbox-indeterminate-unchecked-mixedmark;\n  -webkit-transition: none;\n  transition: none; }\n\n.mdc-checkbox__native-control:checked ~ .mdc-checkbox__background,\n.mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background {\n  -webkit-transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__checkmark-path,\n  .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__checkmark-path {\n    stroke-dashoffset: 0; }\n\n.mdc-checkbox__background::before {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  -webkit-transform: scale(0, 0);\n          transform: scale(0, 0);\n  -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  border-radius: 50%;\n  opacity: 0;\n  pointer-events: none;\n  content: \"\";\n  will-change: opacity, transform; }\n\n.mdc-ripple-upgraded--unbounded .mdc-checkbox__background::before {\n  content: none; }\n\n.mdc-checkbox__native-control:focus ~ .mdc-checkbox__background::before {\n  -webkit-transform: scale(2.75, 2.75);\n          transform: scale(2.75, 2.75);\n  -webkit-transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  opacity: 0.26; }\n\n.mdc-checkbox__native-control {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  opacity: 0;\n  cursor: inherit; }\n  .mdc-checkbox__native-control:disabled {\n    cursor: default;\n    pointer-events: none; }\n\n.mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__checkmark {\n  -webkit-transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  opacity: 1; }\n\n.mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__mixedmark {\n  -webkit-transform: scaleX(1) rotate(-45deg);\n          transform: scaleX(1) rotate(-45deg); }\n\n.mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__checkmark {\n  -webkit-transform: rotate(45deg);\n          transform: rotate(45deg);\n  -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  opacity: 0; }\n\n.mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__mixedmark {\n  -webkit-transform: scaleX(1) rotate(0deg);\n          transform: scaleX(1) rotate(0deg);\n  opacity: 1; }\n\n.mdc-chip {\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: transparent;\n  will-change: transform, opacity;\n  border-radius: 16px;\n  background-color: rgba(0, 0, 0, 0.08);\n  color: rgba(0, 0, 0, 0.6);\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  position: relative;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  padding: 7px 12px;\n  cursor: pointer;\n  outline: none;\n  overflow: hidden; }\n  .mdc-chip::before, .mdc-chip::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-chip::before {\n    -webkit-transition: opacity 15ms linear;\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-chip.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-chip.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-chip.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-chip.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-chip.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-chip::before, .mdc-chip::after {\n    top: calc(50% - 100%);\n    /* @noflip */\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%; }\n  .mdc-chip.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-chip::before, .mdc-chip::after {\n    background-color: rgba(0, 0, 0, 0.6); }\n  .mdc-chip:hover::before {\n    opacity: 0.04; }\n  .mdc-chip:not(.mdc-ripple-upgraded):focus::before, .mdc-chip.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-chip:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  .mdc-chip:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-chip.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n  .mdc-chip:hover {\n    color: rgba(0, 0, 0, 0.6); }\n  .mdc-chip.mdc-chip--selected::before {\n    opacity: 0.08; }\n  .mdc-chip.mdc-chip--selected::before, .mdc-chip.mdc-chip--selected::after {\n    background-color: #6200ee; }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-chip.mdc-chip--selected::before, .mdc-chip.mdc-chip--selected::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-primary, #6200ee); } }\n  .mdc-chip.mdc-chip--selected:hover::before {\n    opacity: 0.12; }\n  .mdc-chip.mdc-chip--selected:not(.mdc-ripple-upgraded):focus::before, .mdc-chip.mdc-chip--selected.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.2; }\n  .mdc-chip.mdc-chip--selected:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  .mdc-chip.mdc-chip--selected:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.24; }\n  .mdc-chip.mdc-chip--selected.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n  .mdc-chip.mdc-chip--selected {\n    color: #6200ee;\n    /* @alternate */\n    color: var(--mdc-theme-primary, #6200ee); }\n    .mdc-chip.mdc-chip--selected:hover {\n      color: #6200ee;\n      /* @alternate */\n      color: var(--mdc-theme-primary, #6200ee); }\n  .mdc-chip .mdc-chip__checkmark-path {\n    stroke: #6200ee;\n    /* @alternate */\n    stroke: var(--mdc-theme-primary, #6200ee); }\n  .mdc-chip:hover {\n    color: black; }\n\n.mdc-chip--selected {\n  background-color: white; }\n\n.mdc-chip__text {\n  line-height: 17px; }\n\n.mdc-chip__icon {\n  color: rgba(0, 0, 0, 0.54);\n  vertical-align: middle;\n  border-radius: 50%;\n  outline: none; }\n\n.mdc-chip__icon--trailing {\n  margin: 0 -4px 0 4px; }\n  .mdc-chip__icon--trailing:hover {\n    color: rgba(0, 0, 0, 0.62); }\n  .mdc-chip__icon--trailing:focus {\n    color: rgba(0, 0, 0, 0.87); }\n\n.mdc-chip__icon.mdc-chip__icon--trailing {\n  width: 18px;\n  height: 18px;\n  font-size: 18px; }\n\n.mdc-chip__checkmark,\n.mdc-chip__icon--leading {\n  height: 24px;\n  margin: -4px 4px -4px -4px; }\n\n.mdc-chip__checkmark-path {\n  -webkit-transition: stroke-dashoffset 150ms 50ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: stroke-dashoffset 150ms 50ms cubic-bezier(0.4, 0, 0.6, 1);\n  stroke-width: 2px;\n  stroke-dashoffset: 29.78334;\n  stroke-dasharray: 29.78334; }\n\n.mdc-chip--selected .mdc-chip__checkmark-path {\n  stroke-dashoffset: 0; }\n\n.mdc-chip__checkmark-svg {\n  width: 0;\n  height: 24px;\n  -webkit-transition: width 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: width 150ms cubic-bezier(0.4, 0, 0.2, 1); }\n\n.mdc-chip--selected .mdc-chip__checkmark-svg {\n  width: 24px; }\n\n.mdc-chip__icon--leading {\n  -webkit-transition: opacity 75ms linear;\n  transition: opacity 75ms linear;\n  opacity: 1; }\n  .mdc-chip__icon--leading + .mdc-chip__checkmark {\n    -webkit-transition: opacity 75ms linear;\n    transition: opacity 75ms linear;\n    opacity: 0; }\n    .mdc-chip__icon--leading + .mdc-chip__checkmark .mdc-chip__checkmark-svg {\n      -webkit-transition: width 0ms;\n      transition: width 0ms; }\n\n.mdc-chip--selected .mdc-chip__icon--leading {\n  opacity: 0; }\n  .mdc-chip--selected .mdc-chip__icon--leading + .mdc-chip__checkmark {\n    opacity: 1;\n    width: 0; }\n\n.mdc-chip__icon--hidden-leading.mdc-chip__icon--leading {\n  opacity: 0;\n  width: 0; }\n  .mdc-chip__icon--hidden-leading.mdc-chip__icon--leading + .mdc-chip__checkmark {\n    width: 24px; }\n\n.mdc-chip-set {\n  padding: 4px;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box; }\n  .mdc-chip-set .mdc-chip {\n    margin: 4px; }\n\n.mdc-chip.mdc-chip--selected::before {\n  opacity: 0.08; }\n\n.mdc-chip.mdc-chip--selected::before, .mdc-chip.mdc-chip--selected::after {\n  background-color: #6200ee; }\n\n.mdc-chip.mdc-chip--selected:hover::before {\n  opacity: 0.12; }\n\n.mdc-chip.mdc-chip--selected:not(.mdc-ripple-upgraded):focus::before, .mdc-chip.mdc-chip--selected.mdc-ripple-upgraded--background-focused::before {\n  -webkit-transition-duration: 75ms;\n          transition-duration: 75ms;\n  opacity: 0.2; }\n\n.mdc-chip.mdc-chip--selected:not(.mdc-ripple-upgraded)::after {\n  -webkit-transition: opacity 150ms linear;\n  transition: opacity 150ms linear; }\n\n.mdc-chip.mdc-chip--selected:not(.mdc-ripple-upgraded):active::after {\n  -webkit-transition-duration: 75ms;\n          transition-duration: 75ms;\n  opacity: 0.24; }\n\n.mdc-chip.mdc-chip--selected.mdc-ripple-upgraded {\n  --mdc-ripple-fg-opacity: $opacity; }\n\n.mdc-chip.mdc-chip--selected {\n  color: #6200ee; }\n  .mdc-chip.mdc-chip--selected:hover {\n    color: #6200ee; }\n\n.mdc-chip .mdc-chip__checkmark-path {\n  stroke: #6200ee; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n * $opacity-boost.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-value(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-dialog {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  position: fixed;\n  top: 0;\n  left: 0;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  width: 100%;\n  height: 100%;\n  visibility: hidden;\n  z-index: 5; }\n\n.mdc-dialog__backdrop {\n  background-color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  background-color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n  position: fixed;\n  top: 0;\n  left: 0;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  z-index: -1; }\n\n.mdc-dialog__surface {\n  -webkit-box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n  background-color: #fff;\n  /* @alternate */\n  background-color: var(--mdc-theme-background, #fff);\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  width: calc(100% - 30px);\n  min-width: 640px;\n  max-width: 865px;\n  -webkit-transform: translateY(150px) scale(0.8);\n          transform: translateY(150px) scale(0.8);\n  border-radius: 2px;\n  opacity: 0; }\n  .mdc-dialog[dir=\"rtl\"] .mdc-dialog__surface,\n  [dir=\"rtl\"] .mdc-dialog .mdc-dialog__surface {\n    text-align: right; }\n\n.mdc-dialog__header {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  padding: 24px 24px 0; }\n  .mdc-dialog[dir=\"rtl\"] .mdc-dialog__header,\n  [dir=\"rtl\"] .mdc-dialog .mdc-dialog__header {\n    text-align: right; }\n\n.mdc-dialog__header__empty {\n  padding: 0; }\n\n.mdc-dialog__header__title {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1.25rem;\n  line-height: 2rem;\n  font-weight: 500;\n  letter-spacing: 0.02em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1;\n  margin: 0; }\n\n.mdc-dialog__body {\n  color: rgba(0, 0, 0, 0.54);\n  /* @alternate */\n  color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54));\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  margin-top: 20px;\n  padding: 0 24px 24px; }\n\n.mdc-dialog__body--scrollable {\n  max-height: 195px;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  overflow-x: auto;\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch; }\n\n.mdc-dialog__footer {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: end;\n      -ms-flex-pack: end;\n          justify-content: flex-end;\n  padding: 8px; }\n\n.mdc-dialog__footer__button {\n  /* @noflip */\n  margin-left: 0;\n  /* @noflip */\n  margin-right: 8px; }\n  [dir=\"rtl\"] .mdc-dialog__footer__button, .mdc-dialog__footer__button[dir=\"rtl\"] {\n    /* @noflip */\n    margin-left: 8px;\n    /* @noflip */\n    margin-right: 0; }\n  .mdc-dialog__footer__button:last-child {\n    /* @noflip */\n    margin-left: 0;\n    /* @noflip */\n    margin-right: 0; }\n    [dir=\"rtl\"] .mdc-dialog__footer__button:last-child, .mdc-dialog__footer__button:last-child[dir=\"rtl\"] {\n      /* @noflip */\n      margin-left: 0;\n      /* @noflip */\n      margin-right: 0; }\n\n.mdc-dialog__action {\n  color: #018786;\n  /* @alternate */\n  color: var(--mdc-theme-secondary, #018786); }\n\n@media (max-width: 640px) {\n  .mdc-dialog {\n    min-width: 280px; }\n  .mdc-dialog__surface {\n    min-width: 280px; }\n  .mdc-dialog__body {\n    line-height: 24px; } }\n\n.mdc-dialog--animating {\n  visibility: visible; }\n  .mdc-dialog--animating .mdc-dialog__backdrop {\n    -webkit-transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-dialog--animating .mdc-dialog__surface {\n    -webkit-transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n\n.mdc-dialog--open {\n  visibility: visible; }\n  .mdc-dialog--open .mdc-dialog__backdrop {\n    opacity: .3; }\n  .mdc-dialog--open .mdc-dialog__surface {\n    -webkit-transform: translateY(0) scale(1);\n            transform: translateY(0) scale(1);\n    opacity: 1; }\n\n.mdc-dialog-scroll-lock {\n  overflow: hidden; }\n\n.mdc-dialog.mdc-dialog--open {\n  z-index: 5; }\n\n.mdc-dialog--open:not(.mdc-dialog--animating) .mdc-dialog__surface {\n  -webkit-transform: none !important;\n          transform: none !important; }\n\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n.mdc-drawer--persistent {\n  /* Use aspect ratio trick to maintain 16:9 aspect ratio on the header */\n  color: rgba(0, 0, 0, 0.87);\n  width: 0; }\n  .mdc-drawer--persistent .mdc-drawer__toolbar-spacer {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: relative;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n    -ms-flex-negative: 0;\n        flex-shrink: 0;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    height: 56px;\n    padding: 16px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n    /* TODO(sgomes): replace with global breakpoints when we have them */ }\n    @media (min-width: 600px) {\n      .mdc-drawer--persistent .mdc-drawer__toolbar-spacer {\n        height: 64px; } }\n  .mdc-drawer--persistent .mdc-drawer__header {\n    position: relative; }\n  .mdc-drawer--persistent .mdc-drawer__header::before {\n    display: block;\n    padding-top: 56.25%;\n    content: \"\"; }\n  .mdc-drawer--persistent .mdc-drawer__header-content {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    -webkit-box-align: end;\n        -ms-flex-align: end;\n            align-items: flex-end;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    padding: 16px; }\n  .mdc-drawer--persistent .mdc-list-item {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    line-height: 1.5rem;\n    font-weight: 500;\n    letter-spacing: 0.04em;\n    text-decoration: inherit;\n    text-transform: inherit;\n    position: relative;\n    outline: none;\n    color: inherit;\n    text-decoration: none; }\n  .mdc-drawer--persistent .mdc-list-item__graphic {\n    color: rgba(0, 0, 0, 0.54); }\n  .mdc-drawer--persistent.mdc-drawer--permanent,\n  .mdc-drawer--persistent .mdc-drawer__drawer {\n    background-color: #fff; }\n  .mdc-drawer--persistent .mdc-drawer__drawer {\n    /* @noflip */\n    border-left: 0;\n    /* @noflip */\n    border-right: 1px solid #e4e4e4;\n    /* @noflip */\n    left: 0;\n    /* @noflip */\n    right: initial;\n    height: 100%;\n    -webkit-transform: translateX(-107%);\n            transform: translateX(-107%);\n    -webkit-transform: translateX(calc(-100% - 20px));\n            transform: translateX(calc(-100% - 20px));\n    will-change: transform;\n    display: -webkit-inline-box;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    width: 240px;\n    overflow: hidden;\n    -ms-touch-action: none;\n        touch-action: none; }\n    [dir=\"rtl\"] .mdc-drawer--persistent .mdc-drawer__drawer, .mdc-drawer--persistent .mdc-drawer__drawer[dir=\"rtl\"] {\n      /* @noflip */\n      border-left: 1px solid #e4e4e4;\n      /* @noflip */\n      border-right: 0; }\n    [dir=\"rtl\"] .mdc-drawer--persistent .mdc-drawer__drawer, .mdc-drawer--persistent .mdc-drawer__drawer[dir=\"rtl\"] {\n      /* @noflip */\n      left: initial;\n      /* @noflip */\n      right: 0; }\n    [dir=\"rtl\"] .mdc-drawer--persistent .mdc-drawer__drawer, .mdc-drawer--persistent .mdc-drawer__drawer[dir=\"rtl\"] {\n      -webkit-transform: translateX(107%);\n              transform: translateX(107%);\n      -webkit-transform: translateX(calc(100% + 20px));\n              transform: translateX(calc(100% + 20px)); }\n  .mdc-drawer--persistent.mdc-drawer--animating .mdc-drawer__drawer {\n    -webkit-transition: -webkit-transform 0.195s 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: -webkit-transform 0.195s 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: transform 0.195s 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: transform 0.195s 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 0.195s 0ms cubic-bezier(0.4, 0, 0.6, 1); }\n  .mdc-drawer--persistent.mdc-drawer--animating.mdc-drawer--open .mdc-drawer__drawer {\n    -webkit-transition: -webkit-transform 0.225s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: -webkit-transform 0.225s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 0.225s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 0.225s 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0.225s 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-drawer--persistent.mdc-drawer--open {\n    width: 240px;\n    pointer-events: auto; }\n    .mdc-drawer--persistent.mdc-drawer--open .mdc-drawer__drawer {\n      -webkit-transform: none;\n              transform: none; }\n    [dir=\"rtl\"] .mdc-drawer--persistent.mdc-drawer--open .mdc-drawer__drawer, .mdc-drawer--persistent.mdc-drawer--open[dir=\"rtl\"] .mdc-drawer__drawer {\n      -webkit-transform: none;\n              transform: none; }\n\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-drawer--permanent {\n  /* Use aspect ratio trick to maintain 16:9 aspect ratio on the header */\n  color: rgba(0, 0, 0, 0.87);\n  /* @noflip */\n  border-left: 0;\n  /* @noflip */\n  border-right: 1px solid #e4e4e4;\n  /* @noflip */\n  left: 0;\n  /* @noflip */\n  right: initial;\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-flex: 0;\n      -ms-flex: 0 0 auto;\n          flex: 0 0 auto;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  width: 240px;\n  overflow: hidden; }\n  .mdc-drawer--permanent .mdc-drawer__toolbar-spacer {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: relative;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n    -ms-flex-negative: 0;\n        flex-shrink: 0;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    height: 56px;\n    padding: 16px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n    /* TODO(sgomes): replace with global breakpoints when we have them */ }\n    @media (min-width: 600px) {\n      .mdc-drawer--permanent .mdc-drawer__toolbar-spacer {\n        height: 64px; } }\n  .mdc-drawer--permanent .mdc-drawer__header {\n    position: relative; }\n  .mdc-drawer--permanent .mdc-drawer__header::before {\n    display: block;\n    padding-top: 56.25%;\n    content: \"\"; }\n  .mdc-drawer--permanent .mdc-drawer__header-content {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    -webkit-box-align: end;\n        -ms-flex-align: end;\n            align-items: flex-end;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    padding: 16px; }\n  .mdc-drawer--permanent .mdc-list-item {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    line-height: 1.5rem;\n    font-weight: 500;\n    letter-spacing: 0.04em;\n    text-decoration: inherit;\n    text-transform: inherit;\n    position: relative;\n    outline: none;\n    color: inherit;\n    text-decoration: none; }\n  .mdc-drawer--permanent .mdc-list-item__graphic {\n    color: rgba(0, 0, 0, 0.54); }\n  .mdc-drawer--permanent.mdc-drawer--permanent,\n  .mdc-drawer--permanent .mdc-drawer__drawer {\n    background-color: #fff; }\n  [dir=\"rtl\"] .mdc-drawer--permanent, .mdc-drawer--permanent[dir=\"rtl\"] {\n    /* @noflip */\n    border-left: 1px solid #e4e4e4;\n    /* @noflip */\n    border-right: 0; }\n  [dir=\"rtl\"] .mdc-drawer--permanent, .mdc-drawer--permanent[dir=\"rtl\"] {\n    /* @noflip */\n    left: initial;\n    /* @noflip */\n    right: 0; }\n  .mdc-drawer--permanent--floating {\n    /* @noflip */\n    border-left: 0;\n    /* @noflip */\n    border-right: none;\n    background: none; }\n    [dir=\"rtl\"] .mdc-drawer--permanent--floating, .mdc-drawer--permanent--floating[dir=\"rtl\"] {\n      /* @noflip */\n      border-left: none;\n      /* @noflip */\n      border-right: 0; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n * $opacity-boost.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-value(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n.mdc-drawer--temporary {\n  /* Use aspect ratio trick to maintain 16:9 aspect ratio on the header */\n  color: rgba(0, 0, 0, 0.87);\n  position: fixed;\n  top: 0;\n  left: 0;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  overflow: hidden;\n  contain: strict;\n  z-index: 5;\n  /* Shaded background */ }\n  .mdc-drawer--temporary .mdc-drawer__toolbar-spacer {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: relative;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n    -ms-flex-negative: 0;\n        flex-shrink: 0;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    height: 56px;\n    padding: 16px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n    /* TODO(sgomes): replace with global breakpoints when we have them */ }\n    @media (min-width: 600px) {\n      .mdc-drawer--temporary .mdc-drawer__toolbar-spacer {\n        height: 64px; } }\n  .mdc-drawer--temporary .mdc-drawer__header {\n    position: relative; }\n  .mdc-drawer--temporary .mdc-drawer__header::before {\n    display: block;\n    padding-top: 56.25%;\n    content: \"\"; }\n  .mdc-drawer--temporary .mdc-drawer__header-content {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    -webkit-box-align: end;\n        -ms-flex-align: end;\n            align-items: flex-end;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    padding: 16px; }\n  .mdc-drawer--temporary .mdc-list-item {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    line-height: 1.5rem;\n    font-weight: 500;\n    letter-spacing: 0.04em;\n    text-decoration: inherit;\n    text-transform: inherit;\n    position: relative;\n    outline: none;\n    color: inherit;\n    text-decoration: none; }\n  .mdc-drawer--temporary .mdc-list-item__graphic {\n    color: rgba(0, 0, 0, 0.54); }\n  .mdc-drawer--temporary.mdc-drawer--permanent,\n  .mdc-drawer--temporary .mdc-drawer__drawer {\n    background-color: #fff; }\n  .mdc-drawer--temporary::before {\n    background-color: rgba(0, 0, 0, 0.6); }\n  .mdc-drawer--temporary::before {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    opacity: var(--mdc-temporary-drawer-opacity, 0);\n    content: \"\";\n    will-change: opacity; }\n  .mdc-drawer--temporary .mdc-drawer__drawer {\n    -webkit-box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n            box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n    /* @noflip */\n    left: 0;\n    /* @noflip */\n    right: initial;\n    height: 100%;\n    -webkit-transform: translateX(-107%);\n            transform: translateX(-107%);\n    -webkit-transform: translateX(calc(-100% - 20px));\n            transform: translateX(calc(-100% - 20px));\n    will-change: transform;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: absolute;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    width: calc(100% - 56px);\n    max-width: 280px;\n    overflow: hidden;\n    -ms-touch-action: none;\n        touch-action: none;\n    /* TODO(sgomes): replace with global breakpoints when we have them */ }\n    [dir=\"rtl\"] .mdc-drawer--temporary .mdc-drawer__drawer, .mdc-drawer--temporary .mdc-drawer__drawer[dir=\"rtl\"] {\n      /* @noflip */\n      left: initial;\n      /* @noflip */\n      right: 0; }\n    [dir=\"rtl\"] .mdc-drawer--temporary .mdc-drawer__drawer, .mdc-drawer--temporary .mdc-drawer__drawer[dir=\"rtl\"] {\n      -webkit-transform: translateX(107%);\n              transform: translateX(107%);\n      -webkit-transform: translateX(calc(100% + 20px));\n              transform: translateX(calc(100% + 20px)); }\n    @media (min-width: 600px) {\n      .mdc-drawer--temporary .mdc-drawer__drawer {\n        width: calc(100% - 64px);\n        max-width: 320px; } }\n  .mdc-drawer--temporary .mdc-drawer__content {\n    -webkit-box-flex: 1;\n        -ms-flex-positive: 1;\n            flex-grow: 1;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    margin: 0;\n    overflow-x: hidden;\n    overflow-y: auto;\n    -webkit-overflow-scrolling: touch;\n    -ms-touch-action: pan-y;\n        touch-action: pan-y; }\n  .mdc-drawer--temporary .mdc-drawer__footer {\n    -webkit-box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n            box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    -ms-flex-negative: 0;\n        flex-shrink: 0; }\n  .mdc-drawer--temporary.mdc-drawer--animating::before {\n    -webkit-transition: opacity 0.3s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 0.3s 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-drawer--temporary.mdc-drawer--animating.mdc-drawer--open .mdc-drawer__drawer {\n    -webkit-transition: -webkit-transform 0.225s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: -webkit-transform 0.225s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 0.225s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 0.225s 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0.225s 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-drawer--temporary.mdc-drawer--animating .mdc-drawer__drawer {\n    -webkit-transition: -webkit-transform 0.195s 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: -webkit-transform 0.195s 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: transform 0.195s 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: transform 0.195s 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 0.195s 0ms cubic-bezier(0.4, 0, 0.6, 1); }\n  .mdc-drawer--temporary.mdc-drawer--open {\n    pointer-events: auto; }\n    .mdc-drawer--temporary.mdc-drawer--open::before {\n      opacity: 1;\n      opacity: var(--mdc-temporary-drawer-opacity, 1); }\n    .mdc-drawer--temporary.mdc-drawer--open .mdc-drawer__drawer {\n      -webkit-transform: none;\n              transform: none; }\n    [dir=\"rtl\"] .mdc-drawer--temporary.mdc-drawer--open .mdc-drawer__drawer, .mdc-drawer--temporary.mdc-drawer--open[dir=\"rtl\"] .mdc-drawer__drawer {\n      -webkit-transform: none;\n              transform: none; }\n\n.mdc-drawer-scroll-lock {\n  overflow: hidden; }\n\n.mdc-drawer-layout {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row; }\n  .mdc-drawer-layout .mdc-drawer {\n    -webkit-box-ordinal-group: 0;\n        -ms-flex-order: -1;\n            order: -1; }\n\n.mdc-drawer-item {\n  cursor: pointer; }\n\n.mdc-drawer.mdc-temporary-drawer .mdc-drawer-list {\n  overflow-y: auto; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n * $opacity-boost.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-value(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n.mdc-elevation--z0 {\n  -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z1 {\n  -webkit-box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z2 {\n  -webkit-box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z3 {\n  -webkit-box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z4 {\n  -webkit-box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z5 {\n  -webkit-box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z6 {\n  -webkit-box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z7 {\n  -webkit-box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z8 {\n  -webkit-box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z9 {\n  -webkit-box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z10 {\n  -webkit-box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z11 {\n  -webkit-box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z12 {\n  -webkit-box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z13 {\n  -webkit-box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z14 {\n  -webkit-box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z15 {\n  -webkit-box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z16 {\n  -webkit-box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z17 {\n  -webkit-box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z18 {\n  -webkit-box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z19 {\n  -webkit-box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z20 {\n  -webkit-box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z21 {\n  -webkit-box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z22 {\n  -webkit-box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z23 {\n  -webkit-box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z24 {\n  -webkit-box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation-transition {\n  -webkit-transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  will-change: box-shadow; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n * $opacity-boost.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-value(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n.mdc-fab {\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: transparent;\n  will-change: transform, opacity;\n  -webkit-box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  position: relative;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  width: 56px;\n  height: 56px;\n  padding: 0;\n  -webkit-transition: opacity 15ms linear 30ms, -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 15ms linear 30ms, -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), opacity 15ms linear 30ms, transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), opacity 15ms linear 30ms, transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  border: none;\n  border-radius: 50%;\n  fill: currentColor;\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  overflow: hidden;\n  background-color: #018786;\n  color: white;\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-secondary, white); }\n  .mdc-fab::before, .mdc-fab::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-fab::before {\n    -webkit-transition: opacity 15ms linear;\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-fab.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-fab.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-fab.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-fab.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-fab.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-fab::before, .mdc-fab::after {\n    top: calc(50% - 100%);\n    /* @noflip */\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%; }\n  .mdc-fab.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-fab::-moz-focus-inner {\n    padding: 0;\n    border: 0; }\n  .mdc-fab:hover, .mdc-fab:focus {\n    -webkit-box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n            box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\n  .mdc-fab:active {\n    -webkit-box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n            box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\n  .mdc-fab:active, .mdc-fab:focus {\n    outline: none; }\n  .mdc-fab:hover {\n    cursor: pointer; }\n  .mdc-fab > svg {\n    width: 100%; }\n  @supports not (-ms-ime-align: auto) {\n    .mdc-fab {\n      /* @alternate */\n      background-color: var(--mdc-theme-secondary, #018786); } }\n  .mdc-fab::before, .mdc-fab::after {\n    background-color: white; }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-fab::before, .mdc-fab::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-text-primary-on-secondary, white); } }\n  .mdc-fab:hover::before {\n    opacity: 0.08; }\n  .mdc-fab:not(.mdc-ripple-upgraded):focus::before, .mdc-fab.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.24; }\n  .mdc-fab:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  .mdc-fab:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.32; }\n  .mdc-fab.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n\n.mdc-fab--mini {\n  width: 40px;\n  height: 40px; }\n\n.mdc-fab__icon {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  width: 100%;\n  -webkit-transition: -webkit-transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);\n  transition: -webkit-transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);\n  will-change: transform; }\n\n.mdc-fab--exited {\n  -webkit-transform: scale(0);\n          transform: scale(0);\n  -webkit-transition: opacity 15ms linear 150ms, -webkit-transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1);\n  transition: opacity 15ms linear 150ms, -webkit-transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1);\n  transition: opacity 15ms linear 150ms, transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1);\n  transition: opacity 15ms linear 150ms, transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1);\n  opacity: 0; }\n  .mdc-fab--exited .mdc-fab__icon {\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transition: -webkit-transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: -webkit-transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1); }\n\na.mdc-fab,\na:link.mdc-fab,\na:visited.mdc-fab,\na:hover.mdc-fab,\na:active.mdc-fab {\n  text-decoration: inherit;\n  font-weight: inherit; }\n\n.mdc-fab--absolute {\n  position: absolute;\n  bottom: 1rem;\n  right: 1rem; }\n\n.mdc-fab--fixed {\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n  z-index: 4; }\n\n@media (min-width: 1024px) {\n  .mdc-fab--absolute {\n    bottom: 3rem;\n    right: 5rem; }\n  .mdc-fab--fixed {\n    bottom: 3rem;\n    right: 5rem; } }\n\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 1); }\n\n.mdc-grid-tile {\n  margin: 2px 0;\n  padding: 0 2px; }\n\n.mdc-grid-tile__secondary {\n  left: 2px;\n  width: calc(100% - 4px); }\n\n.mdc-grid-list__tiles {\n  margin: 2px auto; }\n\n.mdc-grid-list__tiles {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-flow: row wrap;\n          flex-flow: row wrap;\n  padding: 0; }\n\n.mdc-grid-list--tile-gutter-1 .mdc-grid-tile {\n  margin: 0.5px 0;\n  padding: 0 0.5px; }\n\n.mdc-grid-list--tile-gutter-1 .mdc-grid-tile__secondary {\n  left: 0.5px;\n  width: calc(100% - 1px); }\n\n.mdc-grid-list--tile-gutter-1 .mdc-grid-list__tiles {\n  margin: 0.5px auto; }\n\n.mdc-grid-list--tile-aspect-16x9 .mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 1.77778); }\n\n.mdc-grid-list--tile-aspect-3x2 .mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 1.5); }\n\n.mdc-grid-list--tile-aspect-2x3 .mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 0.66667); }\n\n.mdc-grid-list--tile-aspect-4x3 .mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 1.33333); }\n\n.mdc-grid-list--tile-aspect-3x4 .mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 0.75); }\n\n.mdc-grid-tile {\n  display: block;\n  position: relative;\n  /* @alternate */\n  width: 200px;\n  width: var(--mdc-grid-list-tile-width, 200px); }\n\n.mdc-grid-tile__primary {\n  background-color: #fff;\n  /* @alternate */\n  background-color: var(--mdc-theme-background, #fff);\n  color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n  position: relative;\n  height: 0; }\n\n.mdc-grid-tile__primary-content {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover; }\n\n.mdc-grid-tile__secondary {\n  background-color: #6200ee;\n  /* @alternate */\n  background-color: var(--mdc-theme-primary, #6200ee);\n  color: white;\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-primary, white);\n  position: absolute;\n  bottom: 0;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  height: 48px;\n  padding: 16px; }\n\n.mdc-grid-tile__title {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  display: block;\n  margin: 0;\n  padding: 0;\n  font-size: 1rem;\n  font-weight: 500;\n  line-height: 1rem; }\n\n.mdc-grid-tile__support-text {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  display: block;\n  margin: 0;\n  margin-top: 4px;\n  padding: 0; }\n\n.mdc-grid-tile__icon {\n  position: absolute;\n  top: calc(50% - 24px / 2);\n  font-size: 0; }\n\n.mdc-grid-list--twoline-caption .mdc-grid-tile__secondary {\n  height: 68px; }\n\n.mdc-grid-list--header-caption .mdc-grid-tile__secondary {\n  top: 0;\n  bottom: auto; }\n\n.mdc-grid-list--with-icon-align-start .mdc-grid-tile__secondary {\n  /* @noflip */\n  padding-left: 56px;\n  /* @noflip */\n  padding-right: 8px; }\n  .mdc-grid-list[dir=\"rtl\"] .mdc-grid-list--with-icon-align-start .mdc-grid-tile__secondary,\n  [dir=\"rtl\"] .mdc-grid-list .mdc-grid-list--with-icon-align-start .mdc-grid-tile__secondary {\n    /* @noflip */\n    padding-left: 8px;\n    /* @noflip */\n    padding-right: 56px; }\n\n.mdc-grid-list--with-icon-align-start .mdc-grid-tile__icon {\n  /* @noflip */\n  left: 16px;\n  /* @noflip */\n  right: initial;\n  font-size: 24px; }\n  .mdc-grid-list[dir=\"rtl\"] .mdc-grid-list--with-icon-align-start .mdc-grid-tile__icon,\n  [dir=\"rtl\"] .mdc-grid-list .mdc-grid-list--with-icon-align-start .mdc-grid-tile__icon {\n    /* @noflip */\n    left: initial;\n    /* @noflip */\n    right: 16px; }\n\n.mdc-grid-list--with-icon-align-end .mdc-grid-tile__secondary {\n  /* @noflip */\n  padding-left: 16px;\n  /* @noflip */\n  padding-right: 56px; }\n  .mdc-grid-list[dir=\"rtl\"] .mdc-grid-list--with-icon-align-end .mdc-grid-tile__secondary,\n  [dir=\"rtl\"] .mdc-grid-list .mdc-grid-list--with-icon-align-end .mdc-grid-tile__secondary {\n    /* @noflip */\n    padding-left: 56px;\n    /* @noflip */\n    padding-right: 16px; }\n\n.mdc-grid-list--with-icon-align-end .mdc-grid-tile__icon {\n  /* @noflip */\n  left: initial;\n  /* @noflip */\n  right: 16px;\n  font-size: 24px; }\n  .mdc-grid-list[dir=\"rtl\"] .mdc-grid-list--with-icon-align-end .mdc-grid-tile__icon,\n  [dir=\"rtl\"] .mdc-grid-list .mdc-grid-list--with-icon-align-end .mdc-grid-tile__icon {\n    /* @noflip */\n    left: 16px;\n    /* @noflip */\n    right: initial; }\n\n.mdc-grid-tile--selected,\n.mdc-grid-tile--activated {\n  color: #6200ee;\n  /* @alternate */\n  color: var(--mdc-theme-primary, #6200ee); }\n  .mdc-grid-tile--selected .mdc-grid-tile__primary-content,\n  .mdc-grid-tile--activated .mdc-grid-tile__primary-content {\n    color: #6200ee;\n    /* @alternate */\n    color: var(--mdc-theme-primary, #6200ee); }\n\n.mdc-grid-tile {\n  overflow: hidden; }\n\n:not(.mdc-grid-list--non-interactive) > .mdc-grid-tile {\n  cursor: pointer;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: transparent;\n  will-change: transform, opacity; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile::before, :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile::before {\n    -webkit-transition: opacity 15ms linear;\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile::before, :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile::after {\n    top: calc(50% - 100%);\n    /* @noflip */\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile::before, :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile::after {\n    background-color: black; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile:hover::before {\n    opacity: 0.04; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile:not(.mdc-ripple-upgraded):focus::before, :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.12; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.16; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--activated::before {\n    opacity: 0.12; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--activated::before, :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--activated::after {\n    background-color: #6200ee; }\n    @supports not (-ms-ime-align: auto) {\n      :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--activated::before, :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--activated::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-primary, #6200ee); } }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--activated:hover::before {\n    opacity: 0.16; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--activated:not(.mdc-ripple-upgraded):focus::before, :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--activated.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.24; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--activated:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--activated:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.28; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--activated.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--selected::before {\n    opacity: 0.08; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--selected::before, :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--selected::after {\n    background-color: #6200ee; }\n    @supports not (-ms-ime-align: auto) {\n      :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--selected::before, :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--selected::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-primary, #6200ee); } }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--selected:hover::before {\n    opacity: 0.12; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--selected:not(.mdc-ripple-upgraded):focus::before, :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--selected.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.2; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--selected:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--selected:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.24; }\n  :not(.mdc-grid-list--non-interactive) > .mdc-grid-tile--selected.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n\n.mdc-icon.mdc-icon--material {\n  font-weight: normal;\n  font-style: normal;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: normal;\n  text-transform: none;\n  display: inline-block;\n  white-space: nowrap;\n  word-wrap: normal;\n  direction: ltr;\n  -webkit-font-feature-settings: 'liga';\n  -webkit-font-smoothing: antialiased; }\n\n/** postcss-bem-linter: define icon-toggle */\n.mdc-icon-toggle {\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: transparent;\n  will-change: transform, opacity;\n  color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  position: relative;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  width: 48px;\n  height: 48px;\n  padding: 12px;\n  outline: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  will-change: initial; }\n  .mdc-icon-toggle::before, .mdc-icon-toggle::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-icon-toggle::before {\n    -webkit-transition: opacity 15ms linear;\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-icon-toggle.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-icon-toggle.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-icon-toggle.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-icon-toggle.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-icon-toggle.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-icon-toggle::before, .mdc-icon-toggle::after {\n    top: calc(50% - 50%);\n    /* @noflip */\n    left: calc(50% - 50%);\n    width: 100%;\n    height: 100%; }\n  .mdc-icon-toggle.mdc-ripple-upgraded::before, .mdc-icon-toggle.mdc-ripple-upgraded::after {\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    /* @noflip */\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-icon-toggle.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-icon-toggle::before, .mdc-icon-toggle::after {\n    background-color: black; }\n  .mdc-icon-toggle:hover::before {\n    opacity: 0.04; }\n  .mdc-icon-toggle:not(.mdc-ripple-upgraded):focus::before, .mdc-icon-toggle.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-icon-toggle:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  .mdc-icon-toggle:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-icon-toggle.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n  .mdc-icon-toggle::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n\n.mdc-icon-toggle--disabled {\n  color: rgba(0, 0, 0, 0.38);\n  /* @alternate */\n  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));\n  pointer-events: none; }\n\n/** postcss-bem-linter: end */\n.mdc-icon-toggle.mdc-icon-toggle--accent {\n  color: #018786;\n  /* @alternate */\n  color: var(--mdc-theme-secondary, #018786); }\n  .mdc-icon-toggle.mdc-icon-toggle--accent::before, .mdc-icon-toggle.mdc-icon-toggle--accent::after {\n    background-color: #018786; }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-icon-toggle.mdc-icon-toggle--accent::before, .mdc-icon-toggle.mdc-icon-toggle--accent::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-secondary, #018786); } }\n  .mdc-icon-toggle.mdc-icon-toggle--accent:hover::before {\n    opacity: 0.04; }\n  .mdc-icon-toggle.mdc-icon-toggle--accent:not(.mdc-ripple-upgraded):focus::before, .mdc-icon-toggle.mdc-icon-toggle--accent.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-icon-toggle.mdc-icon-toggle--accent:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  .mdc-icon-toggle.mdc-icon-toggle--accent:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-icon-toggle.mdc-icon-toggle--accent.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n\n.mdc-layout-app {\n  min-height: 100vh;\n  width: 100%;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-flow: column;\n          flex-flow: column;\n  -ms-flex-line-pack: start;\n      align-content: flex-start;\n  -webkit-box-align: stretch;\n      -ms-flex-align: stretch;\n          align-items: stretch; }\n  .mdc-layout-app .mdc-layout-app--toolbar-wrapper {\n    width: 100%;\n    -ms-flex-item-align: start;\n        align-self: flex-start;\n    -webkit-box-ordinal-group: 0;\n        -ms-flex-order: -1;\n            order: -1; }\n  .mdc-layout-app .mdc-layout-app--main-container {\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-flow: row;\n            flex-flow: row;\n    -ms-flex-line-pack: stretch;\n        align-content: stretch;\n    -webkit-box-align: stretch;\n        -ms-flex-align: stretch;\n            align-items: stretch; }\n  .mdc-layout-app .mdc-layout-app--drawer-wrapper {\n    -webkit-box-ordinal-group: 0;\n        -ms-flex-order: -1;\n            order: -1;\n    -webkit-box-flex: 0;\n        -ms-flex: 0 1 auto;\n            flex: 0 1 auto; }\n    .mdc-layout-app .mdc-layout-app--drawer-wrapper .mdc-drawer {\n      height: 100%; }\n  .mdc-layout-app .mdc-layout-app--content-wrapper {\n    -webkit-box-flex: 1;\n        -ms-flex: 1 1 auto;\n            flex: 1 1 auto; }\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  /* IE10+ CSS workarround */\n  .mdc-layout-app {\n    display: block;\n    height: 100%; } }\n\n:root {\n  --mdc-layout-grid-margin-desktop: 24px;\n  --mdc-layout-grid-gutter-desktop: 24px;\n  --mdc-layout-grid-column-width-desktop: 72px;\n  --mdc-layout-grid-margin-tablet: 16px;\n  --mdc-layout-grid-gutter-tablet: 16px;\n  --mdc-layout-grid-column-width-tablet: 72px;\n  --mdc-layout-grid-margin-phone: 16px;\n  --mdc-layout-grid-gutter-phone: 16px;\n  --mdc-layout-grid-column-width-phone: 72px; }\n\n@media (min-width: 840px) {\n  .mdc-layout-grid {\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    margin: 0 auto;\n    padding: 24px;\n    padding: var(--mdc-layout-grid-margin-desktop, 24px); } }\n\n@media (min-width: 480px) and (max-width: 839px) {\n  .mdc-layout-grid {\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    margin: 0 auto;\n    padding: 16px;\n    padding: var(--mdc-layout-grid-margin-tablet, 16px); } }\n\n@media (max-width: 479px) {\n  .mdc-layout-grid {\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    margin: 0 auto;\n    padding: 16px;\n    padding: var(--mdc-layout-grid-margin-phone, 16px); } }\n\n@media (min-width: 840px) {\n  .mdc-layout-grid__inner {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-flow: row wrap;\n            flex-flow: row wrap;\n    -webkit-box-align: stretch;\n        -ms-flex-align: stretch;\n            align-items: stretch;\n    margin: -12px;\n    margin: calc(var(--mdc-layout-grid-gutter-desktop, 24px) / 2 * -1); }\n    @supports (display: grid) {\n      .mdc-layout-grid__inner {\n        display: grid;\n        margin: 0;\n        grid-gap: 24px;\n        grid-gap: var(--mdc-layout-grid-gutter-desktop, 24px);\n        grid-template-columns: repeat(12, minmax(0, 1fr)); } } }\n\n@media (min-width: 480px) and (max-width: 839px) {\n  .mdc-layout-grid__inner {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-flow: row wrap;\n            flex-flow: row wrap;\n    -webkit-box-align: stretch;\n        -ms-flex-align: stretch;\n            align-items: stretch;\n    margin: -8px;\n    margin: calc(var(--mdc-layout-grid-gutter-tablet, 16px) / 2 * -1); }\n    @supports (display: grid) {\n      .mdc-layout-grid__inner {\n        display: grid;\n        margin: 0;\n        grid-gap: 16px;\n        grid-gap: var(--mdc-layout-grid-gutter-tablet, 16px);\n        grid-template-columns: repeat(8, minmax(0, 1fr)); } } }\n\n@media (max-width: 479px) {\n  .mdc-layout-grid__inner {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-flow: row wrap;\n            flex-flow: row wrap;\n    -webkit-box-align: stretch;\n        -ms-flex-align: stretch;\n            align-items: stretch;\n    margin: -8px;\n    margin: calc(var(--mdc-layout-grid-gutter-phone, 16px) / 2 * -1); }\n    @supports (display: grid) {\n      .mdc-layout-grid__inner {\n        display: grid;\n        margin: 0;\n        grid-gap: 16px;\n        grid-gap: var(--mdc-layout-grid-gutter-phone, 16px);\n        grid-template-columns: repeat(4, minmax(0, 1fr)); } } }\n\n@media (min-width: 840px) {\n  .mdc-layout-grid__cell {\n    width: calc(33.33333% - 24px);\n    width: calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px));\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    margin: 12px;\n    margin: calc(var(--mdc-layout-grid-gutter-desktop, 24px) / 2); }\n    @supports (display: grid) {\n      .mdc-layout-grid__cell {\n        width: auto;\n        grid-column-end: span 4; } }\n    @supports (display: grid) {\n      .mdc-layout-grid__cell {\n        margin: 0; } }\n    .mdc-layout-grid__cell--span-1,\n    .mdc-layout-grid__cell--span-1-desktop {\n      width: calc(8.33333% - 24px);\n      width: calc(8.33333% - var(--mdc-layout-grid-gutter-desktop, 24px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-1,\n        .mdc-layout-grid__cell--span-1-desktop {\n          width: auto;\n          grid-column-end: span 1; } }\n    .mdc-layout-grid__cell--span-2,\n    .mdc-layout-grid__cell--span-2-desktop {\n      width: calc(16.66667% - 24px);\n      width: calc(16.66667% - var(--mdc-layout-grid-gutter-desktop, 24px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-2,\n        .mdc-layout-grid__cell--span-2-desktop {\n          width: auto;\n          grid-column-end: span 2; } }\n    .mdc-layout-grid__cell--span-3,\n    .mdc-layout-grid__cell--span-3-desktop {\n      width: calc(25% - 24px);\n      width: calc(25% - var(--mdc-layout-grid-gutter-desktop, 24px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-3,\n        .mdc-layout-grid__cell--span-3-desktop {\n          width: auto;\n          grid-column-end: span 3; } }\n    .mdc-layout-grid__cell--span-4,\n    .mdc-layout-grid__cell--span-4-desktop {\n      width: calc(33.33333% - 24px);\n      width: calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-4,\n        .mdc-layout-grid__cell--span-4-desktop {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-5,\n    .mdc-layout-grid__cell--span-5-desktop {\n      width: calc(41.66667% - 24px);\n      width: calc(41.66667% - var(--mdc-layout-grid-gutter-desktop, 24px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-5,\n        .mdc-layout-grid__cell--span-5-desktop {\n          width: auto;\n          grid-column-end: span 5; } }\n    .mdc-layout-grid__cell--span-6,\n    .mdc-layout-grid__cell--span-6-desktop {\n      width: calc(50% - 24px);\n      width: calc(50% - var(--mdc-layout-grid-gutter-desktop, 24px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-6,\n        .mdc-layout-grid__cell--span-6-desktop {\n          width: auto;\n          grid-column-end: span 6; } }\n    .mdc-layout-grid__cell--span-7,\n    .mdc-layout-grid__cell--span-7-desktop {\n      width: calc(58.33333% - 24px);\n      width: calc(58.33333% - var(--mdc-layout-grid-gutter-desktop, 24px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-7,\n        .mdc-layout-grid__cell--span-7-desktop {\n          width: auto;\n          grid-column-end: span 7; } }\n    .mdc-layout-grid__cell--span-8,\n    .mdc-layout-grid__cell--span-8-desktop {\n      width: calc(66.66667% - 24px);\n      width: calc(66.66667% - var(--mdc-layout-grid-gutter-desktop, 24px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-8,\n        .mdc-layout-grid__cell--span-8-desktop {\n          width: auto;\n          grid-column-end: span 8; } }\n    .mdc-layout-grid__cell--span-9,\n    .mdc-layout-grid__cell--span-9-desktop {\n      width: calc(75% - 24px);\n      width: calc(75% - var(--mdc-layout-grid-gutter-desktop, 24px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-9,\n        .mdc-layout-grid__cell--span-9-desktop {\n          width: auto;\n          grid-column-end: span 9; } }\n    .mdc-layout-grid__cell--span-10,\n    .mdc-layout-grid__cell--span-10-desktop {\n      width: calc(83.33333% - 24px);\n      width: calc(83.33333% - var(--mdc-layout-grid-gutter-desktop, 24px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-10,\n        .mdc-layout-grid__cell--span-10-desktop {\n          width: auto;\n          grid-column-end: span 10; } }\n    .mdc-layout-grid__cell--span-11,\n    .mdc-layout-grid__cell--span-11-desktop {\n      width: calc(91.66667% - 24px);\n      width: calc(91.66667% - var(--mdc-layout-grid-gutter-desktop, 24px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-11,\n        .mdc-layout-grid__cell--span-11-desktop {\n          width: auto;\n          grid-column-end: span 11; } }\n    .mdc-layout-grid__cell--span-12,\n    .mdc-layout-grid__cell--span-12-desktop {\n      width: calc(100% - 24px);\n      width: calc(100% - var(--mdc-layout-grid-gutter-desktop, 24px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-12,\n        .mdc-layout-grid__cell--span-12-desktop {\n          width: auto;\n          grid-column-end: span 12; } } }\n\n@media (min-width: 480px) and (max-width: 839px) {\n  .mdc-layout-grid__cell {\n    width: calc(50% - 16px);\n    width: calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px));\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    margin: 8px;\n    margin: calc(var(--mdc-layout-grid-gutter-tablet, 16px) / 2); }\n    @supports (display: grid) {\n      .mdc-layout-grid__cell {\n        width: auto;\n        grid-column-end: span 4; } }\n    @supports (display: grid) {\n      .mdc-layout-grid__cell {\n        margin: 0; } }\n    .mdc-layout-grid__cell--span-1,\n    .mdc-layout-grid__cell--span-1-tablet {\n      width: calc(12.5% - 16px);\n      width: calc(12.5% - var(--mdc-layout-grid-gutter-tablet, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-1,\n        .mdc-layout-grid__cell--span-1-tablet {\n          width: auto;\n          grid-column-end: span 1; } }\n    .mdc-layout-grid__cell--span-2,\n    .mdc-layout-grid__cell--span-2-tablet {\n      width: calc(25% - 16px);\n      width: calc(25% - var(--mdc-layout-grid-gutter-tablet, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-2,\n        .mdc-layout-grid__cell--span-2-tablet {\n          width: auto;\n          grid-column-end: span 2; } }\n    .mdc-layout-grid__cell--span-3,\n    .mdc-layout-grid__cell--span-3-tablet {\n      width: calc(37.5% - 16px);\n      width: calc(37.5% - var(--mdc-layout-grid-gutter-tablet, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-3,\n        .mdc-layout-grid__cell--span-3-tablet {\n          width: auto;\n          grid-column-end: span 3; } }\n    .mdc-layout-grid__cell--span-4,\n    .mdc-layout-grid__cell--span-4-tablet {\n      width: calc(50% - 16px);\n      width: calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-4,\n        .mdc-layout-grid__cell--span-4-tablet {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-5,\n    .mdc-layout-grid__cell--span-5-tablet {\n      width: calc(62.5% - 16px);\n      width: calc(62.5% - var(--mdc-layout-grid-gutter-tablet, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-5,\n        .mdc-layout-grid__cell--span-5-tablet {\n          width: auto;\n          grid-column-end: span 5; } }\n    .mdc-layout-grid__cell--span-6,\n    .mdc-layout-grid__cell--span-6-tablet {\n      width: calc(75% - 16px);\n      width: calc(75% - var(--mdc-layout-grid-gutter-tablet, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-6,\n        .mdc-layout-grid__cell--span-6-tablet {\n          width: auto;\n          grid-column-end: span 6; } }\n    .mdc-layout-grid__cell--span-7,\n    .mdc-layout-grid__cell--span-7-tablet {\n      width: calc(87.5% - 16px);\n      width: calc(87.5% - var(--mdc-layout-grid-gutter-tablet, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-7,\n        .mdc-layout-grid__cell--span-7-tablet {\n          width: auto;\n          grid-column-end: span 7; } }\n    .mdc-layout-grid__cell--span-8,\n    .mdc-layout-grid__cell--span-8-tablet {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-8,\n        .mdc-layout-grid__cell--span-8-tablet {\n          width: auto;\n          grid-column-end: span 8; } }\n    .mdc-layout-grid__cell--span-9,\n    .mdc-layout-grid__cell--span-9-tablet {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-9,\n        .mdc-layout-grid__cell--span-9-tablet {\n          width: auto;\n          grid-column-end: span 8; } }\n    .mdc-layout-grid__cell--span-10,\n    .mdc-layout-grid__cell--span-10-tablet {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-10,\n        .mdc-layout-grid__cell--span-10-tablet {\n          width: auto;\n          grid-column-end: span 8; } }\n    .mdc-layout-grid__cell--span-11,\n    .mdc-layout-grid__cell--span-11-tablet {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-11,\n        .mdc-layout-grid__cell--span-11-tablet {\n          width: auto;\n          grid-column-end: span 8; } }\n    .mdc-layout-grid__cell--span-12,\n    .mdc-layout-grid__cell--span-12-tablet {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-12,\n        .mdc-layout-grid__cell--span-12-tablet {\n          width: auto;\n          grid-column-end: span 8; } } }\n\n@media (max-width: 479px) {\n  .mdc-layout-grid__cell {\n    width: calc(100% - 16px);\n    width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px));\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    margin: 8px;\n    margin: calc(var(--mdc-layout-grid-gutter-phone, 16px) / 2); }\n    @supports (display: grid) {\n      .mdc-layout-grid__cell {\n        width: auto;\n        grid-column-end: span 4; } }\n    @supports (display: grid) {\n      .mdc-layout-grid__cell {\n        margin: 0; } }\n    .mdc-layout-grid__cell--span-1,\n    .mdc-layout-grid__cell--span-1-phone {\n      width: calc(25% - 16px);\n      width: calc(25% - var(--mdc-layout-grid-gutter-phone, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-1,\n        .mdc-layout-grid__cell--span-1-phone {\n          width: auto;\n          grid-column-end: span 1; } }\n    .mdc-layout-grid__cell--span-2,\n    .mdc-layout-grid__cell--span-2-phone {\n      width: calc(50% - 16px);\n      width: calc(50% - var(--mdc-layout-grid-gutter-phone, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-2,\n        .mdc-layout-grid__cell--span-2-phone {\n          width: auto;\n          grid-column-end: span 2; } }\n    .mdc-layout-grid__cell--span-3,\n    .mdc-layout-grid__cell--span-3-phone {\n      width: calc(75% - 16px);\n      width: calc(75% - var(--mdc-layout-grid-gutter-phone, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-3,\n        .mdc-layout-grid__cell--span-3-phone {\n          width: auto;\n          grid-column-end: span 3; } }\n    .mdc-layout-grid__cell--span-4,\n    .mdc-layout-grid__cell--span-4-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-4,\n        .mdc-layout-grid__cell--span-4-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-5,\n    .mdc-layout-grid__cell--span-5-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-5,\n        .mdc-layout-grid__cell--span-5-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-6,\n    .mdc-layout-grid__cell--span-6-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-6,\n        .mdc-layout-grid__cell--span-6-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-7,\n    .mdc-layout-grid__cell--span-7-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-7,\n        .mdc-layout-grid__cell--span-7-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-8,\n    .mdc-layout-grid__cell--span-8-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-8,\n        .mdc-layout-grid__cell--span-8-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-9,\n    .mdc-layout-grid__cell--span-9-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-9,\n        .mdc-layout-grid__cell--span-9-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-10,\n    .mdc-layout-grid__cell--span-10-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-10,\n        .mdc-layout-grid__cell--span-10-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-11,\n    .mdc-layout-grid__cell--span-11-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-11,\n        .mdc-layout-grid__cell--span-11-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-12,\n    .mdc-layout-grid__cell--span-12-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-12,\n        .mdc-layout-grid__cell--span-12-phone {\n          width: auto;\n          grid-column-end: span 4; } } }\n\n.mdc-layout-grid__cell--order-1 {\n  -webkit-box-ordinal-group: 2;\n      -ms-flex-order: 1;\n          order: 1; }\n\n.mdc-layout-grid__cell--order-2 {\n  -webkit-box-ordinal-group: 3;\n      -ms-flex-order: 2;\n          order: 2; }\n\n.mdc-layout-grid__cell--order-3 {\n  -webkit-box-ordinal-group: 4;\n      -ms-flex-order: 3;\n          order: 3; }\n\n.mdc-layout-grid__cell--order-4 {\n  -webkit-box-ordinal-group: 5;\n      -ms-flex-order: 4;\n          order: 4; }\n\n.mdc-layout-grid__cell--order-5 {\n  -webkit-box-ordinal-group: 6;\n      -ms-flex-order: 5;\n          order: 5; }\n\n.mdc-layout-grid__cell--order-6 {\n  -webkit-box-ordinal-group: 7;\n      -ms-flex-order: 6;\n          order: 6; }\n\n.mdc-layout-grid__cell--order-7 {\n  -webkit-box-ordinal-group: 8;\n      -ms-flex-order: 7;\n          order: 7; }\n\n.mdc-layout-grid__cell--order-8 {\n  -webkit-box-ordinal-group: 9;\n      -ms-flex-order: 8;\n          order: 8; }\n\n.mdc-layout-grid__cell--order-9 {\n  -webkit-box-ordinal-group: 10;\n      -ms-flex-order: 9;\n          order: 9; }\n\n.mdc-layout-grid__cell--order-10 {\n  -webkit-box-ordinal-group: 11;\n      -ms-flex-order: 10;\n          order: 10; }\n\n.mdc-layout-grid__cell--order-11 {\n  -webkit-box-ordinal-group: 12;\n      -ms-flex-order: 11;\n          order: 11; }\n\n.mdc-layout-grid__cell--order-12 {\n  -webkit-box-ordinal-group: 13;\n      -ms-flex-order: 12;\n          order: 12; }\n\n.mdc-layout-grid__cell--align-top {\n  -ms-flex-item-align: start;\n      align-self: flex-start; }\n  @supports (display: grid) {\n    .mdc-layout-grid__cell--align-top {\n      -ms-flex-item-align: start;\n          align-self: start; } }\n\n.mdc-layout-grid__cell--align-middle {\n  -ms-flex-item-align: center;\n      align-self: center; }\n\n.mdc-layout-grid__cell--align-bottom {\n  -ms-flex-item-align: end;\n      align-self: flex-end; }\n  @supports (display: grid) {\n    .mdc-layout-grid__cell--align-bottom {\n      -ms-flex-item-align: end;\n          align-self: end; } }\n\n@media (min-width: 840px) {\n  .mdc-layout-grid--fixed-column-width {\n    width: 1176px;\n    width: calc( var(--mdc-layout-grid-column-width-desktop, 72px) * 12 + var(--mdc-layout-grid-gutter-desktop, 24px) * 11 + var(--mdc-layout-grid-margin-desktop, 24px) * 2); } }\n\n@media (min-width: 480px) and (max-width: 839px) {\n  .mdc-layout-grid--fixed-column-width {\n    width: 720px;\n    width: calc( var(--mdc-layout-grid-column-width-tablet, 72px) * 8 + var(--mdc-layout-grid-gutter-tablet, 16px) * 7 + var(--mdc-layout-grid-margin-tablet, 16px) * 2); } }\n\n@media (max-width: 479px) {\n  .mdc-layout-grid--fixed-column-width {\n    width: 368px;\n    width: calc( var(--mdc-layout-grid-column-width-phone, 72px) * 4 + var(--mdc-layout-grid-gutter-phone, 16px) * 3 + var(--mdc-layout-grid-margin-phone, 16px) * 2); } }\n\n.mdc-layout-grid--align-left {\n  margin-right: auto;\n  margin-left: 0; }\n\n.mdc-layout-grid--align-right {\n  margin-right: 0;\n  margin-left: auto; }\n\n@-webkit-keyframes primary-indeterminate-translate {\n  0% {\n    -webkit-transform: translateX(0);\n            transform: translateX(0); }\n  20% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(0);\n            transform: translateX(0); }\n  59.15% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(83.67142%);\n            transform: translateX(83.67142%); }\n  100% {\n    -webkit-transform: translateX(200.61106%);\n            transform: translateX(200.61106%); } }\n\n@keyframes primary-indeterminate-translate {\n  0% {\n    -webkit-transform: translateX(0);\n            transform: translateX(0); }\n  20% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(0);\n            transform: translateX(0); }\n  59.15% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(83.67142%);\n            transform: translateX(83.67142%); }\n  100% {\n    -webkit-transform: translateX(200.61106%);\n            transform: translateX(200.61106%); } }\n\n@-webkit-keyframes primary-indeterminate-scale {\n  0% {\n    -webkit-transform: scaleX(0.08);\n            transform: scaleX(0.08); }\n  36.65% {\n    -webkit-animation-timing-function: cubic-bezier(0.33473, 0.12482, 0.78584, 1);\n            animation-timing-function: cubic-bezier(0.33473, 0.12482, 0.78584, 1);\n    -webkit-transform: scaleX(0.08);\n            transform: scaleX(0.08); }\n  69.15% {\n    -webkit-animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1);\n            animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1);\n    -webkit-transform: scaleX(0.66148);\n            transform: scaleX(0.66148); }\n  100% {\n    -webkit-transform: scaleX(0.08);\n            transform: scaleX(0.08); } }\n\n@keyframes primary-indeterminate-scale {\n  0% {\n    -webkit-transform: scaleX(0.08);\n            transform: scaleX(0.08); }\n  36.65% {\n    -webkit-animation-timing-function: cubic-bezier(0.33473, 0.12482, 0.78584, 1);\n            animation-timing-function: cubic-bezier(0.33473, 0.12482, 0.78584, 1);\n    -webkit-transform: scaleX(0.08);\n            transform: scaleX(0.08); }\n  69.15% {\n    -webkit-animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1);\n            animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1);\n    -webkit-transform: scaleX(0.66148);\n            transform: scaleX(0.66148); }\n  100% {\n    -webkit-transform: scaleX(0.08);\n            transform: scaleX(0.08); } }\n\n@-webkit-keyframes secondary-indeterminate-translate {\n  0% {\n    -webkit-animation-timing-function: cubic-bezier(0.15, 0, 0.51506, 0.40969);\n            animation-timing-function: cubic-bezier(0.15, 0, 0.51506, 0.40969);\n    -webkit-transform: translateX(0);\n            transform: translateX(0); }\n  25% {\n    -webkit-animation-timing-function: cubic-bezier(0.31033, 0.28406, 0.8, 0.73371);\n            animation-timing-function: cubic-bezier(0.31033, 0.28406, 0.8, 0.73371);\n    -webkit-transform: translateX(37.65191%);\n            transform: translateX(37.65191%); }\n  48.35% {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0.62704, 0.6, 0.90203);\n            animation-timing-function: cubic-bezier(0.4, 0.62704, 0.6, 0.90203);\n    -webkit-transform: translateX(84.38617%);\n            transform: translateX(84.38617%); }\n  100% {\n    -webkit-transform: translateX(160.27778%);\n            transform: translateX(160.27778%); } }\n\n@keyframes secondary-indeterminate-translate {\n  0% {\n    -webkit-animation-timing-function: cubic-bezier(0.15, 0, 0.51506, 0.40969);\n            animation-timing-function: cubic-bezier(0.15, 0, 0.51506, 0.40969);\n    -webkit-transform: translateX(0);\n            transform: translateX(0); }\n  25% {\n    -webkit-animation-timing-function: cubic-bezier(0.31033, 0.28406, 0.8, 0.73371);\n            animation-timing-function: cubic-bezier(0.31033, 0.28406, 0.8, 0.73371);\n    -webkit-transform: translateX(37.65191%);\n            transform: translateX(37.65191%); }\n  48.35% {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0.62704, 0.6, 0.90203);\n            animation-timing-function: cubic-bezier(0.4, 0.62704, 0.6, 0.90203);\n    -webkit-transform: translateX(84.38617%);\n            transform: translateX(84.38617%); }\n  100% {\n    -webkit-transform: translateX(160.27778%);\n            transform: translateX(160.27778%); } }\n\n@-webkit-keyframes secondary-indeterminate-scale {\n  0% {\n    -webkit-animation-timing-function: cubic-bezier(0.20503, 0.05705, 0.57661, 0.45397);\n            animation-timing-function: cubic-bezier(0.20503, 0.05705, 0.57661, 0.45397);\n    -webkit-transform: scaleX(0.08);\n            transform: scaleX(0.08); }\n  19.15% {\n    -webkit-animation-timing-function: cubic-bezier(0.15231, 0.19643, 0.64837, 1.00432);\n            animation-timing-function: cubic-bezier(0.15231, 0.19643, 0.64837, 1.00432);\n    -webkit-transform: scaleX(0.4571);\n            transform: scaleX(0.4571); }\n  44.15% {\n    -webkit-animation-timing-function: cubic-bezier(0.25776, -0.00316, 0.21176, 1.38179);\n            animation-timing-function: cubic-bezier(0.25776, -0.00316, 0.21176, 1.38179);\n    -webkit-transform: scaleX(0.72796);\n            transform: scaleX(0.72796); }\n  100% {\n    -webkit-transform: scaleX(0.08);\n            transform: scaleX(0.08); } }\n\n@keyframes secondary-indeterminate-scale {\n  0% {\n    -webkit-animation-timing-function: cubic-bezier(0.20503, 0.05705, 0.57661, 0.45397);\n            animation-timing-function: cubic-bezier(0.20503, 0.05705, 0.57661, 0.45397);\n    -webkit-transform: scaleX(0.08);\n            transform: scaleX(0.08); }\n  19.15% {\n    -webkit-animation-timing-function: cubic-bezier(0.15231, 0.19643, 0.64837, 1.00432);\n            animation-timing-function: cubic-bezier(0.15231, 0.19643, 0.64837, 1.00432);\n    -webkit-transform: scaleX(0.4571);\n            transform: scaleX(0.4571); }\n  44.15% {\n    -webkit-animation-timing-function: cubic-bezier(0.25776, -0.00316, 0.21176, 1.38179);\n            animation-timing-function: cubic-bezier(0.25776, -0.00316, 0.21176, 1.38179);\n    -webkit-transform: scaleX(0.72796);\n            transform: scaleX(0.72796); }\n  100% {\n    -webkit-transform: scaleX(0.08);\n            transform: scaleX(0.08); } }\n\n@-webkit-keyframes buffering {\n  to {\n    -webkit-transform: translateX(-10px);\n            transform: translateX(-10px); } }\n\n@keyframes buffering {\n  to {\n    -webkit-transform: translateX(-10px);\n            transform: translateX(-10px); } }\n\n@-webkit-keyframes primary-indeterminate-translate-reverse {\n  0% {\n    -webkit-transform: translateX(0);\n            transform: translateX(0); }\n  20% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(0);\n            transform: translateX(0); }\n  59.15% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(-83.67142%);\n            transform: translateX(-83.67142%); }\n  100% {\n    -webkit-transform: translateX(-200.61106%);\n            transform: translateX(-200.61106%); } }\n\n@keyframes primary-indeterminate-translate-reverse {\n  0% {\n    -webkit-transform: translateX(0);\n            transform: translateX(0); }\n  20% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(0);\n            transform: translateX(0); }\n  59.15% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(-83.67142%);\n            transform: translateX(-83.67142%); }\n  100% {\n    -webkit-transform: translateX(-200.61106%);\n            transform: translateX(-200.61106%); } }\n\n@-webkit-keyframes secondary-indeterminate-translate-reverse {\n  0% {\n    -webkit-animation-timing-function: cubic-bezier(0.15, 0, 0.51506, 0.40969);\n            animation-timing-function: cubic-bezier(0.15, 0, 0.51506, 0.40969);\n    -webkit-transform: translateX(0);\n            transform: translateX(0); }\n  25% {\n    -webkit-animation-timing-function: cubic-bezier(0.31033, 0.28406, 0.8, 0.73371);\n            animation-timing-function: cubic-bezier(0.31033, 0.28406, 0.8, 0.73371);\n    -webkit-transform: translateX(-37.65191%);\n            transform: translateX(-37.65191%); }\n  48.35% {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0.62704, 0.6, 0.90203);\n            animation-timing-function: cubic-bezier(0.4, 0.62704, 0.6, 0.90203);\n    -webkit-transform: translateX(-84.38617%);\n            transform: translateX(-84.38617%); }\n  100% {\n    -webkit-transform: translateX(-160.27778%);\n            transform: translateX(-160.27778%); } }\n\n@keyframes secondary-indeterminate-translate-reverse {\n  0% {\n    -webkit-animation-timing-function: cubic-bezier(0.15, 0, 0.51506, 0.40969);\n            animation-timing-function: cubic-bezier(0.15, 0, 0.51506, 0.40969);\n    -webkit-transform: translateX(0);\n            transform: translateX(0); }\n  25% {\n    -webkit-animation-timing-function: cubic-bezier(0.31033, 0.28406, 0.8, 0.73371);\n            animation-timing-function: cubic-bezier(0.31033, 0.28406, 0.8, 0.73371);\n    -webkit-transform: translateX(-37.65191%);\n            transform: translateX(-37.65191%); }\n  48.35% {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0.62704, 0.6, 0.90203);\n            animation-timing-function: cubic-bezier(0.4, 0.62704, 0.6, 0.90203);\n    -webkit-transform: translateX(-84.38617%);\n            transform: translateX(-84.38617%); }\n  100% {\n    -webkit-transform: translateX(-160.27778%);\n            transform: translateX(-160.27778%); } }\n\n@-webkit-keyframes buffering-reverse {\n  to {\n    -webkit-transform: translateX(10px);\n            transform: translateX(10px); } }\n\n@keyframes buffering-reverse {\n  to {\n    -webkit-transform: translateX(10px);\n            transform: translateX(10px); } }\n\n.mdc-linear-progress {\n  position: relative;\n  width: 100%;\n  height: 4px;\n  -webkit-transform: translateZ(0);\n          transform: translateZ(0);\n  -webkit-transition: opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  overflow: hidden; }\n  .mdc-linear-progress__bar {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    -webkit-animation: none;\n            animation: none;\n    -webkit-transform-origin: top left;\n            transform-origin: top left;\n    -webkit-transition: -webkit-transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: -webkit-transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1); }\n  .mdc-linear-progress__bar-inner {\n    display: inline-block;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    -webkit-animation: none;\n            animation: none; }\n  .mdc-linear-progress__buffering-dots {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    -webkit-animation: buffering 250ms infinite linear;\n            animation: buffering 250ms infinite linear;\n    background-repeat: repeat-x;\n    background-size: 10px 4px; }\n  .mdc-linear-progress__buffer {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    -webkit-transform-origin: top left;\n            transform-origin: top left;\n    -webkit-transition: -webkit-transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: -webkit-transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1); }\n  .mdc-linear-progress__primary-bar {\n    -webkit-transform: scaleX(0);\n            transform: scaleX(0); }\n  .mdc-linear-progress__secondary-bar {\n    visibility: hidden; }\n  .mdc-linear-progress--indeterminate .mdc-linear-progress__bar {\n    -webkit-transition: none;\n    transition: none; }\n  .mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar {\n    left: -145.166611%;\n    -webkit-animation: primary-indeterminate-translate 2s infinite linear;\n            animation: primary-indeterminate-translate 2s infinite linear; }\n    .mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar > .mdc-linear-progress__bar-inner {\n      -webkit-animation: primary-indeterminate-scale 2s infinite linear;\n              animation: primary-indeterminate-scale 2s infinite linear; }\n  .mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar {\n    left: -54.888891%;\n    -webkit-animation: secondary-indeterminate-translate 2s infinite linear;\n            animation: secondary-indeterminate-translate 2s infinite linear;\n    visibility: visible; }\n    .mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar > .mdc-linear-progress__bar-inner {\n      -webkit-animation: secondary-indeterminate-scale 2s infinite linear;\n              animation: secondary-indeterminate-scale 2s infinite linear; }\n  .mdc-linear-progress--reversed .mdc-linear-progress__bar,\n  .mdc-linear-progress--reversed .mdc-linear-progress__buffer {\n    right: 0;\n    -webkit-transform-origin: center right;\n            transform-origin: center right; }\n  .mdc-linear-progress--reversed .mdc-linear-progress__primary-bar {\n    -webkit-animation-name: primary-indeterminate-translate-reverse;\n            animation-name: primary-indeterminate-translate-reverse; }\n  .mdc-linear-progress--reversed .mdc-linear-progress__secondary-bar {\n    -webkit-animation-name: secondary-indeterminate-translate-reverse;\n            animation-name: secondary-indeterminate-translate-reverse; }\n  .mdc-linear-progress--reversed .mdc-linear-progress__buffering-dots {\n    -webkit-animation: buffering-reverse 250ms infinite linear;\n            animation: buffering-reverse 250ms infinite linear; }\n  .mdc-linear-progress--closed {\n    opacity: 0; }\n\n.mdc-linear-progress__bar-inner {\n  background-color: #6200ee;\n  /* @alternate */\n  background-color: var(--mdc-theme-primary, #6200ee); }\n\n.mdc-linear-progress__buffering-dots {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='%23e6e6e6'/%3E%3C/svg%3E\"); }\n\n.mdc-linear-progress__buffer {\n  background-color: #e6e6e6; }\n\n.mdc-linear-progress--indeterminate.mdc-linear-progress--reversed .mdc-linear-progress__primary-bar {\n  right: -145.166611%;\n  left: auto; }\n\n.mdc-linear-progress--indeterminate.mdc-linear-progress--reversed .mdc-linear-progress__secondary-bar {\n  right: -54.888891%;\n  left: auto; }\n\n.mdc-linear-progress--accent .mdc-linear-progress__bar-inner {\n  background-color: #018786; }\n\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n.mdc-list {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  line-height: 1.75rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n  margin: 0;\n  padding: 8px 0;\n  line-height: 1.5rem;\n  list-style-type: none; }\n\n.mdc-list-item__secondary-text {\n  color: rgba(0, 0, 0, 0.54);\n  /* @alternate */\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)); }\n\n.mdc-list-item__graphic {\n  background-color: transparent; }\n\n.mdc-list-item__graphic {\n  color: rgba(0, 0, 0, 0.38);\n  /* @alternate */\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38)); }\n\n.mdc-list-item__meta {\n  color: rgba(0, 0, 0, 0.38);\n  /* @alternate */\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38)); }\n\n.mdc-list--dense {\n  padding-top: 4px;\n  padding-bottom: 4px;\n  font-size: .812rem; }\n\n.mdc-list-item {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  position: relative;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start;\n  height: 48px;\n  padding: 0 16px;\n  overflow: hidden; }\n  .mdc-list-item:focus {\n    outline: none; }\n\n.mdc-list-item--selected,\n.mdc-list-item--activated {\n  color: #6200ee;\n  /* @alternate */\n  color: var(--mdc-theme-primary, #6200ee); }\n  .mdc-list-item--selected .mdc-list-item__graphic,\n  .mdc-list-item--activated .mdc-list-item__graphic {\n    color: #6200ee;\n    /* @alternate */\n    color: var(--mdc-theme-primary, #6200ee); }\n\n.mdc-list-item__graphic {\n  /* @noflip */\n  margin-left: 0;\n  /* @noflip */\n  margin-right: 32px;\n  width: 24px;\n  height: 24px;\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -ms-flex-negative: 0;\n      flex-shrink: 0;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center; }\n  .mdc-list-item[dir=\"rtl\"] .mdc-list-item__graphic,\n  [dir=\"rtl\"] .mdc-list-item .mdc-list-item__graphic {\n    /* @noflip */\n    margin-left: 32px;\n    /* @noflip */\n    margin-right: 0; }\n\n.mdc-list-item__meta {\n  /* @noflip */\n  margin-left: auto;\n  /* @noflip */\n  margin-right: 0; }\n  .mdc-list-item[dir=\"rtl\"] .mdc-list-item__meta,\n  [dir=\"rtl\"] .mdc-list-item .mdc-list-item__meta {\n    /* @noflip */\n    margin-left: 0;\n    /* @noflip */\n    margin-right: auto; }\n\n.mdc-list-item__text,\n.mdc-list-item__secondary-text {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  display: block; }\n\n.mdc-list-item__secondary-text {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  text-decoration: inherit;\n  text-transform: inherit; }\n\n.mdc-list--dense .mdc-list-item__secondary-text {\n  font-size: inherit; }\n\n.mdc-list--dense .mdc-list-item {\n  height: 40px; }\n\n.mdc-list--dense .mdc-list-item__graphic {\n  /* @noflip */\n  margin-left: 0;\n  /* @noflip */\n  margin-right: 36px;\n  width: 20px;\n  height: 20px; }\n  .mdc-list-item[dir=\"rtl\"] .mdc-list--dense .mdc-list-item__graphic,\n  [dir=\"rtl\"] .mdc-list-item .mdc-list--dense .mdc-list-item__graphic {\n    /* @noflip */\n    margin-left: 36px;\n    /* @noflip */\n    margin-right: 0; }\n\n.mdc-list--avatar-list .mdc-list-item {\n  height: 56px; }\n\n.mdc-list--avatar-list .mdc-list-item__graphic {\n  /* @noflip */\n  margin-left: 0;\n  /* @noflip */\n  margin-right: 16px;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%; }\n  .mdc-list-item[dir=\"rtl\"] .mdc-list--avatar-list .mdc-list-item__graphic,\n  [dir=\"rtl\"] .mdc-list-item .mdc-list--avatar-list .mdc-list-item__graphic {\n    /* @noflip */\n    margin-left: 16px;\n    /* @noflip */\n    margin-right: 0; }\n\n:not(.mdc-list--non-interactive) > .mdc-list-item {\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: transparent;\n  will-change: transform, opacity; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item::before, :not(.mdc-list--non-interactive) > .mdc-list-item::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item::before {\n    -webkit-transition: opacity 15ms linear;\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  :not(.mdc-list--non-interactive) > .mdc-list-item.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  :not(.mdc-list--non-interactive) > .mdc-list-item.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  :not(.mdc-list--non-interactive) > .mdc-list-item::before, :not(.mdc-list--non-interactive) > .mdc-list-item::after {\n    top: calc(50% - 100%);\n    /* @noflip */\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  :not(.mdc-list--non-interactive) > .mdc-list-item::before, :not(.mdc-list--non-interactive) > .mdc-list-item::after {\n    background-color: black; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item:hover::before {\n    opacity: 0.04; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item:not(.mdc-ripple-upgraded):focus::before, :not(.mdc-list--non-interactive) > .mdc-list-item.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.12; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.16; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item--activated::before {\n    opacity: 0.12; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item--activated::before, :not(.mdc-list--non-interactive) > .mdc-list-item--activated::after {\n    background-color: #6200ee; }\n    @supports not (-ms-ime-align: auto) {\n      :not(.mdc-list--non-interactive) > .mdc-list-item--activated::before, :not(.mdc-list--non-interactive) > .mdc-list-item--activated::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-primary, #6200ee); } }\n  :not(.mdc-list--non-interactive) > .mdc-list-item--activated:hover::before {\n    opacity: 0.16; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item--activated:not(.mdc-ripple-upgraded):focus::before, :not(.mdc-list--non-interactive) > .mdc-list-item--activated.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.24; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item--activated:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item--activated:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.28; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item--activated.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item--selected::before {\n    opacity: 0.08; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item--selected::before, :not(.mdc-list--non-interactive) > .mdc-list-item--selected::after {\n    background-color: #6200ee; }\n    @supports not (-ms-ime-align: auto) {\n      :not(.mdc-list--non-interactive) > .mdc-list-item--selected::before, :not(.mdc-list--non-interactive) > .mdc-list-item--selected::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-primary, #6200ee); } }\n  :not(.mdc-list--non-interactive) > .mdc-list-item--selected:hover::before {\n    opacity: 0.12; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item--selected:not(.mdc-ripple-upgraded):focus::before, :not(.mdc-list--non-interactive) > .mdc-list-item--selected.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.2; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item--selected:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item--selected:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.24; }\n  :not(.mdc-list--non-interactive) > .mdc-list-item--selected.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n\n.mdc-list--two-line .mdc-list-item {\n  height: 72px; }\n\n.mdc-list--two-line.mdc-list--dense .mdc-list-item {\n  height: 60px; }\n\n.mdc-list--avatar-list.mdc-list--dense .mdc-list-item {\n  height: 48px; }\n\n.mdc-list--avatar-list.mdc-list--dense .mdc-list-item__graphic {\n  /* @noflip */\n  margin-left: 0;\n  /* @noflip */\n  margin-right: 20px;\n  width: 36px;\n  height: 36px; }\n  .mdc-list-item[dir=\"rtl\"] .mdc-list--avatar-list.mdc-list--dense .mdc-list-item__graphic,\n  [dir=\"rtl\"] .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list-item__graphic {\n    /* @noflip */\n    margin-left: 20px;\n    /* @noflip */\n    margin-right: 0; }\n\na.mdc-list-item {\n  color: inherit;\n  text-decoration: none; }\n\n.mdc-list-divider {\n  height: 0;\n  margin: 0;\n  border: none;\n  border-bottom-width: 1px;\n  border-bottom-style: solid; }\n\n.mdc-list-divider {\n  border-bottom-color: rgba(0, 0, 0, 0.12); }\n\n.mdc-list-divider--padded {\n  margin: 0 16px; }\n\n.mdc-list-divider--inset {\n  /* @noflip */\n  margin-left: 72px;\n  /* @noflip */\n  margin-right: 0;\n  width: calc(100% - 72px); }\n  .mdc-list-group[dir=\"rtl\"] .mdc-list-divider--inset,\n  [dir=\"rtl\"] .mdc-list-group .mdc-list-divider--inset {\n    /* @noflip */\n    margin-left: 0;\n    /* @noflip */\n    margin-right: 72px; }\n\n.mdc-list-divider--inset.mdc-list-divider--padded {\n  width: calc(100% - 72px - 16px); }\n\n.mdc-list-group .mdc-list {\n  padding: 0; }\n\n.mdc-list-group__subheader {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 1.5rem;\n  font-weight: 500;\n  letter-spacing: 0.04em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  margin: 0.75rem 16px; }\n\n.mdc-list-group__subheader {\n  color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); }\n\n.mdc-list--bordered {\n  /* remove the side padding. we'll be placing it around the item instead. */\n  padding-right: 0;\n  padding-left: 0; }\n\n.mdc-list--bordered .mdc-list-item {\n  /* Add the list side padding padding to the list item. */\n  padding: 0 16px;\n  /* Add a border around each element. */\n  border: 1px solid rgba(0, 0, 0, 0.12); }\n\n/* Ensure adjacent borders don't collide with one another. */\n.mdc-list--bordered .mdc-list-item:not(:first-child) {\n  border-top: none; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n * $opacity-boost.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-value(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-menu {\n  -webkit-box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  background-color: #fff;\n  /* @alternate */\n  background-color: var(--mdc-theme-background, #fff);\n  display: none;\n  position: absolute;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  min-width: 170px;\n  max-width: calc(100vw - 32px);\n  max-height: calc(100vh - 32px);\n  margin: 0;\n  padding: 0;\n  -webkit-transform: scale(1);\n          transform: scale(1);\n  -webkit-transform-origin: top left;\n          transform-origin: top left;\n  border-radius: 2px;\n  opacity: 0;\n  white-space: nowrap;\n  overflow-x: hidden;\n  overflow-y: auto;\n  will-change: transform, opacity;\n  z-index: 4; }\n  .mdc-menu:focus {\n    outline: none; }\n  .mdc-menu--animating-open {\n    display: inline-block;\n    -webkit-transform: scale(0.8);\n            transform: scale(0.8);\n    -webkit-transition: opacity 0.03s linear, -webkit-transform 0.12s cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 0.03s linear, -webkit-transform 0.12s cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 0.03s linear, transform 0.12s cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 0.03s linear, transform 0.12s cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0.12s cubic-bezier(0, 0, 0.2, 1);\n    opacity: 0;\n    overflow-y: hidden; }\n  .mdc-menu--open {\n    display: inline-block;\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    opacity: 1; }\n  .mdc-menu--animating-closed {\n    display: inline-block;\n    -webkit-transition: opacity 0.075s linear;\n    transition: opacity 0.075s linear;\n    opacity: 0;\n    overflow-y: hidden; }\n  .mdc-menu__items {\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    overflow-x: hidden;\n    overflow-y: auto;\n    will-change: transform; }\n    .mdc-menu__items > .mdc-list-item {\n      cursor: pointer; }\n    .mdc-menu--animating .mdc-menu__items {\n      overflow-y: hidden; }\n  .mdc-menu--animating-open > .mdc-menu__items {\n    -webkit-transform: scale(1.25);\n            transform: scale(1.25); }\n  .mdc-menu--open > .mdc-menu__items {\n    -webkit-transform: scale(1);\n            transform: scale(1); }\n  [dir=\"rtl\"] .mdc-menu {\n    -webkit-transform-origin: top right;\n            transform-origin: top right; }\n  .mdc-menu .mdc-list-group,\n  .mdc-menu .mdc-list {\n    padding: 8px 0; }\n  .mdc-menu .mdc-list-item {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 1rem;\n    line-height: 1.75rem;\n    font-weight: 400;\n    letter-spacing: 0.04em;\n    text-decoration: inherit;\n    text-transform: inherit;\n    position: relative;\n    outline: none;\n    color: inherit;\n    text-decoration: none;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none; }\n  .mdc-menu .mdc-list-item__graphic {\n    color: rgba(0, 0, 0, 0.54);\n    /* @alternate */\n    color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)); }\n  .mdc-menu .mdc-list-item[aria-disabled=\"true\"] {\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38));\n    cursor: default;\n    pointer-events: none; }\n    .mdc-menu .mdc-list-item[aria-disabled=\"true\"]:focus::before {\n      opacity: 0; }\n\n.mdc-menu-anchor {\n  position: relative;\n  overflow: visible; }\n\n.mdc-menu {\n  z-index: 5; }\n\n.mdc-notched-outline {\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: transparent;\n  will-change: transform, opacity;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: calc(100% - 1px);\n  height: calc(100% - 2px);\n  -webkit-transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  opacity: 0;\n  overflow: hidden; }\n  .mdc-notched-outline::before, .mdc-notched-outline::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-notched-outline::before {\n    -webkit-transition: opacity 15ms linear;\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-notched-outline.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-notched-outline.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-notched-outline.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-notched-outline.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-notched-outline.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-notched-outline::before, .mdc-notched-outline::after {\n    top: calc(50% - 100%);\n    /* @noflip */\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%; }\n  .mdc-notched-outline.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-notched-outline::before, .mdc-notched-outline::after {\n    background-color: rgba(0, 0, 0, 0.87); }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-notched-outline::before, .mdc-notched-outline::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); } }\n  .mdc-notched-outline:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  .mdc-notched-outline:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-notched-outline.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n  .mdc-notched-outline svg {\n    position: absolute;\n    width: 100%;\n    height: 100%; }\n\n.mdc-notched-outline__idle {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: calc(100% - 4px);\n  height: calc(100% - 4px);\n  -webkit-transition: opacity 100ms ease;\n  transition: opacity 100ms ease;\n  border: 1px solid;\n  opacity: 1; }\n\n.mdc-notched-outline__path {\n  stroke-width: 1px;\n  -webkit-transition: stroke 180ms cubic-bezier(0.4, 0, 0.2, 1), stroke-width 180ms cubic-bezier(0.4, 0, 0.2, 1), opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: stroke 180ms cubic-bezier(0.4, 0, 0.2, 1), stroke-width 180ms cubic-bezier(0.4, 0, 0.2, 1), opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  fill: transparent; }\n\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* stylelint-disable selector-max-type */\n.mdc-form-field {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  vertical-align: middle; }\n  .mdc-form-field > label {\n    -webkit-box-ordinal-group: 1;\n        -ms-flex-order: 0;\n            order: 0;\n    margin-right: auto;\n    padding-left: 4px; }\n  [dir=\"rtl\"] .mdc-form-field > label, .mdc-form-field[dir=\"rtl\"] > label {\n    margin-left: auto;\n    padding-right: 4px; }\n\n.mdc-form-field--align-end > label {\n  -webkit-box-ordinal-group: 0;\n      -ms-flex-order: -1;\n          order: -1;\n  margin-left: auto;\n  padding-right: 4px; }\n\n[dir=\"rtl\"] .mdc-form-field--align-end > label, .mdc-form-field--align-end[dir=\"rtl\"] > label {\n  margin-right: auto;\n  padding-left: 4px; }\n\n/* stylelint-enable selector-max-type */\n.mdc-radio {\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: transparent;\n  will-change: transform, opacity;\n  display: inline-block;\n  position: relative;\n  -webkit-box-flex: 0;\n      -ms-flex: 0 0 auto;\n          flex: 0 0 auto;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  width: 40px;\n  height: 40px;\n  padding: 10px;\n  cursor: pointer;\n  will-change: opacity, transform, border-color, background-color, color; }\n  .mdc-radio .mdc-radio__native-control:enabled:not(:checked) + .mdc-radio__background .mdc-radio__outer-circle {\n    border-color: rgba(0, 0, 0, 0.54);\n    /* @alternate */\n    border-color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)); }\n  .mdc-radio .mdc-radio__native-control:enabled:checked + .mdc-radio__background .mdc-radio__outer-circle {\n    border-color: #018786;\n    /* @alternate */\n    border-color: var(--mdc-theme-secondary, #018786); }\n  .mdc-radio .mdc-radio__native-control:enabled + .mdc-radio__background .mdc-radio__inner-circle {\n    background-color: #018786;\n    /* @alternate */\n    background-color: var(--mdc-theme-secondary, #018786); }\n  .mdc-radio .mdc-radio__background::before {\n    background-color: #018786; }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-radio .mdc-radio__background::before {\n        /* @alternate */\n        background-color: var(--mdc-theme-secondary, #018786); } }\n  .mdc-radio::before, .mdc-radio::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-radio::before {\n    -webkit-transition: opacity 15ms linear;\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-radio.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-radio.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-radio.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-radio.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-radio.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-radio::before, .mdc-radio::after {\n    top: calc(50% - 50%);\n    /* @noflip */\n    left: calc(50% - 50%);\n    width: 100%;\n    height: 100%; }\n  .mdc-radio.mdc-ripple-upgraded::before, .mdc-radio.mdc-ripple-upgraded::after {\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    /* @noflip */\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-radio.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-radio::before, .mdc-radio::after {\n    background-color: #018786; }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-radio::before, .mdc-radio::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-secondary, #018786); } }\n  .mdc-radio:hover::before {\n    opacity: 0.04; }\n  .mdc-radio:not(.mdc-ripple-upgraded):focus::before, .mdc-radio.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-radio:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  .mdc-radio:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-radio.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n  .mdc-radio__background {\n    display: inline-block;\n    position: absolute;\n    left: 10px;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    width: 50%;\n    height: 50%; }\n    .mdc-radio__background::before {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      -webkit-transform: scale(0, 0);\n              transform: scale(0, 0);\n      -webkit-transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n      transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n      transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n      transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n  .mdc-radio__outer-circle {\n    position: absolute;\n    top: 0;\n    left: 0;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    -webkit-transition: border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    border-width: 2px;\n    border-style: solid;\n    border-radius: 50%; }\n  .mdc-radio__inner-circle {\n    position: absolute;\n    top: 0;\n    left: 0;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    -webkit-transform: scale(0, 0);\n            transform: scale(0, 0);\n    -webkit-transition: background-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: background-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), background-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), background-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    border-radius: 50%; }\n  .mdc-radio__native-control {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    opacity: 0;\n    cursor: inherit;\n    z-index: 1; }\n  .mdc-radio.mdc-ripple-upgraded .mdc-radio__background::before {\n    content: none; }\n\n.mdc-radio__native-control:checked + .mdc-radio__background,\n.mdc-radio__native-control:disabled + .mdc-radio__background {\n  -webkit-transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-radio__native-control:checked + .mdc-radio__background .mdc-radio__outer-circle,\n  .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__outer-circle {\n    -webkit-transition: border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-radio__native-control:checked + .mdc-radio__background .mdc-radio__inner-circle,\n  .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__inner-circle {\n    -webkit-transition: background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n\n.mdc-radio--disabled {\n  cursor: default;\n  pointer-events: none; }\n\n.mdc-radio__native-control:checked + .mdc-radio__background .mdc-radio__inner-circle {\n  -webkit-transform: scale(0.5);\n          transform: scale(0.5);\n  -webkit-transition: background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n\n.mdc-radio__native-control:disabled + .mdc-radio__background,\n[aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background {\n  cursor: default; }\n  .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__outer-circle,\n  [aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__outer-circle {\n    border-color: rgba(0, 0, 0, 0.26); }\n  .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__inner-circle,\n  [aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__inner-circle {\n    background-color: rgba(0, 0, 0, 0.26); }\n\n.mdc-radio__native-control:focus + .mdc-radio__background::before {\n  -webkit-transform: scale(2, 2);\n          transform: scale(2, 2);\n  -webkit-transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  opacity: .26; }\n\n.mdc-ripple-surface {\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: transparent;\n  will-change: transform, opacity;\n  position: relative;\n  outline: none;\n  overflow: hidden; }\n  .mdc-ripple-surface::before, .mdc-ripple-surface::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-ripple-surface::before {\n    -webkit-transition: opacity 15ms linear;\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-ripple-surface.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-ripple-surface.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-ripple-surface.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-ripple-surface.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-ripple-surface.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-ripple-surface::before, .mdc-ripple-surface::after {\n    background-color: black; }\n  .mdc-ripple-surface:hover::before {\n    opacity: 0.04; }\n  .mdc-ripple-surface:not(.mdc-ripple-upgraded):focus::before, .mdc-ripple-surface.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-ripple-surface:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  .mdc-ripple-surface:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-ripple-surface.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n  .mdc-ripple-surface::before, .mdc-ripple-surface::after {\n    top: calc(50% - 100%);\n    /* @noflip */\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%; }\n  .mdc-ripple-surface.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-ripple-surface[data-mdc-ripple-is-unbounded] {\n    overflow: visible; }\n    .mdc-ripple-surface[data-mdc-ripple-is-unbounded]::before, .mdc-ripple-surface[data-mdc-ripple-is-unbounded]::after {\n      top: calc(50% - 50%);\n      /* @noflip */\n      left: calc(50% - 50%);\n      width: 100%;\n      height: 100%; }\n    .mdc-ripple-surface[data-mdc-ripple-is-unbounded].mdc-ripple-upgraded::before, .mdc-ripple-surface[data-mdc-ripple-is-unbounded].mdc-ripple-upgraded::after {\n      top: var(--mdc-ripple-top, calc(50% - 50%));\n      /* @noflip */\n      left: var(--mdc-ripple-left, calc(50% - 50%));\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: var(--mdc-ripple-fg-size, 100%); }\n    .mdc-ripple-surface[data-mdc-ripple-is-unbounded].mdc-ripple-upgraded::after {\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-ripple-surface--primary::before, .mdc-ripple-surface--primary::after {\n    background-color: #6200ee; }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-ripple-surface--primary::before, .mdc-ripple-surface--primary::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-primary, #6200ee); } }\n  .mdc-ripple-surface--primary:hover::before {\n    opacity: 0.04; }\n  .mdc-ripple-surface--primary:not(.mdc-ripple-upgraded):focus::before, .mdc-ripple-surface--primary.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-ripple-surface--primary:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  .mdc-ripple-surface--primary:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-ripple-surface--primary.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n  .mdc-ripple-surface--accent::before, .mdc-ripple-surface--accent::after {\n    background-color: #018786; }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-ripple-surface--accent::before, .mdc-ripple-surface--accent::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-secondary, #018786); } }\n  .mdc-ripple-surface--accent:hover::before {\n    opacity: 0.04; }\n  .mdc-ripple-surface--accent:not(.mdc-ripple-upgraded):focus::before, .mdc-ripple-surface--accent.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-ripple-surface--accent:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  .mdc-ripple-surface--accent:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-ripple-surface--accent.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n\n.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before {\n  -webkit-transition-duration: 75ms;\n          transition-duration: 75ms;\n  opacity: 0.06; }\n\n.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused:hover::before {\n  -webkit-transition-duration: 75ms;\n          transition-duration: 75ms;\n  opacity: 0.08; }\n\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n.mdc-select__label {\n  /* @noflip */\n  left: 0;\n  /* @noflip */\n  right: initial;\n  position: absolute;\n  bottom: 8px;\n  left: 0;\n  -webkit-transform-origin: left top;\n          transform-origin: left top;\n  -webkit-transition: -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  pointer-events: none;\n  will-change: transform; }\n  [dir=\"rtl\"] .mdc-select__label, .mdc-select__label[dir=\"rtl\"] {\n    /* @noflip */\n    left: initial;\n    /* @noflip */\n    right: 0; }\n  .mdc-select[dir=\"rtl\"] .mdc-select__label,\n  [dir=\"rtl\"] .mdc-select .mdc-select__label {\n    -webkit-transform-origin: right top;\n            transform-origin: right top; }\n  .mdc-select__label--float-above {\n    -webkit-transform: translateY(-100%) scale(0.75);\n            transform: translateY(-100%) scale(0.75); }\n\n.mdc-select__bottom-line {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 1px;\n  -webkit-transform: scaleY(1);\n          transform: scaleY(1);\n  -webkit-transform-origin: bottom;\n          transform-origin: bottom;\n  -webkit-transition: -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1); }\n  .mdc-select__bottom-line::after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    -webkit-transform: scaleX(0);\n            transform: scaleX(0);\n    -webkit-transition: -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    opacity: 0;\n    content: \"\";\n    z-index: 2; }\n\n.mdc-select__bottom-line--active::after {\n  opacity: 1; }\n\n.mdc-select {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  letter-spacing: 0.04em;\n  background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%230%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.54%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E);\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  position: relative;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  height: 48px;\n  border: none;\n  outline: none;\n  background-repeat: no-repeat;\n  background-position: right 8px bottom 8px;\n  cursor: pointer;\n  overflow: visible; }\n  .mdc-select:not(.mdc-select--disabled) .mdc-select__surface,\n  .mdc-select:not(.mdc-select--disabled) .mdc-select__selected-text {\n    color: rgba(0, 0, 0, 0.87);\n    /* @alternate */\n    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }\n  .mdc-select:not(.mdc-select--disabled) .mdc-select__label {\n    color: rgba(0, 0, 0, 0.6); }\n  .mdc-select:not(.mdc-select--disabled) .mdc-select__bottom-line {\n    background-color: rgba(0, 0, 0, 0.5); }\n  .mdc-select:not(.mdc-select--disabled) .mdc-select__surface:focus .mdc-select__bottom-line {\n    background-color: #6200ee;\n    /* @alternate */\n    background-color: var(--mdc-theme-primary, #6200ee); }\n  .mdc-select:not(.mdc-select--disabled).mdc-select--open .mdc-select__bottom-line {\n    background-color: #6200ee;\n    /* @alternate */\n    background-color: var(--mdc-theme-primary, #6200ee); }\n  .mdc-select:not(.mdc-select--disabled) .mdc-select__bottom-line::after {\n    background-color: #6200ee;\n    /* @alternate */\n    background-color: var(--mdc-theme-primary, #6200ee); }\n  .mdc-select:not(.mdc-select--disabled) .mdc-select__surface:focus .mdc-select__label, .mdc-select:not(.mdc-select--disabled).mdc-select--open .mdc-select__label {\n    color: rgba(98, 0, 238, 0.87); }\n  [dir=\"rtl\"] .mdc-select, .mdc-select[dir=\"rtl\"] {\n    background-position: left 8px bottom 8px; }\n  .mdc-select__menu {\n    position: fixed;\n    top: 0;\n    left: 0;\n    max-height: 100%;\n    -webkit-transform-origin: center center;\n            transform-origin: center center;\n    z-index: 4; }\n  .mdc-select__surface {\n    /* @noflip */\n    padding-left: 0;\n    /* @noflip */\n    padding-right: 26px;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: relative;\n    -webkit-box-flex: 1;\n        -ms-flex-positive: 1;\n            flex-grow: 1;\n    width: 100%;\n    height: 48px;\n    padding-bottom: 8px;\n    border: none;\n    outline: none;\n    overflow: hidden; }\n    [dir=\"rtl\"] .mdc-select__surface, .mdc-select__surface[dir=\"rtl\"] {\n      /* @noflip */\n      padding-left: 26px;\n      /* @noflip */\n      padding-right: 0; }\n    .mdc-select__surface::before, .mdc-select__surface::after {\n      background-color: black; }\n    .mdc-select__surface:hover::before {\n      opacity: 0.04; }\n    .mdc-select__surface:not(.mdc-ripple-upgraded):focus::before, .mdc-select__surface.mdc-ripple-upgraded--background-focused::before {\n      -webkit-transition-duration: 75ms;\n              transition-duration: 75ms;\n      opacity: 0.12; }\n    .mdc-select__surface:not(.mdc-ripple-upgraded)::after {\n      -webkit-transition: opacity 150ms linear;\n      transition: opacity 150ms linear; }\n    .mdc-select__surface:not(.mdc-ripple-upgraded):active::after {\n      -webkit-transition-duration: 75ms;\n              transition-duration: 75ms;\n      opacity: 0.16; }\n    .mdc-select__surface.mdc-ripple-upgraded {\n      --mdc-ripple-fg-opacity: $opacity; }\n  .mdc-select__selected-text {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: absolute;\n    bottom: 8px;\n    -webkit-box-align: end;\n        -ms-flex-align: end;\n            align-items: flex-end;\n    -webkit-transition: opacity 125ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 125ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: opacity 125ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 125ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: opacity 125ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 125ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: opacity 125ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 125ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 125ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    white-space: nowrap;\n    overflow: hidden; }\n  .mdc-select .mdc-select__surface:focus .mdc-select__bottom-line::after {\n    -webkit-transform: scale(1, 2);\n            transform: scale(1, 2);\n    opacity: 1; }\n\n.mdc-select--box {\n  height: 56px;\n  border-radius: 4px 4px 0 0;\n  background-position: right 10px center; }\n  .mdc-select--box:not(.mdc-select--disabled) .mdc-select__surface {\n    background-color: rgba(0, 0, 0, 0.04); }\n  [dir=\"rtl\"] .mdc-select--box, .mdc-select--box[dir=\"rtl\"] {\n    background-position: left 10px center; }\n  .mdc-select--box .mdc-select__surface {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 1rem;\n    line-height: 1.75rem;\n    font-weight: 400;\n    letter-spacing: 0.04em;\n    text-decoration: inherit;\n    text-transform: inherit;\n    /* @noflip */\n    padding-left: 16px;\n    /* @noflip */\n    padding-right: 26px;\n    --mdc-ripple-fg-size: 0;\n    --mdc-ripple-left: 0;\n    --mdc-ripple-top: 0;\n    --mdc-ripple-fg-scale: 1;\n    --mdc-ripple-fg-translate-end: 0;\n    --mdc-ripple-fg-translate-start: 0;\n    -webkit-tap-highlight-color: transparent;\n    will-change: transform, opacity;\n    height: 56px;\n    padding-bottom: 0;\n    border-radius: 4px 4px 0 0; }\n    [dir=\"rtl\"] .mdc-select--box .mdc-select__surface, .mdc-select--box .mdc-select__surface[dir=\"rtl\"] {\n      /* @noflip */\n      padding-left: 26px;\n      /* @noflip */\n      padding-right: 16px; }\n    .mdc-select--box .mdc-select__surface::before, .mdc-select--box .mdc-select__surface::after {\n      position: absolute;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n    .mdc-select--box .mdc-select__surface::before {\n      -webkit-transition: opacity 15ms linear;\n      transition: opacity 15ms linear;\n      z-index: 1; }\n    .mdc-select--box .mdc-select__surface.mdc-ripple-upgraded::before {\n      -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n              transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n    .mdc-select--box .mdc-select__surface.mdc-ripple-upgraded::after {\n      top: 0;\n      /* @noflip */\n      left: 0;\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform-origin: center center;\n              transform-origin: center center; }\n    .mdc-select--box .mdc-select__surface.mdc-ripple-upgraded--unbounded::after {\n      top: var(--mdc-ripple-top, 0);\n      /* @noflip */\n      left: var(--mdc-ripple-left, 0); }\n    .mdc-select--box .mdc-select__surface.mdc-ripple-upgraded--foreground-activation::after {\n      -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n              animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n    .mdc-select--box .mdc-select__surface.mdc-ripple-upgraded--foreground-deactivation::after {\n      -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n              animation: 150ms mdc-ripple-fg-opacity-out;\n      -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n              transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n    .mdc-select--box .mdc-select__surface::before, .mdc-select--box .mdc-select__surface::after {\n      top: calc(50% - 100%);\n      /* @noflip */\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%; }\n    .mdc-select--box .mdc-select__surface.mdc-ripple-upgraded::after {\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-select--box .mdc-select__label {\n    /* @noflip */\n    left: 16px;\n    /* @noflip */\n    right: initial;\n    bottom: 12px; }\n    [dir=\"rtl\"] .mdc-select--box .mdc-select__label, .mdc-select--box .mdc-select__label[dir=\"rtl\"] {\n      /* @noflip */\n      left: initial;\n      /* @noflip */\n      right: 16px; }\n    .mdc-select--box .mdc-select__label--float-above {\n      -webkit-transform: translateY(-40%) scale(0.75, 0.75);\n              transform: translateY(-40%) scale(0.75, 0.75); }\n  .mdc-select--box .mdc-select__selected-text {\n    position: inherit;\n    bottom: 0;\n    margin-bottom: 6px; }\n\n.mdc-select--open .mdc-select__surface::before {\n  opacity: 0.12; }\n\n.mdc-select--open .mdc-select__selected-text {\n  -webkit-transform: translateY(8px);\n          transform: translateY(8px);\n  -webkit-transition: opacity 125ms 125ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 125ms 125ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 125ms 125ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 125ms 125ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 125ms 125ms cubic-bezier(0, 0, 0.2, 1), transform 125ms 125ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 125ms 125ms cubic-bezier(0, 0, 0.2, 1), transform 125ms 125ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 125ms 125ms cubic-bezier(0, 0, 0.2, 1);\n  opacity: 0; }\n\n.mdc-select--open .mdc-select__bottom-line::after {\n  -webkit-transform: scaleY(2);\n          transform: scaleY(2);\n  opacity: 1; }\n\n.mdc-select--disabled {\n  background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%230%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.38%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E);\n  border-bottom-width: 1px;\n  border-bottom-style: dotted;\n  opacity: .38;\n  cursor: default;\n  pointer-events: none;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none; }\n  .mdc-select--disabled .mdc-select__label {\n    color: black; }\n  .mdc-select--disabled .mdc-select__bottom-line {\n    display: none; }\n\n.mdc-select-scroll-lock {\n  overflow: hidden; }\n\n.mdc-multi-select {\n  border-color: rgba(0, 0, 0, 0.38);\n  /* @alternate */\n  border-color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));\n  width: 250px;\n  padding: 0;\n  border-width: 1px;\n  border-style: solid;\n  outline: none;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none; }\n  .mdc-multi-select .mdc-list-divider {\n    margin-bottom: 8px;\n    padding-top: 8px;\n    font-size: 0; }\n  .mdc-multi-select .mdc-list-group {\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));\n    margin: 16px 0 0;\n    padding: 0 0 0 16px;\n    font-weight: normal; }\n    .mdc-multi-select .mdc-list-group:last-child {\n      margin-bottom: 16px; }\n    .mdc-multi-select .mdc-list-group .mdc-list-divider {\n      margin-left: -16px; }\n  .mdc-multi-select .mdc-list-item {\n    color: rgba(0, 0, 0, 0.87);\n    /* @alternate */\n    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n    margin: 0 0 0 -16px;\n    padding: 0 16px; }\n    .mdc-multi-select .mdc-list-item:first-child {\n      margin-top: 12px; }\n    .mdc-multi-select .mdc-list-item:last-child {\n      margin-bottom: 8px; }\n    .mdc-multi-select .mdc-list-item::before, .mdc-multi-select .mdc-list-item::after {\n      content: none; }\n  .mdc-multi-select .mdc-list-item:checked {\n    background-color: #fff;\n    /* @alternate */\n    background-color: var(--mdc-theme-background, #fff); }\n\n.mdc-multi-select:focus .mdc-list-item:checked {\n  background-color: #6200ee;\n  /* @alternate */\n  background-color: var(--mdc-theme-primary, #6200ee); }\n\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n@-webkit-keyframes mdc-slider-emphasize {\n  0% {\n    -webkit-animation-timing-function: ease-out;\n            animation-timing-function: ease-out; }\n  50% {\n    -webkit-animation-timing-function: ease-in;\n            animation-timing-function: ease-in;\n    -webkit-transform: scale(0.85);\n            transform: scale(0.85); }\n  100% {\n    -webkit-transform: scale(0.571);\n            transform: scale(0.571); } }\n@keyframes mdc-slider-emphasize {\n  0% {\n    -webkit-animation-timing-function: ease-out;\n            animation-timing-function: ease-out; }\n  50% {\n    -webkit-animation-timing-function: ease-in;\n            animation-timing-function: ease-in;\n    -webkit-transform: scale(0.85);\n            transform: scale(0.85); }\n  100% {\n    -webkit-transform: scale(0.571);\n            transform: scale(0.571); } }\n\n.mdc-slider {\n  position: relative;\n  width: 100%;\n  height: 48px;\n  cursor: pointer;\n  -ms-touch-action: pan-x;\n      touch-action: pan-x;\n  -webkit-tap-highlight-color: transparent; }\n  .mdc-slider:not(.mdc-slider--disabled) .mdc-slider__track {\n    background-color: #018786;\n    /* @alternate */\n    background-color: var(--mdc-theme-secondary, #018786); }\n  .mdc-slider:not(.mdc-slider--disabled) .mdc-slider__track-container {\n    background-color: rgba(1, 135, 134, 0.26); }\n  .mdc-slider:not(.mdc-slider--disabled) .mdc-slider__track-marker::after,\n  .mdc-slider:not(.mdc-slider--disabled) .mdc-slider__track-marker-container::after {\n    background-color: #018786;\n    /* @alternate */\n    background-color: var(--mdc-theme-secondary, #018786); }\n  .mdc-slider:not(.mdc-slider--disabled) .mdc-slider__thumb {\n    fill: #018786;\n    /* @alternate */\n    fill: var(--mdc-theme-secondary, #018786);\n    stroke: #018786;\n    /* @alternate */\n    stroke: var(--mdc-theme-secondary, #018786); }\n  .mdc-slider:not(.mdc-slider--disabled) .mdc-slider__focus-ring {\n    background-color: #018786;\n    /* @alternate */\n    background-color: var(--mdc-theme-secondary, #018786); }\n  .mdc-slider:not(.mdc-slider--disabled) .mdc-slider__pin {\n    background-color: #018786;\n    /* @alternate */\n    background-color: var(--mdc-theme-secondary, #018786); }\n  .mdc-slider:not(.mdc-slider--disabled) .mdc-slider__pin {\n    color: white;\n    /* @alternate */\n    color: var(--mdc-theme-text-primary-on-dark, white); }\n  .mdc-slider--disabled {\n    cursor: auto; }\n    .mdc-slider--disabled .mdc-slider__track {\n      background-color: #9a9a9a; }\n    .mdc-slider--disabled .mdc-slider__track-container {\n      background-color: rgba(154, 154, 154, 0.26); }\n    .mdc-slider--disabled .mdc-slider__track-marker::after,\n    .mdc-slider--disabled .mdc-slider__track-marker-container::after {\n      background-color: #9a9a9a; }\n    .mdc-slider--disabled .mdc-slider__thumb {\n      fill: #9a9a9a;\n      stroke: #9a9a9a; }\n    .mdc-slider--disabled .mdc-slider__thumb {\n      /* @alternate */\n      stroke: white;\n      stroke: var(--mdc-slider-bg-color-behind-component, white); }\n  .mdc-slider:focus {\n    outline: none; }\n  .mdc-slider__track-container {\n    position: absolute;\n    top: 50%;\n    width: 100%;\n    height: 2px;\n    overflow: hidden; }\n  .mdc-slider__track {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    -webkit-transform-origin: left top;\n            transform-origin: left top;\n    will-change: transform; }\n    .mdc-slider[dir=\"rtl\"] .mdc-slider__track,\n    [dir=\"rtl\"] .mdc-slider .mdc-slider__track {\n      -webkit-transform-origin: right top;\n              transform-origin: right top; }\n  .mdc-slider__track-marker-container {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    margin-right: 0;\n    margin-left: -1px;\n    visibility: hidden; }\n    .mdc-slider[dir=\"rtl\"] .mdc-slider__track-marker-container,\n    [dir=\"rtl\"] .mdc-slider .mdc-slider__track-marker-container {\n      margin-right: -1px;\n      margin-left: 0; }\n    .mdc-slider__track-marker-container::after {\n      display: block;\n      width: 2px;\n      height: 2px;\n      content: \"\"; }\n  .mdc-slider__track-marker {\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1; }\n    .mdc-slider__track-marker::after {\n      display: block;\n      width: 2px;\n      height: 2px;\n      content: \"\"; }\n    .mdc-slider__track-marker:first-child::after {\n      width: 3px; }\n  .mdc-slider__thumb-container {\n    position: absolute;\n    top: 15px;\n    left: 0;\n    width: 21px;\n    height: 100%;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    will-change: transform; }\n  .mdc-slider__thumb {\n    position: absolute;\n    top: 0;\n    left: 0;\n    -webkit-transform: scale(0.571);\n            transform: scale(0.571);\n    -webkit-transition: fill 100ms ease-out, stroke 100ms ease-out, -webkit-transform 100ms ease-out;\n    transition: fill 100ms ease-out, stroke 100ms ease-out, -webkit-transform 100ms ease-out;\n    transition: transform 100ms ease-out, fill 100ms ease-out, stroke 100ms ease-out;\n    transition: transform 100ms ease-out, fill 100ms ease-out, stroke 100ms ease-out, -webkit-transform 100ms ease-out;\n    stroke-width: 3.5; }\n  .mdc-slider__focus-ring {\n    width: 21px;\n    height: 21px;\n    -webkit-transition: opacity 266.67ms ease-out, background-color 266.67ms ease-out, -webkit-transform 266.67ms ease-out;\n    transition: opacity 266.67ms ease-out, background-color 266.67ms ease-out, -webkit-transform 266.67ms ease-out;\n    transition: transform 266.67ms ease-out, opacity 266.67ms ease-out, background-color 266.67ms ease-out;\n    transition: transform 266.67ms ease-out, opacity 266.67ms ease-out, background-color 266.67ms ease-out, -webkit-transform 266.67ms ease-out;\n    border-radius: 50%;\n    opacity: 0; }\n  .mdc-slider__pin {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: absolute;\n    top: 0;\n    left: 0;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n    width: 26px;\n    height: 26px;\n    margin-top: -2px;\n    margin-left: -2px;\n    -webkit-transform: rotate(-45deg) scale(0) translate(0, 0);\n            transform: rotate(-45deg) scale(0) translate(0, 0);\n    -webkit-transition: -webkit-transform 100ms ease-out;\n    transition: -webkit-transform 100ms ease-out;\n    transition: transform 100ms ease-out;\n    transition: transform 100ms ease-out, -webkit-transform 100ms ease-out;\n    border-radius: 50% 50% 50% 0%;\n    /**\n     * Ensuring that the pin is higher than the thumb in the stacking order\n     * removes some rendering jank observed in Chrome.\n     */\n    z-index: 1; }\n  .mdc-slider__pin-value-marker {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.75rem;\n    line-height: 1.25rem;\n    font-weight: 400;\n    letter-spacing: 0.08em;\n    text-decoration: inherit;\n    text-transform: inherit;\n    -webkit-transform: rotate(45deg);\n            transform: rotate(45deg); }\n\n.mdc-slider--active .mdc-slider__thumb {\n  -webkit-transform: scale3d(1, 1, 1);\n          transform: scale3d(1, 1, 1); }\n\n.mdc-slider--focus .mdc-slider__thumb {\n  -webkit-animation: mdc-slider-emphasize 266.67ms linear;\n          animation: mdc-slider-emphasize 266.67ms linear; }\n\n.mdc-slider--focus .mdc-slider__focus-ring {\n  -webkit-transform: scale3d(1.55, 1.55, 1.55);\n          transform: scale3d(1.55, 1.55, 1.55);\n  opacity: .25; }\n\n.mdc-slider--in-transit .mdc-slider__thumb {\n  -webkit-transition-delay: 140ms;\n          transition-delay: 140ms; }\n\n.mdc-slider--in-transit .mdc-slider__thumb-container,\n.mdc-slider--in-transit .mdc-slider__track,\n.mdc-slider:focus:not(.mdc-slider--active) .mdc-slider__thumb-container,\n.mdc-slider:focus:not(.mdc-slider--active) .mdc-slider__track {\n  -webkit-transition: -webkit-transform 80ms ease;\n  transition: -webkit-transform 80ms ease;\n  transition: transform 80ms ease;\n  transition: transform 80ms ease, -webkit-transform 80ms ease; }\n\n.mdc-slider--discrete.mdc-slider--active .mdc-slider__thumb {\n  -webkit-transform: scale(calc(12 / 21));\n          transform: scale(calc(12 / 21)); }\n\n.mdc-slider--discrete.mdc-slider--active .mdc-slider__pin {\n  -webkit-transform: rotate(-45deg) scale(1) translate(19px, -20px);\n          transform: rotate(-45deg) scale(1) translate(19px, -20px); }\n\n.mdc-slider--discrete.mdc-slider--focus .mdc-slider__thumb {\n  -webkit-animation: none;\n          animation: none; }\n\n.mdc-slider--discrete.mdc-slider--display-markers .mdc-slider__track-marker-container {\n  visibility: visible; }\n\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* postcss-bem-linter: define snackbar */\n.mdc-snackbar {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  position: fixed;\n  bottom: 0;\n  left: 50%;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  padding-right: 24px;\n  padding-left: 24px;\n  -webkit-transform: translate(-50%, 100%);\n          transform: translate(-50%, 100%);\n  -webkit-transition: -webkit-transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1);\n  transition: -webkit-transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1);\n  transition: transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1);\n  transition: transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1);\n  background-color: #323232;\n  pointer-events: none;\n  will-change: transform; }\n  @media (max-width: 599px) {\n    .mdc-snackbar {\n      left: 0;\n      width: 100%;\n      -webkit-transform: translate(0, 100%);\n              transform: translate(0, 100%); } }\n  @media (min-width: 600px) {\n    .mdc-snackbar {\n      min-width: 288px;\n      max-width: 568px;\n      border-radius: 2px; } }\n\n@media (min-width: 600px) {\n  .mdc-snackbar--align-start {\n    /* @noflip */\n    left: 24px;\n    /* @noflip */\n    right: initial;\n    bottom: 24px;\n    -webkit-transform: translate(0, 200%);\n            transform: translate(0, 200%); }\n    [dir=\"rtl\"] .mdc-snackbar--align-start, .mdc-snackbar--align-start[dir=\"rtl\"] {\n      /* @noflip */\n      left: initial;\n      /* @noflip */\n      right: 24px; } }\n\n@media (max-width: 599px) {\n  .mdc-snackbar--align-start {\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    -webkit-transform: translate(0, 100%);\n            transform: translate(0, 100%); } }\n\n.mdc-snackbar--active {\n  -webkit-transform: translate(0);\n          transform: translate(0);\n  -webkit-transition: -webkit-transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: -webkit-transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1);\n  pointer-events: auto; }\n  .mdc-snackbar--active:not(.mdc-snackbar--align-start) {\n    -webkit-transform: translate(-50%, 0);\n            transform: translate(-50%, 0); }\n    @media (max-width: 599px) {\n      .mdc-snackbar--active:not(.mdc-snackbar--align-start) {\n        bottom: 0;\n        left: 0;\n        width: 100%;\n        -webkit-transform: translate(0);\n                transform: translate(0); } }\n\n.mdc-snackbar__action-wrapper {\n  /* @noflip */\n  padding-left: 24px;\n  /* @noflip */\n  padding-right: 0; }\n  [dir=\"rtl\"] .mdc-snackbar__action-wrapper, .mdc-snackbar__action-wrapper[dir=\"rtl\"] {\n    /* @noflip */\n    padding-left: 0;\n    /* @noflip */\n    padding-right: 24px; }\n\n.mdc-snackbar--action-on-bottom {\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column; }\n\n.mdc-snackbar__text {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  /* @noflip */\n  margin-left: 0;\n  /* @noflip */\n  margin-right: auto;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  height: 48px;\n  -webkit-transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n  transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n  opacity: 0;\n  color: white; }\n  .mdc-snackbar[dir=\"rtl\"] .mdc-snackbar__text,\n  [dir=\"rtl\"] .mdc-snackbar .mdc-snackbar__text {\n    /* @noflip */\n    margin-left: auto;\n    /* @noflip */\n    margin-right: 0; }\n  @media (min-width: 600px) {\n    .mdc-snackbar__text {\n      /* @noflip */\n      padding-left: 0;\n      /* @noflip */\n      padding-right: 24px; }\n      [dir=\"rtl\"] .mdc-snackbar__text, .mdc-snackbar__text[dir=\"rtl\"] {\n        /* @noflip */\n        padding-left: 24px;\n        /* @noflip */\n        padding-right: 0; } }\n\n.mdc-snackbar--action-on-bottom .mdc-snackbar__text {\n  margin-right: inherit; }\n\n.mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper {\n  /* @noflip */\n  margin-left: auto;\n  /* @noflip */\n  margin-right: 0;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start;\n  margin-top: -12px;\n  margin-bottom: 8px; }\n  [dir=\"rtl\"] .mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper, .mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper[dir=\"rtl\"] {\n    /* @noflip */\n    margin-left: 0;\n    /* @noflip */\n    margin-right: auto; }\n\n.mdc-snackbar--multiline .mdc-snackbar__text {\n  height: 80px; }\n\n.mdc-snackbar__action-button {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 2.25rem;\n  font-weight: 500;\n  letter-spacing: 0.04em;\n  text-decoration: none;\n  text-transform: uppercase;\n  color: #018786;\n  /* @alternate */\n  color: var(--mdc-theme-secondary, #018786);\n  padding: 0;\n  -webkit-transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n  transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n  border: none;\n  outline: none;\n  background-color: transparent;\n  opacity: 0;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  -webkit-appearance: none;\n  visibility: hidden; }\n  .mdc-snackbar__action-button::-moz-focus-inner {\n    border: 0; }\n  .mdc-snackbar__action-button:hover {\n    cursor: pointer; }\n  .mdc-snackbar__action-button:not([aria-hidden]) {\n    visibility: inherit; }\n\n.mdc-snackbar--active .mdc-snackbar__text,\n.mdc-snackbar--active .mdc-snackbar__action-button:not([aria-hidden]) {\n  -webkit-transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n  transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n  opacity: 1; }\n\n/* stylelint-disable plugin/selector-bem-pattern */\n.mdc-snackbar--multiline.mdc-snackbar--action-on-bottom .mdc-snackbar__text {\n  margin: 0; }\n\n/* stylelint-enable plugin/selector-bem-pattern */\n/* postcss-bem-linter: end */\n.mdc-snackbar {\n  z-index: 4; }\n\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* stylelint-disable selector-max-type */\n.mdc-form-field {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  vertical-align: middle; }\n  .mdc-form-field > label {\n    -webkit-box-ordinal-group: 1;\n        -ms-flex-order: 0;\n            order: 0;\n    margin-right: auto;\n    padding-left: 4px; }\n  [dir=\"rtl\"] .mdc-form-field > label, .mdc-form-field[dir=\"rtl\"] > label {\n    margin-left: auto;\n    padding-right: 4px; }\n\n.mdc-form-field--align-end > label {\n  -webkit-box-ordinal-group: 0;\n      -ms-flex-order: -1;\n          order: -1;\n  margin-left: auto;\n  padding-right: 4px; }\n\n[dir=\"rtl\"] .mdc-form-field--align-end > label, .mdc-form-field--align-end[dir=\"rtl\"] > label {\n  margin-right: auto;\n  padding-left: 4px; }\n\n/* stylelint-enable selector-max-type */\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n * $opacity-boost.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-value(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n.mdc-switch {\n  display: inline-block;\n  position: relative; }\n  .mdc-switch__native-control {\n    position: absolute;\n    top: -14px;\n    left: -14px;\n    width: 48px;\n    height: 48px;\n    display: inline-block;\n    margin-top: -3px;\n    -webkit-transition: -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n    opacity: 0;\n    cursor: pointer;\n    z-index: 2; }\n    .mdc-switch__native-control:checked {\n      -webkit-transform: translateX(14px);\n              transform: translateX(14px); }\n\n.mdc-switch__native-control:enabled:not(:checked) ~ .mdc-switch__background::before {\n  background-color: #000; }\n\n.mdc-switch__native-control:enabled:not(:checked) ~ .mdc-switch__background .mdc-switch__knob {\n  background-color: #fafafa; }\n\n.mdc-switch__native-control:enabled:not(:checked) ~ .mdc-switch__background .mdc-switch__knob::before {\n  background-color: #9e9e9e; }\n\n.mdc-switch__native-control:enabled:checked ~ .mdc-switch__background::before {\n  background-color: #018786;\n  /* @alternate */\n  background-color: var(--mdc-theme-secondary, #018786); }\n\n.mdc-switch__native-control:enabled:checked ~ .mdc-switch__background .mdc-switch__knob {\n  background-color: #018786;\n  /* @alternate */\n  background-color: var(--mdc-theme-secondary, #018786); }\n\n.mdc-switch__native-control:enabled:checked ~ .mdc-switch__background .mdc-switch__knob::before {\n  background-color: #018786;\n  /* @alternate */\n  background-color: var(--mdc-theme-secondary, #018786); }\n\n.mdc-switch__background {\n  display: block;\n  position: relative;\n  width: 34px;\n  height: 14px;\n  border-radius: 50%;\n  outline: none;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none; }\n  .mdc-switch__background::before {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    -webkit-transition: opacity 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: opacity 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);\n    border-radius: 7px;\n    opacity: .38;\n    content: \"\"; }\n\n.mdc-switch__knob {\n  -webkit-box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  display: block;\n  position: absolute;\n  top: -3px;\n  left: 0;\n  width: 20px;\n  height: 20px;\n  -webkit-transform: translateX(0);\n          transform: translateX(0);\n  -webkit-transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-radius: 50%;\n  z-index: 1; }\n  .mdc-switch__knob::before {\n    position: absolute;\n    top: -14px;\n    left: -14px;\n    width: 48px;\n    height: 48px;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n    border-radius: 50%;\n    opacity: .2;\n    content: \"\"; }\n\n.mdc-switch__native-control:focus ~ .mdc-switch__background .mdc-switch__knob::before {\n  -webkit-transform: scale(1);\n          transform: scale(1); }\n\n.mdc-switch__native-control:checked ~ .mdc-switch__background::before {\n  opacity: .5; }\n\n.mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob {\n  -webkit-transform: translateX(14px);\n          transform: translateX(14px); }\n  .mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob::before {\n    opacity: .15; }\n\n.mdc-switch__native-control:disabled {\n  cursor: initial; }\n\n.mdc-switch__native-control:disabled ~ .mdc-switch__background::before {\n  background-color: #000;\n  opacity: .12; }\n\n.mdc-switch__native-control:disabled ~ .mdc-switch__background .mdc-switch__knob {\n  background-color: #bdbdbd; }\n\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-tab {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 1.5rem;\n  font-weight: 500;\n  letter-spacing: 0.04em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  color: rgba(0, 0, 0, 0.54);\n  /* @alternate */\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: transparent;\n  will-change: transform, opacity;\n  display: table-cell;\n  position: relative;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  min-width: 160px;\n  min-height: 48px;\n  padding: 0 24px;\n  text-align: center;\n  text-decoration: none;\n  white-space: nowrap;\n  cursor: pointer;\n  overflow: hidden;\n  vertical-align: middle; }\n  .mdc-tab .mdc-tab__icon {\n    color: rgba(0, 0, 0, 0.54);\n    /* @alternate */\n    color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)); }\n  .mdc-tab::before, .mdc-tab::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-tab::before {\n    -webkit-transition: opacity 15ms linear;\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-tab.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-tab.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-tab.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-tab.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-tab.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-tab::before, .mdc-tab::after {\n    background-color: black; }\n  .mdc-tab:hover::before {\n    opacity: 0.04; }\n  .mdc-tab:not(.mdc-ripple-upgraded):focus::before, .mdc-tab.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-tab:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  .mdc-tab:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-tab.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n  .mdc-tab::before, .mdc-tab::after {\n    top: calc(50% - 100%);\n    /* @noflip */\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%; }\n  .mdc-tab.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-tab:hover {\n    color: rgba(0, 0, 0, 0.87);\n    /* @alternate */\n    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); }\n    .mdc-tab:hover .mdc-tab__icon {\n      color: rgba(0, 0, 0, 0.87);\n      /* @alternate */\n      color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); }\n  .mdc-tab:focus {\n    outline: none; }\n  @media screen and (max-width: 600px) {\n    .mdc-tab {\n      min-width: 72px;\n      padding: 0 12px; } }\n  .mdc-tab__icon {\n    display: block;\n    margin: 0 auto;\n    width: 24px;\n    height: 24px; }\n    .mdc-tab-bar--icons-with-text .mdc-tab__icon {\n      margin-top: 4px; }\n  .mdc-tab__icon-text {\n    display: block;\n    margin: 0 auto; }\n  .mdc-tab__icon + .mdc-tab__icon-text {\n    padding-top: 6px; }\n\n.mdc-tab--active {\n  color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); }\n  .mdc-tab--active .mdc-tab__icon {\n    color: rgba(0, 0, 0, 0.87);\n    /* @alternate */\n    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); }\n  .mdc-tab--active::before {\n    bottom: 0; }\n\n.mdc-tab__indicator {\n  background-color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  background-color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n  position: absolute;\n  bottom: 0;\n  height: 2px;\n  visibility: hidden;\n  left: 2px;\n  width: calc(100% - 4px); }\n\n.mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab--active .mdc-tab__indicator,\n.mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab:hover .mdc-tab__indicator,\n.mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab:active .mdc-tab__indicator {\n  visibility: visible; }\n\n.mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab:not(.mdc-tab--active):hover .mdc-tab__indicator {\n  opacity: .38; }\n\n.mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab--active,\n.mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab:not(.mdc-tab--active):active .mdc-tab__indicator {\n  opacity: .87; }\n\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n.mdc-tab-bar__indicator,\n.mdc-tab__indicator {\n  background-color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  background-color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); }\n\n.mdc-tab-bar {\n  display: table;\n  position: relative;\n  height: 48px;\n  margin: 0 auto;\n  text-transform: uppercase; }\n\n.mdc-tab-bar__indicator {\n  background-color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  background-color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n  position: absolute;\n  bottom: 0;\n  height: 2px;\n  visibility: hidden;\n  width: 100%;\n  left: 0;\n  -webkit-transform-origin: left top;\n          transform-origin: left top;\n  -webkit-transition: -webkit-transform 240ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: -webkit-transform 240ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 240ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 240ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 240ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  will-change: transform; }\n\n.mdc-tab-bar--icons-with-text {\n  height: 72px; }\n\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n.mdc-tab-bar-scroller {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  width: 100%;\n  background-color: inherit;\n  overflow: hidden; }\n  .mdc-tab-bar-scroller__scroll-frame {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: relative;\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1;\n    -webkit-box-pack: start;\n        -ms-flex-pack: start;\n            justify-content: flex-start;\n    overflow: hidden; }\n    .mdc-tab-bar-scroller__scroll-frame__tabs {\n      -webkit-transition: -webkit-transform 240ms 0ms cubic-bezier(0, 0, 0.2, 1);\n      transition: -webkit-transform 240ms 0ms cubic-bezier(0, 0, 0.2, 1);\n      transition: transform 240ms 0ms cubic-bezier(0, 0, 0.2, 1);\n      transition: transform 240ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 240ms 0ms cubic-bezier(0, 0, 0.2, 1);\n      will-change: transform; }\n  .mdc-tab-bar-scroller__indicator {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n    width: 48px;\n    cursor: pointer;\n    visibility: hidden;\n    color: rgba(0, 0, 0, 0.54);\n    /* @alternate */\n    color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)); }\n    .mdc-tab-bar-scroller__indicator:hover {\n      color: rgba(0, 0, 0, 0.87);\n      /* @alternate */\n      color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); }\n    .mdc-tab-bar-scroller__indicator__inner {\n      color: inherit;\n      text-decoration: inherit;\n      cursor: inherit; }\n      .mdc-tab-bar-scroller__indicator__inner:focus {\n        outline-color: inherit; }\n      .mdc-tab-bar-scroller[dir=\"rtl\"] .mdc-tab-bar-scroller__indicator__inner,\n      [dir=\"rtl\"] .mdc-tab-bar-scroller .mdc-tab-bar-scroller__indicator__inner {\n        -webkit-transform: rotate(180deg);\n                transform: rotate(180deg); }\n    .mdc-tab-bar-scroller__indicator__inner:hover {\n      color: inherit; }\n  .mdc-tab-bar-scroller__indicator--enabled {\n    visibility: visible; }\n\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n.mdc-floating-label {\n  position: absolute;\n  bottom: 8px;\n  left: 0;\n  -webkit-transform-origin: left top;\n          transform-origin: left top;\n  -webkit-transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), color 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: text; }\n  [dir=\"rtl\"] .mdc-floating-label, .mdc-floating-label[dir=\"rtl\"] {\n    right: 0;\n    left: auto;\n    -webkit-transform-origin: right top;\n            transform-origin: right top; }\n\n.mdc-floating-label--float-above {\n  cursor: auto; }\n\n.mdc-floating-label--float-above {\n  -webkit-transform: translateY(-100%) scale(0.75);\n          transform: translateY(-100%) scale(0.75); }\n\n.mdc-floating-label--shake {\n  -webkit-animation: mdc-floating-label-shake-float-above-standard 250ms 1;\n          animation: mdc-floating-label-shake-float-above-standard 250ms 1; }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-standard {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(4% - 0%)) translateY(-100%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(-4% - 0%)) translateY(-100%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75); } }\n\n@keyframes mdc-floating-label-shake-float-above-standard {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(4% - 0%)) translateY(-100%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(-4% - 0%)) translateY(-100%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75); } }\n\n.mdc-line-ripple {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 2px;\n  -webkit-transform: scaleX(0);\n          transform: scaleX(0);\n  -webkit-transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), opacity 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  opacity: 0;\n  z-index: 2; }\n\n.mdc-line-ripple--active {\n  -webkit-transform: scaleX(1);\n          transform: scaleX(1);\n  opacity: 1; }\n\n.mdc-line-ripple--deactivating {\n  opacity: 0; }\n\n.mdc-notched-outline {\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: transparent;\n  will-change: transform, opacity;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: calc(100% - 1px);\n  height: calc(100% - 2px);\n  -webkit-transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  opacity: 0;\n  overflow: hidden; }\n  .mdc-notched-outline::before, .mdc-notched-outline::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-notched-outline::before {\n    -webkit-transition: opacity 15ms linear;\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-notched-outline.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-notched-outline.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-notched-outline.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-notched-outline.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-notched-outline.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-notched-outline::before, .mdc-notched-outline::after {\n    top: calc(50% - 100%);\n    /* @noflip */\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%; }\n  .mdc-notched-outline.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-notched-outline::before, .mdc-notched-outline::after {\n    background-color: rgba(0, 0, 0, 0.87); }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-notched-outline::before, .mdc-notched-outline::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); } }\n  .mdc-notched-outline:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  .mdc-notched-outline:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-notched-outline.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n  .mdc-notched-outline svg {\n    position: absolute;\n    width: 100%;\n    height: 100%; }\n\n.mdc-notched-outline__idle {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: calc(100% - 4px);\n  height: calc(100% - 4px);\n  -webkit-transition: opacity 100ms ease;\n  transition: opacity 100ms ease;\n  border: 1px solid;\n  opacity: 1; }\n\n.mdc-notched-outline__path {\n  stroke-width: 1px;\n  -webkit-transition: stroke 180ms cubic-bezier(0.4, 0, 0.2, 1), stroke-width 180ms cubic-bezier(0.4, 0, 0.2, 1), opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: stroke 180ms cubic-bezier(0.4, 0, 0.2, 1), stroke-width 180ms cubic-bezier(0.4, 0, 0.2, 1), opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  fill: transparent; }\n\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-text-field-helper-text {\n  margin: 0;\n  -webkit-transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  opacity: 0;\n  font-size: .75rem;\n  will-change: opacity; }\n  .mdc-text-field + .mdc-text-field-helper-text {\n    margin-bottom: 8px; }\n\n.mdc-text-field-helper-text--persistent {\n  -webkit-transition: none;\n  transition: none;\n  opacity: 1;\n  will-change: initial; }\n\n.mdc-text-field--with-leading-icon .mdc-text-field__icon,\n.mdc-text-field--with-trailing-icon .mdc-text-field__icon {\n  position: absolute;\n  bottom: 16px;\n  cursor: pointer; }\n\n.mdc-text-field__icon:not([tabindex]),\n.mdc-text-field__icon[tabindex=\"-1\"] {\n  cursor: default;\n  pointer-events: none; }\n\n.mdc-text-field {\n  display: inline-block;\n  position: relative;\n  margin-bottom: 8px;\n  will-change: opacity, transform, color; }\n  .mdc-text-field:not(.mdc-text-field--disabled):not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mdc-text-field__input {\n    border-bottom-color: rgba(0, 0, 0, 0.5); }\n  .mdc-text-field:not(.mdc-text-field--disabled):not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mdc-text-field__input:hover {\n    border-bottom-color: black; }\n  .mdc-text-field .mdc-line-ripple {\n    background-color: #6200ee;\n    /* @alternate */\n    background-color: var(--mdc-theme-primary, #6200ee); }\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input {\n    color: rgba(0, 0, 0, 0.87);\n    /* @alternate */\n    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); }\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-floating-label {\n    color: rgba(0, 0, 0, 0.6); }\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder {\n    color: rgba(0, 0, 0, 0.6); }\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.6); }\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input::-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.6); }\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder {\n    color: rgba(0, 0, 0, 0.6); }\n  .mdc-text-field:not(.mdc-text-field--disabled) + .mdc-text-field-helper-text {\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38)); }\n  .mdc-text-field:not(.mdc-text-field--disabled):not(.mdc-text-field--textarea) {\n    border-bottom-color: rgba(0, 0, 0, 0.12); }\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon {\n    color: black; }\n\n.mdc-text-field__input {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  letter-spacing: 0.04em;\n  width: 100%;\n  padding: 20px 0 8px;\n  -webkit-transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: none;\n  border-bottom: 1px solid;\n  border-radius: 0;\n  background: none;\n  font-size: inherit;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none; }\n  .mdc-text-field__input::-webkit-input-placeholder {\n    -webkit-transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    opacity: 1; }\n  .mdc-text-field__input:-ms-input-placeholder {\n    -webkit-transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    opacity: 1; }\n  .mdc-text-field__input::-ms-input-placeholder {\n    -webkit-transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    opacity: 1; }\n  .mdc-text-field__input::placeholder {\n    -webkit-transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    opacity: 1; }\n  .mdc-text-field__input:focus {\n    outline: none; }\n  .mdc-text-field__input:invalid {\n    -webkit-box-shadow: none;\n            box-shadow: none; }\n  .mdc-text-field__input:-webkit-autofill + .mdc-floating-label {\n    -webkit-transform: translateY(-100%) scale(0.75);\n            transform: translateY(-100%) scale(0.75);\n    cursor: auto; }\n\n.mdc-text-field--outlined {\n  height: 56px;\n  border: none; }\n  .mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__idle {\n    border-color: rgba(0, 0, 0, 0.12); }\n  .mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__path {\n    stroke: rgba(0, 0, 0, 0.12); }\n  .mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused) .mdc-text-field__input:hover ~ .mdc-notched-outline__idle,\n  .mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused) .mdc-text-field__icon:hover ~ .mdc-notched-outline__idle {\n    border-color: rgba(0, 0, 0, 0.87); }\n  .mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused) .mdc-text-field__input:hover ~ .mdc-notched-outline .mdc-notched-outline__path,\n  .mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused) .mdc-text-field__icon:hover ~ .mdc-notched-outline .mdc-notched-outline__path {\n    stroke: rgba(0, 0, 0, 0.87); }\n  .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__path {\n    stroke: #6200ee;\n    /* @alternate */\n    stroke: var(--mdc-theme-primary, #6200ee); }\n  .mdc-text-field--outlined .mdc-floating-label--float-above {\n    -webkit-transform: translateY(-130%) scale(0.75);\n            transform: translateY(-130%) scale(0.75); }\n  .mdc-text-field--outlined .mdc-floating-label--shake {\n    -webkit-animation: mdc-floating-label-shake-float-above-text-field-outlined 250ms 1;\n            animation: mdc-floating-label-shake-float-above-text-field-outlined 250ms 1; }\n  .mdc-text-field--outlined .mdc-notched-outline {\n    border-radius: 4px; }\n  .mdc-text-field--outlined .mdc-notched-outline__idle {\n    border-radius: 4px; }\n  .mdc-text-field--outlined .mdc-text-field__input {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    height: 30px;\n    padding: 12px;\n    border: none;\n    background-color: transparent;\n    z-index: 1; }\n  .mdc-text-field--outlined .mdc-floating-label {\n    /* @noflip */\n    left: 16px;\n    /* @noflip */\n    right: initial;\n    position: absolute;\n    bottom: 20px;\n    -webkit-transition: -webkit-transform 260ms ease;\n    transition: -webkit-transform 260ms ease;\n    transition: transform 260ms ease;\n    transition: transform 260ms ease, -webkit-transform 260ms ease; }\n    [dir=\"rtl\"] .mdc-text-field--outlined .mdc-floating-label, .mdc-text-field--outlined .mdc-floating-label[dir=\"rtl\"] {\n      /* @noflip */\n      left: initial;\n      /* @noflip */\n      right: 16px; }\n  .mdc-text-field--outlined .mdc-text-field__icon {\n    z-index: 2; }\n\n.mdc-text-field--outlined.mdc-text-field--focused .mdc-notched-outline__path {\n  stroke-width: 2px; }\n\n.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mdc-text-field--outlined.mdc-text-field--disabled .mdc-notched-outline__idle {\n  border-color: rgba(0, 0, 0, 0.06); }\n\n.mdc-text-field--outlined.mdc-text-field--disabled .mdc-notched-outline__path {\n  stroke: rgba(0, 0, 0, 0.06); }\n\n.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input {\n  border-bottom: none; }\n\n.mdc-text-field--outlined.mdc-text-field--dense {\n  height: 48px; }\n  .mdc-text-field--outlined.mdc-text-field--dense .mdc-floating-label--float-above {\n    -webkit-transform: translateY(-145%) scale(0.923);\n            transform: translateY(-145%) scale(0.923); }\n  .mdc-text-field--outlined.mdc-text-field--dense .mdc-floating-label--shake {\n    -webkit-animation: mdc-floating-label-shake-float-above-text-field-outlined-dense 250ms 1;\n            animation: mdc-floating-label-shake-float-above-text-field-outlined-dense 250ms 1; }\n  .mdc-text-field--outlined.mdc-text-field--dense .mdc-text-field__input {\n    padding: 12px 12px 7px; }\n  .mdc-text-field--outlined.mdc-text-field--dense .mdc-floating-label {\n    bottom: 18px; }\n  .mdc-text-field--outlined.mdc-text-field--dense .mdc-text-field__icon {\n    top: 12px; }\n\n.mdc-text-field--box {\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: transparent;\n  will-change: transform, opacity;\n  border-radius: 4px 4px 0 0;\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  position: relative;\n  height: 56px;\n  margin-top: 16px;\n  overflow: hidden; }\n  .mdc-text-field--box::before, .mdc-text-field--box::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-text-field--box::before {\n    -webkit-transition: opacity 15ms linear;\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-text-field--box.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-text-field--box.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-text-field--box.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-text-field--box.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-text-field--box.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-text-field--box::before, .mdc-text-field--box::after {\n    background-color: rgba(0, 0, 0, 0.87); }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-text-field--box::before, .mdc-text-field--box::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); } }\n  .mdc-text-field--box:hover::before {\n    opacity: 0.04; }\n  .mdc-text-field--box:not(.mdc-ripple-upgraded):focus::before, .mdc-text-field--box:not(.mdc-ripple-upgraded):focus-within::before, .mdc-text-field--box.mdc-ripple-upgraded--background-focused::before {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-text-field--box:not(.mdc-ripple-upgraded)::after {\n    -webkit-transition: opacity 150ms linear;\n    transition: opacity 150ms linear; }\n  .mdc-text-field--box:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 75ms;\n            transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-text-field--box.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: $opacity; }\n  .mdc-text-field--box::before, .mdc-text-field--box::after {\n    top: calc(50% - 100%);\n    /* @noflip */\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%; }\n  .mdc-text-field--box.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-text-field--box:not(.mdc-text-field--disabled) {\n    background-color: rgba(0, 0, 0, 0.04); }\n  .mdc-text-field--box .mdc-floating-label--float-above {\n    -webkit-transform: translateY(-50%) scale(0.75);\n            transform: translateY(-50%) scale(0.75); }\n  .mdc-text-field--box .mdc-floating-label--shake {\n    -webkit-animation: mdc-floating-label-shake-float-above-text-field-box 250ms 1;\n            animation: mdc-floating-label-shake-float-above-text-field-box 250ms 1; }\n  .mdc-text-field--box .mdc-text-field__input {\n    -ms-flex-item-align: end;\n        align-self: flex-end;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    height: 100%;\n    padding: 20px 16px 0; }\n  .mdc-text-field--box .mdc-floating-label {\n    /* @noflip */\n    left: 16px;\n    /* @noflip */\n    right: initial;\n    position: absolute;\n    bottom: 20px;\n    width: calc(100% - 48px);\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    pointer-events: none;\n    overflow: hidden;\n    will-change: transform; }\n    [dir=\"rtl\"] .mdc-text-field--box .mdc-floating-label, .mdc-text-field--box .mdc-floating-label[dir=\"rtl\"] {\n      /* @noflip */\n      left: initial;\n      /* @noflip */\n      right: 16px; }\n\n.mdc-text-field--box.mdc-text-field--disabled {\n  background-color: rgba(0, 0, 0, 0.02);\n  border-bottom: none; }\n  .mdc-text-field--box.mdc-text-field--disabled .mdc-text-field__input {\n    border-bottom-color: rgba(0, 0, 0, 0.06); }\n  .mdc-text-field--box.mdc-text-field--disabled:not(.mdc-text-field--disabled) .mdc-floating-label {\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38)); }\n  .mdc-text-field--box.mdc-text-field--disabled:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder {\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38)); }\n  .mdc-text-field--box.mdc-text-field--disabled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38)); }\n  .mdc-text-field--box.mdc-text-field--disabled:not(.mdc-text-field--disabled) .mdc-text-field__input::-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38)); }\n  .mdc-text-field--box.mdc-text-field--disabled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder {\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38)); }\n\n.mdc-text-field--box.mdc-text-field--dense .mdc-floating-label--float-above {\n  -webkit-transform: translateY(-90%) scale(0.923);\n          transform: translateY(-90%) scale(0.923); }\n\n.mdc-text-field--box.mdc-text-field--dense .mdc-floating-label--shake {\n  -webkit-animation: mdc-floating-label-shake-float-above-text-field-box-dense 250ms 1;\n          animation: mdc-floating-label-shake-float-above-text-field-box-dense 250ms 1; }\n\n.mdc-text-field--box.mdc-text-field--dense .mdc-text-field__input {\n  padding: 12px 12px 0; }\n\n.mdc-text-field--with-leading-icon .mdc-text-field__icon {\n  /* @noflip */\n  left: 15px;\n  /* @noflip */\n  right: initial; }\n  [dir=\"rtl\"] .mdc-text-field--with-leading-icon .mdc-text-field__icon, .mdc-text-field--with-leading-icon .mdc-text-field__icon[dir=\"rtl\"] {\n    /* @noflip */\n    left: initial;\n    /* @noflip */\n    right: 15px; }\n\n.mdc-text-field--with-leading-icon .mdc-text-field__input {\n  /* @noflip */\n  padding-left: 48px;\n  /* @noflip */\n  padding-right: 15px; }\n  [dir=\"rtl\"] .mdc-text-field--with-leading-icon .mdc-text-field__input, .mdc-text-field--with-leading-icon .mdc-text-field__input[dir=\"rtl\"] {\n    /* @noflip */\n    padding-left: 15px;\n    /* @noflip */\n    padding-right: 48px; }\n\n.mdc-text-field--with-leading-icon .mdc-floating-label {\n  /* @noflip */\n  left: 48px;\n  /* @noflip */\n  right: initial; }\n  [dir=\"rtl\"] .mdc-text-field--with-leading-icon .mdc-floating-label, .mdc-text-field--with-leading-icon .mdc-floating-label[dir=\"rtl\"] {\n    /* @noflip */\n    left: initial;\n    /* @noflip */\n    right: 48px; }\n\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above {\n  -webkit-transform: translateY(-130%) translateX(-32px) scale(0.75);\n          transform: translateY(-130%) translateX(-32px) scale(0.75); }\n  [dir=\"rtl\"] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above, .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above[dir=\"rtl\"] {\n    -webkit-transform: translateY(-130%) translateX(32px) scale(0.75);\n            transform: translateY(-130%) translateX(32px) scale(0.75); }\n\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake {\n  -webkit-animation: mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1;\n          animation: mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1; }\n\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-text-field--dense .mdc-floating-label--float-above {\n  -webkit-transform: translateY(-145%) translateX(-21px) scale(0.923);\n          transform: translateY(-145%) translateX(-21px) scale(0.923); }\n  [dir=\"rtl\"] .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-text-field--dense .mdc-floating-label--float-above, .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-text-field--dense .mdc-floating-label--float-above[dir=\"rtl\"] {\n    -webkit-transform: translateY(-145%) translateX(21px) scale(0.923);\n            transform: translateY(-145%) translateX(21px) scale(0.923); }\n\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-text-field--dense .mdc-floating-label--shake {\n  -webkit-animation: mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-dense 250ms 1;\n          animation: mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-dense 250ms 1; }\n\n.mdc-text-field--with-trailing-icon .mdc-text-field__icon {\n  /* @noflip */\n  left: initial;\n  /* @noflip */\n  right: 15px; }\n  [dir=\"rtl\"] .mdc-text-field--with-trailing-icon .mdc-text-field__icon, .mdc-text-field--with-trailing-icon .mdc-text-field__icon[dir=\"rtl\"] {\n    /* @noflip */\n    left: 15px;\n    /* @noflip */\n    right: initial; }\n\n.mdc-text-field--with-trailing-icon .mdc-text-field__input {\n  /* @noflip */\n  padding-left: 15px;\n  /* @noflip */\n  padding-right: 48px; }\n  [dir=\"rtl\"] .mdc-text-field--with-trailing-icon .mdc-text-field__input, .mdc-text-field--with-trailing-icon .mdc-text-field__input[dir=\"rtl\"] {\n    /* @noflip */\n    padding-left: 48px;\n    /* @noflip */\n    padding-right: 15px; }\n\n.mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__icon,\n.mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__icon {\n  bottom: 16px;\n  -webkit-transform: scale(0.8);\n          transform: scale(0.8); }\n\n.mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__icon {\n  /* @noflip */\n  left: 12px;\n  /* @noflip */\n  right: initial; }\n  [dir=\"rtl\"] .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__icon, .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__icon[dir=\"rtl\"] {\n    /* @noflip */\n    left: initial;\n    /* @noflip */\n    right: 12px; }\n\n.mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__input {\n  /* @noflip */\n  padding-left: 38px;\n  /* @noflip */\n  padding-right: 12px; }\n  [dir=\"rtl\"] .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__input, .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__input[dir=\"rtl\"] {\n    /* @noflip */\n    padding-left: 12px;\n    /* @noflip */\n    padding-right: 38px; }\n\n.mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-floating-label {\n  /* @noflip */\n  left: 38px;\n  /* @noflip */\n  right: initial; }\n  [dir=\"rtl\"] .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-floating-label, .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-floating-label[dir=\"rtl\"] {\n    /* @noflip */\n    left: initial;\n    /* @noflip */\n    right: 38px; }\n\n.mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__icon {\n  /* @noflip */\n  left: initial;\n  /* @noflip */\n  right: 12px; }\n  [dir=\"rtl\"] .mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__icon, .mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__icon[dir=\"rtl\"] {\n    /* @noflip */\n    left: 12px;\n    /* @noflip */\n    right: initial; }\n\n.mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__input {\n  /* @noflip */\n  padding-left: 12px;\n  /* @noflip */\n  padding-right: 38px; }\n  [dir=\"rtl\"] .mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__input, .mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__input[dir=\"rtl\"] {\n    /* @noflip */\n    padding-left: 38px;\n    /* @noflip */\n    padding-right: 12px; }\n\n.mdc-text-field--upgraded:not(.mdc-text-field--fullwidth):not(.mdc-text-field--box) {\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  position: relative;\n  -webkit-box-align: end;\n      -ms-flex-align: end;\n          align-items: flex-end;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  margin-top: 16px; }\n  .mdc-text-field--upgraded:not(.mdc-text-field--fullwidth):not(.mdc-text-field--box):not(.mdc-text-field--textarea):not(.mdc-text-field--outlined) {\n    height: 48px; }\n\n.mdc-text-field--dense {\n  margin-top: 12px;\n  margin-bottom: 4px;\n  font-size: .813rem; }\n  .mdc-text-field--dense .mdc-floating-label--float-above {\n    -webkit-transform: translateY(-110%) scale(0.923);\n            transform: translateY(-110%) scale(0.923); }\n\n.mdc-text-field__input:required + .mdc-floating-label::after {\n  margin-left: 1px;\n  content: \"*\"; }\n\n.mdc-text-field--textarea {\n  border-radius: 4px;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n  height: initial;\n  -webkit-transition: none;\n  transition: none;\n  border: 1px solid;\n  overflow: hidden; }\n  .mdc-text-field--textarea .mdc-floating-label {\n    border-radius: 4px 4px 0 0; }\n  .mdc-text-field--textarea .mdc-text-field__input {\n    border-radius: 2px; }\n  .mdc-text-field--textarea:not(.mdc-text-field--disabled) {\n    border-color: rgba(0, 0, 0, 0.73); }\n    .mdc-text-field--textarea:not(.mdc-text-field--disabled) .mdc-text-field__input:focus {\n      border-color: rgba(0, 0, 0, 0.73); }\n  .mdc-text-field--textarea .mdc-floating-label--float-above {\n    -webkit-transform: translateY(-50%) scale(0.923);\n            transform: translateY(-50%) scale(0.923); }\n  .mdc-text-field--textarea .mdc-floating-label--shake {\n    -webkit-animation: mdc-floating-label-shake-float-above-textarea 250ms 1;\n            animation: mdc-floating-label-shake-float-above-textarea 250ms 1; }\n  .mdc-text-field--textarea .mdc-text-field__input {\n    margin: 0;\n    padding: 16px;\n    padding-top: 32px;\n    border: 1px solid transparent; }\n  .mdc-text-field--textarea .mdc-floating-label {\n    /* @noflip */\n    left: 1px;\n    /* @noflip */\n    right: initial;\n    background-color: white;\n    top: 18px;\n    bottom: auto;\n    margin-top: 2px;\n    margin-left: 8px;\n    padding: 8px;\n    line-height: 1.15; }\n    [dir=\"rtl\"] .mdc-text-field--textarea .mdc-floating-label, .mdc-text-field--textarea .mdc-floating-label[dir=\"rtl\"] {\n      /* @noflip */\n      left: initial;\n      /* @noflip */\n      right: 1px; }\n\n.mdc-text-field--fullwidth {\n  width: 100%; }\n  .mdc-text-field--fullwidth .mdc-text-field__input {\n    resize: vertical; }\n  .mdc-text-field--fullwidth:not(.mdc-text-field--textarea) {\n    display: block;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    height: 56px;\n    margin: 0;\n    border: none;\n    border-bottom: 1px solid;\n    outline: none; }\n    .mdc-text-field--fullwidth:not(.mdc-text-field--textarea) .mdc-text-field__input {\n      width: 100%;\n      height: 100%;\n      padding: 0;\n      resize: none;\n      border: none !important; }\n\n.mdc-text-field--fullwidth.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--textarea) {\n  border-bottom-color: #d50000; }\n\n.mdc-text-field--dense + .mdc-text-field-helper-text {\n  margin-bottom: 4px; }\n\n.mdc-text-field--box + .mdc-text-field-helper-text,\n.mdc-text-field--outlined + .mdc-text-field-helper-text {\n  margin-right: 16px;\n  margin-left: 16px; }\n\n.mdc-form-field > .mdc-text-field + label {\n  -ms-flex-item-align: start;\n      align-self: flex-start; }\n\n.mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: #6200ee;\n  /* @alternate */\n  color: var(--mdc-theme-primary, #6200ee); }\n\n.mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder {\n  color: #6200ee;\n  /* @alternate */\n  color: var(--mdc-theme-primary, #6200ee); }\n\n.mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder {\n  color: #6200ee;\n  /* @alternate */\n  color: var(--mdc-theme-primary, #6200ee); }\n\n.mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-text-field__input::-ms-input-placeholder {\n  color: #6200ee;\n  /* @alternate */\n  color: var(--mdc-theme-primary, #6200ee); }\n\n.mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder {\n  color: #6200ee;\n  /* @alternate */\n  color: var(--mdc-theme-primary, #6200ee); }\n\n.mdc-text-field--focused .mdc-text-field__input:required + .mdc-floating-label::after {\n  color: #d50000; }\n\n.mdc-text-field--focused + .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg) {\n  opacity: 1; }\n\n.mdc-text-field--textarea.mdc-text-field--focused:not(.mdc-text-field--disabled) {\n  border-color: #6200ee;\n  /* @alternate */\n  border-color: var(--mdc-theme-primary, #6200ee); }\n  .mdc-text-field--textarea.mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-text-field__input:focus {\n    border-color: #6200ee;\n    /* @alternate */\n    border-color: var(--mdc-theme-primary, #6200ee); }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mdc-text-field__input {\n  border-bottom-color: #d50000; }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mdc-text-field__input:hover {\n  border-bottom-color: #d50000; }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple {\n  background-color: #d50000; }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: #d50000; }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder {\n  color: #d50000; }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder {\n  color: #d50000; }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input::-ms-input-placeholder {\n  color: #d50000; }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder {\n  color: #d50000; }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--invalid + .mdc-text-field-helper-text--validation-msg {\n  color: #d50000; }\n\n.mdc-text-field--invalid + .mdc-text-field-helper-text--validation-msg {\n  opacity: 1; }\n\n.mdc-text-field--textarea.mdc-text-field--invalid:not(.mdc-text-field--disabled) {\n  border-color: #d50000; }\n  .mdc-text-field--textarea.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input:focus {\n    border-color: #d50000; }\n\n.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__idle {\n  border-color: #d50000; }\n\n.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__path {\n  stroke: #d50000; }\n\n.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused) .mdc-text-field__input:hover ~ .mdc-notched-outline__idle,\n.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused) .mdc-text-field__icon:hover ~ .mdc-notched-outline__idle {\n  border-color: #d50000; }\n\n.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused) .mdc-text-field__input:hover ~ .mdc-notched-outline .mdc-notched-outline__path,\n.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused) .mdc-text-field__icon:hover ~ .mdc-notched-outline .mdc-notched-outline__path {\n  stroke: #d50000; }\n\n.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__path {\n  stroke: #d50000; }\n\n.mdc-text-field--disabled {\n  pointer-events: none; }\n  .mdc-text-field--disabled .mdc-text-field__input {\n    border-bottom-color: rgba(35, 31, 32, 0.26); }\n  .mdc-text-field--disabled .mdc-text-field__input {\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38)); }\n  .mdc-text-field--disabled .mdc-floating-label {\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38)); }\n  .mdc-text-field--disabled .mdc-text-field__input::-webkit-input-placeholder {\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38)); }\n  .mdc-text-field--disabled .mdc-text-field__input:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38)); }\n  .mdc-text-field--disabled .mdc-text-field__input::-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38)); }\n  .mdc-text-field--disabled .mdc-text-field__input::placeholder {\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38)); }\n  .mdc-text-field--disabled + .mdc-text-field-helper-text {\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38)); }\n  .mdc-text-field--disabled .mdc-text-field__icon {\n    color: rgba(0, 0, 0, 0.3); }\n  .mdc-text-field--disabled:not(.mdc-text-field--textarea) {\n    border-bottom-color: rgba(0, 0, 0, 0.12); }\n  .mdc-text-field--disabled .mdc-text-field__input {\n    border-bottom: 1px dotted; }\n  .mdc-text-field--disabled .mdc-floating-label {\n    cursor: default; }\n\n.mdc-text-field--textarea.mdc-text-field--disabled {\n  border-color: rgba(35, 31, 32, 0.26);\n  background-color: #f9f9f9;\n  border-style: solid; }\n  .mdc-text-field--textarea.mdc-text-field--disabled .mdc-text-field__input:focus {\n    border-color: rgba(35, 31, 32, 0.26); }\n  .mdc-text-field--textarea.mdc-text-field--disabled .mdc-text-field__input {\n    border: 1px solid transparent; }\n  .mdc-text-field--textarea.mdc-text-field--disabled .mdc-floating-label {\n    background-color: #f9f9f9; }\n\n.mdc-floating-label--float-above ~ .mdc-notched-outline__idle {\n  opacity: 0; }\n\n.mdc-floating-label--float-above ~ .mdc-notched-outline {\n  opacity: 1; }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-text-field-box {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-50%) scale(0.75);\n            transform: translateX(calc(4% - 0%)) translateY(-50%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-50%) scale(0.75);\n            transform: translateX(calc(-4% - 0%)) translateY(-50%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.75); } }\n\n@keyframes mdc-floating-label-shake-float-above-text-field-box {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-50%) scale(0.75);\n            transform: translateX(calc(4% - 0%)) translateY(-50%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-50%) scale(0.75);\n            transform: translateX(calc(-4% - 0%)) translateY(-50%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.75); } }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-text-field-box-dense {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-90%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-90%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-90%) scale(0.923);\n            transform: translateX(calc(4% - 0%)) translateY(-90%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-90%) scale(0.923);\n            transform: translateX(calc(-4% - 0%)) translateY(-90%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-90%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-90%) scale(0.923); } }\n\n@keyframes mdc-floating-label-shake-float-above-text-field-box-dense {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-90%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-90%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-90%) scale(0.923);\n            transform: translateX(calc(4% - 0%)) translateY(-90%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-90%) scale(0.923);\n            transform: translateX(calc(-4% - 0%)) translateY(-90%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-90%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-90%) scale(0.923); } }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-text-field-outlined {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-130%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(4% - 0%)) translateY(-130%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(-4% - 0%)) translateY(-130%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-130%) scale(0.75); } }\n\n@keyframes mdc-floating-label-shake-float-above-text-field-outlined {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-130%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(4% - 0%)) translateY(-130%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(-4% - 0%)) translateY(-130%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-130%) scale(0.75); } }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-text-field-outlined-dense {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-145%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-145%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-145%) scale(0.923);\n            transform: translateX(calc(4% - 0%)) translateY(-145%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-145%) scale(0.923);\n            transform: translateX(calc(-4% - 0%)) translateY(-145%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-145%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-145%) scale(0.923); } }\n\n@keyframes mdc-floating-label-shake-float-above-text-field-outlined-dense {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-145%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-145%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-145%) scale(0.923);\n            transform: translateX(calc(4% - 0%)) translateY(-145%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-145%) scale(0.923);\n            transform: translateX(calc(-4% - 0%)) translateY(-145%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-145%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-145%) scale(0.923); } }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon {\n  0% {\n    -webkit-transform: translateX(calc(0 - 32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - 32px)) translateY(-130%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(4% - 32px)) translateY(-130%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(-4% - 32px)) translateY(-130%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - 32px)) translateY(-130%) scale(0.75); } }\n\n@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon {\n  0% {\n    -webkit-transform: translateX(calc(0 - 32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - 32px)) translateY(-130%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(4% - 32px)) translateY(-130%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(-4% - 32px)) translateY(-130%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - 32px)) translateY(-130%) scale(0.75); } }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-dense {\n  0% {\n    -webkit-transform: translateX(calc(0 - 21px)) translateY(-145%) scale(0.923);\n            transform: translateX(calc(0 - 21px)) translateY(-145%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 21px)) translateY(-145%) scale(0.923);\n            transform: translateX(calc(4% - 21px)) translateY(-145%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 21px)) translateY(-145%) scale(0.923);\n            transform: translateX(calc(-4% - 21px)) translateY(-145%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 21px)) translateY(-145%) scale(0.923);\n            transform: translateX(calc(0 - 21px)) translateY(-145%) scale(0.923); } }\n\n@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-dense {\n  0% {\n    -webkit-transform: translateX(calc(0 - 21px)) translateY(-145%) scale(0.923);\n            transform: translateX(calc(0 - 21px)) translateY(-145%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 21px)) translateY(-145%) scale(0.923);\n            transform: translateX(calc(4% - 21px)) translateY(-145%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 21px)) translateY(-145%) scale(0.923);\n            transform: translateX(calc(-4% - 21px)) translateY(-145%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 21px)) translateY(-145%) scale(0.923);\n            transform: translateX(calc(0 - 21px)) translateY(-145%) scale(0.923); } }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-textarea {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-50%) scale(0.923);\n            transform: translateX(calc(4% - 0%)) translateY(-50%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-50%) scale(0.923);\n            transform: translateX(calc(-4% - 0%)) translateY(-50%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.923); } }\n\n@keyframes mdc-floating-label-shake-float-above-textarea {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-50%) scale(0.923);\n            transform: translateX(calc(4% - 0%)) translateY(-50%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-50%) scale(0.923);\n            transform: translateX(calc(-4% - 0%)) translateY(-50%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.923); } }\n\n.mdc-textfield-wrapper {\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-flow: column;\n          flex-flow: column; }\n\n.mdc-text-field--textarea .mdc-floating-label {\n  background-color: transparent; }\n\n.mdc-text-field--with-leading-icon .mdc-text-field__icon,\n.mdc-text-field--with-trailing-icon .mdc-text-field__icon {\n  font-weight: normal;\n  font-style: normal;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: normal;\n  text-transform: none;\n  display: inline-block;\n  white-space: nowrap;\n  word-wrap: normal;\n  direction: ltr;\n  -webkit-font-feature-settings: 'liga';\n  -webkit-font-smoothing: antialiased; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n * $opacity-boost.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-value(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-toolbar {\n  background-color: #6200ee;\n  /* @alternate */\n  background-color: var(--mdc-theme-primary, #6200ee);\n  color: white;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  position: relative;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  width: 100%; }\n  .mdc-toolbar .mdc-toolbar__icon, .mdc-toolbar .mdc-icon {\n    color: white; }\n    .mdc-toolbar .mdc-toolbar__icon::before, .mdc-toolbar .mdc-icon::before, .mdc-toolbar .mdc-toolbar__icon::after, .mdc-toolbar .mdc-icon::after {\n      background-color: white; }\n    .mdc-toolbar .mdc-toolbar__icon:hover::before, .mdc-toolbar .mdc-icon:hover::before {\n      opacity: 0.08; }\n    .mdc-toolbar .mdc-toolbar__icon:not(.mdc-ripple-upgraded):focus::before, .mdc-toolbar .mdc-icon:not(.mdc-ripple-upgraded):focus::before, .mdc-toolbar .mdc-toolbar__icon.mdc-ripple-upgraded--background-focused::before, .mdc-toolbar .mdc-ripple-upgraded--background-focused.mdc-icon::before {\n      -webkit-transition-duration: 75ms;\n              transition-duration: 75ms;\n      opacity: 0.24; }\n    .mdc-toolbar .mdc-toolbar__icon:not(.mdc-ripple-upgraded)::after, .mdc-toolbar .mdc-icon:not(.mdc-ripple-upgraded)::after {\n      -webkit-transition: opacity 150ms linear;\n      transition: opacity 150ms linear; }\n    .mdc-toolbar .mdc-toolbar__icon:not(.mdc-ripple-upgraded):active::after, .mdc-toolbar .mdc-icon:not(.mdc-ripple-upgraded):active::after {\n      -webkit-transition-duration: 75ms;\n              transition-duration: 75ms;\n      opacity: 0.32; }\n    .mdc-toolbar .mdc-toolbar__icon.mdc-ripple-upgraded, .mdc-toolbar .mdc-ripple-upgraded.mdc-icon {\n      --mdc-ripple-fg-opacity: $opacity; }\n  .mdc-toolbar__row {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: relative;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    width: 100%;\n    height: auto;\n    min-height: 64px; }\n    @media (max-width: 959px) and (orientation: landscape) {\n      .mdc-toolbar__row {\n        min-height: 48px; } }\n    @media (max-width: 599px) {\n      .mdc-toolbar__row {\n        min-height: 56px; } }\n  .mdc-toolbar__section {\n    display: -webkit-inline-box;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1;\n    -webkit-box-align: start;\n        -ms-flex-align: start;\n            align-items: start;\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    min-width: 0;\n    height: 100%;\n    padding: 8px;\n    z-index: 1; }\n    @media (max-width: 959px) and (orientation: landscape) {\n      .mdc-toolbar__section {\n        padding: 0 0; } }\n    @media (max-width: 599px) {\n      .mdc-toolbar__section {\n        padding: 4px 0; } }\n    .mdc-toolbar__section--align-start {\n      /* @noflip */\n      padding-left: 12px;\n      /* @noflip */\n      padding-right: 0;\n      -webkit-box-pack: start;\n          -ms-flex-pack: start;\n              justify-content: flex-start;\n      -webkit-box-ordinal-group: 0;\n          -ms-flex-order: -1;\n              order: -1; }\n      [dir=\"rtl\"] .mdc-toolbar__section--align-start, .mdc-toolbar__section--align-start[dir=\"rtl\"] {\n        /* @noflip */\n        padding-left: 0;\n        /* @noflip */\n        padding-right: 12px; }\n      @media (max-width: 959px) and (orientation: landscape) {\n        .mdc-toolbar__section--align-start {\n          /* @noflip */\n          padding-left: 4px;\n          /* @noflip */\n          padding-right: 0; }\n          [dir=\"rtl\"] .mdc-toolbar__section--align-start, .mdc-toolbar__section--align-start[dir=\"rtl\"] {\n            /* @noflip */\n            padding-left: 0;\n            /* @noflip */\n            padding-right: 4px; } }\n      @media (max-width: 599px) {\n        .mdc-toolbar__section--align-start {\n          /* @noflip */\n          padding-left: 4px;\n          /* @noflip */\n          padding-right: 0; }\n          [dir=\"rtl\"] .mdc-toolbar__section--align-start, .mdc-toolbar__section--align-start[dir=\"rtl\"] {\n            /* @noflip */\n            padding-left: 0;\n            /* @noflip */\n            padding-right: 4px; } }\n    .mdc-toolbar__section--align-end {\n      /* @noflip */\n      padding-left: 0;\n      /* @noflip */\n      padding-right: 12px;\n      -webkit-box-pack: end;\n          -ms-flex-pack: end;\n              justify-content: flex-end;\n      -webkit-box-ordinal-group: 2;\n          -ms-flex-order: 1;\n              order: 1; }\n      [dir=\"rtl\"] .mdc-toolbar__section--align-end, .mdc-toolbar__section--align-end[dir=\"rtl\"] {\n        /* @noflip */\n        padding-left: 12px;\n        /* @noflip */\n        padding-right: 0; }\n      @media (max-width: 959px) and (orientation: landscape) {\n        .mdc-toolbar__section--align-end {\n          /* @noflip */\n          padding-left: 0;\n          /* @noflip */\n          padding-right: 4px; }\n          [dir=\"rtl\"] .mdc-toolbar__section--align-end, .mdc-toolbar__section--align-end[dir=\"rtl\"] {\n            /* @noflip */\n            padding-left: 4px;\n            /* @noflip */\n            padding-right: 0; } }\n      @media (max-width: 599px) {\n        .mdc-toolbar__section--align-end {\n          /* @noflip */\n          padding-left: 0;\n          /* @noflip */\n          padding-right: 4px; }\n          [dir=\"rtl\"] .mdc-toolbar__section--align-end, .mdc-toolbar__section--align-end[dir=\"rtl\"] {\n            /* @noflip */\n            padding-left: 4px;\n            /* @noflip */\n            padding-right: 0; } }\n  .mdc-toolbar__title {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 1.25rem;\n    line-height: 2rem;\n    font-weight: 500;\n    letter-spacing: 0.02em;\n    text-decoration: inherit;\n    text-transform: inherit;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n    /* @noflip */\n    margin-left: 24px;\n    /* @noflip */\n    margin-right: 0;\n    -ms-flex-item-align: center;\n        align-self: center;\n    padding: 12px 0;\n    line-height: 1.5rem;\n    z-index: 1; }\n    [dir=\"rtl\"] .mdc-toolbar__title, .mdc-toolbar__title[dir=\"rtl\"] {\n      /* @noflip */\n      margin-left: 0;\n      /* @noflip */\n      margin-right: 24px; }\n  .mdc-toolbar__icon, .mdc-toolbar .mdc-icon, .mdc-toolbar__menu-icon {\n    --mdc-ripple-fg-size: 0;\n    --mdc-ripple-left: 0;\n    --mdc-ripple-top: 0;\n    --mdc-ripple-fg-scale: 1;\n    --mdc-ripple-fg-translate-end: 0;\n    --mdc-ripple-fg-translate-start: 0;\n    -webkit-tap-highlight-color: transparent;\n    will-change: transform, opacity;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: relative;\n    -webkit-box-align: start;\n        -ms-flex-align: start;\n            align-items: start;\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n    width: 24px;\n    height: 24px;\n    padding: 12px;\n    border: none;\n    outline: none;\n    background-color: transparent;\n    fill: currentColor;\n    color: inherit;\n    text-decoration: none;\n    cursor: pointer; }\n    .mdc-toolbar__icon::before, .mdc-toolbar .mdc-icon::before, .mdc-toolbar__icon::after, .mdc-toolbar .mdc-icon::after, .mdc-toolbar__menu-icon::before, .mdc-toolbar__menu-icon::after {\n      position: absolute;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n    .mdc-toolbar__icon::before, .mdc-toolbar .mdc-icon::before, .mdc-toolbar__menu-icon::before {\n      -webkit-transition: opacity 15ms linear;\n      transition: opacity 15ms linear;\n      z-index: 1; }\n    .mdc-toolbar__icon.mdc-ripple-upgraded::before, .mdc-toolbar .mdc-ripple-upgraded.mdc-icon::before, .mdc-toolbar__menu-icon.mdc-ripple-upgraded::before {\n      -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n              transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n    .mdc-toolbar__icon.mdc-ripple-upgraded::after, .mdc-toolbar .mdc-ripple-upgraded.mdc-icon::after, .mdc-toolbar__menu-icon.mdc-ripple-upgraded::after {\n      top: 0;\n      /* @noflip */\n      left: 0;\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform-origin: center center;\n              transform-origin: center center; }\n    .mdc-toolbar__icon.mdc-ripple-upgraded--unbounded::after, .mdc-toolbar .mdc-ripple-upgraded--unbounded.mdc-icon::after, .mdc-toolbar__menu-icon.mdc-ripple-upgraded--unbounded::after {\n      top: var(--mdc-ripple-top, 0);\n      /* @noflip */\n      left: var(--mdc-ripple-left, 0); }\n    .mdc-toolbar__icon.mdc-ripple-upgraded--foreground-activation::after, .mdc-toolbar .mdc-ripple-upgraded--foreground-activation.mdc-icon::after, .mdc-toolbar__menu-icon.mdc-ripple-upgraded--foreground-activation::after {\n      -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n              animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n    .mdc-toolbar__icon.mdc-ripple-upgraded--foreground-deactivation::after, .mdc-toolbar .mdc-ripple-upgraded--foreground-deactivation.mdc-icon::after, .mdc-toolbar__menu-icon.mdc-ripple-upgraded--foreground-deactivation::after {\n      -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n              animation: 150ms mdc-ripple-fg-opacity-out;\n      -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n              transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n    .mdc-toolbar__icon::before, .mdc-toolbar .mdc-icon::before, .mdc-toolbar__icon::after, .mdc-toolbar .mdc-icon::after, .mdc-toolbar__menu-icon::before, .mdc-toolbar__menu-icon::after {\n      top: calc(50% - 50%);\n      /* @noflip */\n      left: calc(50% - 50%);\n      width: 100%;\n      height: 100%; }\n    .mdc-toolbar__icon.mdc-ripple-upgraded::before, .mdc-toolbar .mdc-ripple-upgraded.mdc-icon::before, .mdc-toolbar__icon.mdc-ripple-upgraded::after, .mdc-toolbar .mdc-ripple-upgraded.mdc-icon::after, .mdc-toolbar__menu-icon.mdc-ripple-upgraded::before, .mdc-toolbar__menu-icon.mdc-ripple-upgraded::after {\n      top: var(--mdc-ripple-top, calc(50% - 50%));\n      /* @noflip */\n      left: var(--mdc-ripple-left, calc(50% - 50%));\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: var(--mdc-ripple-fg-size, 100%); }\n    .mdc-toolbar__icon.mdc-ripple-upgraded::after, .mdc-toolbar .mdc-ripple-upgraded.mdc-icon::after, .mdc-toolbar__menu-icon.mdc-ripple-upgraded::after {\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: var(--mdc-ripple-fg-size, 100%); }\n\n.mdc-toolbar__menu-icon + .mdc-toolbar__title {\n  /* @noflip */\n  margin-left: 8px;\n  /* @noflip */\n  margin-right: 0; }\n  [dir=\"rtl\"] .mdc-toolbar__menu-icon + .mdc-toolbar__title, .mdc-toolbar__menu-icon + .mdc-toolbar__title[dir=\"rtl\"] {\n    /* @noflip */\n    margin-left: 0;\n    /* @noflip */\n    margin-right: 8px; }\n\n@media (max-width: 599px) {\n  .mdc-toolbar__title {\n    /* @noflip */\n    margin-left: 16px;\n    /* @noflip */\n    margin-right: 0; }\n    [dir=\"rtl\"] .mdc-toolbar__title, .mdc-toolbar__title[dir=\"rtl\"] {\n      /* @noflip */\n      margin-left: 0;\n      /* @noflip */\n      margin-right: 16px; } }\n\n.mdc-toolbar--fixed {\n  -webkit-box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 4; }\n\n.mdc-toolbar--flexible {\n  --mdc-toolbar-ratio-to-extend-flexible: 4; }\n  .mdc-toolbar--flexible .mdc-toolbar__row:first-child {\n    height: 256px;\n    height: calc(64px * var(--mdc-toolbar-ratio-to-extend-flexible, 4)); }\n    @media (max-width: 599px) {\n      .mdc-toolbar--flexible .mdc-toolbar__row:first-child {\n        height: 224px;\n        height: calc(56px * var(--mdc-toolbar-ratio-to-extend-flexible, 4)); } }\n    .mdc-toolbar--flexible .mdc-toolbar__row:first-child::after {\n      position: absolute;\n      content: \"\"; }\n  .mdc-toolbar--flexible-default-behavior .mdc-toolbar__title {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 2.125rem;\n    line-height: 2.5rem;\n    font-weight: 400;\n    letter-spacing: normal;\n    text-decoration: inherit;\n    text-transform: inherit;\n    -ms-flex-item-align: end;\n        align-self: flex-end;\n    line-height: 1.5rem; }\n  .mdc-toolbar--flexible-default-behavior .mdc-toolbar__row:first-child::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    -webkit-transition: opacity .2s ease;\n    transition: opacity .2s ease;\n    opacity: 1; }\n  .mdc-toolbar--flexible-default-behavior.mdc-toolbar--flexible-space-minimized .mdc-toolbar__row:first-child::after {\n    opacity: 0; }\n  .mdc-toolbar--flexible-default-behavior.mdc-toolbar--flexible-space-minimized .mdc-toolbar__title {\n    font-weight: 500; }\n\n.mdc-toolbar--waterfall.mdc-toolbar--fixed {\n  -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  -webkit-transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  will-change: box-shadow; }\n  .mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--flexible-space-minimized {\n    -webkit-box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n            box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n  .mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--fixed-lastrow-only.mdc-toolbar--flexible-space-minimized {\n    -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n            box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n  .mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--fixed-lastrow-only.mdc-toolbar--fixed-at-last-row {\n    -webkit-box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n            box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-toolbar-fixed-adjust {\n  margin-top: 64px; }\n  @media (max-width: 959px) and (max-height: 599px) {\n    .mdc-toolbar-fixed-adjust {\n      margin-top: 48px; } }\n  @media (max-width: 599px) {\n    .mdc-toolbar-fixed-adjust {\n      margin-top: 56px; } }\n\n.mdc-toolbar__section--shrink-to-fit {\n  -webkit-box-flex: 0;\n      -ms-flex: none;\n          flex: none; }\n\n.mdc-toolbar-wrapper {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  width: 100%; }\n  .mdc-toolbar-wrapper .mdc-toolbar-fixed-adjust {\n    width: 100%; }\n\n.mdc-toolbar__title {\n  color: inherit;\n  text-decoration: none;\n  cursor: pointer; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n * $opacity-boost.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-value(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-top-app-bar {\n  background-color: #6200ee;\n  /* @alternate */\n  background-color: var(--mdc-theme-primary, #6200ee);\n  color: white;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  position: relative;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  width: 100%; }\n  .mdc-top-app-bar .mdc-top-app-bar__action-item,\n  .mdc-top-app-bar .mdc-top-app-bar__navigation-icon {\n    color: white;\n    /* @alternate */\n    color: var(--mdc-theme-text-primary-on-primary, white); }\n    .mdc-top-app-bar .mdc-top-app-bar__action-item::before, .mdc-top-app-bar .mdc-top-app-bar__action-item::after,\n    .mdc-top-app-bar .mdc-top-app-bar__navigation-icon::before,\n    .mdc-top-app-bar .mdc-top-app-bar__navigation-icon::after {\n      background-color: white; }\n      @supports not (-ms-ime-align: auto) {\n        .mdc-top-app-bar .mdc-top-app-bar__action-item::before, .mdc-top-app-bar .mdc-top-app-bar__action-item::after,\n        .mdc-top-app-bar .mdc-top-app-bar__navigation-icon::before,\n        .mdc-top-app-bar .mdc-top-app-bar__navigation-icon::after {\n          /* @alternate */\n          background-color: var(--mdc-theme-text-primary-on-primary, white); } }\n    .mdc-top-app-bar .mdc-top-app-bar__action-item:hover::before,\n    .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:hover::before {\n      opacity: 0.08; }\n    .mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):focus::before, .mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded--background-focused::before,\n    .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):focus::before,\n    .mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--background-focused::before {\n      -webkit-transition-duration: 75ms;\n              transition-duration: 75ms;\n      opacity: 0.24; }\n    .mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded)::after,\n    .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded)::after {\n      -webkit-transition: opacity 150ms linear;\n      transition: opacity 150ms linear; }\n    .mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):active::after,\n    .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):active::after {\n      -webkit-transition-duration: 75ms;\n              transition-duration: 75ms;\n      opacity: 0.32; }\n    .mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded,\n    .mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded {\n      --mdc-ripple-fg-opacity: $opacity; }\n  .mdc-top-app-bar__row {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: relative;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    width: 100%;\n    height: 64px; }\n  .mdc-top-app-bar__section {\n    display: -webkit-inline-box;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    -webkit-box-flex: 1;\n        -ms-flex: 1 1 auto;\n            flex: 1 1 auto;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    min-width: 0;\n    padding: 8px 12px;\n    z-index: 1; }\n    .mdc-top-app-bar__section--align-start {\n      -webkit-box-pack: start;\n          -ms-flex-pack: start;\n              justify-content: flex-start;\n      -webkit-box-ordinal-group: 0;\n          -ms-flex-order: -1;\n              order: -1; }\n    .mdc-top-app-bar__section--align-end {\n      -webkit-box-pack: end;\n          -ms-flex-pack: end;\n              justify-content: flex-end;\n      -webkit-box-ordinal-group: 2;\n          -ms-flex-order: 1;\n              order: 1; }\n  .mdc-top-app-bar__title {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 1.25rem;\n    line-height: 2rem;\n    font-weight: 500;\n    letter-spacing: 0.02em;\n    text-decoration: inherit;\n    text-transform: inherit;\n    /* @noflip */\n    padding-left: 20px;\n    /* @noflip */\n    padding-right: 0;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n    z-index: 1; }\n    [dir=\"rtl\"] .mdc-top-app-bar__title, .mdc-top-app-bar__title[dir=\"rtl\"] {\n      /* @noflip */\n      padding-left: 0;\n      /* @noflip */\n      padding-right: 20px; }\n  .mdc-top-app-bar__action-item, .mdc-top-app-bar__navigation-icon {\n    --mdc-ripple-fg-size: 0;\n    --mdc-ripple-left: 0;\n    --mdc-ripple-top: 0;\n    --mdc-ripple-fg-scale: 1;\n    --mdc-ripple-fg-translate-end: 0;\n    --mdc-ripple-fg-translate-start: 0;\n    -webkit-tap-highlight-color: transparent;\n    will-change: transform, opacity;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: relative;\n    -ms-flex-negative: 0;\n        flex-shrink: 0;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n    width: 24px;\n    height: 24px;\n    padding: 12px;\n    border: none;\n    outline: none;\n    background-color: transparent;\n    fill: currentColor;\n    color: inherit;\n    text-decoration: none;\n    cursor: pointer; }\n    .mdc-top-app-bar__action-item::before, .mdc-top-app-bar__action-item::after, .mdc-top-app-bar__navigation-icon::before, .mdc-top-app-bar__navigation-icon::after {\n      position: absolute;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n    .mdc-top-app-bar__action-item::before, .mdc-top-app-bar__navigation-icon::before {\n      -webkit-transition: opacity 15ms linear;\n      transition: opacity 15ms linear;\n      z-index: 1; }\n    .mdc-top-app-bar__action-item.mdc-ripple-upgraded::before, .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded::before {\n      -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n              transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n    .mdc-top-app-bar__action-item.mdc-ripple-upgraded::after, .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded::after {\n      top: 0;\n      /* @noflip */\n      left: 0;\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform-origin: center center;\n              transform-origin: center center; }\n    .mdc-top-app-bar__action-item.mdc-ripple-upgraded--unbounded::after, .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--unbounded::after {\n      top: var(--mdc-ripple-top, 0);\n      /* @noflip */\n      left: var(--mdc-ripple-left, 0); }\n    .mdc-top-app-bar__action-item.mdc-ripple-upgraded--foreground-activation::after, .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--foreground-activation::after {\n      -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n              animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n    .mdc-top-app-bar__action-item.mdc-ripple-upgraded--foreground-deactivation::after, .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--foreground-deactivation::after {\n      -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n              animation: 150ms mdc-ripple-fg-opacity-out;\n      -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n              transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n    .mdc-top-app-bar__action-item::before, .mdc-top-app-bar__action-item::after, .mdc-top-app-bar__navigation-icon::before, .mdc-top-app-bar__navigation-icon::after {\n      top: calc(50% - 50%);\n      /* @noflip */\n      left: calc(50% - 50%);\n      width: 100%;\n      height: 100%; }\n    .mdc-top-app-bar__action-item.mdc-ripple-upgraded::before, .mdc-top-app-bar__action-item.mdc-ripple-upgraded::after, .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded::before, .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded::after {\n      top: var(--mdc-ripple-top, calc(50% - 50%));\n      /* @noflip */\n      left: var(--mdc-ripple-left, calc(50% - 50%));\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: var(--mdc-ripple-fg-size, 100%); }\n    .mdc-top-app-bar__action-item.mdc-ripple-upgraded::after, .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded::after {\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: var(--mdc-ripple-fg-size, 100%); }\n\n.mdc-top-app-bar--short {\n  position: fixed;\n  top: 0;\n  right: auto;\n  left: 0;\n  width: 100%;\n  -webkit-transition: width 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: width 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  z-index: 4; }\n  [dir=\"rtl\"] .mdc-top-app-bar--short, .mdc-top-app-bar--short[dir=\"rtl\"] {\n    right: 0;\n    left: auto; }\n  .mdc-top-app-bar--short .mdc-top-app-bar__row {\n    height: 56px; }\n  .mdc-top-app-bar--short .mdc-top-app-bar__section {\n    padding: 4px; }\n  .mdc-top-app-bar--short .mdc-top-app-bar__title {\n    -webkit-transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1);\n    opacity: 1; }\n\n.mdc-top-app-bar--short-collapsed {\n  /* @noflip */\n  border-bottom-left-radius: 0;\n  /* @noflip */\n  border-bottom-right-radius: 4px;\n  -webkit-box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  width: 56px;\n  -webkit-transition: width 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: width 300ms cubic-bezier(0.4, 0, 0.2, 1); }\n  [dir=\"rtl\"] .mdc-top-app-bar--short-collapsed, .mdc-top-app-bar--short-collapsed[dir=\"rtl\"] {\n    /* @noflip */\n    border-bottom-left-radius: 4px;\n    /* @noflip */\n    border-bottom-right-radius: 0; }\n  .mdc-top-app-bar--short-collapsed .mdc-top-app-bar__title {\n    display: none; }\n  .mdc-top-app-bar--short-collapsed .mdc-top-app-bar__action-item {\n    -webkit-transition: padding 150ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: padding 150ms cubic-bezier(0.4, 0, 0.2, 1); }\n\n.mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item {\n  width: 112px; }\n  .mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item .mdc-top-app-bar__section--align-end {\n    /* @noflip */\n    padding-left: 0;\n    /* @noflip */\n    padding-right: 12px; }\n    [dir=\"rtl\"] .mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item .mdc-top-app-bar__section--align-end, .mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item .mdc-top-app-bar__section--align-end[dir=\"rtl\"] {\n      /* @noflip */\n      padding-left: 12px;\n      /* @noflip */\n      padding-right: 0; }\n\n.mdc-top-app-bar--prominent .mdc-top-app-bar__row {\n  height: 128px; }\n\n.mdc-top-app-bar--prominent .mdc-top-app-bar__title {\n  -ms-flex-item-align: end;\n      align-self: flex-end;\n  padding-bottom: 2px; }\n\n.mdc-top-app-bar--prominent .mdc-top-app-bar__action-item,\n.mdc-top-app-bar--prominent .mdc-top-app-bar__navigation-icon {\n  -ms-flex-item-align: start;\n      align-self: flex-start; }\n\n@media (max-width: 599px) {\n  .mdc-top-app-bar__row {\n    height: 56px; }\n  .mdc-top-app-bar__section {\n    padding: 4px; }\n  .mdc-top-app-bar--short {\n    -webkit-transition: width 200ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: width 200ms cubic-bezier(0.4, 0, 0.2, 1); }\n  .mdc-top-app-bar--short-collapsed {\n    -webkit-transition: width 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: width 250ms cubic-bezier(0.4, 0, 0.2, 1); }\n    .mdc-top-app-bar--short-collapsed .mdc-top-app-bar__section--align-end {\n      /* @noflip */\n      padding-left: 0;\n      /* @noflip */\n      padding-right: 12px; }\n      [dir=\"rtl\"] .mdc-top-app-bar--short-collapsed .mdc-top-app-bar__section--align-end, .mdc-top-app-bar--short-collapsed .mdc-top-app-bar__section--align-end[dir=\"rtl\"] {\n        /* @noflip */\n        padding-left: 12px;\n        /* @noflip */\n        padding-right: 0; }\n  .mdc-top-app-bar--prominent .mdc-top-app-bar__title {\n    padding-bottom: 6px; } }\n\n:root {\n  --mdc-theme-primary: #6200ee;\n  --mdc-theme-primary-light: #b37eff;\n  --mdc-theme-primary-dark: #8936ff;\n  --mdc-theme-secondary: #018786;\n  --mdc-theme-secondary-light: #02cecc;\n  --mdc-theme-secondary-dark: #004040;\n  --mdc-theme-background: #fff;\n  --mdc-theme-text-primary-on-primary: white;\n  --mdc-theme-text-secondary-on-primary: rgba(255, 255, 255, 0.7);\n  --mdc-theme-text-hint-on-primary: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-disabled-on-primary: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-icon-on-primary: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-primary-on-primary-light: rgba(0, 0, 0, 0.87);\n  --mdc-theme-text-secondary-on-primary-light: rgba(0, 0, 0, 0.54);\n  --mdc-theme-text-hint-on-primary-light: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-disabled-on-primary-light: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-icon-on-primary-light: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-primary-on-primary-dark: white;\n  --mdc-theme-text-secondary-on-primary-dark: rgba(255, 255, 255, 0.7);\n  --mdc-theme-text-hint-on-primary-dark: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-disabled-on-primary-dark: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-icon-on-primary-dark: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-primary-on-secondary: white;\n  --mdc-theme-text-secondary-on-secondary: rgba(255, 255, 255, 0.7);\n  --mdc-theme-text-hint-on-secondary: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-disabled-on-secondary: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-icon-on-secondary: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-primary-on-secondary-light: rgba(0, 0, 0, 0.87);\n  --mdc-theme-text-secondary-on-secondary-light: rgba(0, 0, 0, 0.54);\n  --mdc-theme-text-hint-on-secondary-light: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-disabled-on-secondary-light: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-icon-on-secondary-light: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-primary-on-secondary-dark: white;\n  --mdc-theme-text-secondary-on-secondary-dark: rgba(255, 255, 255, 0.7);\n  --mdc-theme-text-hint-on-secondary-dark: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-disabled-on-secondary-dark: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-icon-on-secondary-dark: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-primary-on-background: rgba(0, 0, 0, 0.87);\n  --mdc-theme-text-secondary-on-background: rgba(0, 0, 0, 0.54);\n  --mdc-theme-text-hint-on-background: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-disabled-on-background: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-icon-on-background: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-primary-on-light: rgba(0, 0, 0, 0.87);\n  --mdc-theme-text-secondary-on-light: rgba(0, 0, 0, 0.54);\n  --mdc-theme-text-hint-on-light: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-disabled-on-light: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-icon-on-light: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-primary-on-dark: white;\n  --mdc-theme-text-secondary-on-dark: rgba(255, 255, 255, 0.7);\n  --mdc-theme-text-hint-on-dark: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-disabled-on-dark: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-icon-on-dark: rgba(255, 255, 255, 0.5); }\n\n.mdc-theme--background {\n  background-color: #fff;\n  /* @alternate */\n  background-color: var(--mdc-theme-background, #fff); }\n\n.mdc-theme--primary {\n  color: #6200ee !important;\n  /* @alternate */\n  color: var(--mdc-theme-primary, #6200ee) !important; }\n\n.mdc-theme--primary-light {\n  color: #b37eff !important;\n  /* @alternate */\n  color: var(--mdc-theme-primary-light, #b37eff) !important; }\n\n.mdc-theme--primary-dark {\n  color: #8936ff !important;\n  /* @alternate */\n  color: var(--mdc-theme-primary-dark, #8936ff) !important; }\n\n.mdc-theme--secondary {\n  color: #018786 !important;\n  /* @alternate */\n  color: var(--mdc-theme-secondary, #018786) !important; }\n\n.mdc-theme--secondary-light {\n  color: #02cecc !important;\n  /* @alternate */\n  color: var(--mdc-theme-secondary-light, #02cecc) !important; }\n\n.mdc-theme--secondary-dark {\n  color: #004040 !important;\n  /* @alternate */\n  color: var(--mdc-theme-secondary-dark, #004040) !important; }\n\n.mdc-theme--text-primary-on-primary {\n  color: white !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-primary, white) !important; }\n\n.mdc-theme--text-secondary-on-primary {\n  color: rgba(255, 255, 255, 0.7) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-secondary-on-primary, rgba(255, 255, 255, 0.7)) !important; }\n\n.mdc-theme--text-hint-on-primary {\n  color: rgba(255, 255, 255, 0.5) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-hint-on-primary, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-disabled-on-primary {\n  color: rgba(255, 255, 255, 0.5) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-disabled-on-primary, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-icon-on-primary {\n  color: rgba(255, 255, 255, 0.5) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-icon-on-primary, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-primary-on-primary-light {\n  color: rgba(0, 0, 0, 0.87) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-primary-light, rgba(0, 0, 0, 0.87)) !important; }\n\n.mdc-theme--text-secondary-on-primary-light {\n  color: rgba(0, 0, 0, 0.54) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-secondary-on-primary-light, rgba(0, 0, 0, 0.54)) !important; }\n\n.mdc-theme--text-hint-on-primary-light {\n  color: rgba(0, 0, 0, 0.38) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-hint-on-primary-light, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-disabled-on-primary-light {\n  color: rgba(0, 0, 0, 0.38) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-disabled-on-primary-light, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-icon-on-primary-light {\n  color: rgba(0, 0, 0, 0.38) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-icon-on-primary-light, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-primary-on-primary-dark {\n  color: white !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-primary-dark, white) !important; }\n\n.mdc-theme--text-secondary-on-primary-dark {\n  color: rgba(255, 255, 255, 0.7) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-secondary-on-primary-dark, rgba(255, 255, 255, 0.7)) !important; }\n\n.mdc-theme--text-hint-on-primary-dark {\n  color: rgba(255, 255, 255, 0.5) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-hint-on-primary-dark, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-disabled-on-primary-dark {\n  color: rgba(255, 255, 255, 0.5) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-disabled-on-primary-dark, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-icon-on-primary-dark {\n  color: rgba(255, 255, 255, 0.5) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-icon-on-primary-dark, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-primary-on-secondary {\n  color: white !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-secondary, white) !important; }\n\n.mdc-theme--text-secondary-on-secondary {\n  color: rgba(255, 255, 255, 0.7) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-secondary-on-secondary, rgba(255, 255, 255, 0.7)) !important; }\n\n.mdc-theme--text-hint-on-secondary {\n  color: rgba(255, 255, 255, 0.5) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-hint-on-secondary, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-disabled-on-secondary {\n  color: rgba(255, 255, 255, 0.5) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-disabled-on-secondary, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-icon-on-secondary {\n  color: rgba(255, 255, 255, 0.5) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-icon-on-secondary, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-primary-on-secondary-light {\n  color: rgba(0, 0, 0, 0.87) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-secondary-light, rgba(0, 0, 0, 0.87)) !important; }\n\n.mdc-theme--text-secondary-on-secondary-light {\n  color: rgba(0, 0, 0, 0.54) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-secondary-on-secondary-light, rgba(0, 0, 0, 0.54)) !important; }\n\n.mdc-theme--text-hint-on-secondary-light {\n  color: rgba(0, 0, 0, 0.38) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-hint-on-secondary-light, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-disabled-on-secondary-light {\n  color: rgba(0, 0, 0, 0.38) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-disabled-on-secondary-light, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-icon-on-secondary-light {\n  color: rgba(0, 0, 0, 0.38) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-icon-on-secondary-light, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-primary-on-secondary-dark {\n  color: white !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-secondary-dark, white) !important; }\n\n.mdc-theme--text-secondary-on-secondary-dark {\n  color: rgba(255, 255, 255, 0.7) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-secondary-on-secondary-dark, rgba(255, 255, 255, 0.7)) !important; }\n\n.mdc-theme--text-hint-on-secondary-dark {\n  color: rgba(255, 255, 255, 0.5) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-hint-on-secondary-dark, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-disabled-on-secondary-dark {\n  color: rgba(255, 255, 255, 0.5) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-disabled-on-secondary-dark, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-icon-on-secondary-dark {\n  color: rgba(255, 255, 255, 0.5) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-icon-on-secondary-dark, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-primary-on-background {\n  color: rgba(0, 0, 0, 0.87) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)) !important; }\n\n.mdc-theme--text-secondary-on-background {\n  color: rgba(0, 0, 0, 0.54) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)) !important; }\n\n.mdc-theme--text-hint-on-background {\n  color: rgba(0, 0, 0, 0.38) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-disabled-on-background {\n  color: rgba(0, 0, 0, 0.38) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-icon-on-background {\n  color: rgba(0, 0, 0, 0.38) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-primary-on-light {\n  color: rgba(0, 0, 0, 0.87) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)) !important; }\n\n.mdc-theme--text-secondary-on-light {\n  color: rgba(0, 0, 0, 0.54) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)) !important; }\n\n.mdc-theme--text-hint-on-light {\n  color: rgba(0, 0, 0, 0.38) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-disabled-on-light {\n  color: rgba(0, 0, 0, 0.38) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-icon-on-light {\n  color: rgba(0, 0, 0, 0.38) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-icon-on-light, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-primary-on-dark {\n  color: white !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-dark, white) !important; }\n\n.mdc-theme--text-secondary-on-dark {\n  color: rgba(255, 255, 255, 0.7) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)) !important; }\n\n.mdc-theme--text-hint-on-dark {\n  color: rgba(255, 255, 255, 0.5) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-disabled-on-dark {\n  color: rgba(255, 255, 255, 0.5) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-icon-on-dark {\n  color: rgba(255, 255, 255, 0.5) !important;\n  /* @alternate */\n  color: var(--mdc-theme-text-icon-on-dark, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--primary-bg {\n  background-color: #6200ee !important;\n  /* @alternate */\n  background-color: var(--mdc-theme-primary, #6200ee) !important; }\n\n.mdc-theme--primary-light-bg {\n  background-color: #b37eff !important;\n  /* @alternate */\n  background-color: var(--mdc-theme-primary-light, #b37eff) !important; }\n\n.mdc-theme--primary-dark-bg {\n  background-color: #8936ff !important;\n  /* @alternate */\n  background-color: var(--mdc-theme-primary-dark, #8936ff) !important; }\n\n.mdc-theme--secondary-bg {\n  background-color: #018786 !important;\n  /* @alternate */\n  background-color: var(--mdc-theme-secondary, #018786) !important; }\n\n.mdc-theme--secondary-light-bg {\n  background-color: #02cecc !important;\n  /* @alternate */\n  background-color: var(--mdc-theme-secondary-light, #02cecc) !important; }\n\n.mdc-theme--secondary-dark-bg {\n  background-color: #004040 !important;\n  /* @alternate */\n  background-color: var(--mdc-theme-secondary-dark, #004040) !important; }\n\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-typography {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased; }\n\n.mdc-typography--display4 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 7rem;\n  line-height: 7rem;\n  font-weight: 300;\n  letter-spacing: -0.04em;\n  text-decoration: inherit;\n  text-transform: inherit; }\n\n.mdc-typography--adjust-margin.mdc-typography--display4 {\n  margin: -1rem 0 3.5rem -0.085em; }\n\n.mdc-typography--display3 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 3.5rem;\n  line-height: 3.5rem;\n  font-weight: 400;\n  letter-spacing: -0.02em;\n  text-decoration: inherit;\n  text-transform: inherit; }\n\n.mdc-typography--adjust-margin.mdc-typography--display3 {\n  margin: -8px 0 64px -0.07em; }\n\n.mdc-typography--display2 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 2.8125rem;\n  line-height: 3rem;\n  font-weight: 400;\n  letter-spacing: normal;\n  text-decoration: inherit;\n  text-transform: inherit; }\n\n.mdc-typography--adjust-margin.mdc-typography--display2 {\n  margin: -0.5rem 0 4rem -0.07em; }\n\n.mdc-typography--display1 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 2.125rem;\n  line-height: 2.5rem;\n  font-weight: 400;\n  letter-spacing: normal;\n  text-decoration: inherit;\n  text-transform: inherit; }\n\n.mdc-typography--adjust-margin.mdc-typography--display1 {\n  margin: -0.5rem 0 4rem -0.07em; }\n\n.mdc-typography--headline {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1.5rem;\n  line-height: 2rem;\n  font-weight: 400;\n  letter-spacing: normal;\n  text-decoration: inherit;\n  text-transform: inherit; }\n\n.mdc-typography--adjust-margin.mdc-typography--headline {\n  margin: -0.5rem 0 1rem -0.06em; }\n\n.mdc-typography--title {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1.25rem;\n  line-height: 2rem;\n  font-weight: 500;\n  letter-spacing: 0.02em;\n  text-decoration: inherit;\n  text-transform: inherit; }\n\n.mdc-typography--adjust-margin.mdc-typography--title {\n  margin: -0.5rem 0 1rem -0.05em; }\n\n.mdc-typography--subheading2 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  line-height: 1.75rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  text-decoration: inherit;\n  text-transform: inherit; }\n\n.mdc-typography--adjust-margin.mdc-typography--subheading2 {\n  margin: -0.5rem 0 1rem -0.06em; }\n\n.mdc-typography--subheading1 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.938rem;\n  line-height: 1.5rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  text-decoration: inherit;\n  text-transform: inherit; }\n\n.mdc-typography--adjust-margin.mdc-typography--subheading1 {\n  margin: -0.313rem 0 0.813rem -0.06em; }\n\n.mdc-typography--body2 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 1.5rem;\n  font-weight: 500;\n  letter-spacing: 0.04em;\n  text-decoration: inherit;\n  text-transform: inherit; }\n\n.mdc-typography--adjust-margin.mdc-typography--body2 {\n  margin: -0.25rem 0 0.75rem 0; }\n\n.mdc-typography--body1 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  text-decoration: inherit;\n  text-transform: inherit; }\n\n.mdc-typography--adjust-margin.mdc-typography--body1 {\n  margin: -0.25rem 0 0.75rem 0; }\n\n.mdc-typography--caption {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.75rem;\n  line-height: 1.25rem;\n  font-weight: 400;\n  letter-spacing: 0.08em;\n  text-decoration: inherit;\n  text-transform: inherit; }\n\n.mdc-typography--adjust-margin.mdc-typography--caption {\n  margin: -0.5rem 0 1rem -0.04em; }\n\n.mdc-typography--button {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 2.25rem;\n  font-weight: 500;\n  letter-spacing: 0.04em;\n  text-decoration: none;\n  text-transform: uppercase; }\n\n.mdc-typography--adjust-margin.mdc-typography--button {\n  margin: inherit; }\n\n.mdc-text-section {\n  margin-top: 0.5rem;\n  margin-bottom: 0.75rem; }\n\n.mdc-text-section > .mdc-typography--display4 {\n  margin: -1rem 0 3.5rem -0.085em; }\n\n.mdc-text-section > .mdc-typography--display3 {\n  margin: -8px 0 64px -0.07em; }\n\n.mdc-text-section > .mdc-typography--display2 {\n  margin: -0.5rem 0 4rem -0.07em; }\n\n.mdc-text-section > .mdc-typography--display1 {\n  margin: -0.5rem 0 4rem -0.07em; }\n\n.mdc-text-section > .mdc-typography--headline {\n  margin: -0.5rem 0 1rem -0.06em; }\n\n.mdc-text-section > .mdc-typography--title {\n  margin: -0.5rem 0 1rem -0.05em; }\n\n.mdc-text-section > .mdc-typography--subheading2 {\n  margin: -0.5rem 0 1rem -0.06em; }\n\n.mdc-text-section > .mdc-typography--subheading1 {\n  margin: -0.313rem 0 0.813rem -0.06em; }\n\n.mdc-text-section > .mdc-typography--body2 {\n  margin: -0.25rem 0 0.75rem 0; }\n\n.mdc-text-section > .mdc-typography--body1 {\n  margin: -0.25rem 0 0.75rem 0; }\n\n.mdc-text-section > .mdc-typography--caption {\n  margin: -0.5rem 0 1rem -0.04em; }\n\n.mdc-text-section > .mdc-typography--button {\n  margin: inherit; }\n");

  function autoInit(plugin) {
    // Auto-install
    var _Vue = null;
    if (typeof window !== 'undefined') {
      _Vue = window.Vue;
    } else if (typeof global !== 'undefined') {
      /*global global*/
      _Vue = global.Vue;
    }
    if (_Vue) {
      _Vue.use(plugin);
    }
  }

  function BasePlugin(components) {
    return {
      version: '0.13.2',
      install: function install(vm) {
        for (var key in components) {
          var component = components[key];
          vm.component(component.name, component);
        }
      },
      components: components
    };
  }

  var CustomElement = {
    functional: true,
    render: function render(createElement, context) {
      return createElement(context.props.is || context.props.tag || 'div', context.data, context.children);
    }
  };

  var CustomElementMixin = {
    components: {
      CustomElement: CustomElement
    }
  };

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };

  var classCallCheck = function (instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };

  var createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  var defineProperty = function (obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  };

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var get = function get(object, property, receiver) {
    if (object === null) object = Function.prototype;
    var desc = Object.getOwnPropertyDescriptor(object, property);

    if (desc === undefined) {
      var parent = Object.getPrototypeOf(object);

      if (parent === null) {
        return undefined;
      } else {
        return get(parent, property, receiver);
      }
    } else if ("value" in desc) {
      return desc.value;
    } else {
      var getter = desc.get;

      if (getter === undefined) {
        return undefined;
      }

      return getter.call(receiver);
    }
  };

  var inherits = function (subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  };

  var possibleConstructorReturn = function (self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  };

  var toConsumableArray = function (arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

      return arr2;
    } else {
      return Array.from(arr);
    }
  };

  var CustomLink = {
    name: 'custom-link',
    functional: true,
    props: {
      tag: { type: String, default: 'a' },
      link: Object
    },
    render: function render(h, context) {
      var element = void 0;
      var data = _extends({}, context.data);

      if (context.props.link && context.parent.$router) {
        // router-link case
        element = context.parent.$root.$options.components['router-link'];
        data.props = _extends({ tag: context.props.tag }, context.props.link);
        if (data.on.click) {
          data.nativeOn = { click: data.on.click };
        }
      } else {
        // element fallback
        element = context.props.tag;
      }

      return h(element, data, context.children);
    }
  };

  var CustomLinkMixin = {
    props: {
      to: [String, Object],
      exact: Boolean,
      append: Boolean,
      replace: Boolean,
      activeClass: String,
      exactActiveClass: String
    },
    computed: {
      link: function link() {
        return this.to && {
          to: this.to,
          exact: this.exact,
          append: this.append,
          replace: this.replace,
          activeClass: this.activeClass,
          exactActiveClass: this.exactActiveClass
        };
      }
    },
    components: {
      CustomLink: CustomLink
    }
  };

  /* global CustomEvent */

  function emitCustomEvent(el, evtType, evtData) {
    var shouldBubble = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

    var evt = void 0;
    if (typeof CustomEvent === 'function') {
      evt = new CustomEvent(evtType, {
        detail: evtData,
        bubbles: shouldBubble
      });
    } else {
      evt = document.createEvent('CustomEvent');
      evt.initCustomEvent(evtType, shouldBubble, false, evtData);
    }
    el.dispatchEvent(evt);
  }

  var CustomButton = {
    name: 'custom-button',
    functional: true,
    props: {
      link: Object
    },
    render: function render(h, context) {
      var element = void 0;
      var data = _extends({}, context.data);

      if (context.props.link && context.parent.$router) {
        // router-link case
        element = context.parent.$root.$options.components['router-link'];
        data.props = _extends({ tag: context.props.tag }, context.props.link);
        data.attrs.role = 'button';
        if (data.on.click) {
          data.nativeOn = { click: data.on.click };
        }
      } else if (data.attrs && data.attrs.href) {
        // href case
        element = 'a';
        data.attrs.role = 'button';
      } else {
        // button fallback
        element = 'button';
      }

      return h(element, data, context.children);
    }
  };

  var CustomButtonMixin = {
    props: {
      href: String,
      disabled: Boolean,
      to: [String, Object],
      exact: Boolean,
      append: Boolean,
      replace: Boolean,
      activeClass: String,
      exactActiveClass: String
    },
    computed: {
      link: function link() {
        return this.to && {
          to: this.to,
          exact: this.exact,
          append: this.append,
          replace: this.replace,
          activeClass: this.activeClass,
          exactActiveClass: this.exactActiveClass
        };
      }
    },
    components: {
      CustomButton: CustomButton
    }
  };

  function extractIconProp(iconProp) {
    if (typeof iconProp === 'string') {
      return {
        classes: { 'material-icons': true },
        content: iconProp
      };
    } else if (iconProp instanceof Array) {
      return {
        classes: iconProp.reduce(function (result, value) {
          return _extends(result, defineProperty({}, value, true));
        }, {})
      };
    } else if ((typeof iconProp === 'undefined' ? 'undefined' : _typeof(iconProp)) === 'object') {
      return {
        classes: iconProp.className.split(' ').reduce(function (result, value) {
          return _extends(result, defineProperty({}, value, true));
        }, {}),
        content: iconProp.textContent
      };
    }
  }

  var DispatchEventMixin = {
    props: {
      'event': String,
      'event-target': Object,
      'event-args': Array
    },
    methods: {
      dispatchEvent: function dispatchEvent(evt) {
        this.$emit(evt.type);
        if (this.event) {
          var target = this.eventTarget || this.$root;
          var args = this.eventArgs || [];
          target.$emit.apply(target, [this.event].concat(toConsumableArray(args)));
        }
      }
    }
  };

  var DispatchFocusMixin = {
    data: function data() {
      return { hasFocus: false };
    },

    methods: {
      onMouseDown: function onMouseDown() {
        this._active = true;
      },
      onMouseUp: function onMouseUp() {
        this._active = false;
      },
      onFocusEvent: function onFocusEvent() {
        var _this = this;

        // dispatch async to let time to other focus event to propagate
        setTimeout(function () {
          return _this.dispatchFocusEvent();
        }, 0);
      },
      onBlurEvent: function onBlurEvent() {
        var _this2 = this;

        // dispatch async to let time to other focus event to propagate
        // also filtur blur if mousedown
        this._active || setTimeout(function () {
          return _this2.dispatchFocusEvent();
        }, 0);
      },
      dispatchFocusEvent: function dispatchFocusEvent() {
        var hasFocus = this.$el === document.activeElement || this.$el.contains(document.activeElement);
        if (hasFocus != this.hasFocus) {
          this.$emit(hasFocus ? 'focus' : 'blur');
          this.hasFocus = hasFocus;
        }
      }
    },
    mounted: function mounted() {
      this.$el.addEventListener('focusin', this.onFocusEvent);
      this.$el.addEventListener('focusout', this.onBlurEvent);
      this.$el.addEventListener('mousedown', this.onMouseDown);
      this.$el.addEventListener('mouseup', this.onMouseUp);
    },
    beforeDestroy: function beforeDestroy() {
      this.$el.removeEventListener('focusin', this.onFocusEvent);
      this.$el.removeEventListener('focusout', this.onBlurEvent);
      this.$el.removeEventListener('mousedown', this.onMouseDown);
      this.$el.removeEventListener('mouseup', this.onMouseUp);
    }
  };

  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @template A
   */
  var MDCFoundation = function () {
    createClass(MDCFoundation, null, [{
      key: "cssClasses",

      /** @return enum{cssClasses} */
      get: function get$$1() {
        // Classes extending MDCFoundation should implement this method to return an object which exports every
        // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}
        return {};
      }

      /** @return enum{strings} */

    }, {
      key: "strings",
      get: function get$$1() {
        // Classes extending MDCFoundation should implement this method to return an object which exports all
        // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}
        return {};
      }

      /** @return enum{numbers} */

    }, {
      key: "numbers",
      get: function get$$1() {
        // Classes extending MDCFoundation should implement this method to return an object which exports all
        // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}
        return {};
      }

      /** @return {!Object} */

    }, {
      key: "defaultAdapter",
      get: function get$$1() {
        // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient
        // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter
        // validation.
        return {};
      }

      /**
       * @param {A=} adapter
       */

    }]);

    function MDCFoundation() {
      var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      classCallCheck(this, MDCFoundation);

      /** @protected {!A} */
      this.adapter_ = adapter;
    }

    createClass(MDCFoundation, [{
      key: "init",
      value: function init() {
        // Subclasses should override this method to perform initialization routines (registering events, etc.)
      }
    }, {
      key: "destroy",
      value: function destroy() {
        // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)
      }
    }]);
    return MDCFoundation;
  }();

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /* eslint no-unused-vars: [2, {"args": "none"}] */

  /**
   * Adapter for MDC Ripple. Provides an interface for managing
   * - classes
   * - dom
   * - CSS variables
   * - position
   * - dimensions
   * - scroll position
   * - event handlers
   * - unbounded, active and disabled states
   *
   * Additionally, provides type information for the adapter to the Closure
   * compiler.
   *
   * Implement this adapter for your framework of choice to delegate updates to
   * the component in your framework of choice. See architecture documentation
   * for more details.
   * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
   *
   * @record
   */
  var MDCRippleAdapter = function () {
    function MDCRippleAdapter() {
      classCallCheck(this, MDCRippleAdapter);
    }

    createClass(MDCRippleAdapter, [{
      key: "browserSupportsCssVars",

      /** @return {boolean} */
      value: function browserSupportsCssVars() {}

      /** @return {boolean} */

    }, {
      key: "isUnbounded",
      value: function isUnbounded() {}

      /** @return {boolean} */

    }, {
      key: "isSurfaceActive",
      value: function isSurfaceActive() {}

      /** @return {boolean} */

    }, {
      key: "isSurfaceDisabled",
      value: function isSurfaceDisabled() {}

      /** @param {string} className */

    }, {
      key: "addClass",
      value: function addClass(className) {}

      /** @param {string} className */

    }, {
      key: "removeClass",
      value: function removeClass(className) {}

      /** @param {!EventTarget} target */

    }, {
      key: "containsEventTarget",
      value: function containsEventTarget(target) {}

      /**
       * @param {string} evtType
       * @param {!Function} handler
       */

    }, {
      key: "registerInteractionHandler",
      value: function registerInteractionHandler(evtType, handler) {}

      /**
       * @param {string} evtType
       * @param {!Function} handler
       */

    }, {
      key: "deregisterInteractionHandler",
      value: function deregisterInteractionHandler(evtType, handler) {}

      /**
       * @param {string} evtType
       * @param {!Function} handler
       */

    }, {
      key: "registerDocumentInteractionHandler",
      value: function registerDocumentInteractionHandler(evtType, handler) {}

      /**
       * @param {string} evtType
       * @param {!Function} handler
       */

    }, {
      key: "deregisterDocumentInteractionHandler",
      value: function deregisterDocumentInteractionHandler(evtType, handler) {}

      /**
       * @param {!Function} handler
       */

    }, {
      key: "registerResizeHandler",
      value: function registerResizeHandler(handler) {}

      /**
       * @param {!Function} handler
       */

    }, {
      key: "deregisterResizeHandler",
      value: function deregisterResizeHandler(handler) {}

      /**
       * @param {string} varName
       * @param {?number|string} value
       */

    }, {
      key: "updateCssVariable",
      value: function updateCssVariable(varName, value) {}

      /** @return {!ClientRect} */

    }, {
      key: "computeBoundingRect",
      value: function computeBoundingRect() {}

      /** @return {{x: number, y: number}} */

    }, {
      key: "getWindowPageOffset",
      value: function getWindowPageOffset() {}
    }]);
    return MDCRippleAdapter;
  }();

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var cssClasses = {
    // Ripple is a special case where the "root" component is really a "mixin" of sorts,
    // given that it's an 'upgrade' to an existing component. That being said it is the root
    // CSS class that all other CSS classes derive from.
    ROOT: 'mdc-ripple-upgraded',
    UNBOUNDED: 'mdc-ripple-upgraded--unbounded',
    BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',
    FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',
    FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation'
  };

  var strings = {
    VAR_LEFT: '--mdc-ripple-left',
    VAR_TOP: '--mdc-ripple-top',
    VAR_FG_SIZE: '--mdc-ripple-fg-size',
    VAR_FG_SCALE: '--mdc-ripple-fg-scale',
    VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',
    VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end'
  };

  var numbers = {
    PADDING: 10,
    INITIAL_ORIGIN_SCALE: 0.6,
    DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)
    FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)
    TAP_DELAY_MS: 300 // Delay between touch and simulated mouse events on touch devices
  };

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.
   * @private {boolean|undefined}
   */
  var supportsCssVariables_ = void 0;

  /**
   * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.
   * @private {boolean|undefined}
   */
  var supportsPassive_ = void 0;

  /**
   * @param {!Window} windowObj
   * @return {boolean}
   */
  function detectEdgePseudoVarBug(windowObj) {
    // Detect versions of Edge with buggy var() support
    // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/
    var document = windowObj.document;
    var node = document.createElement('div');
    node.className = 'mdc-ripple-surface--test-edge-var-bug';
    document.body.appendChild(node);

    // The bug exists if ::before style ends up propagating to the parent element.
    // Additionally, getComputedStyle returns null in iframes with display: "none" in Firefox,
    // but Firefox is known to support CSS custom properties correctly.
    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397
    var computedStyle = windowObj.getComputedStyle(node);
    var hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';
    node.remove();
    return hasPseudoVarBug;
  }

  /**
   * @param {!Window} windowObj
   * @param {boolean=} forceRefresh
   * @return {boolean|undefined}
   */

  function supportsCssVariables(windowObj) {
    var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {
      return supportsCssVariables_;
    }

    var supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';
    if (!supportsFunctionPresent) {
      return;
    }

    var explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');
    // See: https://bugs.webkit.org/show_bug.cgi?id=154669
    // See: README section on Safari
    var weAreFeatureDetectingSafari10plus = windowObj.CSS.supports('(--css-vars: yes)') && windowObj.CSS.supports('color', '#00000000');

    if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {
      supportsCssVariables_ = !detectEdgePseudoVarBug(windowObj);
    } else {
      supportsCssVariables_ = false;
    }
    return supportsCssVariables_;
  }

  //
  /**
   * Determine whether the current browser supports passive event listeners, and if so, use them.
   * @param {!Window=} globalObj
   * @param {boolean=} forceRefresh
   * @return {boolean|{passive: boolean}}
   */
  function applyPassive() {
    var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
    var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (supportsPassive_ === undefined || forceRefresh) {
      var isSupported = false;
      try {
        globalObj.document.addEventListener('test', null, { get passive() {
            isSupported = true;
          } });
      } catch (e) {}

      supportsPassive_ = isSupported;
    }

    return supportsPassive_ ? { passive: true } : false;
  }

  /**
   * @param {!Object} HTMLElementPrototype
   * @return {!Array<string>}
   */
  function getMatchesProperty(HTMLElementPrototype) {
    return ['webkitMatchesSelector', 'msMatchesSelector', 'matches'].filter(function (p) {
      return p in HTMLElementPrototype;
    }).pop();
  }

  /**
   * @param {!Event} ev
   * @param {!{x: number, y: number}} pageOffset
   * @param {!ClientRect} clientRect
   * @return {!{x: number, y: number}}
   */
  function getNormalizedEventCoords(ev, pageOffset, clientRect) {
    var x = pageOffset.x,
        y = pageOffset.y;

    var documentX = x + clientRect.left;
    var documentY = y + clientRect.top;

    var normalizedX = void 0;
    var normalizedY = void 0;
    // Determine touch point relative to the ripple container.
    if (ev.type === 'touchstart') {
      normalizedX = ev.changedTouches[0].pageX - documentX;
      normalizedY = ev.changedTouches[0].pageY - documentY;
    } else {
      normalizedX = ev.pageX - documentX;
      normalizedY = ev.pageY - documentY;
    }

    return { x: normalizedX, y: normalizedY };
  }

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  // Activation events registered on the root element of each instance for activation
  var ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];

  // Deactivation events registered on documentElement when a pointer-related down event occurs
  var POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];

  // Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations
  /** @type {!Array<!EventTarget>} */
  var activatedTargets = [];

  /**
   * @extends {MDCFoundation<!MDCRippleAdapter>}
   */

  var MDCRippleFoundation = function (_MDCFoundation) {
    inherits(MDCRippleFoundation, _MDCFoundation);
    createClass(MDCRippleFoundation, null, [{
      key: 'cssClasses',
      get: function get$$1() {
        return cssClasses;
      }
    }, {
      key: 'strings',
      get: function get$$1() {
        return strings;
      }
    }, {
      key: 'numbers',
      get: function get$$1() {
        return numbers;
      }
    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return {
          browserSupportsCssVars: function browserSupportsCssVars() /* boolean - cached */{},
          isUnbounded: function isUnbounded() /* boolean */{},
          isSurfaceActive: function isSurfaceActive() /* boolean */{},
          isSurfaceDisabled: function isSurfaceDisabled() /* boolean */{},
          addClass: function addClass() /* className: string */{},
          removeClass: function removeClass() /* className: string */{},
          containsEventTarget: function containsEventTarget() /* target: !EventTarget */{},
          registerInteractionHandler: function registerInteractionHandler() /* evtType: string, handler: EventListener */{},
          deregisterInteractionHandler: function deregisterInteractionHandler() /* evtType: string, handler: EventListener */{},
          registerDocumentInteractionHandler: function registerDocumentInteractionHandler() /* evtType: string, handler: EventListener */{},
          deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler() /* evtType: string, handler: EventListener */{},
          registerResizeHandler: function registerResizeHandler() /* handler: EventListener */{},
          deregisterResizeHandler: function deregisterResizeHandler() /* handler: EventListener */{},
          updateCssVariable: function updateCssVariable() /* varName: string, value: string */{},
          computeBoundingRect: function computeBoundingRect() /* ClientRect */{},
          getWindowPageOffset: function getWindowPageOffset() /* {x: number, y: number} */{}
        };
      }
    }]);

    function MDCRippleFoundation(adapter) {
      classCallCheck(this, MDCRippleFoundation);

      /** @private {number} */
      var _this = possibleConstructorReturn(this, (MDCRippleFoundation.__proto__ || Object.getPrototypeOf(MDCRippleFoundation)).call(this, _extends(MDCRippleFoundation.defaultAdapter, adapter)));

      _this.layoutFrame_ = 0;

      /** @private {!ClientRect} */
      _this.frame_ = /** @type {!ClientRect} */{ width: 0, height: 0 };

      /** @private {!ActivationStateType} */
      _this.activationState_ = _this.defaultActivationState_();

      /** @private {number} */
      _this.initialSize_ = 0;

      /** @private {number} */
      _this.maxRadius_ = 0;

      /** @private {function(!Event)} */
      _this.activateHandler_ = function (e) {
        return _this.activate_(e);
      };

      /** @private {function(!Event)} */
      _this.deactivateHandler_ = function (e) {
        return _this.deactivate_(e);
      };

      /** @private {function(?Event=)} */
      _this.focusHandler_ = function () {
        return requestAnimationFrame(function () {
          return _this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
        });
      };

      /** @private {function(?Event=)} */
      _this.blurHandler_ = function () {
        return requestAnimationFrame(function () {
          return _this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
        });
      };

      /** @private {!Function} */
      _this.resizeHandler_ = function () {
        return _this.layout();
      };

      /** @private {!{left: number, top:number}} */
      _this.unboundedCoords_ = {
        left: 0,
        top: 0
      };

      /** @private {number} */
      _this.fgScale_ = 0;

      /** @private {number} */
      _this.activationTimer_ = 0;

      /** @private {number} */
      _this.fgDeactivationRemovalTimer_ = 0;

      /** @private {boolean} */
      _this.activationAnimationHasEnded_ = false;

      /** @private {!Function} */
      _this.activationTimerCallback_ = function () {
        _this.activationAnimationHasEnded_ = true;
        _this.runDeactivationUXLogicIfReady_();
      };

      /** @private {?Event} */
      _this.previousActivationEvent_ = null;
      return _this;
    }

    /**
     * We compute this property so that we are not querying information about the client
     * until the point in time where the foundation requests it. This prevents scenarios where
     * client-side feature-detection may happen too early, such as when components are rendered on the server
     * and then initialized at mount time on the client.
     * @return {boolean}
     * @private
     */


    createClass(MDCRippleFoundation, [{
      key: 'isSupported_',
      value: function isSupported_() {
        return this.adapter_.browserSupportsCssVars();
      }

      /**
       * @return {!ActivationStateType}
       */

    }, {
      key: 'defaultActivationState_',
      value: function defaultActivationState_() {
        return {
          isActivated: false,
          hasDeactivationUXRun: false,
          wasActivatedByPointer: false,
          wasElementMadeActive: false,
          activationEvent: null,
          isProgrammatic: false
        };
      }
    }, {
      key: 'init',
      value: function init() {
        var _this2 = this;

        if (!this.isSupported_()) {
          return;
        }
        this.registerRootHandlers_();

        var _MDCRippleFoundation$ = MDCRippleFoundation.cssClasses,
            ROOT = _MDCRippleFoundation$.ROOT,
            UNBOUNDED = _MDCRippleFoundation$.UNBOUNDED;

        requestAnimationFrame(function () {
          _this2.adapter_.addClass(ROOT);
          if (_this2.adapter_.isUnbounded()) {
            _this2.adapter_.addClass(UNBOUNDED);
          }
          _this2.layoutInternal_();
        });
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        var _this3 = this;

        if (!this.isSupported_()) {
          return;
        }
        this.deregisterRootHandlers_();
        this.deregisterDeactivationHandlers_();

        var _MDCRippleFoundation$2 = MDCRippleFoundation.cssClasses,
            ROOT = _MDCRippleFoundation$2.ROOT,
            UNBOUNDED = _MDCRippleFoundation$2.UNBOUNDED;

        requestAnimationFrame(function () {
          _this3.adapter_.removeClass(ROOT);
          _this3.adapter_.removeClass(UNBOUNDED);
          _this3.removeCssVars_();
        });
      }

      /** @private */

    }, {
      key: 'registerRootHandlers_',
      value: function registerRootHandlers_() {
        var _this4 = this;

        ACTIVATION_EVENT_TYPES.forEach(function (type) {
          _this4.adapter_.registerInteractionHandler(type, _this4.activateHandler_);
        });
        this.adapter_.registerInteractionHandler('focus', this.focusHandler_);
        this.adapter_.registerInteractionHandler('blur', this.blurHandler_);
        this.adapter_.registerResizeHandler(this.resizeHandler_);
      }

      /**
       * @param {!Event} e
       * @private
       */

    }, {
      key: 'registerDeactivationHandlers_',
      value: function registerDeactivationHandlers_(e) {
        var _this5 = this;

        if (e.type === 'keydown') {
          this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);
        } else {
          POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
            _this5.adapter_.registerDocumentInteractionHandler(type, _this5.deactivateHandler_);
          });
        }
      }

      /** @private */

    }, {
      key: 'deregisterRootHandlers_',
      value: function deregisterRootHandlers_() {
        var _this6 = this;

        ACTIVATION_EVENT_TYPES.forEach(function (type) {
          _this6.adapter_.deregisterInteractionHandler(type, _this6.activateHandler_);
        });
        this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);
        this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);
        this.adapter_.deregisterResizeHandler(this.resizeHandler_);
      }

      /** @private */

    }, {
      key: 'deregisterDeactivationHandlers_',
      value: function deregisterDeactivationHandlers_() {
        var _this7 = this;

        this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);
        POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {
          _this7.adapter_.deregisterDocumentInteractionHandler(type, _this7.deactivateHandler_);
        });
      }

      /** @private */

    }, {
      key: 'removeCssVars_',
      value: function removeCssVars_() {
        var _this8 = this;

        var strings$$1 = MDCRippleFoundation.strings;

        Object.keys(strings$$1).forEach(function (k) {
          if (k.indexOf('VAR_') === 0) {
            _this8.adapter_.updateCssVariable(strings$$1[k], null);
          }
        });
      }

      /**
       * @param {?Event} e
       * @private
       */

    }, {
      key: 'activate_',
      value: function activate_(e) {
        var _this9 = this;

        if (this.adapter_.isSurfaceDisabled()) {
          return;
        }

        var activationState = this.activationState_;
        if (activationState.isActivated) {
          return;
        }

        // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction
        var previousActivationEvent = this.previousActivationEvent_;
        var isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;
        if (isSameInteraction) {
          return;
        }

        activationState.isActivated = true;
        activationState.isProgrammatic = e === null;
        activationState.activationEvent = e;
        activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown';

        var hasActivatedChild = e && activatedTargets.length > 0 && activatedTargets.some(function (target) {
          return _this9.adapter_.containsEventTarget(target);
        });
        if (hasActivatedChild) {
          // Immediately reset activation state, while preserving logic that prevents touch follow-on events
          this.resetActivationState_();
          return;
        }

        if (e) {
          activatedTargets.push( /** @type {!EventTarget} */e.target);
          this.registerDeactivationHandlers_(e);
        }

        requestAnimationFrame(function () {
          // This needs to be wrapped in an rAF call b/c web browsers
          // report active states inconsistently when they're called within
          // event handling code:
          // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971
          // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741
          activationState.wasElementMadeActive = e && e.type === 'keydown' ? _this9.adapter_.isSurfaceActive() : true;
          if (activationState.wasElementMadeActive) {
            _this9.animateActivation_();
          } else {
            // Reset activation state immediately if element was not made active.
            _this9.activationState_ = _this9.defaultActivationState_();
          }

          // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples
          activatedTargets = [];
        });
      }

      /**
       * @param {?Event=} event Optional event containing position information.
       */

    }, {
      key: 'activate',
      value: function activate() {
        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

        this.activate_(event);
      }

      /** @private */

    }, {
      key: 'animateActivation_',
      value: function animateActivation_() {
        var _this10 = this;

        var _MDCRippleFoundation$3 = MDCRippleFoundation.strings,
            VAR_FG_TRANSLATE_START = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_START,
            VAR_FG_TRANSLATE_END = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_END;
        var _MDCRippleFoundation$4 = MDCRippleFoundation.cssClasses,
            FG_DEACTIVATION = _MDCRippleFoundation$4.FG_DEACTIVATION,
            FG_ACTIVATION = _MDCRippleFoundation$4.FG_ACTIVATION;
        var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;


        var translateStart = '';
        var translateEnd = '';

        if (!this.adapter_.isUnbounded()) {
          var _getFgTranslationCoor = this.getFgTranslationCoordinates_(),
              startPoint = _getFgTranslationCoor.startPoint,
              endPoint = _getFgTranslationCoor.endPoint;

          translateStart = startPoint.x + 'px, ' + startPoint.y + 'px';
          translateEnd = endPoint.x + 'px, ' + endPoint.y + 'px';
        }

        this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);
        this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);
        // Cancel any ongoing activation/deactivation animations
        clearTimeout(this.activationTimer_);
        clearTimeout(this.fgDeactivationRemovalTimer_);
        this.rmBoundedActivationClasses_();
        this.adapter_.removeClass(FG_DEACTIVATION);

        // Force layout in order to re-trigger the animation.
        this.adapter_.computeBoundingRect();
        this.adapter_.addClass(FG_ACTIVATION);
        this.activationTimer_ = setTimeout(function () {
          return _this10.activationTimerCallback_();
        }, DEACTIVATION_TIMEOUT_MS);
      }

      /**
       * @private
       * @return {{startPoint: PointType, endPoint: PointType}}
       */

    }, {
      key: 'getFgTranslationCoordinates_',
      value: function getFgTranslationCoordinates_() {
        var _activationState_ = this.activationState_,
            activationEvent = _activationState_.activationEvent,
            wasActivatedByPointer = _activationState_.wasActivatedByPointer;


        var startPoint = void 0;
        if (wasActivatedByPointer) {
          startPoint = getNormalizedEventCoords(
          /** @type {!Event} */activationEvent, this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect());
        } else {
          startPoint = {
            x: this.frame_.width / 2,
            y: this.frame_.height / 2
          };
        }
        // Center the element around the start point.
        startPoint = {
          x: startPoint.x - this.initialSize_ / 2,
          y: startPoint.y - this.initialSize_ / 2
        };

        var endPoint = {
          x: this.frame_.width / 2 - this.initialSize_ / 2,
          y: this.frame_.height / 2 - this.initialSize_ / 2
        };

        return { startPoint: startPoint, endPoint: endPoint };
      }

      /** @private */

    }, {
      key: 'runDeactivationUXLogicIfReady_',
      value: function runDeactivationUXLogicIfReady_() {
        var _this11 = this;

        // This method is called both when a pointing device is released, and when the activation animation ends.
        // The deactivation animation should only run after both of those occur.
        var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;
        var _activationState_2 = this.activationState_,
            hasDeactivationUXRun = _activationState_2.hasDeactivationUXRun,
            isActivated = _activationState_2.isActivated;

        var activationHasEnded = hasDeactivationUXRun || !isActivated;

        if (activationHasEnded && this.activationAnimationHasEnded_) {
          this.rmBoundedActivationClasses_();
          this.adapter_.addClass(FG_DEACTIVATION);
          this.fgDeactivationRemovalTimer_ = setTimeout(function () {
            _this11.adapter_.removeClass(FG_DEACTIVATION);
          }, numbers.FG_DEACTIVATION_MS);
        }
      }

      /** @private */

    }, {
      key: 'rmBoundedActivationClasses_',
      value: function rmBoundedActivationClasses_() {
        var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;

        this.adapter_.removeClass(FG_ACTIVATION);
        this.activationAnimationHasEnded_ = false;
        this.adapter_.computeBoundingRect();
      }
    }, {
      key: 'resetActivationState_',
      value: function resetActivationState_() {
        var _this12 = this;

        this.previousActivationEvent_ = this.activationState_.activationEvent;
        this.activationState_ = this.defaultActivationState_();
        // Touch devices may fire additional events for the same interaction within a short time.
        // Store the previous event until it's safe to assume that subsequent events are for new interactions.
        setTimeout(function () {
          return _this12.previousActivationEvent_ = null;
        }, MDCRippleFoundation.numbers.TAP_DELAY_MS);
      }

      /**
       * @param {?Event} e
       * @private
       */

    }, {
      key: 'deactivate_',
      value: function deactivate_(e) {
        var _this13 = this;

        var activationState = this.activationState_;
        // This can happen in scenarios such as when you have a keyup event that blurs the element.
        if (!activationState.isActivated) {
          return;
        }

        var state = /** @type {!ActivationStateType} */_extends({}, activationState);

        if (activationState.isProgrammatic) {
          var evtObject = null;
          requestAnimationFrame(function () {
            return _this13.animateDeactivation_(evtObject, state);
          });
          this.resetActivationState_();
        } else {
          this.deregisterDeactivationHandlers_();
          requestAnimationFrame(function () {
            _this13.activationState_.hasDeactivationUXRun = true;
            _this13.animateDeactivation_(e, state);
            _this13.resetActivationState_();
          });
        }
      }

      /**
       * @param {?Event=} event Optional event containing position information.
       */

    }, {
      key: 'deactivate',
      value: function deactivate() {
        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

        this.deactivate_(event);
      }

      /**
       * @param {Event} e
       * @param {!ActivationStateType} options
       * @private
       */

    }, {
      key: 'animateDeactivation_',
      value: function animateDeactivation_(e, _ref) {
        var wasActivatedByPointer = _ref.wasActivatedByPointer,
            wasElementMadeActive = _ref.wasElementMadeActive;

        if (wasActivatedByPointer || wasElementMadeActive) {
          this.runDeactivationUXLogicIfReady_();
        }
      }
    }, {
      key: 'layout',
      value: function layout() {
        var _this14 = this;

        if (this.layoutFrame_) {
          cancelAnimationFrame(this.layoutFrame_);
        }
        this.layoutFrame_ = requestAnimationFrame(function () {
          _this14.layoutInternal_();
          _this14.layoutFrame_ = 0;
        });
      }

      /** @private */

    }, {
      key: 'layoutInternal_',
      value: function layoutInternal_() {
        var _this15 = this;

        this.frame_ = this.adapter_.computeBoundingRect();
        var maxDim = Math.max(this.frame_.height, this.frame_.width);

        // Surface diameter is treated differently for unbounded vs. bounded ripples.
        // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately
        // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically
        // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter
        // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via
        // `overflow: hidden`.
        var getBoundedRadius = function getBoundedRadius() {
          var hypotenuse = Math.sqrt(Math.pow(_this15.frame_.width, 2) + Math.pow(_this15.frame_.height, 2));
          return hypotenuse + MDCRippleFoundation.numbers.PADDING;
        };

        this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();

        // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform
        this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;
        this.fgScale_ = this.maxRadius_ / this.initialSize_;

        this.updateLayoutCssVars_();
      }

      /** @private */

    }, {
      key: 'updateLayoutCssVars_',
      value: function updateLayoutCssVars_() {
        var _MDCRippleFoundation$5 = MDCRippleFoundation.strings,
            VAR_FG_SIZE = _MDCRippleFoundation$5.VAR_FG_SIZE,
            VAR_LEFT = _MDCRippleFoundation$5.VAR_LEFT,
            VAR_TOP = _MDCRippleFoundation$5.VAR_TOP,
            VAR_FG_SCALE = _MDCRippleFoundation$5.VAR_FG_SCALE;


        this.adapter_.updateCssVariable(VAR_FG_SIZE, this.initialSize_ + 'px');
        this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);

        if (this.adapter_.isUnbounded()) {
          this.unboundedCoords_ = {
            left: Math.round(this.frame_.width / 2 - this.initialSize_ / 2),
            top: Math.round(this.frame_.height / 2 - this.initialSize_ / 2)
          };

          this.adapter_.updateCssVariable(VAR_LEFT, this.unboundedCoords_.left + 'px');
          this.adapter_.updateCssVariable(VAR_TOP, this.unboundedCoords_.top + 'px');
        }
      }

      /** @param {boolean} unbounded */

    }, {
      key: 'setUnbounded',
      value: function setUnbounded(unbounded) {
        var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;

        if (unbounded) {
          this.adapter_.addClass(UNBOUNDED);
        } else {
          this.adapter_.removeClass(UNBOUNDED);
        }
      }
    }]);
    return MDCRippleFoundation;
  }(MDCFoundation);

  var RippleBase = function (_MDCRippleFoundation) {
    inherits(RippleBase, _MDCRippleFoundation);
    createClass(RippleBase, null, [{
      key: 'isSurfaceActive',
      value: function isSurfaceActive(ref) {
        return ref[RippleBase.MATCHES](':active');
      }
    }, {
      key: 'MATCHES',
      get: function get$$1() {
        /* global HTMLElement */
        return RippleBase._matches || (RippleBase._matches = getMatchesProperty(HTMLElement.prototype));
      }
    }]);

    function RippleBase(vm, options) {
      classCallCheck(this, RippleBase);
      return possibleConstructorReturn(this, (RippleBase.__proto__ || Object.getPrototypeOf(RippleBase)).call(this, _extends({
        browserSupportsCssVars: function browserSupportsCssVars() {
          return supportsCssVariables(window);
        },
        isUnbounded: function isUnbounded() {
          return false;
        },
        isSurfaceActive: function isSurfaceActive() {
          return vm.$el[RippleBase.MATCHES](':active');
        },
        isSurfaceDisabled: function isSurfaceDisabled() {
          return vm.disabled;
        },
        addClass: function addClass(className) {
          vm.$set(vm.classes, className, true);
        },
        removeClass: function removeClass(className) {
          vm.$delete(vm.classes, className);
        },

        containsEventTarget: function containsEventTarget(target) {
          return vm.$el.contains(target);
        },
        registerInteractionHandler: function registerInteractionHandler(evt, handler) {
          vm.$el.addEventListener(evt, handler);
        },
        deregisterInteractionHandler: function deregisterInteractionHandler(evt, handler) {
          vm.$el.removeEventListener(evt, handler);
        },
        registerDocumentInteractionHandler: function registerDocumentInteractionHandler(evtType, handler) {
          return document.documentElement.addEventListener(evtType, handler, applyPassive());
        },
        deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler(evtType, handler) {
          return document.documentElement.removeEventListener(evtType, handler, applyPassive());
        },
        registerResizeHandler: function registerResizeHandler(handler) {
          return window.addEventListener('resize', handler);
        },
        deregisterResizeHandler: function deregisterResizeHandler(handler) {
          return window.removeEventListener('resize', handler);
        },
        updateCssVariable: function updateCssVariable(varName, value) {
          vm.$set(vm.styles, varName, value);
        },
        computeBoundingRect: function computeBoundingRect() {
          return vm.$el.getBoundingClientRect();
        },
        getWindowPageOffset: function getWindowPageOffset() {
          return { x: window.pageXOffset, y: window.pageYOffset };
        }
      }, options)));
    }

    return RippleBase;
  }(MDCRippleFoundation);

  var RippleMixin = {
    data: function data() {
      return {
        classes: {},
        styles: {}
      };
    },
    mounted: function mounted() {
      this.ripple = new RippleBase(this);
      this.ripple.init();
    },
    beforeDestroy: function beforeDestroy() {
      this.ripple.destroy();
    }
  };

  var mdcRipple = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('custom-element', { staticClass: "mdc-ripple", attrs: { "tag": _vm.tag, "classes": _vm.classes, "styles": _vm.styles } }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-ripple',
    mixins: [CustomElementMixin, RippleMixin],
    props: {
      tag: String
    }
  };

  var VueMDCRipple = BasePlugin({
    mdcRipple: mdcRipple
  });

  var mdcButtonBase = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('custom-button', { ref: "root", class: _vm.classes, style: _vm.styles, attrs: { "href": _vm.href, "link": _vm.link, "disabled": _vm.disabled }, on: { "click": _vm.dispatchEvent } }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-button-base',
    mixins: [DispatchEventMixin, CustomButtonMixin, RippleMixin],
    data: function data() {
      return {
        classes: {},
        styles: {}
      };
    }
  };

  var mdcButton = {
    name: 'mdc-button',
    extends: mdcButtonBase,
    props: {
      raised: Boolean,
      unelevated: Boolean,
      stroked: Boolean,
      dense: Boolean,
      accent: Boolean
    },
    data: function data() {
      return {
        classes: {
          'mdc-button': true,
          'mdc-button--raised': this.raised,
          'mdc-button--unelevated': this.unelevated,
          'mdc-button--stroked': this.stroked,
          'mdc-button--dense': this.dense,
          'mdc-button--accent': this.accent
        }
      };
    },

    watch: {
      raised: function raised() {
        this.$set(this.classes, 'mdc-button--raised', this.raised);
      },
      unelevated: function unelevated() {
        this.$set(this.classes, 'mdc-button--unelevated', this.unelevated);
      },
      stroked: function stroked() {
        this.$set(this.classes, 'mdc-button--stroked', this.stroked);
      },
      dense: function dense() {
        this.$set(this.classes, 'mdc-button--dense', this.dense);
      },
      accent: function accent() {
        this.$set(this.classes, 'mdc-button--accent', this.accent);
      }
    }
  };

  var VueMDCButton = BasePlugin({
    mdcButton: mdcButton
  });

  var mdcCard = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-card", class: { 'mdc-card--stroked': _vm.stroked } }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: "mdc-card",
    props: {
      stroked: Boolean
    }
  };

  var mdcCardPrimaryAction = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('custom-link', { staticClass: "mdc-card-primary-action mdc-card__primary-action", class: _vm.classes, style: _vm.styles, attrs: { "link": _vm.link }, on: { "click": _vm.dispatchEvent } }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-card-primary-action',
    mixins: [DispatchEventMixin, CustomLinkMixin, RippleMixin],
    data: function data() {
      return {
        classes: {},
        styles: {}
      };
    }
  };

  var mdcCardMedia = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('section', { staticClass: "mdc-card-media mdc-card__media", class: _vm.classes, style: _vm.styles }, [_vm.$slots.default ? _c('div', { staticClass: "mdc-card__media-content" }, [_vm._t("default")], 2) : _vm._e()]);
    }, staticRenderFns: [],
    name: "mdc-card-media",
    props: {
      src: String,
      'square': Boolean
    },
    computed: {
      styles: function styles() {
        var styles = {
          backgroundImage: 'url(' + this.src + ')'
        };

        return styles;
      },
      classes: function classes() {
        return this.square ? 'mdc-card__media--square' : 'mdc-card__media--16-9';
      }
    }
  };

  var mdcCardHeader = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('section', { staticClass: "mdc-card-header mdc-card__primary" }, [_vm._t("default", [_vm.title ? _c('h1', { staticClass: "mdc-card__title", class: { 'mdc-card__title--large': _vm.largeTitle } }, [_vm._v(" " + _vm._s(_vm.title) + " ")]) : _vm._e(), _vm._v(" "), _vm.subtitle ? _c('h2', { staticClass: "mdc-card__subtitle" }, [_vm._v(" " + _vm._s(_vm.subtitle) + " ")]) : _vm._e()])], 2);
    }, staticRenderFns: [],
    name: 'mdc-card-header',
    props: {
      'title': String,
      'subtitle': String,
      'large-title': { type: Boolean, default: true }
    }
  };

  var mdcCardTitle = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('h1', { staticClass: "mdc-card-title mdc-card__title", class: { 'mdc-card__title--large': _vm.large } }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-card-title',
    props: {
      'large': Boolean
    }
  };

  var mdcCardSubtitle = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('h2', { staticClass: "mdc-card-subtitle mdc-card__subtitle" }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-card-subtitle'
  };

  var mdcCardText = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('section', { staticClass: "mdc-card-text mdc-card__supporting-text" }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-card-text'
  };

  var mdcCardActions = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('section', { staticClass: "mdc-card-actions mdc-card__actions", class: _vm.classes }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-card-actions',
    props: {
      fullBleed: Boolean
    },
    computed: {
      classes: function classes() {
        return {
          'mdc-card__actions--full-bleed': this.fullBleed
        };
      }
    }
  };

  var mdcCardActionButtons = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-card-action-buttons mdc-card__action-buttons" }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: "mdc-card-action-buttons"
  };

  var mdcCardActionButton = {
    name: 'mdc-card-action-button',
    extends: mdcButtonBase,
    props: {
      compact: Boolean,
      accent: Boolean
    },
    data: function data() {
      return {
        classes: {
          'mdc-button': true,
          'mdc-card__action': true,
          'mdc-card-action-button': true,
          'mdc-button--compact': this.compact,
          'mdc-button--accent': this.accent
        }
      };
    },

    watch: {
      compact: function compact() {
        this.$set(this.classes, 'mdc-button--compact', this.compact);
      },
      accent: function accent() {
        this.$set(this.classes, 'mdc-button--accent', this.accent);
      }
    }
  };

  var mdcCardActionIcons = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-card-action-icons mdc-card__action-icons" }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: "mdc-card-action-icons"
  };

  var mdcCardActionIcon = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('span', { class: _vm.classes, style: _vm.styles, on: { "click": _vm.dispatchEvent } }, [_vm._t("default", [_vm._v(_vm._s(_vm.icon))])], 2);
    }, staticRenderFns: [],
    name: 'mdc-card-action-icon',
    mixins: [DispatchEventMixin],
    props: {
      icon: String
    },
    data: function data() {
      return {
        classes: {
          'mdc-card-action-icon': true,
          'material-icons': !!this.icon,
          'mdc-card__action': true,
          'mdc-card__action--icon': true,
          'mdc-icon-toggle': true
        },
        styles: {}
      };
    },

    watch: {
      icon: function icon() {
        this.$set(this.classes, 'material-icons', !!this.icon);
      }
    },
    mounted: function mounted() {
      this.ripple = new RippleBase(this, {
        isUnbounded: function isUnbounded() {
          return true;
        }
      });
      this.ripple.init();
    },
    beforeDestroy: function beforeDestroy() {
      this.ripple.destroy();
    }
  };

  var VueMDCCard = BasePlugin({
    mdcCard: mdcCard,
    mdcCardPrimaryAction: mdcCardPrimaryAction,
    mdcCardMedia: mdcCardMedia,
    mdcCardHeader: mdcCardHeader,
    mdcCardTitle: mdcCardTitle,
    mdcCardSubtitle: mdcCardSubtitle,
    mdcCardText: mdcCardText,
    mdcCardActions: mdcCardActions,
    mdcCardActionButtons: mdcCardActionButtons,
    mdcCardActionButton: mdcCardActionButton,
    mdcCardActionIcons: mdcCardActionIcons,
    mdcCardActionIcon: mdcCardActionIcon
  });

  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @template F
   */

  var MDCComponent = function () {
    createClass(MDCComponent, null, [{
      key: 'attachTo',

      /**
       * @param {!Element} root
       * @return {!MDCComponent}
       */
      value: function attachTo(root) {
        // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and
        // returns an instantiated component with its root set to that element. Also note that in the cases of
        // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized
        // from getDefaultFoundation().
        return new MDCComponent(root, new MDCFoundation());
      }

      /**
       * @param {!Element} root
       * @param {F=} foundation
       * @param {...?} args
       */

    }]);

    function MDCComponent(root) {
      var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
      classCallCheck(this, MDCComponent);

      /** @protected {!Element} */
      this.root_ = root;

      for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        args[_key - 2] = arguments[_key];
      }

      this.initialize.apply(this, args);
      // Note that we initialize foundation here and not within the constructor's default param so that
      // this.root_ is defined and can be used within the foundation class.
      /** @protected {!F} */
      this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;
      this.foundation_.init();
      this.initialSyncWithDOM();
    }

    createClass(MDCComponent, [{
      key: 'initialize',
      value: function initialize() /* ...args */{}
      // Subclasses can override this to do any additional setup work that would be considered part of a
      // "constructor". Essentially, it is a hook into the parent constructor before the foundation is
      // initialized. Any additional arguments besides root and foundation will be passed in here.


      /**
       * @return {!F} foundation
       */

    }, {
      key: 'getDefaultFoundation',
      value: function getDefaultFoundation() {
        // Subclasses must override this method to return a properly configured foundation class for the
        // component.
        throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');
      }
    }, {
      key: 'initialSyncWithDOM',
      value: function initialSyncWithDOM() {
        // Subclasses should override this method if they need to perform work to synchronize with a host DOM
        // object. An example of this would be a form control wrapper that needs to synchronize its internal state
        // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM
        // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        // Subclasses may implement this method to release any resources / deregister any listeners they have
        // attached. An example of this might be deregistering a resize event from the window object.
        this.foundation_.destroy();
      }

      /**
       * Wrapper method to add an event listener to the component's root element. This is most useful when
       * listening for custom events.
       * @param {string} evtType
       * @param {!Function} handler
       */

    }, {
      key: 'listen',
      value: function listen(evtType, handler) {
        this.root_.addEventListener(evtType, handler);
      }

      /**
       * Wrapper method to remove an event listener to the component's root element. This is most useful when
       * unlistening for custom events.
       * @param {string} evtType
       * @param {!Function} handler
       */

    }, {
      key: 'unlisten',
      value: function unlisten(evtType, handler) {
        this.root_.removeEventListener(evtType, handler);
      }

      /**
       * Fires a cross-browser-compatible custom event from the component root of the given type,
       * with the given data.
       * @param {string} evtType
       * @param {!Object} evtData
       * @param {boolean=} shouldBubble
       */

    }, {
      key: 'emit',
      value: function emit(evtType, evtData) {
        var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        var evt = void 0;
        if (typeof CustomEvent === 'function') {
          evt = new CustomEvent(evtType, {
            detail: evtData,
            bubbles: shouldBubble
          });
        } else {
          evt = document.createEvent('CustomEvent');
          evt.initCustomEvent(evtType, shouldBubble, false, evtData);
        }

        this.root_.dispatchEvent(evt);
      }
    }]);
    return MDCComponent;
  }();

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends MDCComponent<!MDCRippleFoundation>
   */

  var MDCRipple = function (_MDCComponent) {
    inherits(MDCRipple, _MDCComponent);

    /** @param {...?} args */
    function MDCRipple() {
      var _ref;

      classCallCheck(this, MDCRipple);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      /** @type {boolean} */
      var _this = possibleConstructorReturn(this, (_ref = MDCRipple.__proto__ || Object.getPrototypeOf(MDCRipple)).call.apply(_ref, [this].concat(args)));

      _this.disabled = false;

      /** @private {boolean} */
      _this.unbounded_;
      return _this;
    }

    /**
     * @param {!Element} root
     * @param {{isUnbounded: (boolean|undefined)}=} options
     * @return {!MDCRipple}
     */


    createClass(MDCRipple, [{
      key: 'setUnbounded_',


      /**
       * Closure Compiler throws an access control error when directly accessing a
       * protected or private property inside a getter/setter, like unbounded above.
       * By accessing the protected property inside a method, we solve that problem.
       * That's why this function exists.
       * @private
       */
      value: function setUnbounded_() {
        this.foundation_.setUnbounded(this.unbounded_);
      }
    }, {
      key: 'activate',
      value: function activate() {
        this.foundation_.activate();
      }
    }, {
      key: 'deactivate',
      value: function deactivate() {
        this.foundation_.deactivate();
      }
    }, {
      key: 'layout',
      value: function layout() {
        this.foundation_.layout();
      }

      /** @return {!MDCRippleFoundation} */

    }, {
      key: 'getDefaultFoundation',
      value: function getDefaultFoundation() {
        return new MDCRippleFoundation(MDCRipple.createAdapter(this));
      }
    }, {
      key: 'initialSyncWithDOM',
      value: function initialSyncWithDOM() {
        this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;
      }
    }, {
      key: 'unbounded',


      /** @return {boolean} */
      get: function get$$1() {
        return this.unbounded_;
      }

      /** @param {boolean} unbounded */
      ,
      set: function set$$1(unbounded) {
        this.unbounded_ = Boolean(unbounded);
        this.setUnbounded_();
      }
    }], [{
      key: 'attachTo',
      value: function attachTo(root) {
        var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            _ref2$isUnbounded = _ref2.isUnbounded,
            isUnbounded = _ref2$isUnbounded === undefined ? undefined : _ref2$isUnbounded;

        var ripple = new MDCRipple(root);
        // Only override unbounded behavior if option is explicitly specified
        if (isUnbounded !== undefined) {
          ripple.unbounded = /** @type {boolean} */isUnbounded;
        }
        return ripple;
      }

      /**
       * @param {!RippleCapableSurface} instance
       * @return {!MDCRippleAdapter}
       */

    }, {
      key: 'createAdapter',
      value: function createAdapter(instance) {
        var MATCHES = getMatchesProperty(HTMLElement.prototype);

        return {
          browserSupportsCssVars: function browserSupportsCssVars() {
            return supportsCssVariables(window);
          },
          isUnbounded: function isUnbounded() {
            return instance.unbounded;
          },
          isSurfaceActive: function isSurfaceActive() {
            return instance.root_[MATCHES](':active');
          },
          isSurfaceDisabled: function isSurfaceDisabled() {
            return instance.disabled;
          },
          addClass: function addClass(className) {
            return instance.root_.classList.add(className);
          },
          removeClass: function removeClass(className) {
            return instance.root_.classList.remove(className);
          },
          containsEventTarget: function containsEventTarget(target) {
            return instance.root_.contains(target);
          },
          registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
            return instance.root_.addEventListener(evtType, handler, applyPassive());
          },
          deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
            return instance.root_.removeEventListener(evtType, handler, applyPassive());
          },
          registerDocumentInteractionHandler: function registerDocumentInteractionHandler(evtType, handler) {
            return document.documentElement.addEventListener(evtType, handler, applyPassive());
          },
          deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler(evtType, handler) {
            return document.documentElement.removeEventListener(evtType, handler, applyPassive());
          },
          registerResizeHandler: function registerResizeHandler(handler) {
            return window.addEventListener('resize', handler);
          },
          deregisterResizeHandler: function deregisterResizeHandler(handler) {
            return window.removeEventListener('resize', handler);
          },
          updateCssVariable: function updateCssVariable(varName, value) {
            return instance.root_.style.setProperty(varName, value);
          },
          computeBoundingRect: function computeBoundingRect() {
            return instance.root_.getBoundingClientRect();
          },
          getWindowPageOffset: function getWindowPageOffset() {
            return { x: window.pageXOffset, y: window.pageYOffset };
          }
        };
      }
    }]);
    return MDCRipple;
  }(MDCComponent);

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @record
   */

  var MDCSelectionControl = function () {
    function MDCSelectionControl() {
      classCallCheck(this, MDCSelectionControl);
    }

    createClass(MDCSelectionControl, [{
      key: 'ripple',

      /** @return {?MDCRipple} */
      get: function get$$1() {}
    }]);
    return MDCSelectionControl;
  }();

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /* eslint no-unused-vars: [2, {"args": "none"}] */

  /**
   * Adapter for MDC Checkbox. Provides an interface for managing
   * - classes
   * - dom
   * - event handlers
   *
   * Additionally, provides type information for the adapter to the Closure
   * compiler.
   *
   * Implement this adapter for your framework of choice to delegate updates to
   * the component in your framework of choice. See architecture documentation
   * for more details.
   * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
   *
   * @record
   */

  var MDCCheckboxAdapter = function () {
    function MDCCheckboxAdapter() {
      classCallCheck(this, MDCCheckboxAdapter);
    }

    createClass(MDCCheckboxAdapter, [{
      key: 'addClass',

      /** @param {string} className */
      value: function addClass(className) {}

      /** @param {string} className */

    }, {
      key: 'removeClass',
      value: function removeClass(className) {}

      /**
       * Sets an attribute with a given value on the input element.
       * @param {string} attr
       * @param {string} value
       */

    }, {
      key: 'setNativeControlAttr',
      value: function setNativeControlAttr(attr, value) {}

      /**
       * Removes an attribute from the input element.
       * @param {string} attr
       */

    }, {
      key: 'removeNativeControlAttr',
      value: function removeNativeControlAttr(attr) {}

      /** @param {!EventListener} handler */

    }, {
      key: 'registerAnimationEndHandler',
      value: function registerAnimationEndHandler(handler) {}

      /** @param {!EventListener} handler */

    }, {
      key: 'deregisterAnimationEndHandler',
      value: function deregisterAnimationEndHandler(handler) {}

      /** @param {!EventListener} handler */

    }, {
      key: 'registerChangeHandler',
      value: function registerChangeHandler(handler) {}

      /** @param {!EventListener} handler */

    }, {
      key: 'deregisterChangeHandler',
      value: function deregisterChangeHandler(handler) {}

      /** @return {!MDCSelectionControlState} */

    }, {
      key: 'getNativeControl',
      value: function getNativeControl() {}
    }, {
      key: 'forceLayout',
      value: function forceLayout() {}

      /** @return {boolean} */

    }, {
      key: 'isAttachedToDOM',
      value: function isAttachedToDOM() {}
    }]);
    return MDCCheckboxAdapter;
  }();

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @const {string} */
  var ROOT = 'mdc-checkbox';

  /** @enum {string} */
  var cssClasses$1 = {
    UPGRADED: 'mdc-checkbox--upgraded',
    CHECKED: 'mdc-checkbox--checked',
    INDETERMINATE: 'mdc-checkbox--indeterminate',
    DISABLED: 'mdc-checkbox--disabled',
    ANIM_UNCHECKED_CHECKED: 'mdc-checkbox--anim-unchecked-checked',
    ANIM_UNCHECKED_INDETERMINATE: 'mdc-checkbox--anim-unchecked-indeterminate',
    ANIM_CHECKED_UNCHECKED: 'mdc-checkbox--anim-checked-unchecked',
    ANIM_CHECKED_INDETERMINATE: 'mdc-checkbox--anim-checked-indeterminate',
    ANIM_INDETERMINATE_CHECKED: 'mdc-checkbox--anim-indeterminate-checked',
    ANIM_INDETERMINATE_UNCHECKED: 'mdc-checkbox--anim-indeterminate-unchecked'
  };

  /** @enum {string} */
  var strings$1 = {
    NATIVE_CONTROL_SELECTOR: '.' + ROOT + '__native-control',
    TRANSITION_STATE_INIT: 'init',
    TRANSITION_STATE_CHECKED: 'checked',
    TRANSITION_STATE_UNCHECKED: 'unchecked',
    TRANSITION_STATE_INDETERMINATE: 'indeterminate',
    ARIA_CHECKED_ATTR: 'aria-checked',
    ARIA_CHECKED_INDETERMINATE_VALUE: 'mixed'
  };

  /** @enum {number} */
  var numbers$1 = {
    ANIM_END_LATCH_MS: 250
  };

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @const {!Array<string>} */
  var CB_PROTO_PROPS = ['checked', 'indeterminate'];

  /**
   * @extends {MDCFoundation<!MDCCheckboxAdapter>}
   */

  var MDCCheckboxFoundation = function (_MDCFoundation) {
    inherits(MDCCheckboxFoundation, _MDCFoundation);
    createClass(MDCCheckboxFoundation, null, [{
      key: 'cssClasses',

      /** @return enum {cssClasses} */
      get: function get$$1() {
        return cssClasses$1;
      }

      /** @return enum {strings} */

    }, {
      key: 'strings',
      get: function get$$1() {
        return strings$1;
      }

      /** @return enum {numbers} */

    }, {
      key: 'numbers',
      get: function get$$1() {
        return numbers$1;
      }

      /** @return {!MDCCheckboxAdapter} */

    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return (/** @type {!MDCCheckboxAdapter} */{
            addClass: function addClass() /* className: string */{},
            removeClass: function removeClass() /* className: string */{},
            setNativeControlAttr: function setNativeControlAttr() {},
            removeNativeControlAttr: function removeNativeControlAttr() {},
            registerAnimationEndHandler: function registerAnimationEndHandler() /* handler: EventListener */{},
            deregisterAnimationEndHandler: function deregisterAnimationEndHandler() /* handler: EventListener */{},
            registerChangeHandler: function registerChangeHandler() /* handler: EventListener */{},
            deregisterChangeHandler: function deregisterChangeHandler() /* handler: EventListener */{},
            getNativeControl: function getNativeControl() /* !MDCSelectionControlState */{},
            forceLayout: function forceLayout() {},
            isAttachedToDOM: function isAttachedToDOM() /* boolean */{}
          }
        );
      }
    }]);

    function MDCCheckboxFoundation(adapter) {
      classCallCheck(this, MDCCheckboxFoundation);

      /** @private {string} */
      var _this = possibleConstructorReturn(this, (MDCCheckboxFoundation.__proto__ || Object.getPrototypeOf(MDCCheckboxFoundation)).call(this, _extends(MDCCheckboxFoundation.defaultAdapter, adapter)));

      _this.currentCheckState_ = strings$1.TRANSITION_STATE_INIT;

      /** @private {string} */
      _this.currentAnimationClass_ = '';

      /** @private {number} */
      _this.animEndLatchTimer_ = 0;

      _this.animEndHandler_ = /** @private {!EventListener} */function () {
        return _this.handleAnimationEnd();
      };

      _this.changeHandler_ = /** @private {!EventListener} */function () {
        return _this.handleChange();
      };
      return _this;
    }

    createClass(MDCCheckboxFoundation, [{
      key: 'init',
      value: function init() {
        this.currentCheckState_ = this.determineCheckState_(this.getNativeControl_());
        this.adapter_.addClass(cssClasses$1.UPGRADED);
        this.adapter_.registerChangeHandler(this.changeHandler_);
        this.installPropertyChangeHooks_();
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        this.adapter_.deregisterChangeHandler(this.changeHandler_);
        this.uninstallPropertyChangeHooks_();
      }

      /** @return {boolean} */

    }, {
      key: 'isChecked',
      value: function isChecked() {
        return this.getNativeControl_().checked;
      }

      /** @param {boolean} checked */

    }, {
      key: 'setChecked',
      value: function setChecked(checked) {
        this.getNativeControl_().checked = checked;
      }

      /** @return {boolean} */

    }, {
      key: 'isIndeterminate',
      value: function isIndeterminate() {
        return this.getNativeControl_().indeterminate;
      }

      /** @param {boolean} indeterminate */

    }, {
      key: 'setIndeterminate',
      value: function setIndeterminate(indeterminate) {
        this.getNativeControl_().indeterminate = indeterminate;
      }

      /** @return {boolean} */

    }, {
      key: 'isDisabled',
      value: function isDisabled() {
        return this.getNativeControl_().disabled;
      }

      /** @param {boolean} disabled */

    }, {
      key: 'setDisabled',
      value: function setDisabled(disabled) {
        this.getNativeControl_().disabled = disabled;
        if (disabled) {
          this.adapter_.addClass(cssClasses$1.DISABLED);
        } else {
          this.adapter_.removeClass(cssClasses$1.DISABLED);
        }
      }

      /** @return {?string} */

    }, {
      key: 'getValue',
      value: function getValue() {
        return this.getNativeControl_().value;
      }

      /** @param {?string} value */

    }, {
      key: 'setValue',
      value: function setValue(value) {
        this.getNativeControl_().value = value;
      }

      /**
       * Handles the animationend event for the checkbox
       */

    }, {
      key: 'handleAnimationEnd',
      value: function handleAnimationEnd() {
        var _this2 = this;

        clearTimeout(this.animEndLatchTimer_);
        this.animEndLatchTimer_ = setTimeout(function () {
          _this2.adapter_.removeClass(_this2.currentAnimationClass_);
          _this2.adapter_.deregisterAnimationEndHandler(_this2.animEndHandler_);
        }, numbers$1.ANIM_END_LATCH_MS);
      }

      /**
       * Handles the change event for the checkbox
       */

    }, {
      key: 'handleChange',
      value: function handleChange() {
        this.transitionCheckState_();
      }

      /** @private */

    }, {
      key: 'installPropertyChangeHooks_',
      value: function installPropertyChangeHooks_() {
        var _this3 = this;

        var nativeCb = this.getNativeControl_();
        var cbProto = Object.getPrototypeOf(nativeCb);

        CB_PROTO_PROPS.forEach(function (controlState) {
          var desc = Object.getOwnPropertyDescriptor(cbProto, controlState);
          // We have to check for this descriptor, since some browsers (Safari) don't support its return.
          // See: https://bugs.webkit.org/show_bug.cgi?id=49739
          if (validDescriptor(desc)) {
            var nativeCbDesc = /** @type {!ObjectPropertyDescriptor} */{
              get: desc.get,
              set: function set$$1(state) {
                desc.set.call(nativeCb, state);
                _this3.transitionCheckState_();
              },
              configurable: desc.configurable,
              enumerable: desc.enumerable
            };
            Object.defineProperty(nativeCb, controlState, nativeCbDesc);
          }
        });
      }

      /** @private */

    }, {
      key: 'uninstallPropertyChangeHooks_',
      value: function uninstallPropertyChangeHooks_() {
        var nativeCb = this.getNativeControl_();
        var cbProto = Object.getPrototypeOf(nativeCb);

        CB_PROTO_PROPS.forEach(function (controlState) {
          var desc = /** @type {!ObjectPropertyDescriptor} */Object.getOwnPropertyDescriptor(cbProto, controlState);
          if (validDescriptor(desc)) {
            Object.defineProperty(nativeCb, controlState, desc);
          }
        });
      }

      /** @private */

    }, {
      key: 'transitionCheckState_',
      value: function transitionCheckState_() {
        var nativeCb = this.adapter_.getNativeControl();
        if (!nativeCb) {
          return;
        }
        var oldState = this.currentCheckState_;
        var newState = this.determineCheckState_(nativeCb);
        if (oldState === newState) {
          return;
        }

        // Ensure aria-checked is set to mixed if checkbox is in indeterminate state.
        if (this.isIndeterminate()) {
          this.adapter_.setNativeControlAttr(strings$1.ARIA_CHECKED_ATTR, strings$1.ARIA_CHECKED_INDETERMINATE_VALUE);
        } else {
          this.adapter_.removeNativeControlAttr(strings$1.ARIA_CHECKED_ATTR);
        }

        // Check to ensure that there isn't a previously existing animation class, in case for example
        // the user interacted with the checkbox before the animation was finished.
        if (this.currentAnimationClass_.length > 0) {
          clearTimeout(this.animEndLatchTimer_);
          this.adapter_.forceLayout();
          this.adapter_.removeClass(this.currentAnimationClass_);
        }

        this.currentAnimationClass_ = this.getTransitionAnimationClass_(oldState, newState);
        this.currentCheckState_ = newState;

        // Check for parentNode so that animations are only run when the element is attached
        // to the DOM.
        if (this.adapter_.isAttachedToDOM() && this.currentAnimationClass_.length > 0) {
          this.adapter_.addClass(this.currentAnimationClass_);
          this.adapter_.registerAnimationEndHandler(this.animEndHandler_);
        }
      }

      /**
       * @param {!MDCSelectionControlState} nativeCb
       * @return {string}
       * @private
       */

    }, {
      key: 'determineCheckState_',
      value: function determineCheckState_(nativeCb) {
        var TRANSITION_STATE_INDETERMINATE = strings$1.TRANSITION_STATE_INDETERMINATE,
            TRANSITION_STATE_CHECKED = strings$1.TRANSITION_STATE_CHECKED,
            TRANSITION_STATE_UNCHECKED = strings$1.TRANSITION_STATE_UNCHECKED;


        if (nativeCb.indeterminate) {
          return TRANSITION_STATE_INDETERMINATE;
        }
        return nativeCb.checked ? TRANSITION_STATE_CHECKED : TRANSITION_STATE_UNCHECKED;
      }

      /**
       * @param {string} oldState
       * @param {string} newState
       * @return {string}
       */

    }, {
      key: 'getTransitionAnimationClass_',
      value: function getTransitionAnimationClass_(oldState, newState) {
        var TRANSITION_STATE_INIT = strings$1.TRANSITION_STATE_INIT,
            TRANSITION_STATE_CHECKED = strings$1.TRANSITION_STATE_CHECKED,
            TRANSITION_STATE_UNCHECKED = strings$1.TRANSITION_STATE_UNCHECKED;
        var _MDCCheckboxFoundatio = MDCCheckboxFoundation.cssClasses,
            ANIM_UNCHECKED_CHECKED = _MDCCheckboxFoundatio.ANIM_UNCHECKED_CHECKED,
            ANIM_UNCHECKED_INDETERMINATE = _MDCCheckboxFoundatio.ANIM_UNCHECKED_INDETERMINATE,
            ANIM_CHECKED_UNCHECKED = _MDCCheckboxFoundatio.ANIM_CHECKED_UNCHECKED,
            ANIM_CHECKED_INDETERMINATE = _MDCCheckboxFoundatio.ANIM_CHECKED_INDETERMINATE,
            ANIM_INDETERMINATE_CHECKED = _MDCCheckboxFoundatio.ANIM_INDETERMINATE_CHECKED,
            ANIM_INDETERMINATE_UNCHECKED = _MDCCheckboxFoundatio.ANIM_INDETERMINATE_UNCHECKED;


        switch (oldState) {
          case TRANSITION_STATE_INIT:
            if (newState === TRANSITION_STATE_UNCHECKED) {
              return '';
            }
          // fallthrough
          case TRANSITION_STATE_UNCHECKED:
            return newState === TRANSITION_STATE_CHECKED ? ANIM_UNCHECKED_CHECKED : ANIM_UNCHECKED_INDETERMINATE;
          case TRANSITION_STATE_CHECKED:
            return newState === TRANSITION_STATE_UNCHECKED ? ANIM_CHECKED_UNCHECKED : ANIM_CHECKED_INDETERMINATE;
          // TRANSITION_STATE_INDETERMINATE
          default:
            return newState === TRANSITION_STATE_CHECKED ? ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;
        }
      }

      /**
       * @return {!MDCSelectionControlState}
       * @private
       */

    }, {
      key: 'getNativeControl_',
      value: function getNativeControl_() {
        return this.adapter_.getNativeControl() || {
          checked: false,
          indeterminate: false,
          disabled: false,
          value: null
        };
      }
    }]);
    return MDCCheckboxFoundation;
  }(MDCFoundation);

  /**
   * @param {ObjectPropertyDescriptor|undefined} inputPropDesc
   * @return {boolean}
   */


  function validDescriptor(inputPropDesc) {
    return !!inputPropDesc && typeof inputPropDesc.set === 'function';
  }

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /* eslint no-unused-vars: [2, {"args": "none"}] */

  /**
   * Adapter for MDC Form Field. Provides an interface for managing
   * - event handlers
   * - ripple activation
   *
   * Additionally, provides type information for the adapter to the Closure
   * compiler.
   *
   * Implement this adapter for your framework of choice to delegate updates to
   * the component in your framework of choice. See architecture documentation
   * for more details.
   * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
   *
   * @record
   */
  var MDCFormFieldAdapter = function () {
    function MDCFormFieldAdapter() {
      classCallCheck(this, MDCFormFieldAdapter);
    }

    createClass(MDCFormFieldAdapter, [{
      key: "registerInteractionHandler",

      /**
       * @param {string} type
       * @param {!EventListener} handler
       */
      value: function registerInteractionHandler(type, handler) {}

      /**
       * @param {string} type
       * @param {!EventListener} handler
       */

    }, {
      key: "deregisterInteractionHandler",
      value: function deregisterInteractionHandler(type, handler) {}
    }, {
      key: "activateInputRipple",
      value: function activateInputRipple() {}
    }, {
      key: "deactivateInputRipple",
      value: function deactivateInputRipple() {}
    }]);
    return MDCFormFieldAdapter;
  }();

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @enum {string} */
  var cssClasses$2 = {
    ROOT: 'mdc-form-field'
  };

  /** @enum {string} */
  var strings$2 = {
    LABEL_SELECTOR: '.mdc-form-field > label'
  };

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends {MDCFoundation<!MDCFormFieldAdapter>}
   */

  var MDCFormFieldFoundation = function (_MDCFoundation) {
    inherits(MDCFormFieldFoundation, _MDCFoundation);
    createClass(MDCFormFieldFoundation, null, [{
      key: 'cssClasses',

      /** @return enum {cssClasses} */
      get: function get$$1() {
        return cssClasses$2;
      }

      /** @return enum {strings} */

    }, {
      key: 'strings',
      get: function get$$1() {
        return strings$2;
      }

      /** @return {!MDCFormFieldAdapter} */

    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return {
          registerInteractionHandler: function registerInteractionHandler() /* type: string, handler: EventListener */{},
          deregisterInteractionHandler: function deregisterInteractionHandler() /* type: string, handler: EventListener */{},
          activateInputRipple: function activateInputRipple() {},
          deactivateInputRipple: function deactivateInputRipple() {}
        };
      }
    }]);

    function MDCFormFieldFoundation(adapter) {
      classCallCheck(this, MDCFormFieldFoundation);

      /** @private {!EventListener} */
      var _this = possibleConstructorReturn(this, (MDCFormFieldFoundation.__proto__ || Object.getPrototypeOf(MDCFormFieldFoundation)).call(this, _extends(MDCFormFieldFoundation.defaultAdapter, adapter)));

      _this.clickHandler_ = /** @type {!EventListener} */function () {
        return _this.handleClick_();
      };
      return _this;
    }

    createClass(MDCFormFieldFoundation, [{
      key: 'init',
      value: function init() {
        this.adapter_.registerInteractionHandler('click', this.clickHandler_);
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);
      }

      /** @private */

    }, {
      key: 'handleClick_',
      value: function handleClick_() {
        var _this2 = this;

        this.adapter_.activateInputRipple();
        requestAnimationFrame(function () {
          return _this2.adapter_.deactivateInputRipple();
        });
      }
    }]);
    return MDCFormFieldFoundation;
  }(MDCFoundation);

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @const {Object<string, !VendorPropertyMapType>} */
  var eventTypeMap = {
    'animationstart': {
      noPrefix: 'animationstart',
      webkitPrefix: 'webkitAnimationStart',
      styleProperty: 'animation'
    },
    'animationend': {
      noPrefix: 'animationend',
      webkitPrefix: 'webkitAnimationEnd',
      styleProperty: 'animation'
    },
    'animationiteration': {
      noPrefix: 'animationiteration',
      webkitPrefix: 'webkitAnimationIteration',
      styleProperty: 'animation'
    },
    'transitionend': {
      noPrefix: 'transitionend',
      webkitPrefix: 'webkitTransitionEnd',
      styleProperty: 'transition'
    }
  };

  /** @const {Object<string, !VendorPropertyMapType>} */
  var cssPropertyMap = {
    'animation': {
      noPrefix: 'animation',
      webkitPrefix: '-webkit-animation'
    },
    'transform': {
      noPrefix: 'transform',
      webkitPrefix: '-webkit-transform'
    },
    'transition': {
      noPrefix: 'transition',
      webkitPrefix: '-webkit-transition'
    }
  };

  /**
   * @param {!Object} windowObj
   * @return {boolean}
   */
  function hasProperShape(windowObj) {
    return windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function';
  }

  /**
   * @param {string} eventType
   * @return {boolean}
   */
  function eventFoundInMaps(eventType) {
    return eventType in eventTypeMap || eventType in cssPropertyMap;
  }

  /**
   * @param {string} eventType
   * @param {!Object<string, !VendorPropertyMapType>} map
   * @param {!Element} el
   * @return {string}
   */
  function getJavaScriptEventName(eventType, map, el) {
    return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;
  }

  /**
   * Helper function to determine browser prefix for CSS3 animation events
   * and property names.
   * @param {!Object} windowObj
   * @param {string} eventType
   * @return {string}
   */
  function getAnimationName(windowObj, eventType) {
    if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {
      return eventType;
    }

    var map = /** @type {!Object<string, !VendorPropertyMapType>} */eventType in eventTypeMap ? eventTypeMap : cssPropertyMap;
    var el = windowObj['document']['createElement']('div');
    var eventName = '';

    if (map === eventTypeMap) {
      eventName = getJavaScriptEventName(eventType, map, el);
    } else {
      eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;
    }

    return eventName;
  }

  // Public functions to access getAnimationName() for JavaScript events or CSS
  // property names.

  var transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];

  /**
   * @param {!Object} windowObj
   * @param {string} eventType
   * @return {string}
   */
  function getCorrectEventName(windowObj, eventType) {
    return getAnimationName(windowObj, eventType);
  }

  /**
   * @param {!Object} windowObj
   * @param {string} eventType
   * @return {string}
   */
  function getCorrectPropertyName(windowObj, eventType) {
    return getAnimationName(windowObj, eventType);
  }

  var mdcCheckbox = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-checkbox-wrapper", class: _vm.formFieldClasses }, [_c('div', { ref: "root", staticClass: "mdc-checkbox", class: _vm.classes, style: _vm.styles }, [_c('input', { ref: "control", staticClass: "mdc-checkbox__native-control", attrs: { "id": _vm._uid, "type": "checkbox", "name": _vm.name }, domProps: { "value": _vm.value }, on: { "change": _vm.onChange } }), _vm._v(" "), _c('div', { staticClass: "mdc-checkbox__background" }, [_c('svg', { staticClass: "mdc-checkbox__checkmark", attrs: { "viewBox": "0 0 24 24" } }, [_c('path', { staticClass: "checkbox__checkmark-path", attrs: { "fill": "none", "stroke": "white", "d": "M1.73,12.91 8.1,19.28 22.79,4.59" } })]), _vm._v(" "), _c('div', { staticClass: "mdc-checkbox__mixedmark" })])]), _vm._v(" "), _c('label', { ref: "label", attrs: { "for": _vm._uid } }, [_vm._t("default", [_vm._v(_vm._s(_vm.label))])], 2)]);
    }, staticRenderFns: [],
    name: 'mdc-checkbox',
    mixins: [DispatchFocusMixin],
    model: {
      prop: 'checked',
      event: 'change'
    },
    props: {
      checked: Boolean,
      indeterminate: Boolean,
      disabled: Boolean,
      label: String,
      'align-end': Boolean,
      value: {
        type: String,
        default: function _default() {
          return 'on';
        }
      },
      name: String
    },
    data: function data() {
      return {
        styles: {},
        classes: {}
      };
    },

    computed: {
      hasLabel: function hasLabel() {
        return this.label || this.$slots.default;
      },
      formFieldClasses: function formFieldClasses() {
        return {
          'mdc-form-field': this.hasLabel,
          'mdc-form-field--align-end': this.hasLabel && this.alignEnd
        };
      }
    },
    watch: {
      checked: function checked(value) {
        this.foundation.setChecked(value);
      },
      disabled: function disabled(value) {
        this.foundation.setDisabled(value);
      },
      indeterminate: function indeterminate(value) {
        this.foundation.setIndeterminate(value);
      }
    },
    mounted: function mounted() {
      var _this = this;

      this.foundation = new MDCCheckboxFoundation({
        addClass: function addClass(className) {
          return _this.$set(_this.classes, className, true);
        },
        removeClass: function removeClass(className) {
          return _this.$delete(_this.classes, className);
        },
        setNativeControlAttr: function setNativeControlAttr(attr, value) {
          _this.$refs.control.setAttribute(attr, value);
        },
        removeNativeControlAttr: function removeNativeControlAttr(attr) {
          _this.$refs.control.removeAttribute(attr);
        },
        registerAnimationEndHandler: function registerAnimationEndHandler(handler) {
          return _this.$refs.root.addEventListener(getCorrectEventName(window, 'animationend'), handler);
        },
        deregisterAnimationEndHandler: function deregisterAnimationEndHandler(handler) {
          return _this.$refs.root.removeEventListener(getCorrectEventName(window, 'animationend'), handler);
        },
        registerChangeHandler: function registerChangeHandler(handler) {
          return _this.$refs.control.addEventListener('change', handler);
        },
        deregisterChangeHandler: function deregisterChangeHandler(handler) {
          return _this.$refs.control.removeEventListener('change', handler);
        },
        getNativeControl: function getNativeControl() {
          return _this.$refs.control;
        },
        forceLayout: function forceLayout() {
          return _this.$refs.root.offsetWidth;
        },
        isAttachedToDOM: function isAttachedToDOM() {
          return Boolean(_this.$el.parentNode);
        }
      });

      this.ripple = new RippleBase(this, {
        isUnbounded: function isUnbounded() {
          return true;
        },
        isSurfaceActive: function isSurfaceActive() {
          return RippleBase.isSurfaceActive(_this.$refs.control);
        },
        registerInteractionHandler: function registerInteractionHandler(evt, handler) {
          _this.$refs.control.addEventListener(evt, handler);
        },
        deregisterInteractionHandler: function deregisterInteractionHandler(evt, handler) {
          _this.$refs.control.addEventListener(evt, handler);
        },
        computeBoundingRect: function computeBoundingRect() {
          return _this.$refs.root.getBoundingClientRect();
        }
      });

      this.formField = new MDCFormFieldFoundation({
        registerInteractionHandler: function registerInteractionHandler(type, handler) {
          _this.$refs.label.addEventListener(type, handler);
        },
        deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
          _this.$refs.label.removeEventListener(type, handler);
        },
        activateInputRipple: function activateInputRipple() {
          _this.ripple && _this.ripple.activate();
        },
        deactivateInputRipple: function deactivateInputRipple() {
          _this.ripple && _this.ripple.deactivate();
        }
      });

      this.foundation.init();
      this.ripple.init();
      this.formField.init();
      this.foundation.setChecked(this.checked);
      this.foundation.setDisabled(this.disabled);
      this.foundation.setIndeterminate(this.indeterminate);
    },
    beforeDestroy: function beforeDestroy() {
      this.formField.destroy();
      this.ripple.destroy();
      this.foundation.destroy();
    },

    methods: {
      onChange: function onChange() {
        this.$emit('update:indeterminate', this.foundation.isIndeterminate());
        this.$emit('change', this.foundation.isChecked());
      }
    }
  };

  var VueMDCCheckbox = BasePlugin({
    mdcCheckbox: mdcCheckbox
  });

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /* eslint no-unused-vars: [2, {"args": "none"}] */

  /**
   * Adapter for MDC Chip.
   *
   * Defines the shape of the adapter expected by the foundation. Implement this
   * adapter to integrate the Chip into your framework. See
   * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
   * for more information.
   *
   * @record
   */
  var MDCChipAdapter = function () {
    function MDCChipAdapter() {
      classCallCheck(this, MDCChipAdapter);
    }

    createClass(MDCChipAdapter, [{
      key: "addClass",

      /**
       * Adds a class to the root element.
       * @param {string} className
       */
      value: function addClass(className) {}

      /**
       * Removes a class from the root element.
       * @param {string} className
       */

    }, {
      key: "removeClass",
      value: function removeClass(className) {}

      /**
       * Returns true if the root element contains the given class.
       * @param {string} className
       * @return {boolean}
       */

    }, {
      key: "hasClass",
      value: function hasClass(className) {}

      /**
       * Adds a class to the leading icon element.
       * @param {string} className
       */

    }, {
      key: "addClassToLeadingIcon",
      value: function addClassToLeadingIcon(className) {}

      /**
       * Removes a class from the leading icon element.
       * @param {string} className
       */

    }, {
      key: "removeClassFromLeadingIcon",
      value: function removeClassFromLeadingIcon(className) {}

      /**
       * Returns true if target has className, false otherwise.
       * @param {!EventTarget} target
       * @param {string} className
       * @return {boolean}
       */

    }, {
      key: "eventTargetHasClass",
      value: function eventTargetHasClass(target, className) {}

      /**
       * Registers an event listener on the root element for a given event.
       * @param {string} evtType
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "registerEventHandler",
      value: function registerEventHandler(evtType, handler) {}

      /**
       * Deregisters an event listener on the root element for a given event.
       * @param {string} evtType
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "deregisterEventHandler",
      value: function deregisterEventHandler(evtType, handler) {}

      /**
       * Registers an event listener on the trailing icon element for a given event.
       * @param {string} evtType
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "registerTrailingIconInteractionHandler",
      value: function registerTrailingIconInteractionHandler(evtType, handler) {}

      /**
       * Deregisters an event listener on the trailing icon element for a given event.
       * @param {string} evtType
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "deregisterTrailingIconInteractionHandler",
      value: function deregisterTrailingIconInteractionHandler(evtType, handler) {}

      /**
       * Emits a custom "MDCChip:interaction" event denoting the chip has been
       * interacted with (typically on click or keydown).
       */

    }, {
      key: "notifyInteraction",
      value: function notifyInteraction() {}

      /**
       * Emits a custom "MDCChip:trailingIconInteraction" event denoting the trailing icon has been
       * interacted with (typically on click or keydown).
       */

    }, {
      key: "notifyTrailingIconInteraction",
      value: function notifyTrailingIconInteraction() {}
    }]);
    return MDCChipAdapter;
  }();

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @enum {string} */
  var strings$3 = {
    INTERACTION_EVENT: 'MDCChip:interaction',
    LEADING_ICON_SELECTOR: '.mdc-chip__icon--leading',
    TRAILING_ICON_INTERACTION_EVENT: 'MDCChip:trailingIconInteraction',
    TRAILING_ICON_SELECTOR: '.mdc-chip__icon--trailing'
  };

  /** @enum {string} */
  var cssClasses$3 = {
    CHECKMARK: 'mdc-chip__checkmark',
    HIDDEN_LEADING_ICON: 'mdc-chip__icon--hidden-leading',
    LEADING_ICON: 'mdc-chip__icon--leading',
    SELECTED: 'mdc-chip--selected'
  };

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends {MDCFoundation<!MDCChipAdapter>}
   * @final
   */

  var MDCChipFoundation = function (_MDCFoundation) {
    inherits(MDCChipFoundation, _MDCFoundation);
    createClass(MDCChipFoundation, null, [{
      key: 'strings',

      /** @return enum {string} */
      get: function get$$1() {
        return strings$3;
      }

      /** @return enum {string} */

    }, {
      key: 'cssClasses',
      get: function get$$1() {
        return cssClasses$3;
      }

      /**
       * {@see MDCChipAdapter} for typing information on parameters and return
       * types.
       * @return {!MDCChipAdapter}
       */

    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return (/** @type {!MDCChipAdapter} */{
            addClass: function addClass() {},
            removeClass: function removeClass() {},
            hasClass: function hasClass() {},
            addClassToLeadingIcon: function addClassToLeadingIcon() {},
            removeClassFromLeadingIcon: function removeClassFromLeadingIcon() {},
            eventTargetHasClass: function eventTargetHasClass() {},
            registerEventHandler: function registerEventHandler() {},
            deregisterEventHandler: function deregisterEventHandler() {},
            registerTrailingIconInteractionHandler: function registerTrailingIconInteractionHandler() {},
            deregisterTrailingIconInteractionHandler: function deregisterTrailingIconInteractionHandler() {},
            notifyInteraction: function notifyInteraction() {},
            notifyTrailingIconInteraction: function notifyTrailingIconInteraction() {}
          }
        );
      }

      /**
       * @param {!MDCChipAdapter} adapter
       */

    }]);

    function MDCChipFoundation(adapter) {
      classCallCheck(this, MDCChipFoundation);

      /** @private {function(!Event): undefined} */
      var _this = possibleConstructorReturn(this, (MDCChipFoundation.__proto__ || Object.getPrototypeOf(MDCChipFoundation)).call(this, _extends(MDCChipFoundation.defaultAdapter, adapter)));

      _this.interactionHandler_ = function (evt) {
        return _this.handleInteraction_(evt);
      };
      /** @private {function(!Event): undefined} */
      _this.transitionEndHandler_ = function (evt) {
        return _this.handleTransitionEnd_(evt);
      };
      /** @private {function(!Event): undefined} */
      _this.trailingIconInteractionHandler_ = function (evt) {
        return _this.handleTrailingIconInteraction_(evt);
      };
      return _this;
    }

    createClass(MDCChipFoundation, [{
      key: 'init',
      value: function init() {
        var _this2 = this;

        ['click', 'keydown'].forEach(function (evtType) {
          _this2.adapter_.registerEventHandler(evtType, _this2.interactionHandler_);
        });
        this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);
        ['click', 'keydown', 'touchstart', 'pointerdown', 'mousedown'].forEach(function (evtType) {
          _this2.adapter_.registerTrailingIconInteractionHandler(evtType, _this2.trailingIconInteractionHandler_);
        });
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        var _this3 = this;

        ['click', 'keydown'].forEach(function (evtType) {
          _this3.adapter_.deregisterEventHandler(evtType, _this3.interactionHandler_);
        });
        this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);
        ['click', 'keydown', 'touchstart', 'pointerdown', 'mousedown'].forEach(function (evtType) {
          _this3.adapter_.deregisterTrailingIconInteractionHandler(evtType, _this3.trailingIconInteractionHandler_);
        });
      }

      /**
       * Toggles the selected class on the chip element.
       */

    }, {
      key: 'toggleSelected',
      value: function toggleSelected() {
        if (this.adapter_.hasClass(cssClasses$3.SELECTED)) {
          this.adapter_.removeClass(cssClasses$3.SELECTED);
        } else {
          this.adapter_.addClass(cssClasses$3.SELECTED);
        }
      }

      /**
       * Handles an interaction event on the root element.
       * @param {!Event} evt
       */

    }, {
      key: 'handleInteraction_',
      value: function handleInteraction_(evt) {
        if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {
          this.adapter_.notifyInteraction();
        }
      }

      /**
       * Handles a transition end event on the root element.
       * This is a proxy for handling a transition end event on the leading icon or checkmark,
       * since the transition end event bubbles.
       * @param {!Event} evt
       */

    }, {
      key: 'handleTransitionEnd_',
      value: function handleTransitionEnd_(evt) {
        if (evt.propertyName !== 'opacity') {
          return;
        }
        if (this.adapter_.eventTargetHasClass( /** @type {!EventTarget} */evt.target, cssClasses$3.LEADING_ICON) && this.adapter_.hasClass(cssClasses$3.SELECTED)) {
          this.adapter_.addClassToLeadingIcon(cssClasses$3.HIDDEN_LEADING_ICON);
        } else if (this.adapter_.eventTargetHasClass( /** @type {!EventTarget} */evt.target, cssClasses$3.CHECKMARK) && !this.adapter_.hasClass(cssClasses$3.SELECTED)) {
          this.adapter_.removeClassFromLeadingIcon(cssClasses$3.HIDDEN_LEADING_ICON);
        }
      }

      /**
       * Handles an interaction event on the trailing icon element. This is used to
       * prevent the ripple from activating on interaction with the trailing icon.
       * @param {!Event} evt
       */

    }, {
      key: 'handleTrailingIconInteraction_',
      value: function handleTrailingIconInteraction_(evt) {
        evt.stopPropagation();
        if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {
          this.adapter_.notifyTrailingIconInteraction();
        }
      }
    }]);
    return MDCChipFoundation;
  }(MDCFoundation);

  var mdcChip = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { class: _vm.classes, style: _vm.styles, attrs: { "tabindex": "0" } }, [_vm.haveleadingIcon ? _c('i', { ref: "leadingIcon", staticClass: "mdc-chip__icon mdc-chip__icon--leading", class: _vm.leadingClasses }, [_vm._v(_vm._s(_vm.leadingIcon))]) : _vm._e(), _vm._v(" "), _vm.isFilter ? _c('div', { staticClass: "mdc-chip__checkmark" }, [_c('svg', { staticClass: "mdc-chip__checkmark-svg", attrs: { "viewBox": "-2 -3 30 30" } }, [_c('path', { staticClass: "mdc-chip__checkmark-path", attrs: { "fill": "none", "stroke": "black", "d": "M1.73,12.91 8.1,19.28 22.79,4.59" } })])]) : _vm._e(), _vm._v(" "), _c('div', { staticClass: "mdc-chip__text" }, [_vm._t("default")], 2), _vm._v(" "), _vm.havetrailingIcon ? _c('i', { ref: "trailingIcon", staticClass: "mdc-chip__icon mdc-chip__icon--trailing", class: _vm.trailingClasses, attrs: { "tabindex": "0", "role": "button" } }, [_vm._v(_vm._s(_vm.trailingIcon))]) : _vm._e()]);
    }, staticRenderFns: [],
    name: 'mdc-chip',
    mixins: [CustomLinkMixin, DispatchEventMixin],
    props: {
      leadingIcon: [String],
      trailingIcon: [String],
      leadingIconClasses: [Object],
      trailingIconClasses: [Object]
    },
    inject: ['mdcChipSet'],
    data: function data() {
      return {
        classes: {
          'mdc-chip': true
        },
        styles: {}
      };
    },

    methods: {
      toggleSelected: function toggleSelected() {
        this.foundation.toggleSelected();
      }
    },
    mounted: function mounted() {
      var _this = this;

      this.foundation = new MDCChipFoundation({
        addClass: function addClass(className) {
          return _this.$set(_this.classes, className, true);
        },
        removeClass: function removeClass(className) {
          return _this.$delete(_this.classes, className);
        },
        hasClass: function hasClass(className) {
          return _this.$el.classList.contains(className);
        },
        addClassToLeadingIcon: function addClassToLeadingIcon(className) {
          if (_this.haveleadingIcon) {
            _this.$refs.leadingIcon.classList.add(className);
          }
        },
        removeClassFromLeadingIcon: function removeClassFromLeadingIcon(className) {
          if (_this.haveleadingIcon) {
            _this.$refs.leadingIcon.classList.remove(className);
          }
        },
        eventTargetHasClass: function eventTargetHasClass(target, className) {
          return target.classList.contains(className);
        },
        registerEventHandler: function registerEventHandler(evtType, handler) {
          return _this.$el.addEventListener(evtType, handler);
        },
        deregisterEventHandler: function deregisterEventHandler(evtType, handler) {
          return _this.$el.removeEventListener(evtType, handler);
        },
        notifyInteraction: function notifyInteraction() {
          _this.dispatchEvent({ type: 'click' });
          emitCustomEvent(_this.$el, MDCChipFoundation.strings.INTERACTION_EVENT, {
            chip: _this
          }, true);
        },
        notifyTrailingIconInteraction: function notifyTrailingIconInteraction() {
          _this.dispatchEvent({ type: 'trailingIconClick' });
          emitCustomEvent(_this.$el, MDCChipFoundation.strings.TRAILING_ICON_INTERACTION_EVENT, {
            chip: _this
          }, true);
        },

        registerTrailingIconInteractionHandler: function registerTrailingIconInteractionHandler(evtType, handler) {
          if (_this.$refs.trailingIcon) {
            _this.$refs.trailingIcon.addEventListener(evtType, handler);
          }
        },
        deregisterTrailingIconInteractionHandler: function deregisterTrailingIconInteractionHandler(evtType, handler) {
          if (_this.$refs.trailingIcon) {
            _this.$refs.trailingIcon.removeEventListener(evtType, handler);
          }
        }
      });

      this.foundation.init();

      this.ripple = new RippleBase(this);
      this.ripple.init();
    },

    computed: {
      isFilter: function isFilter() {
        return this.mdcChipSet && this.mdcChipSet.filter;
      },
      haveleadingIcon: function haveleadingIcon() {
        return !!this.leadingIcon || this.leadingIconClasses;
      },
      havetrailingIcon: function havetrailingIcon() {
        return !!this.trailingIcon || this.trailingIconClasses;
      },
      leadingClasses: function leadingClasses() {
        return _extends({}, {
          'material-icons': !!this.leadingIcon
        }, this.leadingIconClasses);
      },
      trailingClasses: function trailingClasses() {
        return _extends({}, {
          'material-icons': !!this.trailingIcon
        }, this.trailingIconClasses);
      }
    },
    beforeDestroy: function beforeDestroy() {
      this.ripple.destroy();
      this.foundation.destroy();
    }
  };

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /* eslint no-unused-vars: [2, {"args": "none"}] */

  /**
   * Adapter for MDC Chip Set.
   *
   * Defines the shape of the adapter expected by the foundation. Implement this
   * adapter to integrate the Chip Set into your framework. See
   * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
   * for more information.
   *
   * @record
   */
  var MDCChipSetAdapter = function () {
    function MDCChipSetAdapter() {
      classCallCheck(this, MDCChipSetAdapter);
    }

    createClass(MDCChipSetAdapter, [{
      key: "hasClass",

      /**
       * Returns true if the root element contains the given class name.
       * @param {string} className
       * @return {boolean}
       */
      value: function hasClass(className) {}

      /**
       * Registers an event handler on the root element for a given event.
       * @param {string} evtType
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "registerInteractionHandler",
      value: function registerInteractionHandler(evtType, handler) {}

      /**
       * Deregisters an event handler on the root element for a given event.
       * @param {string} evtType
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "deregisterInteractionHandler",
      value: function deregisterInteractionHandler(evtType, handler) {}
    }]);
    return MDCChipSetAdapter;
  }();

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends {MDCComponent<!MDCChipFoundation>}
   * @final
   */

  var MDCChip = function (_MDCComponent) {
    inherits(MDCChip, _MDCComponent);

    /**
     * @param {...?} args
     */
    function MDCChip() {
      var _ref;

      classCallCheck(this, MDCChip);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      /** @private {?Element} */
      var _this = possibleConstructorReturn(this, (_ref = MDCChip.__proto__ || Object.getPrototypeOf(MDCChip)).call.apply(_ref, [this].concat(args)));

      _this.leadingIcon_ = _this.root_.querySelector(strings$3.LEADING_ICON_SELECTOR);
      /** @private {!MDCRipple} */
      _this.ripple_ = new MDCRipple(_this.root_);
      return _this;
    }

    /**
     * @param {!Element} root
     * @return {!MDCChip}
     */


    createClass(MDCChip, [{
      key: 'destroy',
      value: function destroy() {
        this.ripple_.destroy();
        get(MDCChip.prototype.__proto__ || Object.getPrototypeOf(MDCChip.prototype), 'destroy', this).call(this);
      }

      /**
       * Toggles selected state of the chip.
       */

    }, {
      key: 'toggleSelected',
      value: function toggleSelected() {
        this.foundation_.toggleSelected();
      }

      /**
       * @return {!MDCChipFoundation}
       */

    }, {
      key: 'getDefaultFoundation',
      value: function getDefaultFoundation() {
        var _this2 = this;

        return new MDCChipFoundation( /** @type {!MDCChipAdapter} */_extends({
          addClass: function addClass(className) {
            return _this2.root_.classList.add(className);
          },
          removeClass: function removeClass(className) {
            return _this2.root_.classList.remove(className);
          },
          hasClass: function hasClass(className) {
            return _this2.root_.classList.contains(className);
          },
          addClassToLeadingIcon: function addClassToLeadingIcon(className) {
            if (_this2.leadingIcon_) {
              _this2.leadingIcon_.classList.add(className);
            }
          },
          removeClassFromLeadingIcon: function removeClassFromLeadingIcon(className) {
            if (_this2.leadingIcon_) {
              _this2.leadingIcon_.classList.remove(className);
            }
          },
          eventTargetHasClass: function eventTargetHasClass(target, className) {
            return target.classList.contains(className);
          },
          registerEventHandler: function registerEventHandler(evtType, handler) {
            return _this2.root_.addEventListener(evtType, handler);
          },
          deregisterEventHandler: function deregisterEventHandler(evtType, handler) {
            return _this2.root_.removeEventListener(evtType, handler);
          },
          registerTrailingIconInteractionHandler: function registerTrailingIconInteractionHandler(evtType, handler) {
            var trailingIconEl = _this2.root_.querySelector(strings$3.TRAILING_ICON_SELECTOR);
            if (trailingIconEl) {
              trailingIconEl.addEventListener(evtType, handler);
            }
          },
          deregisterTrailingIconInteractionHandler: function deregisterTrailingIconInteractionHandler(evtType, handler) {
            var trailingIconEl = _this2.root_.querySelector(strings$3.TRAILING_ICON_SELECTOR);
            if (trailingIconEl) {
              trailingIconEl.removeEventListener(evtType, handler);
            }
          },
          notifyInteraction: function notifyInteraction() {
            return _this2.emit(strings$3.INTERACTION_EVENT, { chip: _this2 }, true /* shouldBubble */);
          },
          notifyTrailingIconInteraction: function notifyTrailingIconInteraction() {
            return _this2.emit(strings$3.TRAILING_ICON_INTERACTION_EVENT, { chip: _this2 }, true /* shouldBubble */);
          }
        }));
      }

      /** @return {!MDCRipple} */

    }, {
      key: 'ripple',
      get: function get$$1() {
        return this.ripple_;
      }
    }], [{
      key: 'attachTo',
      value: function attachTo(root) {
        return new MDCChip(root);
      }
    }]);
    return MDCChip;
  }(MDCComponent);

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @enum {string} */
  var strings$4 = {
    CHIP_SELECTOR: '.mdc-chip'
  };

  /** @enum {string} */
  var cssClasses$4 = {
    CHOICE: 'mdc-chip-set--choice',
    FILTER: 'mdc-chip-set--filter'
  };

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends {MDCFoundation<!MDCChipSetAdapter>}
   * @final
   */

  var MDCChipSetFoundation = function (_MDCFoundation) {
    inherits(MDCChipSetFoundation, _MDCFoundation);
    createClass(MDCChipSetFoundation, null, [{
      key: 'strings',

      /** @return enum {string} */
      get: function get$$1() {
        return strings$4;
      }

      /** @return enum {string} */

    }, {
      key: 'cssClasses',
      get: function get$$1() {
        return cssClasses$4;
      }

      /**
       * {@see MDCChipSetAdapter} for typing information on parameters and return
       * types.
       * @return {!MDCChipSetAdapter}
       */

    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return (/** @type {!MDCChipSetAdapter} */{
            hasClass: function hasClass() {},
            registerInteractionHandler: function registerInteractionHandler() {},
            deregisterInteractionHandler: function deregisterInteractionHandler() {}
          }
        );
      }

      /**
       * @param {!MDCChipSetAdapter} adapter
       */

    }]);

    function MDCChipSetFoundation(adapter) {
      classCallCheck(this, MDCChipSetFoundation);

      /**
       * The selected chips in the set. Only used for choice chip set or filter chip set.
       * @private {!Array<!MDCChip>}
       */
      var _this = possibleConstructorReturn(this, (MDCChipSetFoundation.__proto__ || Object.getPrototypeOf(MDCChipSetFoundation)).call(this, _extends(MDCChipSetFoundation.defaultAdapter, adapter)));

      _this.selectedChips_ = [];

      /** @private {function(!Event): undefined} */
      _this.chipInteractionHandler_ = function (evt) {
        return _this.handleChipInteraction_(evt);
      };
      return _this;
    }

    createClass(MDCChipSetFoundation, [{
      key: 'init',
      value: function init() {
        this.adapter_.registerInteractionHandler(MDCChipFoundation.strings.INTERACTION_EVENT, this.chipInteractionHandler_);
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        this.adapter_.deregisterInteractionHandler(MDCChipFoundation.strings.INTERACTION_EVENT, this.chipInteractionHandler_);
      }

      /**
       * Handles a chip interaction event
       * @param {!Object} evt
       * @private
       */

    }, {
      key: 'handleChipInteraction_',
      value: function handleChipInteraction_(evt) {
        var chip = evt.detail.chip;

        if (this.adapter_.hasClass(cssClasses$4.CHOICE)) {
          if (this.selectedChips_.length === 0) {
            this.selectedChips_[0] = chip;
          } else if (this.selectedChips_[0] !== chip) {
            this.selectedChips_[0].toggleSelected();
            this.selectedChips_[0] = chip;
          } else {
            this.selectedChips_ = [];
          }
          chip.toggleSelected();
        } else if (this.adapter_.hasClass(cssClasses$4.FILTER)) {
          var index = this.selectedChips_.indexOf(chip);
          if (index >= 0) {
            this.selectedChips_.splice(index, 1);
          } else {
            this.selectedChips_.push(chip);
          }
          chip.toggleSelected();
        }
      }
    }]);
    return MDCChipSetFoundation;
  }(MDCFoundation);

  var mdcChipSet = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { class: _vm.classes }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-chip-set',
    props: {
      choice: [Boolean],
      filter: [Boolean]
    },
    provide: function provide() {
      return { mdcChipSet: this };
    },
    data: function data() {
      return {
        classes: {
          'mdc-chip-set': true,
          'mdc-chip-set--choice': this.choice,
          'mdc-chip-set--filter': this.filter
        }
      };
    },

    methods: {},
    mounted: function mounted() {
      var _this = this;

      this.foundation = new MDCChipSetFoundation({
        hasClass: function hasClass(className) {
          return _this.$el.classList.contains(className);
        },
        registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
          _this.$el.addEventListener(evtType, handler);
        },
        deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
          _this.$el.removeEventListener(evtType, handler);
        }
      });

      this.foundation.init();
    },
    beforeDestroy: function beforeDestroy() {
      this.foundation.destroy();
    }
  };

  var VueMDCChipSet = BasePlugin({
    mdcChip: mdcChip,
    mdcChipSet: mdcChipSet
  });

  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var cssClasses$5 = {
    ROOT: 'mdc-dialog',
    OPEN: 'mdc-dialog--open',
    ANIMATING: 'mdc-dialog--animating',
    BACKDROP: 'mdc-dialog__backdrop',
    SCROLL_LOCK: 'mdc-dialog-scroll-lock',
    ACCEPT_BTN: 'mdc-dialog__footer__button--accept',
    CANCEL_BTN: 'mdc-dialog__footer__button--cancel'
  };

  var strings$5 = {
    OPEN_DIALOG_SELECTOR: '.mdc-dialog--open',
    DIALOG_SURFACE_SELECTOR: '.mdc-dialog__surface',
    ACCEPT_SELECTOR: '.mdc-dialog__footer__button--accept',
    ACCEPT_EVENT: 'MDCDialog:accept',
    CANCEL_EVENT: 'MDCDialog:cancel'
  };

  /**
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var MDCDialogFoundation = function (_MDCFoundation) {
    inherits(MDCDialogFoundation, _MDCFoundation);
    createClass(MDCDialogFoundation, null, [{
      key: 'cssClasses',
      get: function get$$1() {
        return cssClasses$5;
      }
    }, {
      key: 'strings',
      get: function get$$1() {
        return strings$5;
      }
    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return {
          addClass: function addClass() /* className: string */{},
          removeClass: function removeClass() /* className: string */{},
          addBodyClass: function addBodyClass() /* className: string */{},
          removeBodyClass: function removeBodyClass() /* className: string */{},
          eventTargetHasClass: function eventTargetHasClass() {
            return (/* target: EventTarget, className: string */ /* boolean */false
            );
          },
          registerInteractionHandler: function registerInteractionHandler() /* evt: string, handler: EventListener */{},
          deregisterInteractionHandler: function deregisterInteractionHandler() /* evt: string, handler: EventListener */{},
          registerSurfaceInteractionHandler: function registerSurfaceInteractionHandler() /* evt: string, handler: EventListener */{},
          deregisterSurfaceInteractionHandler: function deregisterSurfaceInteractionHandler() /* evt: string, handler: EventListener */{},
          registerDocumentKeydownHandler: function registerDocumentKeydownHandler() /* handler: EventListener */{},
          deregisterDocumentKeydownHandler: function deregisterDocumentKeydownHandler() /* handler: EventListener */{},
          registerTransitionEndHandler: function registerTransitionEndHandler() /* handler: EventListener */{},
          deregisterTransitionEndHandler: function deregisterTransitionEndHandler() /* handler: EventListener */{},
          notifyAccept: function notifyAccept() {},
          notifyCancel: function notifyCancel() {},
          trapFocusOnSurface: function trapFocusOnSurface() {},
          untrapFocusOnSurface: function untrapFocusOnSurface() {},
          isDialog: function isDialog() {
            return (/* el: Element */ /* boolean */false
            );
          },
          layoutFooterRipples: function layoutFooterRipples() {}
        };
      }
    }]);

    function MDCDialogFoundation(adapter) {
      classCallCheck(this, MDCDialogFoundation);

      var _this = possibleConstructorReturn(this, (MDCDialogFoundation.__proto__ || Object.getPrototypeOf(MDCDialogFoundation)).call(this, _extends(MDCDialogFoundation.defaultAdapter, adapter)));

      _this.isOpen_ = false;
      _this.componentClickHandler_ = function (evt) {
        if (_this.adapter_.eventTargetHasClass(evt.target, cssClasses$5.BACKDROP)) {
          _this.cancel(true);
        }
      };
      _this.dialogClickHandler_ = function (evt) {
        return _this.handleDialogClick_(evt);
      };
      _this.documentKeydownHandler_ = function (evt) {
        if (evt.key && evt.key === 'Escape' || evt.keyCode === 27) {
          _this.cancel(true);
        }
      };
      _this.transitionEndHandler_ = function (evt) {
        return _this.handleTransitionEnd_(evt);
      };
      return _this;
    }

    createClass(MDCDialogFoundation, [{
      key: 'destroy',
      value: function destroy() {
        // Ensure that dialog is cleaned up when destroyed
        if (this.isOpen_) {
          this.adapter_.deregisterSurfaceInteractionHandler('click', this.dialogClickHandler_);
          this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);
          this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);
          this.adapter_.untrapFocusOnSurface();
          this.adapter_.deregisterTransitionEndHandler(this.transitionEndHandler_);
          this.adapter_.removeClass(MDCDialogFoundation.cssClasses.ANIMATING);
          this.adapter_.removeClass(MDCDialogFoundation.cssClasses.OPEN);
          this.enableScroll_();
        }
      }
    }, {
      key: 'open',
      value: function open() {
        this.isOpen_ = true;
        this.disableScroll_();
        this.adapter_.registerDocumentKeydownHandler(this.documentKeydownHandler_);
        this.adapter_.registerSurfaceInteractionHandler('click', this.dialogClickHandler_);
        this.adapter_.registerInteractionHandler('click', this.componentClickHandler_);
        this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);
        this.adapter_.addClass(MDCDialogFoundation.cssClasses.ANIMATING);
        this.adapter_.addClass(MDCDialogFoundation.cssClasses.OPEN);
      }
    }, {
      key: 'close',
      value: function close() {
        this.isOpen_ = false;
        this.adapter_.deregisterSurfaceInteractionHandler('click', this.dialogClickHandler_);
        this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);
        this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);
        this.adapter_.untrapFocusOnSurface();
        this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);
        this.adapter_.addClass(MDCDialogFoundation.cssClasses.ANIMATING);
        this.adapter_.removeClass(MDCDialogFoundation.cssClasses.OPEN);
      }
    }, {
      key: 'isOpen',
      value: function isOpen() {
        return this.isOpen_;
      }
    }, {
      key: 'accept',
      value: function accept(shouldNotify) {
        if (shouldNotify) {
          this.adapter_.notifyAccept();
        }

        this.close();
      }
    }, {
      key: 'cancel',
      value: function cancel(shouldNotify) {
        if (shouldNotify) {
          this.adapter_.notifyCancel();
        }

        this.close();
      }
    }, {
      key: 'handleDialogClick_',
      value: function handleDialogClick_(evt) {
        var target = evt.target;

        if (this.adapter_.eventTargetHasClass(target, cssClasses$5.ACCEPT_BTN)) {
          this.accept(true);
        } else if (this.adapter_.eventTargetHasClass(target, cssClasses$5.CANCEL_BTN)) {
          this.cancel(true);
        }
      }
    }, {
      key: 'handleTransitionEnd_',
      value: function handleTransitionEnd_(evt) {
        if (this.adapter_.isDialog(evt.target)) {
          this.adapter_.deregisterTransitionEndHandler(this.transitionEndHandler_);
          this.adapter_.removeClass(MDCDialogFoundation.cssClasses.ANIMATING);
          if (this.isOpen_) {
            this.adapter_.trapFocusOnSurface();
            this.adapter_.layoutFooterRipples();
          } else {
            this.enableScroll_();
          }      }    }
    }, {
      key: 'disableScroll_',
      value: function disableScroll_() {
        this.adapter_.addBodyClass(cssClasses$5.SCROLL_LOCK);
      }
    }, {
      key: 'enableScroll_',
      value: function enableScroll_() {
        this.adapter_.removeBodyClass(cssClasses$5.SCROLL_LOCK);
      }
    }]);
    return MDCDialogFoundation;
  }(MDCFoundation);

  var tabbable = function (el, options) {
    options = options || {};

    var elementDocument = el.ownerDocument || el;
    var basicTabbables = [];
    var orderedTabbables = [];

    // A node is "available" if
    // - it's computed style
    var isUnavailable = createIsUnavailable(elementDocument);

    var candidateSelectors = ['input', 'select', 'a[href]', 'textarea', 'button', '[tabindex]'];

    var candidates = el.querySelectorAll(candidateSelectors.join(','));

    if (options.includeContainer) {
      var matches = Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;

      if (candidateSelectors.some(function (candidateSelector) {
        return matches.call(el, candidateSelector);
      })) {
        candidates = Array.prototype.slice.apply(candidates);
        candidates.unshift(el);
      }
    }

    var candidate, candidateIndex;
    for (var i = 0, l = candidates.length; i < l; i++) {
      candidate = candidates[i];
      candidateIndex = parseInt(candidate.getAttribute('tabindex'), 10) || candidate.tabIndex;

      if (candidateIndex < 0 || candidate.tagName === 'INPUT' && candidate.type === 'hidden' || candidate.disabled || isUnavailable(candidate, elementDocument)) {
        continue;
      }

      if (candidateIndex === 0) {
        basicTabbables.push(candidate);
      } else {
        orderedTabbables.push({
          index: i,
          tabIndex: candidateIndex,
          node: candidate
        });
      }
    }

    var tabbableNodes = orderedTabbables.sort(function (a, b) {
      return a.tabIndex === b.tabIndex ? a.index - b.index : a.tabIndex - b.tabIndex;
    }).map(function (a) {
      return a.node;
    });

    Array.prototype.push.apply(tabbableNodes, basicTabbables);

    return tabbableNodes;
  };

  function createIsUnavailable(elementDocument) {
    // Node cache must be refreshed on every check, in case
    // the content of the element has changed
    var isOffCache = [];

    // "off" means `display: none;`, as opposed to "hidden",
    // which means `visibility: hidden;`. getComputedStyle
    // accurately reflects visiblity in context but not
    // "off" state, so we need to recursively check parents.

    function isOff(node, nodeComputedStyle) {
      if (node === elementDocument.documentElement) return false;

      // Find the cached node (Array.prototype.find not available in IE9)
      for (var i = 0, length = isOffCache.length; i < length; i++) {
        if (isOffCache[i][0] === node) return isOffCache[i][1];
      }

      nodeComputedStyle = nodeComputedStyle || elementDocument.defaultView.getComputedStyle(node);

      var result = false;

      if (nodeComputedStyle.display === 'none') {
        result = true;
      } else if (node.parentNode) {
        result = isOff(node.parentNode);
      }

      isOffCache.push([node, result]);

      return result;
    }

    return function isUnavailable(node) {
      if (node === elementDocument.documentElement) return false;

      var computedStyle = elementDocument.defaultView.getComputedStyle(node);

      if (isOff(node, computedStyle)) return true;

      return computedStyle.visibility === 'hidden';
    };
  }

  var listeningFocusTrap = null;

  function focusTrap(element, userOptions) {
    var tabbableNodes = [];
    var firstTabbableNode = null;
    var lastTabbableNode = null;
    var nodeFocusedBeforeActivation = null;
    var active = false;
    var paused = false;
    var tabEvent = null;

    var container = typeof element === 'string' ? document.querySelector(element) : element;

    var config = userOptions || {};
    config.returnFocusOnDeactivate = userOptions && userOptions.returnFocusOnDeactivate !== undefined ? userOptions.returnFocusOnDeactivate : true;
    config.escapeDeactivates = userOptions && userOptions.escapeDeactivates !== undefined ? userOptions.escapeDeactivates : true;

    var trap = {
      activate: activate,
      deactivate: deactivate,
      pause: pause,
      unpause: unpause
    };

    return trap;

    function activate(activateOptions) {
      if (active) return;

      var defaultedActivateOptions = {
        onActivate: activateOptions && activateOptions.onActivate !== undefined ? activateOptions.onActivate : config.onActivate
      };

      active = true;
      paused = false;
      nodeFocusedBeforeActivation = document.activeElement;

      if (defaultedActivateOptions.onActivate) {
        defaultedActivateOptions.onActivate();
      }

      addListeners();
      return trap;
    }

    function deactivate(deactivateOptions) {
      if (!active) return;

      var defaultedDeactivateOptions = {
        returnFocus: deactivateOptions && deactivateOptions.returnFocus !== undefined ? deactivateOptions.returnFocus : config.returnFocusOnDeactivate,
        onDeactivate: deactivateOptions && deactivateOptions.onDeactivate !== undefined ? deactivateOptions.onDeactivate : config.onDeactivate
      };

      removeListeners();

      if (defaultedDeactivateOptions.onDeactivate) {
        defaultedDeactivateOptions.onDeactivate();
      }

      if (defaultedDeactivateOptions.returnFocus) {
        setTimeout(function () {
          tryFocus(nodeFocusedBeforeActivation);
        }, 0);
      }

      active = false;
      paused = false;
      return this;
    }

    function pause() {
      if (paused || !active) return;
      paused = true;
      removeListeners();
    }

    function unpause() {
      if (!paused || !active) return;
      paused = false;
      addListeners();
    }

    function addListeners() {
      if (!active) return;

      // There can be only one listening focus trap at a time
      if (listeningFocusTrap) {
        listeningFocusTrap.pause();
      }
      listeningFocusTrap = trap;

      updateTabbableNodes();
      tryFocus(firstFocusNode());
      document.addEventListener('focus', checkFocus, true);
      document.addEventListener('click', checkClick, true);
      document.addEventListener('mousedown', checkPointerDown, true);
      document.addEventListener('touchstart', checkPointerDown, true);
      document.addEventListener('keydown', checkKey, true);

      return trap;
    }

    function removeListeners() {
      if (!active || listeningFocusTrap !== trap) return;

      document.removeEventListener('focus', checkFocus, true);
      document.removeEventListener('click', checkClick, true);
      document.removeEventListener('mousedown', checkPointerDown, true);
      document.removeEventListener('touchstart', checkPointerDown, true);
      document.removeEventListener('keydown', checkKey, true);

      listeningFocusTrap = null;

      return trap;
    }

    function getNodeForOption(optionName) {
      var optionValue = config[optionName];
      var node = optionValue;
      if (!optionValue) {
        return null;
      }
      if (typeof optionValue === 'string') {
        node = document.querySelector(optionValue);
        if (!node) {
          throw new Error('`' + optionName + '` refers to no known node');
        }
      }
      if (typeof optionValue === 'function') {
        node = optionValue();
        if (!node) {
          throw new Error('`' + optionName + '` did not return a node');
        }
      }
      return node;
    }

    function firstFocusNode() {
      var node;
      if (getNodeForOption('initialFocus') !== null) {
        node = getNodeForOption('initialFocus');
      } else if (container.contains(document.activeElement)) {
        node = document.activeElement;
      } else {
        node = tabbableNodes[0] || getNodeForOption('fallbackFocus');
      }

      if (!node) {
        throw new Error('You can\'t have a focus-trap without at least one focusable element');
      }

      return node;
    }

    // This needs to be done on mousedown and touchstart instead of click
    // so that it precedes the focus event
    function checkPointerDown(e) {
      if (config.clickOutsideDeactivates && !container.contains(e.target)) {
        deactivate({ returnFocus: false });
      }
    }

    function checkClick(e) {
      if (config.clickOutsideDeactivates) return;
      if (container.contains(e.target)) return;
      e.preventDefault();
      e.stopImmediatePropagation();
    }

    function checkFocus(e) {
      if (container.contains(e.target)) return;
      e.preventDefault();
      e.stopImmediatePropagation();
      // Checking for a blur method here resolves a Firefox issue (#15)
      if (typeof e.target.blur === 'function') e.target.blur();

      if (tabEvent) {
        readjustFocus(tabEvent);
      }
    }

    function checkKey(e) {
      if (e.key === 'Tab' || e.keyCode === 9) {
        handleTab(e);
      }

      if (config.escapeDeactivates !== false && isEscapeEvent(e)) {
        deactivate();
      }
    }

    function handleTab(e) {
      updateTabbableNodes();

      if (e.target.hasAttribute('tabindex') && Number(e.target.getAttribute('tabindex')) < 0) {
        return tabEvent = e;
      }

      e.preventDefault();
      var currentFocusIndex = tabbableNodes.indexOf(e.target);

      if (e.shiftKey) {
        if (e.target === firstTabbableNode || tabbableNodes.indexOf(e.target) === -1) {
          return tryFocus(lastTabbableNode);
        }
        return tryFocus(tabbableNodes[currentFocusIndex - 1]);
      }

      if (e.target === lastTabbableNode) return tryFocus(firstTabbableNode);

      tryFocus(tabbableNodes[currentFocusIndex + 1]);
    }

    function updateTabbableNodes() {
      tabbableNodes = tabbable(container);
      firstTabbableNode = tabbableNodes[0];
      lastTabbableNode = tabbableNodes[tabbableNodes.length - 1];
    }

    function readjustFocus(e) {
      if (e.shiftKey) return tryFocus(lastTabbableNode);

      tryFocus(firstTabbableNode);
    }
  }

  function isEscapeEvent(e) {
    return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;
  }

  function tryFocus(node) {
    if (!node || !node.focus) return;
    if (node === document.activeElement) return;

    node.focus();
    if (node.tagName.toLowerCase() === 'input') {
      node.select();
    }
  }

  var focusTrap_1 = focusTrap;

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  function createFocusTrapInstance(surfaceEl, acceptButtonEl) {
    var focusTrapFactory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : focusTrap_1;

    return focusTrapFactory(surfaceEl, {
      initialFocus: acceptButtonEl,
      clickOutsideDeactivates: true
    });
  }

  var mdcDialog = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('aside', { ref: "root", staticClass: "mdc-dialog", class: _vm.classes, style: _vm.styles, attrs: { "role": "alertdialog", "aria-labelledby": 'label' + _vm._uid, "aria-describedby": 'desc' + _vm._uid } }, [_c('div', { ref: "surface", staticClass: "mdc-dialog__surface", class: _vm.surfaceClasses }, [_c('header', { staticClass: "mdc-dialog__header" }, [_c('h2', { staticClass: "mdc-dialog__header__title", attrs: { "id": 'label' + _vm._uid } }, [_vm._v(" " + _vm._s(_vm.title) + " ")])]), _vm._v(" "), _c('section', { staticClass: "mdc-dialog__body", class: _vm.bodyClasses, attrs: { "id": 'desc' + _vm._uid } }, [_vm._t("default")], 2), _vm._v(" "), _c('footer', { staticClass: "mdc-dialog__footer" }, [_vm.cancel ? _c('mdcButton', { ref: "cancel", staticClass: "mdc-dialog__footer__button mdc-dialog__footer__button--cancel", class: { 'mdc-dialog__action': _vm.accent }, on: { "click": _vm.onCancel } }, [_vm._v(_vm._s(_vm.cancel))]) : _vm._e(), _vm._v(" "), _c('mdcButton', { ref: "accept", staticClass: "mdc-dialog__footer__button mdc-dialog__footer__button--accept", class: { 'mdc-dialog__action': _vm.accent }, attrs: { "disabled": _vm.acceptDisabled }, on: { "click": _vm.onAccept } }, [_vm._v(_vm._s(_vm.accept))])], 1)]), _vm._v(" "), _c('div', { staticClass: "mdc-dialog__backdrop" })]);
    }, staticRenderFns: [],
    name: 'mdc-dialog',
    props: {
      title: { type: String, required: true },
      accept: { type: String, default: 'Ok' },
      acceptDisabled: Boolean,
      cancel: { type: String, default: 'Cancel' },
      accent: Boolean,
      scrollable: Boolean
    },
    components: {
      mdcButton: mdcButton
    },
    data: function data() {
      return {
        classes: {
          'mdc-theme--dark': this.dark
        },
        styles: {},
        surfaceClasses: {},
        bodyClasses: {
          'mdc-dialog__body--scrollable': this.scrollable
        }
      };
    },
    mounted: function mounted() {
      var _this = this;

      this.focusTrap = createFocusTrapInstance(this.$refs.surface, this.$refs.accept);

      this.foundation = new MDCDialogFoundation({
        addClass: function addClass(className) {
          return _this.$set(_this.classes, className, true);
        },
        removeClass: function removeClass(className) {
          return _this.$delete(_this.classes, className);
        },
        addBodyClass: function addBodyClass(className) {
          return document.body.classList.add(className);
        },
        removeBodyClass: function removeBodyClass(className) {
          return document.body.classList.remove(className);
        },
        eventTargetHasClass: function eventTargetHasClass(target, className) {
          return target.classList.contains(className);
        },
        registerInteractionHandler: function registerInteractionHandler(evt, handler) {
          return _this.$refs.root.addEventListener(evt, handler);
        },
        deregisterInteractionHandler: function deregisterInteractionHandler(evt, handler) {
          return _this.$refs.root.removeEventListener(evt, handler);
        },
        registerSurfaceInteractionHandler: function registerSurfaceInteractionHandler() /*evt, handler*/{
          // VMA_HACK: handle button clicks ourselves
          // this.$refs.surface.addEventListener(evt, handler)
        },
        deregisterSurfaceInteractionHandler: function deregisterSurfaceInteractionHandler() /*evt, handler*/{
          // VMA_HACK: handle button clicks ourselves
          // this.$refs.surface.removeEventListener(evt, handler)
        },
        registerDocumentKeydownHandler: function registerDocumentKeydownHandler(handler) {
          return document.addEventListener('keydown', handler);
        },
        deregisterDocumentKeydownHandler: function deregisterDocumentKeydownHandler(handler) {
          return document.removeEventListener('keydown', handler);
        },
        registerTransitionEndHandler: function registerTransitionEndHandler(handler) {
          return _this.$refs.surface.addEventListener('transitionend', handler);
        },
        deregisterTransitionEndHandler: function deregisterTransitionEndHandler(handler) {
          return _this.$refs.surface.removeEventListener('transitionend', handler);
        },
        notifyAccept: function notifyAccept() {
          return _this.$emit('accept');
        },
        notifyCancel: function notifyCancel() {
          return _this.$emit('cancel');
        },
        trapFocusOnSurface: function trapFocusOnSurface() {
          return _this.focusTrap.activate();
        },
        untrapFocusOnSurface: function untrapFocusOnSurface() {
          return _this.focusTrap.deactivate();
        },
        isDialog: function isDialog(el) {
          return _this.$refs.surface === el;
        },
        layoutFooterRipples: function layoutFooterRipples() {
          _this.$refs.accept.ripple.layout();
          _this.cancel && _this.$refs.cancel.ripple.layout();
        }
      });

      this.foundation.init();
    },
    beforeDestroy: function beforeDestroy() {
      this.foundation.destroy();
    },

    methods: {
      onCancel: function onCancel() {
        this.foundation.cancel(true);
      },
      onAccept: function onAccept() {
        var _this2 = this;

        if (this.$listeners['validate']) {
          this.$emit('validate', {
            accept: function accept() {
              var notify = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
              return _this2.foundation.accept(notify);
            }
          });
        } else {
          this.foundation.accept(true);
        }
      },
      show: function show() {
        this.foundation.open();
      },
      close: function close() {
        this.foundation.close();
      }
    }
  };

  var VueMDCDialog = BasePlugin({
    mdcDialog: mdcDialog
  });

  var mdcPermanentDrawer = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('nav', { staticClass: "mdc-permanent-drawer mdc-drawer--permanent mdc-typography" }, [_c('nav', { staticClass: "mdc-drawer__content" }, [_vm.toolbarSpacer ? _c('div', { staticClass: "mdc-drawer__toolbar-spacer" }) : _vm._e(), _vm._v(" "), _vm._t("default")], 2)]);
    }, staticRenderFns: [],
    name: 'mdc-permanent-drawer',
    props: {
      'toolbar-spacer': Boolean
    }
  };

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var FOCUSABLE_ELEMENTS = 'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), ' + 'button:not([disabled]), iframe, object, embed, [tabindex], [contenteditable]';

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var MDCSlidableDrawerFoundation = function (_MDCFoundation) {
    inherits(MDCSlidableDrawerFoundation, _MDCFoundation);
    createClass(MDCSlidableDrawerFoundation, null, [{
      key: 'defaultAdapter',
      get: function get$$1() {
        return {
          addClass: function addClass() /* className: string */{},
          removeClass: function removeClass() /* className: string */{},
          hasClass: function hasClass() /* className: string */{},
          hasNecessaryDom: function hasNecessaryDom() {
            return (/* boolean */false
            );
          },
          registerInteractionHandler: function registerInteractionHandler() /* evt: string, handler: EventListener */{},
          deregisterInteractionHandler: function deregisterInteractionHandler() /* evt: string, handler: EventListener */{},
          registerDrawerInteractionHandler: function registerDrawerInteractionHandler() /* evt: string, handler: EventListener */{},
          deregisterDrawerInteractionHandler: function deregisterDrawerInteractionHandler() /* evt: string, handler: EventListener */{},
          registerTransitionEndHandler: function registerTransitionEndHandler() /* handler: EventListener */{},
          deregisterTransitionEndHandler: function deregisterTransitionEndHandler() /* handler: EventListener */{},
          registerDocumentKeydownHandler: function registerDocumentKeydownHandler() /* handler: EventListener */{},
          deregisterDocumentKeydownHandler: function deregisterDocumentKeydownHandler() /* handler: EventListener */{},
          setTranslateX: function setTranslateX() /* value: number | null */{},
          getFocusableElements: function getFocusableElements() /* NodeList */{},
          saveElementTabState: function saveElementTabState() /* el: Element */{},
          restoreElementTabState: function restoreElementTabState() /* el: Element */{},
          makeElementUntabbable: function makeElementUntabbable() /* el: Element */{},
          notifyOpen: function notifyOpen() {},
          notifyClose: function notifyClose() {},
          isRtl: function isRtl() {
            return (/* boolean */false
            );
          },
          getDrawerWidth: function getDrawerWidth() {
            return (/* number */0
            );
          }
        };
      }
    }]);

    function MDCSlidableDrawerFoundation(adapter, rootCssClass, animatingCssClass, openCssClass) {
      classCallCheck(this, MDCSlidableDrawerFoundation);

      var _this = possibleConstructorReturn(this, (MDCSlidableDrawerFoundation.__proto__ || Object.getPrototypeOf(MDCSlidableDrawerFoundation)).call(this, _extends(MDCSlidableDrawerFoundation.defaultAdapter, adapter)));

      _this.rootCssClass_ = rootCssClass;
      _this.animatingCssClass_ = animatingCssClass;
      _this.openCssClass_ = openCssClass;

      _this.transitionEndHandler_ = function (evt) {
        return _this.handleTransitionEnd_(evt);
      };

      _this.inert_ = false;

      _this.componentTouchStartHandler_ = function (evt) {
        return _this.handleTouchStart_(evt);
      };
      _this.componentTouchMoveHandler_ = function (evt) {
        return _this.handleTouchMove_(evt);
      };
      _this.componentTouchEndHandler_ = function (evt) {
        return _this.handleTouchEnd_(evt);
      };
      _this.documentKeydownHandler_ = function (evt) {
        if (evt.key && evt.key === 'Escape' || evt.keyCode === 27) {
          _this.close();
        }
      };
      return _this;
    }

    createClass(MDCSlidableDrawerFoundation, [{
      key: 'init',
      value: function init() {
        var ROOT = this.rootCssClass_;
        var OPEN = this.openCssClass_;

        if (!this.adapter_.hasClass(ROOT)) {
          throw new Error(ROOT + ' class required in root element.');
        }

        if (!this.adapter_.hasNecessaryDom()) {
          throw new Error('Required DOM nodes missing in ' + ROOT + ' component.');
        }

        if (this.adapter_.hasClass(OPEN)) {
          this.isOpen_ = true;
        } else {
          this.detabinate_();
          this.isOpen_ = false;
        }

        this.adapter_.registerDrawerInteractionHandler('touchstart', this.componentTouchStartHandler_);
        this.adapter_.registerInteractionHandler('touchmove', this.componentTouchMoveHandler_);
        this.adapter_.registerInteractionHandler('touchend', this.componentTouchEndHandler_);
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        this.adapter_.deregisterDrawerInteractionHandler('touchstart', this.componentTouchStartHandler_);
        this.adapter_.deregisterInteractionHandler('touchmove', this.componentTouchMoveHandler_);
        this.adapter_.deregisterInteractionHandler('touchend', this.componentTouchEndHandler_);
        // Deregister the document keydown handler just in case the component is destroyed while the menu is open.
        this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);
      }
    }, {
      key: 'open',
      value: function open() {
        this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);
        this.adapter_.registerDocumentKeydownHandler(this.documentKeydownHandler_);
        this.adapter_.addClass(this.animatingCssClass_);
        this.adapter_.addClass(this.openCssClass_);
        this.retabinate_();
        // Debounce multiple calls
        if (!this.isOpen_) {
          this.adapter_.notifyOpen();
        }
        this.isOpen_ = true;
      }
    }, {
      key: 'close',
      value: function close() {
        this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);
        this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);
        this.adapter_.addClass(this.animatingCssClass_);
        this.adapter_.removeClass(this.openCssClass_);
        this.detabinate_();
        // Debounce multiple calls
        if (this.isOpen_) {
          this.adapter_.notifyClose();
        }
        this.isOpen_ = false;
      }
    }, {
      key: 'isOpen',
      value: function isOpen() {
        return this.isOpen_;
      }

      /**
       *  Render all children of the drawer inert when it's closed.
       */

    }, {
      key: 'detabinate_',
      value: function detabinate_() {
        if (this.inert_) {
          return;
        }

        var elements = this.adapter_.getFocusableElements();
        if (elements) {
          for (var i = 0; i < elements.length; i++) {
            this.adapter_.saveElementTabState(elements[i]);
            this.adapter_.makeElementUntabbable(elements[i]);
          }
        }

        this.inert_ = true;
      }

      /**
       *  Make all children of the drawer tabbable again when it's open.
       */

    }, {
      key: 'retabinate_',
      value: function retabinate_() {
        if (!this.inert_) {
          return;
        }

        var elements = this.adapter_.getFocusableElements();
        if (elements) {
          for (var i = 0; i < elements.length; i++) {
            this.adapter_.restoreElementTabState(elements[i]);
          }
        }

        this.inert_ = false;
      }
    }, {
      key: 'handleTouchStart_',
      value: function handleTouchStart_(evt) {
        if (!this.adapter_.hasClass(this.openCssClass_)) {
          return;
        }
        if (evt.pointerType && evt.pointerType !== 'touch') {
          return;
        }

        this.direction_ = this.adapter_.isRtl() ? -1 : 1;
        this.drawerWidth_ = this.adapter_.getDrawerWidth();
        this.startX_ = evt.touches ? evt.touches[0].pageX : evt.pageX;
        this.currentX_ = this.startX_;

        this.updateRaf_ = requestAnimationFrame(this.updateDrawer_.bind(this));
      }
    }, {
      key: 'handleTouchMove_',
      value: function handleTouchMove_(evt) {
        if (evt.pointerType && evt.pointerType !== 'touch') {
          return;
        }

        this.currentX_ = evt.touches ? evt.touches[0].pageX : evt.pageX;
      }
    }, {
      key: 'handleTouchEnd_',
      value: function handleTouchEnd_(evt) {
        if (evt.pointerType && evt.pointerType !== 'touch') {
          return;
        }

        this.prepareForTouchEnd_();

        // Did the user close the drawer by more than 50%?
        if (Math.abs(this.newPosition_ / this.drawerWidth_) >= 0.5) {
          this.close();
        } else {
          // Triggering an open here means we'll get a nice animation back to the fully open state.
          this.open();
        }
      }
    }, {
      key: 'prepareForTouchEnd_',
      value: function prepareForTouchEnd_() {
        cancelAnimationFrame(this.updateRaf_);
        this.adapter_.setTranslateX(null);
      }
    }, {
      key: 'updateDrawer_',
      value: function updateDrawer_() {
        this.updateRaf_ = requestAnimationFrame(this.updateDrawer_.bind(this));
        this.adapter_.setTranslateX(this.newPosition_);
      }
    }, {
      key: 'isRootTransitioningEventTarget_',
      value: function isRootTransitioningEventTarget_() {
        // Classes extending MDCSlidableDrawerFoundation should implement this method to return true or false
        // if the event target is the root event target currently transitioning.
        return false;
      }
    }, {
      key: 'handleTransitionEnd_',
      value: function handleTransitionEnd_(evt) {
        if (this.isRootTransitioningEventTarget_(evt.target)) {
          this.adapter_.removeClass(this.animatingCssClass_);
          this.adapter_.deregisterTransitionEndHandler(this.transitionEndHandler_);
        }
      }
    }, {
      key: 'newPosition_',
      get: function get$$1() {
        var newPos = null;

        if (this.direction_ === 1) {
          newPos = Math.min(0, this.currentX_ - this.startX_);
        } else {
          newPos = Math.max(0, this.currentX_ - this.startX_);
        }

        return newPos;
      }
    }]);
    return MDCSlidableDrawerFoundation;
  }(MDCFoundation);

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var cssClasses$6 = {
    ROOT: 'mdc-drawer--persistent',
    OPEN: 'mdc-drawer--open',
    ANIMATING: 'mdc-drawer--animating'
  };

  var strings$6 = {
    DRAWER_SELECTOR: '.mdc-drawer--persistent .mdc-drawer__drawer',
    FOCUSABLE_ELEMENTS: FOCUSABLE_ELEMENTS,
    OPEN_EVENT: 'MDCPersistentDrawer:open',
    CLOSE_EVENT: 'MDCPersistentDrawer:close'
  };

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var MDCPersistentDrawerFoundation = function (_MDCSlidableDrawerFou) {
    inherits(MDCPersistentDrawerFoundation, _MDCSlidableDrawerFou);
    createClass(MDCPersistentDrawerFoundation, null, [{
      key: 'cssClasses',
      get: function get$$1() {
        return cssClasses$6;
      }
    }, {
      key: 'strings',
      get: function get$$1() {
        return strings$6;
      }
    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return _extends(MDCSlidableDrawerFoundation.defaultAdapter, {
          isDrawer: function isDrawer() {
            return false;
          }
        });
      }
    }]);

    function MDCPersistentDrawerFoundation(adapter) {
      classCallCheck(this, MDCPersistentDrawerFoundation);
      return possibleConstructorReturn(this, (MDCPersistentDrawerFoundation.__proto__ || Object.getPrototypeOf(MDCPersistentDrawerFoundation)).call(this, _extends(MDCPersistentDrawerFoundation.defaultAdapter, adapter), MDCPersistentDrawerFoundation.cssClasses.ROOT, MDCPersistentDrawerFoundation.cssClasses.ANIMATING, MDCPersistentDrawerFoundation.cssClasses.OPEN));
    }

    createClass(MDCPersistentDrawerFoundation, [{
      key: 'isRootTransitioningEventTarget_',
      value: function isRootTransitioningEventTarget_(el) {
        return this.adapter_.isDrawer(el);
      }
    }]);
    return MDCPersistentDrawerFoundation;
  }(MDCSlidableDrawerFoundation);

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var TAB_DATA = 'data-mdc-tabindex';
  var TAB_DATA_HANDLED = 'data-mdc-tabindex-handled';

  var storedTransformPropertyName_ = void 0;
  var supportsPassive_$1 = void 0;

  // Remap touch events to pointer events, if the browser doesn't support touch events.
  function remapEvent(eventName) {
    var globalObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;

    if (!('ontouchstart' in globalObj.document)) {
      switch (eventName) {
        case 'touchstart':
          return 'pointerdown';
        case 'touchmove':
          return 'pointermove';
        case 'touchend':
          return 'pointerup';
        default:
          return eventName;
      }
    }

    return eventName;
  }

  // Choose the correct transform property to use on the current browser.
  function getTransformPropertyName() {
    var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
    var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (storedTransformPropertyName_ === undefined || forceRefresh) {
      var el = globalObj.document.createElement('div');
      var transformPropertyName = 'transform' in el.style ? 'transform' : '-webkit-transform';
      storedTransformPropertyName_ = transformPropertyName;
    }

    return storedTransformPropertyName_;
  }

  // Determine whether the current browser supports CSS properties.
  function supportsCssCustomProperties() {
    var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;

    if ('CSS' in globalObj) {
      return globalObj.CSS.supports('(--color: red)');
    }
    return false;
  }

  // Determine whether the current browser supports passive event listeners, and if so, use them.
  function applyPassive$1() {
    var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
    var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (supportsPassive_$1 === undefined || forceRefresh) {
      var isSupported = false;
      try {
        globalObj.document.addEventListener('test', null, { get passive() {
            isSupported = true;
          } });
      } catch (e) {}

      supportsPassive_$1 = isSupported;
    }

    return supportsPassive_$1 ? { passive: true } : false;
  }

  // Save the tab state for an element.
  function saveElementTabState(el) {
    if (el.hasAttribute('tabindex')) {
      el.setAttribute(TAB_DATA, el.getAttribute('tabindex'));
    }
    el.setAttribute(TAB_DATA_HANDLED, true);
  }

  // Restore the tab state for an element, if it was saved.
  function restoreElementTabState(el) {
    // Only modify elements we've already handled, in case anything was dynamically added since we saved state.
    if (el.hasAttribute(TAB_DATA_HANDLED)) {
      if (el.hasAttribute(TAB_DATA)) {
        el.setAttribute('tabindex', el.getAttribute(TAB_DATA));
        el.removeAttribute(TAB_DATA);
      } else {
        el.removeAttribute('tabindex');
      }
      el.removeAttribute(TAB_DATA_HANDLED);
    }
  }

  var mdcPersistentDrawer = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('aside', { staticClass: "mdc-persistent-drawer mdc-drawer--persistent mdc-typography", class: _vm.classes }, [_c('nav', { ref: "drawer", staticClass: "mdc-drawer__drawer" }, [_vm.toolbarSpacer ? _c('div', { staticClass: "mdc-drawer__toolbar-spacer" }) : _vm._e(), _vm._v(" "), _vm._t("default")], 2)]);
    }, staticRenderFns: [],
    name: 'mdc-persistent-drawer',
    model: {
      prop: 'open',
      event: 'change'
    },
    props: {
      'toolbar-spacer': Boolean,
      'open': Boolean
    },
    data: function data() {
      return {
        classes: {}
      };
    },

    watch: {
      open: function open() {
        this._refresh();
      }
    },
    methods: {
      _refresh: function _refresh() {
        if (this.open) {
          this.foundation && this.foundation.open();
        } else {
          this.foundation && this.foundation.close();
        }
      }
    },
    mounted: function mounted() {
      var _this = this;

      var FOCUSABLE_ELEMENTS = MDCPersistentDrawerFoundation.strings.FOCUSABLE_ELEMENTS;


      this.foundation = new MDCPersistentDrawerFoundation({
        addClass: function addClass(className) {
          _this.$set(_this.classes, className, true);
        },
        removeClass: function removeClass(className) {
          _this.$delete(_this.classes, className);
        },
        hasClass: function hasClass(className) {
          return _this.$el.classList.contains(className);
        },
        hasNecessaryDom: function hasNecessaryDom() {
          return !!_this.$refs.drawer;
        },
        registerInteractionHandler: function registerInteractionHandler(evt, handler) {
          _this.$el.addEventListener(remapEvent(evt), handler, applyPassive$1());
        },
        deregisterInteractionHandler: function deregisterInteractionHandler(evt, handler) {
          _this.$el.removeEventListener(remapEvent(evt), handler, applyPassive$1());
        },
        registerDrawerInteractionHandler: function registerDrawerInteractionHandler(evt, handler) {
          _this.$refs.drawer.addEventListener(remapEvent(evt), handler);
        },
        deregisterDrawerInteractionHandler: function deregisterDrawerInteractionHandler(evt, handler) {
          _this.$refs.drawer.removeEventListener(remapEvent(evt), handler);
        },
        registerTransitionEndHandler: function registerTransitionEndHandler(handler) {
          _this.$refs.drawer.addEventListener('transitionend', handler);
        },
        deregisterTransitionEndHandler: function deregisterTransitionEndHandler(handler) {
          _this.$refs.drawer.removeEventListener('transitionend', handler);
        },
        registerDocumentKeydownHandler: function registerDocumentKeydownHandler(handler) {
          document.addEventListener('keydown', handler);
        },
        deregisterDocumentKeydownHandler: function deregisterDocumentKeydownHandler(handler) {
          document.removeEventListener('keydown', handler);
        },
        getDrawerWidth: function getDrawerWidth() {
          return _this.$refs.drawer.offsetWidth;
        },
        setTranslateX: function setTranslateX(value) {
          _this.$refs.drawer.style.setProperty(getTransformPropertyName(), value === null ? null : 'translateX(' + value + 'px)');
        },
        getFocusableElements: function getFocusableElements() {
          return _this.$refs.drawer.querySelectorAll(FOCUSABLE_ELEMENTS);
        },
        saveElementTabState: function saveElementTabState$$1(el) {
          saveElementTabState(el);
        },
        restoreElementTabState: function restoreElementTabState$$1(el) {
          restoreElementTabState(el);
        },
        makeElementUntabbable: function makeElementUntabbable(el) {
          el.setAttribute('tabindex', -1);
        },
        notifyOpen: function notifyOpen() {
          _this.$emit('change', true);
          _this.$emit('open');
        },
        notifyClose: function notifyClose() {
          _this.$emit('change', false);
          _this.$emit('close');
        },
        isRtl: function isRtl() {
          /* global getComputedStyle */
          return getComputedStyle(_this.$el).getPropertyValue('direction') === 'rtl';
        },
        isDrawer: function isDrawer(el) {
          return el === _this.$refs.drawer;
        }
      });
      this.foundation && this.foundation.init();
      this._refresh();
    },
    beforeDestroy: function beforeDestroy() {
      this.foundation && this.foundation.destroy();
      this.foundation = null;
    }
  };

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var cssClasses$7 = {
    ROOT: 'mdc-drawer--temporary',
    OPEN: 'mdc-drawer--open',
    ANIMATING: 'mdc-drawer--animating',
    SCROLL_LOCK: 'mdc-drawer-scroll-lock'
  };

  var strings$7 = {
    DRAWER_SELECTOR: '.mdc-drawer--temporary .mdc-drawer__drawer',
    OPACITY_VAR_NAME: '--mdc-temporary-drawer-opacity',
    FOCUSABLE_ELEMENTS: FOCUSABLE_ELEMENTS,
    OPEN_EVENT: 'MDCTemporaryDrawer:open',
    CLOSE_EVENT: 'MDCTemporaryDrawer:close'
  };

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var MDCTemporaryDrawerFoundation = function (_MDCSlidableDrawerFou) {
    inherits(MDCTemporaryDrawerFoundation, _MDCSlidableDrawerFou);
    createClass(MDCTemporaryDrawerFoundation, null, [{
      key: 'cssClasses',
      get: function get$$1() {
        return cssClasses$7;
      }
    }, {
      key: 'strings',
      get: function get$$1() {
        return strings$7;
      }
    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return _extends(MDCSlidableDrawerFoundation.defaultAdapter, {
          addBodyClass: function addBodyClass() /* className: string */{},
          removeBodyClass: function removeBodyClass() /* className: string */{},
          isDrawer: function isDrawer() {
            return false;
          },
          updateCssVariable: function updateCssVariable() /* value: string */{},
          eventTargetHasClass: function eventTargetHasClass() {
            return (/* target: EventTarget, className: string */ /* boolean */false
            );
          }
        });
      }
    }]);

    function MDCTemporaryDrawerFoundation(adapter) {
      classCallCheck(this, MDCTemporaryDrawerFoundation);

      var _this = possibleConstructorReturn(this, (MDCTemporaryDrawerFoundation.__proto__ || Object.getPrototypeOf(MDCTemporaryDrawerFoundation)).call(this, _extends(MDCTemporaryDrawerFoundation.defaultAdapter, adapter), MDCTemporaryDrawerFoundation.cssClasses.ROOT, MDCTemporaryDrawerFoundation.cssClasses.ANIMATING, MDCTemporaryDrawerFoundation.cssClasses.OPEN));

      _this.componentClickHandler_ = function (evt) {
        if (_this.adapter_.eventTargetHasClass(evt.target, cssClasses$7.ROOT)) {
          _this.close(true);
        }
      };
      return _this;
    }

    createClass(MDCTemporaryDrawerFoundation, [{
      key: 'init',
      value: function init() {
        get(MDCTemporaryDrawerFoundation.prototype.__proto__ || Object.getPrototypeOf(MDCTemporaryDrawerFoundation.prototype), 'init', this).call(this);

        // Make browser aware of custom property being used in this element.
        // Workaround for certain types of hard-to-reproduce heisenbugs.
        this.adapter_.updateCssVariable(0);
        this.adapter_.registerInteractionHandler('click', this.componentClickHandler_);
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        get(MDCTemporaryDrawerFoundation.prototype.__proto__ || Object.getPrototypeOf(MDCTemporaryDrawerFoundation.prototype), 'destroy', this).call(this);

        this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);
        this.enableScroll_();
      }
    }, {
      key: 'open',
      value: function open() {
        this.disableScroll_();
        // Make sure custom property values are cleared before starting.
        this.adapter_.updateCssVariable('');

        get(MDCTemporaryDrawerFoundation.prototype.__proto__ || Object.getPrototypeOf(MDCTemporaryDrawerFoundation.prototype), 'open', this).call(this);
      }
    }, {
      key: 'close',
      value: function close() {
        // Make sure custom property values are cleared before making any changes.
        this.adapter_.updateCssVariable('');

        get(MDCTemporaryDrawerFoundation.prototype.__proto__ || Object.getPrototypeOf(MDCTemporaryDrawerFoundation.prototype), 'close', this).call(this);
      }
    }, {
      key: 'prepareForTouchEnd_',
      value: function prepareForTouchEnd_() {
        get(MDCTemporaryDrawerFoundation.prototype.__proto__ || Object.getPrototypeOf(MDCTemporaryDrawerFoundation.prototype), 'prepareForTouchEnd_', this).call(this);

        this.adapter_.updateCssVariable('');
      }
    }, {
      key: 'updateDrawer_',
      value: function updateDrawer_() {
        get(MDCTemporaryDrawerFoundation.prototype.__proto__ || Object.getPrototypeOf(MDCTemporaryDrawerFoundation.prototype), 'updateDrawer_', this).call(this);

        var newOpacity = Math.max(0, 1 + this.direction_ * (this.newPosition_ / this.drawerWidth_));
        this.adapter_.updateCssVariable(newOpacity);
      }
    }, {
      key: 'isRootTransitioningEventTarget_',
      value: function isRootTransitioningEventTarget_(el) {
        return this.adapter_.isDrawer(el);
      }
    }, {
      key: 'handleTransitionEnd_',
      value: function handleTransitionEnd_(evt) {
        get(MDCTemporaryDrawerFoundation.prototype.__proto__ || Object.getPrototypeOf(MDCTemporaryDrawerFoundation.prototype), 'handleTransitionEnd_', this).call(this, evt);
        if (!this.isOpen_) {
          this.enableScroll_();
        }
      }
    }, {
      key: 'disableScroll_',
      value: function disableScroll_() {
        this.adapter_.addBodyClass(cssClasses$7.SCROLL_LOCK);
      }
    }, {
      key: 'enableScroll_',
      value: function enableScroll_() {
        this.adapter_.removeBodyClass(cssClasses$7.SCROLL_LOCK);
      }
    }]);
    return MDCTemporaryDrawerFoundation;
  }(MDCSlidableDrawerFoundation);

  var mdcTemporaryDrawer = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('aside', { staticClass: "mdc-temporary-drawer mdc-drawer--temporary mdc-typography", class: _vm.classes }, [_c('nav', { ref: "drawer", staticClass: "mdc-drawer__drawer" }, [_vm.toolbarSpacer ? _c('div', { staticClass: "mdc-drawer__toolbar-spacer" }) : _vm._e(), _vm._v(" "), _vm._t("default")], 2)]);
    }, staticRenderFns: [],
    name: 'mdc-temporary-drawer',
    model: {
      prop: 'open',
      event: 'change'
    },
    props: {
      'open': Boolean,
      'toolbar-spacer': Boolean
    },
    data: function data() {
      return {
        classes: {}
      };
    },

    watch: {
      open: function open() {
        this._refresh();
      }
    },
    methods: {
      _refresh: function _refresh() {
        if (this.open) {
          this.foundation && this.foundation.open();
        } else {
          this.foundation && this.foundation.close();
        }
      }
    },
    mounted: function mounted() {
      var _this = this;

      var _MDCTemporaryDrawerFo = MDCTemporaryDrawerFoundation.strings,
          FOCUSABLE_ELEMENTS = _MDCTemporaryDrawerFo.FOCUSABLE_ELEMENTS,
          OPACITY_VAR_NAME = _MDCTemporaryDrawerFo.OPACITY_VAR_NAME;


      this.foundation = new MDCTemporaryDrawerFoundation({
        addClass: function addClass(className) {
          _this.$set(_this.classes, className, true);
        },
        removeClass: function removeClass(className) {
          _this.$delete(_this.classes, className);
        },
        hasClass: function hasClass(className) {
          return _this.$el.classList.contains(className);
        },
        addBodyClass: function addBodyClass(className) {
          return document.body.classList.add(className);
        },
        removeBodyClass: function removeBodyClass(className) {
          return document.body.classList.remove(className);
        },
        eventTargetHasClass: function eventTargetHasClass(target, className) {
          return target.classList.contains(className);
        },
        hasNecessaryDom: function hasNecessaryDom() {
          return !!_this.$refs.drawer;
        },
        registerInteractionHandler: function registerInteractionHandler(evt, handler) {
          _this.$el.addEventListener(remapEvent(evt), handler, applyPassive$1());
        },
        deregisterInteractionHandler: function deregisterInteractionHandler(evt, handler) {
          _this.$el.removeEventListener(remapEvent(evt), handler, applyPassive$1());
        },
        registerDrawerInteractionHandler: function registerDrawerInteractionHandler(evt, handler) {
          _this.$refs.drawer.addEventListener(remapEvent(evt), handler);
        },
        deregisterDrawerInteractionHandler: function deregisterDrawerInteractionHandler(evt, handler) {
          _this.$refs.drawer.removeEventListener(remapEvent(evt), handler);
        },
        registerTransitionEndHandler: function registerTransitionEndHandler(handler) {
          _this.$refs.drawer.addEventListener('transitionend', handler);
        },
        deregisterTransitionEndHandler: function deregisterTransitionEndHandler(handler) {
          _this.$refs.drawer.removeEventListener('transitionend', handler);
        },
        registerDocumentKeydownHandler: function registerDocumentKeydownHandler(handler) {
          document.addEventListener('keydown', handler);
        },
        deregisterDocumentKeydownHandler: function deregisterDocumentKeydownHandler(handler) {
          document.removeEventListener('keydown', handler);
        },
        getDrawerWidth: function getDrawerWidth() {
          return _this.$refs.drawer.offsetWidth;
        },
        setTranslateX: function setTranslateX(value) {
          _this.$refs.drawer.style.setProperty(getTransformPropertyName(), value === null ? null : 'translateX(' + value + 'px)');
        },
        updateCssVariable: function updateCssVariable(value) {
          if (supportsCssCustomProperties()) {
            _this.$el.style.setProperty(OPACITY_VAR_NAME, value);
          }
        },
        getFocusableElements: function getFocusableElements() {
          return _this.$refs.drawer.querySelectorAll(FOCUSABLE_ELEMENTS);
        },
        saveElementTabState: function saveElementTabState$$1(el) {
          saveElementTabState(el);
        },
        restoreElementTabState: function restoreElementTabState$$1(el) {
          restoreElementTabState(el);
        },
        makeElementUntabbable: function makeElementUntabbable(el) {
          el.setAttribute('tabindex', -1);
        },
        notifyOpen: function notifyOpen() {
          _this.$emit('change', true);
          _this.$emit('open');
        },
        notifyClose: function notifyClose() {
          _this.$emit('change', false);
          _this.$emit('close');
        },
        isRtl: function isRtl() {
          /* global getComputedStyle */
          return getComputedStyle(_this.$el).getPropertyValue('direction') === 'rtl';
        },
        isDrawer: function isDrawer(el) {
          return el === _this.$refs.drawer;
        }
      });
      this.foundation && this.foundation.init();
      this._refresh();
    },
    beforeDestroy: function beforeDestroy() {
      this.foundation && this.foundation.destroy();
      this.foundation = null;
    }
  };

  var media = new (function () {
    function _class() {
      classCallCheck(this, _class);
    }

    createClass(_class, [{
      key: 'small',
      get: function get$$1() {
        return this._small || (this._small = window.matchMedia('(max-width: 839px)'));
      }
    }, {
      key: 'large',
      get: function get$$1() {
        return this._large || (this._large = window.matchMedia('(min-width: 1200px)'));
      }
    }]);
    return _class;
  }())();

  var mdcDrawer = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c(_vm.type, { ref: "drawer", tag: "component", staticClass: "mdc-drawer", attrs: { "toolbar-spacer": _vm.toolbarSpacer }, on: { "change": function change($event) {
            _vm.$root.$emit('mdc:layout');
          }, "open": function open($event) {
            _vm.$emit('open');
          }, "close": function close($event) {
            _vm.$emit('close');
          } }, model: { value: _vm.open_, callback: function callback($$v) {
            _vm.open_ = $$v;
          }, expression: "open_" } }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-drawer',
    props: {
      permanent: Boolean,
      persistent: Boolean,
      temporary: Boolean,
      drawerType: {
        type: String,
        validator: function validator(val) {
          return val in ['temporary', 'persistent', 'permanent'];
        }
      },
      toolbarSpacer: Boolean,
      toggleOn: String,
      toggleOnSource: { type: Object, required: false },
      openOn: String,
      openOnSource: { type: Object, required: false },
      closeOn: String,
      closeOnSource: { type: Object, required: false }
    },
    provide: function provide() {
      return { mdcDrawer: this };
    },
    data: function data() {
      return {
        small: false,
        large: false,
        open_: false
      };
    },

    components: {
      'mdc-permanent-drawer': mdcPermanentDrawer,
      'mdc-persistent-drawer': mdcPersistentDrawer,
      'mdc-temporary-drawer': mdcTemporaryDrawer
    },
    computed: {
      type: function type() {
        if (this.permanent) {
          return 'mdc-permanent-drawer';
        } else if (this.persistent) {
          return 'mdc-persistent-drawer';
        } else if (this.temporary) {
          return 'mdc-temporary-drawer';
        } else {
          switch (this.drawerType) {
            case 'permanent':
              return 'mdc-permanent-drawer';
            case 'persistent':
              return 'mdc-persistent-drawer';
            case 'temporary':
              return 'mdc-temporary-drawer';
            default:
              return this.small ? 'mdc-temporary-drawer' : 'mdc-persistent-drawer';
          }
        }
      },
      isPermanent: function isPermanent() {
        return this.permanent || this.type === 'mdc-permanent-drawer';
      },
      isPersistent: function isPersistent() {
        return this.persistent || this.type === 'mdc-persistent-drawer';
      },
      isTemporary: function isTemporary() {
        return this.temporary || this.type === 'mdc-temporary-drawer';
      },
      isResponsive: function isResponsive() {
        return !(this.permanent || this.persistent || this.temporary || this.drawerType);
      }
    },
    methods: {
      open: function open() {
        this.open_ = true;
      },
      close: function close() {
        this.isPermanent || (this.open_ = false);
      },
      toggle: function toggle() {
        this.isPermanent || (this.isOpen() ? this.close() : this.open());
      },
      isOpen: function isOpen() {
        return this.isPermanent || this.open_;
      },
      refreshMedia: function refreshMedia() {
        this.small = media.small.matches;
        this.large = media.large.matches;
        if (this.isResponsive) {
          if (this.large) {
            this.open();
          } else {
            this.close();
          }
        }
      }
    },
    created: function created() {
      if (window && window.matchMedia) {
        this.small = media.small.matches;
        this.large = media.large.matches;
      }
    },
    mounted: function mounted() {
      var _this = this;

      if (this.toggleOn) {
        var source = this.toggleOnSource || this.$root;
        source.$on(this.toggleOn, function () {
          return _this.toggle();
        });
      }
      if (this.openOn) {
        var _source = this.openOnSource || this.$root;
        _source.$on(this.openOn, function () {
          return _this.open();
        });
      }
      if (this.closeOn) {
        var _source2 = this.closeOnSource || this.$root;
        _source2.$on(this.closeOn, function () {
          return _this.close();
        });
      }
      media.small.addListener(this.refreshMedia);
      media.large.addListener(this.refreshMedia);
      this.$nextTick(function () {
        return _this.refreshMedia();
      });
    },
    beforeDestroy: function beforeDestroy() {
      media.small.removeListener(this.refreshMedia);
      media.large.removeListener(this.refreshMedia);
    }
  };

  var mdcDrawerLayout = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-drawer-layout" }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-drawer-layout'
  };

  var mdcDrawerHeader = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _vm.show ? _c('header', { staticClass: "mdc-drawer-header mdc-drawer__header" }, [_c('div', { staticClass: "mdc-drawer__header-content" }, [_vm._t("default")], 2)]) : _vm._e();
    }, staticRenderFns: [],
    name: 'mdc-drawer-header',
    props: {
      'permanent': Boolean,
      'persistent': Boolean,
      'temporary': Boolean
    },
    inject: ['mdcDrawer'],
    computed: {
      show: function show() {
        if (this.temporary || this.persistent || this.permanent) {
          return this.temporary && this.mdcDrawer.isTemporary || this.persistent && this.mdcDrawer.isPersistent || this.permanent && this.mdcDrawer.isPermanent;
        } else {
          return true;
        }
      }
    }
  };

  var mdcDrawerList = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('nav', { staticClass: "mdc-drawer-list mdc-list", class: _vm.classes }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-drawer-list',
    props: {
      'dense': Boolean
    },
    data: function data() {
      return {
        classes: {
          'mdc-list--dense': this.dense
        }
      };
    }
  };

  var mdcDrawerItem = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('custom-link', { staticClass: "mdc-drawer-item mdc-list-item", class: [_vm.classes, _vm.itemClasses], style: _vm.styles, attrs: { "link": _vm.link }, on: { "click": _vm.onClick } }, [_vm.hasStartDetail ? _c('span', { staticClass: "mdc-list-item__graphic" }, [_vm._t("start-detail", [_c('i', { staticClass: "material-icons", attrs: { "aria-hidden": "true" } }, [_vm._v(_vm._s(_vm.startIcon))])])], 2) : _vm._e(), _vm._v(" "), _vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-drawer-item',
    inject: ['mdcDrawer'],
    mixins: [DispatchEventMixin, CustomLinkMixin],
    props: {
      startIcon: String,
      temporaryClose: {
        type: Boolean,
        default: true
      },
      activated: Boolean,
      exactActiveClass: {
        type: String,
        default: 'mdc-list-item--activated'
      }
    },
    data: function data() {
      return {
        classes: {},
        styles: {}
      };
    },

    computed: {
      itemClasses: function itemClasses() {
        return {
          'mdc-list-item--activated': this.activated
        };
      },
      hasStartDetail: function hasStartDetail() {
        return this.startIcon || this.$slots['start-detail'];
      }
    },
    methods: {
      onClick: function onClick(evt) {
        this.mdcDrawer.isTemporary && this.temporaryClose && this.mdcDrawer.close();
        this.dispatchEvent(evt);
      }
    },
    mounted: function mounted() {
      this.ripple = new RippleBase(this);
      this.ripple.init();
    },
    beforeDestroy: function beforeDestroy() {
      this.ripple && this.ripple.destroy();
      this.ripple = null;
    }
  };

  var mdcDrawerDivider = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('hr', { staticClass: "mdc-list-divider" });
    }, staticRenderFns: [],
    name: 'mdc-drawer-divider'
  };

  var VueMDCDrawer = BasePlugin({
    mdcDrawer: mdcDrawer,
    mdcDrawerLayout: mdcDrawerLayout,
    mdcDrawerHeader: mdcDrawerHeader,
    mdcDrawerList: mdcDrawerList,
    mdcDrawerItem: mdcDrawerItem,
    mdcDrawerDivider: mdcDrawerDivider
  });

  var mdcElevation = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-elevation" });
    }, staticRenderFns: [],
    name: 'mdc-elevation',
    props: {}
  };

  var VueMDCElevation = BasePlugin({
    mdcElevation: mdcElevation
  });

  var mdcFAB = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('custom-button', { staticClass: "mdc-fab", class: _vm.classes, style: _vm.styles, attrs: { "href": _vm.href, "link": _vm.link }, on: { "click": _vm.dispatchEvent } }, [_c('span', { staticClass: "mdc-fab__icon" }, [_vm._t("default", [_vm._v(_vm._s(_vm.icon))])], 2)]);
    }, staticRenderFns: [],
    name: 'mdc-fab',
    mixins: [DispatchEventMixin, CustomButtonMixin, RippleMixin],
    props: {
      icon: String,
      mini: Boolean,
      absolute: Boolean,
      fixed: Boolean
    },
    data: function data() {
      return {
        classes: {
          'material-icons': this.icon,
          'mdc-fab--mini': this.mini,
          'mdc-fab--absolute': this.absolute,
          'mdc-fab--fixed': this.fixed
        },
        styles: {}
      };
    },

    watch: {
      icon: function icon() {
        this.$set(this.classes, 'material-icons', this.icon);
      },
      mini: function mini() {
        this.$set(this.classes, 'mdc-fab--mini', this.mini);
      }
    }
  };

  var VueMDCFab = BasePlugin({
    mdcFAB: mdcFAB
  });

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */
  var strings$8 = {
    TILES_SELECTOR: '.mdc-grid-list__tiles',
    TILE_SELECTOR: '.mdc-grid-tile'
  };

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var MDCGridListFoundation = function (_MDCFoundation) {
    inherits(MDCGridListFoundation, _MDCFoundation);
    createClass(MDCGridListFoundation, null, [{
      key: 'strings',
      get: function get$$1() {
        return strings$8;
      }
    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return {
          getOffsetWidth: function getOffsetWidth() {
            return (/* number */0
            );
          },
          getNumberOfTiles: function getNumberOfTiles() {
            return (/* number */0
            );
          },
          getOffsetWidthForTileAtIndex: function getOffsetWidthForTileAtIndex() {
            return (/* index: number */ /* number */0
            );
          },
          setStyleForTilesElement: function setStyleForTilesElement() /* property: string, value: string */{},
          registerResizeHandler: function registerResizeHandler() /* handler: EventListener */{},
          deregisterResizeHandler: function deregisterResizeHandler() /* handler: EventListener */{}
        };
      }
    }]);

    function MDCGridListFoundation(adapter) {
      classCallCheck(this, MDCGridListFoundation);

      var _this = possibleConstructorReturn(this, (MDCGridListFoundation.__proto__ || Object.getPrototypeOf(MDCGridListFoundation)).call(this, _extends(MDCGridListFoundation.defaultAdapter, adapter)));

      _this.resizeHandler_ = function () {
        return _this.alignCenter();
      };
      _this.resizeFrame_ = 0;
      return _this;
    }

    createClass(MDCGridListFoundation, [{
      key: 'init',
      value: function init() {
        this.alignCenter();
        this.adapter_.registerResizeHandler(this.resizeHandler_);
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        this.adapter_.deregisterResizeHandler(this.resizeHandler_);
      }
    }, {
      key: 'alignCenter',
      value: function alignCenter() {
        var _this2 = this;

        if (this.resizeFrame_ !== 0) {
          cancelAnimationFrame(this.resizeFrame_);
        }
        this.resizeFrame_ = requestAnimationFrame(function () {
          _this2.alignCenter_();
          _this2.resizeFrame_ = 0;
        });
      }
    }, {
      key: 'alignCenter_',
      value: function alignCenter_() {
        if (this.adapter_.getNumberOfTiles() == 0) {
          return;
        }
        var gridWidth = this.adapter_.getOffsetWidth();
        var itemWidth = this.adapter_.getOffsetWidthForTileAtIndex(0);
        var tilesWidth = itemWidth * Math.floor(gridWidth / itemWidth);
        this.adapter_.setStyleForTilesElement('width', tilesWidth + 'px');
      }
    }]);
    return MDCGridListFoundation;
  }(MDCFoundation);

  var mdcGridList = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-grid-list" }, [_c('ul', { staticClass: "mdc-grid-list__tiles", class: _vm.classes, style: _vm.styles }, [_vm._t("default")], 2)]);
    }, staticRenderFns: [],
    name: 'mdc-grid-list',
    props: {
      'width': [String, Number],
      'ratio': String,
      'narrow-gutter': Boolean,
      'header-caption': Boolean,
      'icon-align-start': Boolean,
      'icon-align-end': Boolean,
      'with-support-text': Boolean,
      'interactive': Boolean
    },
    provide: function provide() {
      return { mdcGrid: this };
    },

    computed: {
      classes: function classes() {
        var classes = {};

        classes['mdc-grid-list--tile-gutter-1'] = this.narrowGutter;
        classes['mdc-grid-list--header-caption'] = this.headerCaption;
        classes['mdc-grid-list--tile-aspect-' + this.ratio] = this.ratio;
        classes['mdc-grid-list--with-icon-align-start'] = this.iconAlignStart;
        classes['mdc-grid-list--with-icon-align-end'] = this.iconAlignEnd;
        classes['mdc-grid-list--twoline-caption'] = this.withSupportText;
        classes['mdc-grid-list--non-interactive'] = !this.interactive;

        return classes;
      },
      styles: function styles() {
        var defaultWidth = 200;
        return {
          '--mdc-grid-list-tile-width': (this.width || defaultWidth) + 'px'
        };
      }
    },
    mounted: function mounted() {
      var _this = this;

      this.foundation = new MDCGridListFoundation({
        getOffsetWidth: function getOffsetWidth() {
          return _this.$el.offsetWidth;
        },
        getNumberOfTiles: function getNumberOfTiles() {
          return _this.$el.querySelectorAll(MDCGridListFoundation.strings.TILE_SELECTOR).length;
        },
        getOffsetWidthForTileAtIndex: function getOffsetWidthForTileAtIndex(index) {
          return _this.$el.querySelectorAll(MDCGridListFoundation.strings.TILE_SELECTOR)[index].offsetWidth;
        },
        setStyleForTilesElement: function setStyleForTilesElement(property, value) {
          _this.$el.querySelector(MDCGridListFoundation.strings.TILES_SELECTOR).style[property] = value;
        },
        registerResizeHandler: function registerResizeHandler(handler) {
          window.addEventListener('resize', handler);
        },
        deregisterResizeHandler: function deregisterResizeHandler(handler) {
          window.removeEventListener('resize', handler);
        }
      });
      this.foundation.init();
    },
    beforeDestroy: function beforeDestroy() {
      this.foundation.destroy();
    }
  };

  var mdcGridTile = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('li', _vm._g({ staticClass: "mdc-grid-tile", class: [_vm.classes, _vm.itemClasses], style: _vm.styles, attrs: { "tabindex": _vm.isInteractive ? '0' : undefined }, on: { "click": _vm.onClick } }, _vm.isInteractive ? _vm.$listeners : {}), [_vm.cover ? _c('div', { staticClass: "mdc-grid-tile__primary" }, [_c('div', { staticClass: "mdc-grid-tile__primary-content", style: { backgroundImage: 'url(' + _vm.src + ')' } })]) : _c('div', { staticClass: "mdc-grid-tile__primary" }, [_c('img', { staticClass: "mdc-grid-tile__primary-content", attrs: { "src": _vm.src } })]), _vm._v(" "), _vm.title || _vm.supportText ? _c('span', { staticClass: "mdc-grid-tile__secondary" }, [_vm.icon ? _c('i', { staticClass: "mdc-grid-tile__icon material-icons" }, [_vm._v(_vm._s(_vm.icon))]) : _vm._e(), _vm._v(" "), _vm.title ? _c('span', { staticClass: "mdc-grid-tile__title" }, [_vm._v(_vm._s(_vm.title))]) : _vm._e(), _vm._v(" "), _vm.supportText ? _c('span', { staticClass: "mdc-grid-tile__support-text" }, [_vm._v(_vm._s(_vm.supportText))]) : _vm._e()]) : _vm._e()]);
    }, staticRenderFns: [],
    name: 'mdc-grid-tile',
    inject: ['mdcGrid'],
    mixins: [DispatchEventMixin],
    props: {
      'src': String,
      'cover': Boolean,
      'icon': String,
      'title': String,
      'support-text': String,
      'selected': Boolean,
      'activated': Boolean
    },
    data: function data() {
      return {
        classes: {},
        styles: {}
      };
    },

    computed: {
      itemClasses: function itemClasses() {
        return {
          'mdc-grid-tile--selected': this.selected,
          'mdc-grid-tile--activated': this.activated
        };
      },
      isInteractive: function isInteractive() {
        return this.mdcGrid && this.mdcGrid.interactive;
      },
      hasStartDetail: function hasStartDetail() {
        return this.startIcon || this.$slots['start-detail'];
      },
      hasEndDetail: function hasEndDetail() {
        return this.endIcon || this.$slots['end-detail'];
      }
    },
    watch: {
      isInteractive: function isInteractive(value) {
        if (value) {
          this.addRipple();
        } else {
          this.removeRipple();
        }
      }
    },
    methods: {
      onClick: function onClick(evt) {
        this.dispatchEvent(evt);
      },
      addRipple: function addRipple() {
        if (!this.ripple) {
          var ripple = new RippleBase(this);
          ripple.init();
          this.ripple = ripple;
        }
      },
      removeRipple: function removeRipple() {
        if (this.ripple) {
          var ripple = this.ripple;
          this.ripple = null;
          ripple.destroy();
        }
      }
    },
    mounted: function mounted() {
      this.isInteractive && this.addRipple();
    },
    beforeDestroy: function beforeDestroy() {
      this.removeRipple();
    }
  };

  var VueMDCGridList = BasePlugin({
    mdcGridList: mdcGridList,
    mdcGridTile: mdcGridTile
  });

  var mdcIcon = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('span', { staticClass: "mdc-icon mdc-icon--material", class: { 'material-icons': !!_vm.icon } }, [_vm._t("default", [_vm._v(_vm._s(_vm.icon))])], 2);
    }, staticRenderFns: [],
    name: 'mdc-icon',
    props: {
      icon: String
    }
  };

  var VueMDCIcon = BasePlugin({
    mdcIcon: mdcIcon
  });

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /* eslint no-unused-vars: [2, {"args": "none"}] */

  /**
   * Adapter for MDC Icon Toggle. Provides an interface for managing
   * - classes
   * - dom
   * - inner text
   * - event handlers
   * - event dispatch
   *
   * Additionally, provides type information for the adapter to the Closure
   * compiler.
   *
   * Implement this adapter for your framework of choice to delegate updates to
   * the component in your framework of choice. See architecture documentation
   * for more details.
   * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
   *
   * @record
   */

  var MDCIconToggleAdapter = function () {
    function MDCIconToggleAdapter() {
      classCallCheck(this, MDCIconToggleAdapter);
    }

    createClass(MDCIconToggleAdapter, [{
      key: "addClass",

      /** @param {string} className */
      value: function addClass(className) {}

      /** @param {string} className */

    }, {
      key: "removeClass",
      value: function removeClass(className) {}

      /**
       * @param {string} type
       * @param {!EventListener} handler
       */

    }, {
      key: "registerInteractionHandler",
      value: function registerInteractionHandler(type, handler) {}

      /**
       * @param {string} type
       * @param {!EventListener} handler
       */

    }, {
      key: "deregisterInteractionHandler",
      value: function deregisterInteractionHandler(type, handler) {}

      /** @param {string} text */

    }, {
      key: "setText",
      value: function setText(text) {}

      /** @return {number} */

    }, {
      key: "getTabIndex",
      value: function getTabIndex() {}

      /** @param {number} tabIndex */

    }, {
      key: "setTabIndex",
      value: function setTabIndex(tabIndex) {}

      /**
       * @param {string} name
       * @return {string}
       */

    }, {
      key: "getAttr",
      value: function getAttr(name) {}

      /**
       * @param {string} name
       * @param {string} value
       */

    }, {
      key: "setAttr",
      value: function setAttr(name, value) {}

      /** @param {string} name */

    }, {
      key: "rmAttr",
      value: function rmAttr(name) {}

      /** @param {!IconToggleEvent} evtData */

    }, {
      key: "notifyChange",
      value: function notifyChange(evtData) {}
    }]);
    return MDCIconToggleAdapter;
  }();

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @enum {string} */
  var cssClasses$8 = {
    ROOT: 'mdc-icon-toggle',
    DISABLED: 'mdc-icon-toggle--disabled'
  };

  /** @enum {string} */
  var strings$9 = {
    DATA_TOGGLE_ON: 'data-toggle-on',
    DATA_TOGGLE_OFF: 'data-toggle-off',
    ARIA_PRESSED: 'aria-pressed',
    ARIA_DISABLED: 'aria-disabled',
    ARIA_LABEL: 'aria-label',
    CHANGE_EVENT: 'MDCIconToggle:change'
  };

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends {MDCFoundation<!MDCIconToggleAdapter>}
   */

  var MDCIconToggleFoundation = function (_MDCFoundation) {
    inherits(MDCIconToggleFoundation, _MDCFoundation);
    createClass(MDCIconToggleFoundation, null, [{
      key: 'cssClasses',
      get: function get$$1() {
        return cssClasses$8;
      }
    }, {
      key: 'strings',
      get: function get$$1() {
        return strings$9;
      }
    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return {
          addClass: function addClass() /* className: string */{},
          removeClass: function removeClass() /* className: string */{},
          registerInteractionHandler: function registerInteractionHandler() /* type: string, handler: EventListener */{},
          deregisterInteractionHandler: function deregisterInteractionHandler() /* type: string, handler: EventListener */{},
          setText: function setText() /* text: string */{},
          getTabIndex: function getTabIndex() {
            return (/* number */0
            );
          },
          setTabIndex: function setTabIndex() /* tabIndex: number */{},
          getAttr: function getAttr() {
            return (/* name: string */ /* string */''
            );
          },
          setAttr: function setAttr() /* name: string, value: string */{},
          rmAttr: function rmAttr() /* name: string */{},
          notifyChange: function notifyChange() /* evtData: IconToggleEvent */{}
        };
      }
    }]);

    function MDCIconToggleFoundation(adapter) {
      classCallCheck(this, MDCIconToggleFoundation);

      /** @private {boolean} */
      var _this = possibleConstructorReturn(this, (MDCIconToggleFoundation.__proto__ || Object.getPrototypeOf(MDCIconToggleFoundation)).call(this, _extends(MDCIconToggleFoundation.defaultAdapter, adapter)));

      _this.on_ = false;

      /** @private {boolean} */
      _this.disabled_ = false;

      /** @private {number} */
      _this.savedTabIndex_ = -1;

      /** @private {?IconToggleState} */
      _this.toggleOnData_ = null;

      /** @private {?IconToggleState} */
      _this.toggleOffData_ = null;

      _this.clickHandler_ = /** @private {!EventListener} */function () {
        return _this.toggleFromEvt_();
      };

      /** @private {boolean} */
      _this.isHandlingKeydown_ = false;

      _this.keydownHandler_ = /** @private {!EventListener} */function ( /** @type {!KeyboardKey} */evt) {
        if (isSpace(evt)) {
          _this.isHandlingKeydown_ = true;
          return evt.preventDefault();
        }
      };

      _this.keyupHandler_ = /** @private {!EventListener} */function ( /** @type {!KeyboardKey} */evt) {
        if (isSpace(evt)) {
          _this.isHandlingKeydown_ = false;
          _this.toggleFromEvt_();
        }
      };
      return _this;
    }

    createClass(MDCIconToggleFoundation, [{
      key: 'init',
      value: function init() {
        this.refreshToggleData();
        this.savedTabIndex_ = this.adapter_.getTabIndex();
        this.adapter_.registerInteractionHandler('click', this.clickHandler_);
        this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);
        this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);
      }
    }, {
      key: 'refreshToggleData',
      value: function refreshToggleData() {
        var _MDCIconToggleFoundat = MDCIconToggleFoundation.strings,
            DATA_TOGGLE_ON = _MDCIconToggleFoundat.DATA_TOGGLE_ON,
            DATA_TOGGLE_OFF = _MDCIconToggleFoundat.DATA_TOGGLE_OFF;

        this.toggleOnData_ = this.parseJsonDataAttr_(DATA_TOGGLE_ON);
        this.toggleOffData_ = this.parseJsonDataAttr_(DATA_TOGGLE_OFF);
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);
        this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);
        this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);
      }

      /** @private */

    }, {
      key: 'toggleFromEvt_',
      value: function toggleFromEvt_() {
        this.toggle();
        var isOn = this.on_;

        this.adapter_.notifyChange( /** @type {!IconToggleEvent} */{ isOn: isOn });
      }

      /** @return {boolean} */

    }, {
      key: 'isOn',
      value: function isOn() {
        return this.on_;
      }

      /** @param {boolean=} isOn */

    }, {
      key: 'toggle',
      value: function toggle() {
        var isOn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !this.on_;

        this.on_ = isOn;

        var _MDCIconToggleFoundat2 = MDCIconToggleFoundation.strings,
            ARIA_LABEL = _MDCIconToggleFoundat2.ARIA_LABEL,
            ARIA_PRESSED = _MDCIconToggleFoundat2.ARIA_PRESSED;


        if (this.on_) {
          this.adapter_.setAttr(ARIA_PRESSED, 'true');
        } else {
          this.adapter_.setAttr(ARIA_PRESSED, 'false');
        }

        var _ref = this.on_ ? this.toggleOffData_ : this.toggleOnData_,
            classToRemove = _ref.cssClass;

        if (classToRemove) {
          this.adapter_.removeClass(classToRemove);
        }

        var _ref2 = this.on_ ? this.toggleOnData_ : this.toggleOffData_,
            content = _ref2.content,
            label = _ref2.label,
            cssClass = _ref2.cssClass;

        if (cssClass) {
          this.adapter_.addClass(cssClass);
        }
        if (content) {
          this.adapter_.setText(content);
        }
        if (label) {
          this.adapter_.setAttr(ARIA_LABEL, label);
        }
      }

      /**
       * @param {string} dataAttr
       * @return {!IconToggleState}
       */

    }, {
      key: 'parseJsonDataAttr_',
      value: function parseJsonDataAttr_(dataAttr) {
        var val = this.adapter_.getAttr(dataAttr);
        if (!val) {
          return {};
        }
        return (/** @type {!IconToggleState} */JSON.parse(val)
        );
      }

      /** @return {boolean} */

    }, {
      key: 'isDisabled',
      value: function isDisabled() {
        return this.disabled_;
      }

      /** @param {boolean} isDisabled */

    }, {
      key: 'setDisabled',
      value: function setDisabled(isDisabled) {
        this.disabled_ = isDisabled;

        var DISABLED = MDCIconToggleFoundation.cssClasses.DISABLED;
        var ARIA_DISABLED = MDCIconToggleFoundation.strings.ARIA_DISABLED;


        if (this.disabled_) {
          this.savedTabIndex_ = this.adapter_.getTabIndex();
          this.adapter_.setTabIndex(-1);
          this.adapter_.setAttr(ARIA_DISABLED, 'true');
          this.adapter_.addClass(DISABLED);
        } else {
          this.adapter_.setTabIndex(this.savedTabIndex_);
          this.adapter_.rmAttr(ARIA_DISABLED);
          this.adapter_.removeClass(DISABLED);
        }
      }

      /** @return {boolean} */

    }, {
      key: 'isKeyboardActivated',
      value: function isKeyboardActivated() {
        return this.isHandlingKeydown_;
      }
    }]);
    return MDCIconToggleFoundation;
  }(MDCFoundation);

  /**
   * @param {!KeyboardKey} keyboardKey
   * @return {boolean}
   */
  function isSpace(keyboardKey) {
    return keyboardKey.key === 'Space' || keyboardKey.keyCode === 32;
  }

  var mdcIConToggle = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('span', { staticClass: "mdc-icon-toggle", class: _vm.classes, style: _vm.styles, attrs: { "role": "button", "aria-pressed": "false", "tabindex": _vm.tabIndex, "data-toggle-on": _vm.toggleOnData, "data-toggle-off": _vm.toggleOffData } }, [_c('i', { class: _vm.iconClasses, attrs: { "aria-hidden": "true" } }, [_vm._v(_vm._s(_vm.text))])]);
    }, staticRenderFns: [],
    name: 'mdc-icon-toggle',
    props: {
      toggleOn: [String, Object],
      toggleOff: [String, Object],
      value: Boolean,
      disabled: Boolean,
      accent: Boolean
    },
    data: function data() {
      return {
        classes: {
          'mdc-icon-toggle--accent': this.accent
        },
        styles: {},
        iconClasses: {},
        tabIndex: 0,
        text: ''
      };
    },

    watch: {
      value: function value(_value) {
        this.foundation && this.foundation.toggle(_value);
      },
      disabled: function disabled(_disabled) {
        this.foundation && this.foundation.setDisabled(_disabled);
      },
      toggleOnData: function toggleOnData() {
        this.foundation && this.foundation.refreshToggleData();
      },
      toggleOffData: function toggleOffData() {
        this.foundation && this.foundation.refreshToggleData();
      },
      accent: function accent(value) {
        this.$set(this.classes, 'mdc-icon-toggle--secondary', value);
      }
    },
    computed: {
      toggleOnData: function toggleOnData() {
        var toggle = this.toggleOn;
        return toggle && JSON.stringify(typeof toggle === 'string' ? {
          content: toggle,
          cssClass: 'material-icons'
        } : {
          content: toggle.icon || toggle.content,
          label: toggle.label,
          cssClass: toggle.icon ? 'material-icons' : toggle.cssClass
        });
      },
      toggleOffData: function toggleOffData() {
        var toggle = this.toggleOff;
        return toggle && JSON.stringify(typeof toggle === 'string' ? {
          content: toggle,
          cssClass: 'material-icons'
        } : {
          content: toggle.icon || toggle.content,
          label: toggle.label,
          cssClass: toggle.icon ? 'material-icons' : toggle.cssClass
        });
      }
    },
    mounted: function mounted() {
      var _this = this;

      this.foundation = new MDCIconToggleFoundation({
        addClass: function addClass(className) {
          return _this.$set(_this.iconClasses, className, true);
        },
        removeClass: function removeClass(className) {
          return _this.$delete(_this.iconClasses, className);
        },
        registerInteractionHandler: function registerInteractionHandler(evt, handler) {
          return _this.$el.addEventListener(evt, handler);
        },
        deregisterInteractionHandler: function deregisterInteractionHandler(evt, handler) {
          return _this.$el.removeEventListener(evt, handler);
        },
        setText: function setText(text) {
          _this.text = text;
        },
        getTabIndex: function getTabIndex() {
          return _this.tabIndex;
        },
        setTabIndex: function setTabIndex(tabIndex) {
          _this.tabIndex = tabIndex;
        },
        getAttr: function getAttr(name, value) {
          return _this.$el.getAttribute(name, value);
        },
        setAttr: function setAttr(name, value) {
          _this.$el.setAttribute(name, value);
        },
        rmAttr: function rmAttr(name) {
          _this.$el.removeAttribute(name);
        },
        notifyChange: function notifyChange(evtData) {
          _this.$emit('input', evtData.isOn);
        }
      });
      this.foundation.init();
      this.foundation.toggle(this.value);
      this.foundation.setDisabled(this.disabled);

      this.ripple = new RippleBase(this, {
        isUnbounded: function isUnbounded() {
          return true;
        },
        isSurfaceActive: function isSurfaceActive() {
          return _this.foundation.isKeyboardActivated();
        }
      });
      this.ripple.init();
    },
    beforeDestroy: function beforeDestroy() {
      this.foundation.destroy();
      this.ripple.destroy();
    }
  };

  var VueMDCIconToggle = BasePlugin({
    mdcIConToggle: mdcIConToggle
  });

  var mdcLayoutApp = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-layout-app" }, [_c('div', { staticClass: "mdc-layout-app--toolbar-wrapper" }, [_vm._t("toolbar")], 2), _vm._v(" "), _c('div', { staticClass: "mdc-layout-app--main-container" }, [_c('div', { staticClass: "mdc-layout-app--drawer-wrapper" }, [_vm._t("drawer")], 2), _vm._v(" "), _c('div', { staticClass: "mdc-layout-app--content-wrapper" }, [_vm._t("default")], 2)])]);
    }, staticRenderFns: [],
    name: 'mdc-layout-app'
  };

  var VueMDCLayoutApp = BasePlugin({
    mdcLayoutApp: mdcLayoutApp
  });

  var mdcLayoutGrid = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-layout-grid", class: _vm.classes }, [_c('div', { staticClass: "mdc-layout-grid__inner" }, [_vm._t("default")], 2)]);
    }, staticRenderFns: [],
    name: 'mdc-layout-grid',
    props: {
      'fixed-column-width': Boolean
    },
    data: function data() {
      return {
        classes: {
          'mdc-layout-grid--fixed-column-width': this.fixedColumnWidth
        }
      };
    }
  };

  var spanOptions = {
    type: [String, Number],
    default: null,
    validator: function validator(value) {
      var num = Number(value);
      return isFinite(num) && num <= 12 && num > 0;
    }
  };

  var mdcLayoutCell = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-layout-cell mdc-layout-grid__cell", class: _vm.classes }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-layout-cell',
    props: {
      span: spanOptions,
      order: spanOptions,
      phone: spanOptions,
      tablet: spanOptions,
      desktop: spanOptions,
      align: {
        type: String,
        validator: function validator(value) {
          return ['top', 'bottom', 'middle'].indexOf(value) !== -1;
        }
      }
    },
    computed: {
      classes: function classes() {
        var classes = [];

        if (this.span) {
          classes.push("mdc-layout-grid__cell--span-" + this.span);
        }

        if (this.order) {
          classes.push("mdc-layout-grid__cell--order-" + this.order);
        }

        if (this.phone) {
          classes.push("mdc-layout-grid__cell--span-" + this.phone + "-phone");
        }

        if (this.tablet) {
          classes.push("mdc-layout-grid__cell--span-" + this.tablet + "-tablet");
        }

        if (this.desktop) {
          classes.push("mdc-layout-grid__cell--span-" + this.desktop + "-desktop");
        }

        if (this.align) {
          classes.push("mdc-layout-grid__cell--align-" + this.align);
        }

        return classes;
      }
    }
  };

  var mdcLayoutInnerGrid = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-layout-inner-grid mdc-layout-grid__inner" }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-layout-inner-grid'
  };

  var VueMDCLayoutGrid = BasePlugin({
    mdcLayoutGrid: mdcLayoutGrid,
    mdcLayoutCell: mdcLayoutCell,
    mdcLayoutInnerGrid: mdcLayoutInnerGrid
  });

  /**
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var cssClasses$9 = {
    CLOSED_CLASS: 'mdc-linear-progress--closed',
    INDETERMINATE_CLASS: 'mdc-linear-progress--indeterminate',
    REVERSED_CLASS: 'mdc-linear-progress--reversed'
  };

  var strings$10 = {
    PRIMARY_BAR_SELECTOR: '.mdc-linear-progress__primary-bar',
    BUFFER_SELECTOR: '.mdc-linear-progress__buffer'
  };

  /**
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var MDCLinearProgressFoundation = function (_MDCFoundation) {
    inherits(MDCLinearProgressFoundation, _MDCFoundation);
    createClass(MDCLinearProgressFoundation, null, [{
      key: 'cssClasses',
      get: function get$$1() {
        return cssClasses$9;
      }
    }, {
      key: 'strings',
      get: function get$$1() {
        return strings$10;
      }
    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return {
          addClass: function addClass() /* className: string */{},
          getPrimaryBar: function getPrimaryBar() /* el: Element */{},
          getBuffer: function getBuffer() /* el: Element */{},
          hasClass: function hasClass() {
            return (/* className: string */false
            );
          },
          removeClass: function removeClass() /* className: string */{},
          setStyle: function setStyle() /* el: Element, styleProperty: string, value: string */{}
        };
      }
    }]);

    function MDCLinearProgressFoundation(adapter) {
      classCallCheck(this, MDCLinearProgressFoundation);
      return possibleConstructorReturn(this, (MDCLinearProgressFoundation.__proto__ || Object.getPrototypeOf(MDCLinearProgressFoundation)).call(this, _extends(MDCLinearProgressFoundation.defaultAdapter, adapter)));
    }

    createClass(MDCLinearProgressFoundation, [{
      key: 'init',
      value: function init() {
        this.determinate_ = !this.adapter_.hasClass(cssClasses$9.INDETERMINATE_CLASS);
        this.reverse_ = this.adapter_.hasClass(cssClasses$9.REVERSED_CLASS);
        this.progress_ = 0;
      }
    }, {
      key: 'setDeterminate',
      value: function setDeterminate(isDeterminate) {
        this.determinate_ = isDeterminate;
        if (this.determinate_) {
          this.adapter_.removeClass(cssClasses$9.INDETERMINATE_CLASS);
          this.setScale_(this.adapter_.getPrimaryBar(), this.progress_);
        } else {
          this.adapter_.addClass(cssClasses$9.INDETERMINATE_CLASS);
          this.setScale_(this.adapter_.getPrimaryBar(), 1);
          this.setScale_(this.adapter_.getBuffer(), 1);
        }
      }
    }, {
      key: 'setProgress',
      value: function setProgress(value) {
        this.progress_ = value;
        if (this.determinate_) {
          this.setScale_(this.adapter_.getPrimaryBar(), value);
        }
      }
    }, {
      key: 'setBuffer',
      value: function setBuffer(value) {
        if (this.determinate_) {
          this.setScale_(this.adapter_.getBuffer(), value);
        }
      }
    }, {
      key: 'setReverse',
      value: function setReverse(isReversed) {
        this.reverse_ = isReversed;
        if (this.reverse_) {
          this.adapter_.addClass(cssClasses$9.REVERSED_CLASS);
        } else {
          this.adapter_.removeClass(cssClasses$9.REVERSED_CLASS);
        }
      }
    }, {
      key: 'open',
      value: function open() {
        this.adapter_.removeClass(cssClasses$9.CLOSED_CLASS);
      }
    }, {
      key: 'close',
      value: function close() {
        this.adapter_.addClass(cssClasses$9.CLOSED_CLASS);
      }
    }, {
      key: 'setScale_',
      value: function setScale_(el, scaleValue) {
        var _this2 = this;

        var value = 'scaleX(' + scaleValue + ')';
        transformStyleProperties.forEach(function (transformStyleProperty) {
          _this2.adapter_.setStyle(el, transformStyleProperty, value);
        });
      }
    }]);
    return MDCLinearProgressFoundation;
  }(MDCFoundation);

  var ProgressPropType = {
    type: [Number, String],
    validator: function validator(value) {
      return Number(value) >= 0 && Number(value) <= 1;
    }
  };

  var mdcLinearProgress = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-linear-progress", class: _vm.classes, style: _vm.styles, attrs: { "role": "progressbar" } }, [_c('div', { staticClass: "mdc-linear-progress__buffering-dots" }), _vm._v(" "), _c('div', { ref: "buffer", staticClass: "mdc-linear-progress__buffer" }), _vm._v(" "), _c('div', { ref: "primary", staticClass: "mdc-linear-progress__bar mdc-linear-progress__primary-bar" }, [_c('span', { staticClass: "mdc-linear-progress__bar-inner" })]), _vm._v(" "), _vm._m(0)]);
    }, staticRenderFns: [function () {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-linear-progress__bar mdc-linear-progress__secondary-bar" }, [_c('span', { staticClass: "mdc-linear-progress__bar-inner" })]);
    }],
    name: 'mdc-linear-progress',
    props: {
      'open': { type: Boolean, default: true },
      'indeterminate': Boolean,
      'reverse': Boolean,
      'accent': Boolean,
      'progress': ProgressPropType,
      'buffer': ProgressPropType
    },
    data: function data() {
      return {
        classes: { 'mdc-linear-progress--accent': this.accent },
        styles: {}
      };
    },

    watch: {
      open: function open() {
        if (this.open) {
          this.foundation.open();
        } else {
          this.foundation.close();
        }
      },
      progress: function progress() {
        this.foundation.setProgress(Number(this.progress));
      },
      buffer: function buffer() {
        this.foundation.setBuffer(Number(this.buffer));
      },
      indeterminate: function indeterminate() {
        this.foundation.setDeterminate(!this.indeterminate);
      },
      reverse: function reverse() {
        this.foundation.setReverse(this.reverse);
      }
    },
    mounted: function mounted() {
      var _this = this;

      this.foundation = new MDCLinearProgressFoundation({
        addClass: function addClass(className) {
          _this.$set(_this.classes, className, true);
        },
        getPrimaryBar: function getPrimaryBar() /* el: Element */{
          return _this.$refs.primary;
        },
        getBuffer: function getBuffer() /* el: Element */{
          return _this.$refs.buffer;
        },
        hasClass: function hasClass(className) {
          _this.$el.classList.contains(className);
        },
        removeClass: function removeClass(className) {
          _this.$delete(_this.classes, className);
        },
        setStyle: function setStyle(el, styleProperty, value) {
          el.style[styleProperty] = value;
        }
      });
      this.foundation.init();

      this.foundation.setReverse(this.reverse);
      this.foundation.setProgress(Number(this.progress));
      this.foundation.setBuffer(Number(this.buffer));
      this.foundation.setDeterminate(!this.indeterminate);
      if (this.open) {
        this.foundation.open();
      } else {
        this.foundation.close();
      }
    },
    beforeDestroy: function beforeDestroy() {
      this.foundation.destroy();
    }
  };

  var VueMDCLinearProgress = BasePlugin({
    mdcLinearProgress: mdcLinearProgress
  });

  var mdcList = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ul', { staticClass: "mdc-list", class: _vm.classes }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-list',
    props: {
      dense: Boolean,
      avatarList: Boolean,
      twoLine: Boolean,
      bordered: Boolean,
      interactive: Boolean
    },
    provide: function provide() {
      return { mdcList: this };
    },

    computed: {
      classes: function classes() {
        return {
          'mdc-list--dense': this.dense,
          'mdc-list--avatar-list': this.avatarList,
          'mdc-list--two-line': this.twoLine,
          'mdc-list--bordered': this.bordered,
          'mdc-list--non-interactive': !this.interactive
        };
      }
    }
  };

  var mdcListItem = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('li', _vm._g({ staticClass: "mdc-list-item", class: [_vm.classes, _vm.itemClasses], style: _vm.styles, attrs: { "tabindex": _vm.isInteractive ? '0' : undefined } }, _vm.isInteractive ? _vm.$listeners : {}), [_vm.hasStartDetail ? _c('span', { staticClass: "mdc-list-item__graphic" }, [_vm._t("start-detail")], 2) : _vm._e(), _vm._v(" "), _vm.hasSecondary ? _c('span', { staticClass: "mdc-list-item__text" }, [_vm._t("default"), _vm._v(" "), _c('span', { staticClass: "mdc-list-item__secondary-text" }, [_vm._t("secondary")], 2)], 2) : _vm._t("default"), _vm._v(" "), _vm.hasEndDetail ? _c('span', { staticClass: "mdc-list-item__meta" }, [_vm._t("end-detail")], 2) : _vm._e()], 2);
    }, staticRenderFns: [],
    name: 'mdc-list-item',
    inject: ['mdcList'],
    props: {
      selected: Boolean,
      activated: Boolean
    },
    data: function data() {
      return {
        classes: {},
        styles: {}
      };
    },

    computed: {
      itemClasses: function itemClasses() {
        return {
          'mdc-list-item--selected': this.selected,
          'mdc-list-item--activated': this.activated
        };
      },
      isInteractive: function isInteractive() {
        return this.mdcList && this.mdcList.interactive;
      },
      hasSecondary: function hasSecondary() {
        return this.$slots['secondary'] && this.mdcList && this.mdcList.twoLine;
      },
      hasEndDetail: function hasEndDetail() {
        return !!this.$slots['end-detail'];
      },
      hasStartDetail: function hasStartDetail() {
        return !!this.$slots['start-detail'];
      }
    },
    watch: {
      isInteractive: function isInteractive(value) {
        if (value) {
          this.addRipple();
        } else {
          this.removeRipple();
        }
      }
    },
    mounted: function mounted() {
      this.isInteractive && this.addRipple();
    },
    beforeDestroy: function beforeDestroy() {
      this.removeRipple();
    },

    methods: {
      addRipple: function addRipple() {
        if (!this.ripple) {
          var ripple = new RippleBase(this);
          ripple.init();
          this.ripple = ripple;
        }
      },
      removeRipple: function removeRipple() {
        if (this.ripple) {
          var ripple = this.ripple;
          this.ripple = null;
          ripple.destroy();
        }
      }
    }

  };

  var mdcListDivider = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('li', { staticClass: "mdc-list-divider", class: _vm.classes, attrs: { "role": "separator" } });
    }, staticRenderFns: [],
    name: 'mdc-list-divider',
    props: {
      inset: Boolean,
      padded: Boolean
    },
    computed: {
      classes: function classes() {
        return {
          'mdc-list-divider--inset': this.inset,
          'mdc-list-divider--padded': this.padded
        };
      }
    }
  };

  var mdcListGroup = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-list-group" }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-list-group'
  };

  var mdcListGroupHeader = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('h3', { staticClass: "mdc-list-group-header mdc-list-group__subheader" }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-list-group-header'
  };

  var mdcListGroupDivider = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('hr', { staticClass: "mdc-list-group-divider mdc-list-divider" });
    }, staticRenderFns: [],
    name: 'mdc-list-group-divider'
  };

  var VueMDCList = BasePlugin({
    mdcList: mdcList,
    mdcListItem: mdcListItem,
    mdcListDivider: mdcListDivider,
    mdcListGroup: mdcListGroup,
    mdcListGroupHeader: mdcListGroupHeader,
    mdcListGroupDivider: mdcListGroupDivider
  });

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /* eslint no-unused-vars: [2, {"args": "none"}] */

  /**
   * Adapter for MDC Menu. Provides an interface for managing
   * - classes
   * - dom
   * - focus
   * - position
   * - dimensions
   * - event handlers
   *
   * Additionally, provides type information for the adapter to the Closure
   * compiler.
   *
   * Implement this adapter for your framework of choice to delegate updates to
   * the component in your framework of choice. See architecture documentation
   * for more details.
   * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
   *
   * @record
   */
  var MDCMenuAdapter = function () {
    function MDCMenuAdapter() {
      classCallCheck(this, MDCMenuAdapter);
    }

    createClass(MDCMenuAdapter, [{
      key: "addClass",

      /** @param {string} className */
      value: function addClass(className) {}

      /** @param {string} className */

    }, {
      key: "removeClass",
      value: function removeClass(className) {}

      /**
       * @param {string} className
       * @return {boolean}
       */

    }, {
      key: "hasClass",
      value: function hasClass(className) {}

      /** @return {boolean} */

    }, {
      key: "hasNecessaryDom",
      value: function hasNecessaryDom() {}

      /**
       * @param {EventTarget} target
       * @param {string} attributeName
       * @return {string}
       */

    }, {
      key: "getAttributeForEventTarget",
      value: function getAttributeForEventTarget(target, attributeName) {}

      /** @return {{ width: number, height: number }} */

    }, {
      key: "getInnerDimensions",
      value: function getInnerDimensions() {}

      /** @return {boolean} */

    }, {
      key: "hasAnchor",
      value: function hasAnchor() {}

      /** @return {{width: number, height: number, top: number, right: number, bottom: number, left: number}} */

    }, {
      key: "getAnchorDimensions",
      value: function getAnchorDimensions() {}

      /** @return {{ width: number, height: number }} */

    }, {
      key: "getWindowDimensions",
      value: function getWindowDimensions() {}

      /** @return {number} */

    }, {
      key: "getNumberOfItems",
      value: function getNumberOfItems() {}

      /**
       * @param {string} type
       * @param {function(!Event)} handler
       */

    }, {
      key: "registerInteractionHandler",
      value: function registerInteractionHandler(type, handler) {}

      /**
       * @param {string} type
       * @param {function(!Event)} handler
       */

    }, {
      key: "deregisterInteractionHandler",
      value: function deregisterInteractionHandler(type, handler) {}

      /** @param {function(!Event)} handler */

    }, {
      key: "registerBodyClickHandler",
      value: function registerBodyClickHandler(handler) {}

      /** @param {function(!Event)} handler */

    }, {
      key: "deregisterBodyClickHandler",
      value: function deregisterBodyClickHandler(handler) {}

      /**
       * @param {EventTarget} target
       * @return {number}
       */

    }, {
      key: "getIndexForEventTarget",
      value: function getIndexForEventTarget(target) {}

      /** @param {{index: number}} evtData */

    }, {
      key: "notifySelected",
      value: function notifySelected(evtData) {}
    }, {
      key: "notifyCancel",
      value: function notifyCancel() {}
    }, {
      key: "saveFocus",
      value: function saveFocus() {}
    }, {
      key: "restoreFocus",
      value: function restoreFocus() {}

      /** @return {boolean} */

    }, {
      key: "isFocused",
      value: function isFocused() {}
    }, {
      key: "focus",
      value: function focus() {}

      /** @return {number} */

    }, {
      key: "getFocusedItemIndex",
      value: function getFocusedItemIndex() /* number */{}

      /** @param {number} index */

    }, {
      key: "focusItemAtIndex",
      value: function focusItemAtIndex(index) {}

      /** @return {boolean} */

    }, {
      key: "isRtl",
      value: function isRtl() {}

      /** @param {string} origin */

    }, {
      key: "setTransformOrigin",
      value: function setTransformOrigin(origin) {}

      /** @param {{
      *   top: (string|undefined),
      *   right: (string|undefined),
      *   bottom: (string|undefined),
      *   left: (string|undefined)
      * }} position */

    }, {
      key: "setPosition",
      value: function setPosition(position) {}

      /** @param {string} height */

    }, {
      key: "setMaxHeight",
      value: function setMaxHeight(height) {}

      /**
       * @param {number} index
       * @param {string} attr
       * @param {string} value
       */

    }, {
      key: "setAttrForOptionAtIndex",
      value: function setAttrForOptionAtIndex(index, attr, value) {}

      /**
       * @param {number} index
       * @param {string} attr
       */

    }, {
      key: "rmAttrForOptionAtIndex",
      value: function rmAttrForOptionAtIndex(index, attr) {}

      /**
       * @param {number} index
       * @param {string} className
       */

    }, {
      key: "addClassForOptionAtIndex",
      value: function addClassForOptionAtIndex(index, className) {}

      /**
       * @param {number} index
       * @param {string} className
       */

    }, {
      key: "rmClassForOptionAtIndex",
      value: function rmClassForOptionAtIndex(index, className) {}
    }]);
    return MDCMenuAdapter;
  }();

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @enum {string} */
  var cssClasses$10 = {
    ROOT: 'mdc-menu',
    OPEN: 'mdc-menu--open',
    ANIMATING_OPEN: 'mdc-menu--animating-open',
    ANIMATING_CLOSED: 'mdc-menu--animating-closed',
    SELECTED_LIST_ITEM: 'mdc-list-item--selected'
  };

  /** @enum {string} */
  var strings$11 = {
    ITEMS_SELECTOR: '.mdc-menu__items',
    SELECTED_EVENT: 'MDCMenu:selected',
    CANCEL_EVENT: 'MDCMenu:cancel',
    ARIA_DISABLED_ATTR: 'aria-disabled'
  };

  /** @enum {number} */
  var numbers$2 = {
    // Amount of time to wait before triggering a selected event on the menu. Note that this time
    // will most likely be bumped up once interactive lists are supported to allow for the ripple to
    // animate before closing the menu
    SELECTED_TRIGGER_DELAY: 50,
    // Total duration of menu open animation.
    TRANSITION_OPEN_DURATION: 120,
    // Total duration of menu close animation.
    TRANSITION_CLOSE_DURATION: 75,
    // Margin left to the edge of the viewport when menu is at maximum possible height.
    MARGIN_TO_EDGE: 32,
    // Ratio of anchor width to menu width for switching from corner positioning to center positioning.
    ANCHOR_TO_MENU_WIDTH_RATIO: 0.67,
    // Ratio of vertical offset to menu height for switching from corner to mid-way origin positioning.
    OFFSET_TO_MENU_HEIGHT_RATIO: 0.1
  };

  /**
   * Enum for bits in the {@see Corner) bitmap.
   * @enum {number}
   */
  var CornerBit = {
    BOTTOM: 1,
    CENTER: 2,
    RIGHT: 4,
    FLIP_RTL: 8
  };

  /**
   * Enum for representing an element corner for positioning the menu.
   *
   * The START constants map to LEFT if element directionality is left
   * to right and RIGHT if the directionality is right to left.
   * Likewise END maps to RIGHT or LEFT depending on the directionality.
   *
   * @enum {number}
   */
  var Corner = {
    TOP_LEFT: 0,
    TOP_RIGHT: CornerBit.RIGHT,
    BOTTOM_LEFT: CornerBit.BOTTOM,
    BOTTOM_RIGHT: CornerBit.BOTTOM | CornerBit.RIGHT,
    TOP_START: CornerBit.FLIP_RTL,
    TOP_END: CornerBit.FLIP_RTL | CornerBit.RIGHT,
    BOTTOM_START: CornerBit.BOTTOM | CornerBit.FLIP_RTL,
    BOTTOM_END: CornerBit.BOTTOM | CornerBit.RIGHT | CornerBit.FLIP_RTL
  };

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends {MDCFoundation<!MDCMenuAdapter>}
   */

  var MDCMenuFoundation = function (_MDCFoundation) {
    inherits(MDCMenuFoundation, _MDCFoundation);
    createClass(MDCMenuFoundation, null, [{
      key: 'cssClasses',

      /** @return enum{cssClasses} */
      get: function get$$1() {
        return cssClasses$10;
      }

      /** @return enum{strings} */

    }, {
      key: 'strings',
      get: function get$$1() {
        return strings$11;
      }

      /** @return enum{numbers} */

    }, {
      key: 'numbers',
      get: function get$$1() {
        return numbers$2;
      }

      /** @return enum{number} */

    }, {
      key: 'Corner',
      get: function get$$1() {
        return Corner;
      }

      /**
       * {@see MDCMenuAdapter} for typing information on parameters and return
       * types.
       * @return {!MDCMenuAdapter}
       */

    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return (/** @type {!MDCMenuAdapter} */{
            addClass: function addClass() {},
            removeClass: function removeClass() {},
            hasClass: function hasClass() {
              return false;
            },
            hasNecessaryDom: function hasNecessaryDom() {
              return false;
            },
            getAttributeForEventTarget: function getAttributeForEventTarget() {},
            getInnerDimensions: function getInnerDimensions() {
              return {};
            },
            hasAnchor: function hasAnchor() {
              return false;
            },
            getAnchorDimensions: function getAnchorDimensions() {
              return {};
            },
            getWindowDimensions: function getWindowDimensions() {
              return {};
            },
            getNumberOfItems: function getNumberOfItems() {
              return 0;
            },
            registerInteractionHandler: function registerInteractionHandler() {},
            deregisterInteractionHandler: function deregisterInteractionHandler() {},
            registerBodyClickHandler: function registerBodyClickHandler() {},
            deregisterBodyClickHandler: function deregisterBodyClickHandler() {},
            getIndexForEventTarget: function getIndexForEventTarget() {
              return 0;
            },
            notifySelected: function notifySelected() {},
            notifyCancel: function notifyCancel() {},
            saveFocus: function saveFocus() {},
            restoreFocus: function restoreFocus() {},
            isFocused: function isFocused() {
              return false;
            },
            focus: function focus() {},
            getFocusedItemIndex: function getFocusedItemIndex() {
              return -1;
            },
            focusItemAtIndex: function focusItemAtIndex() {},
            isRtl: function isRtl() {
              return false;
            },
            setTransformOrigin: function setTransformOrigin() {},
            setPosition: function setPosition() {},
            setMaxHeight: function setMaxHeight() {},
            setAttrForOptionAtIndex: function setAttrForOptionAtIndex() {},
            rmAttrForOptionAtIndex: function rmAttrForOptionAtIndex() {},
            addClassForOptionAtIndex: function addClassForOptionAtIndex() {},
            rmClassForOptionAtIndex: function rmClassForOptionAtIndex() {}
          }
        );
      }

      /** @param {!MDCMenuAdapter} adapter */

    }]);

    function MDCMenuFoundation(adapter) {
      classCallCheck(this, MDCMenuFoundation);

      /** @private {function(!Event)} */
      var _this = possibleConstructorReturn(this, (MDCMenuFoundation.__proto__ || Object.getPrototypeOf(MDCMenuFoundation)).call(this, _extends(MDCMenuFoundation.defaultAdapter, adapter)));

      _this.clickHandler_ = function (evt) {
        return _this.handlePossibleSelected_(evt);
      };
      /** @private {function(!Event)} */
      _this.keydownHandler_ = function (evt) {
        return _this.handleKeyboardDown_(evt);
      };
      /** @private {function(!Event)} */
      _this.keyupHandler_ = function (evt) {
        return _this.handleKeyboardUp_(evt);
      };
      /** @private {function(!Event)} */
      _this.documentClickHandler_ = function (evt) {
        return _this.handleDocumentClick_(evt);
      };
      /** @private {boolean} */
      _this.isOpen_ = false;
      /** @private {number} */
      _this.openAnimationEndTimerId_ = 0;
      /** @private {number} */
      _this.closeAnimationEndTimerId_ = 0;
      /** @private {number} */
      _this.selectedTriggerTimerId_ = 0;
      /** @private {number} */
      _this.animationRequestId_ = 0;
      /** @private {!{ width: number, height: number }} */
      _this.dimensions_;
      /** @private {number} */
      _this.itemHeight_;
      /** @private {Corner} */
      _this.anchorCorner_ = Corner.TOP_START;
      /** @private {AnchorMargin} */
      _this.anchorMargin_ = { top: 0, right: 0, bottom: 0, left: 0 };
      /** @private {?AutoLayoutMeasurements} */
      _this.measures_ = null;
      /** @private {number} */
      _this.selectedIndex_ = -1;
      /** @private {boolean} */
      _this.rememberSelection_ = false;
      /** @private {boolean} */
      _this.quickOpen_ = false;

      // A keyup event on the menu needs to have a corresponding keydown
      // event on the menu. If the user opens the menu with a keydown event on a
      // button, the menu will only get the key up event causing buggy behavior with selected elements.
      /** @private {boolean} */
      _this.keyDownWithinMenu_ = false;
      return _this;
    }

    createClass(MDCMenuFoundation, [{
      key: 'init',
      value: function init() {
        var _MDCMenuFoundation$cs = MDCMenuFoundation.cssClasses,
            ROOT = _MDCMenuFoundation$cs.ROOT,
            OPEN = _MDCMenuFoundation$cs.OPEN;


        if (!this.adapter_.hasClass(ROOT)) {
          throw new Error(ROOT + ' class required in root element.');
        }

        if (!this.adapter_.hasNecessaryDom()) {
          throw new Error('Required DOM nodes missing in ' + ROOT + ' component.');
        }

        if (this.adapter_.hasClass(OPEN)) {
          this.isOpen_ = true;
        }

        this.adapter_.registerInteractionHandler('click', this.clickHandler_);
        this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);
        this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        clearTimeout(this.selectedTriggerTimerId_);
        clearTimeout(this.openAnimationEndTimerId_);
        clearTimeout(this.closeAnimationEndTimerId_);
        // Cancel any currently running animations.
        cancelAnimationFrame(this.animationRequestId_);
        this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);
        this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);
        this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);
        this.adapter_.deregisterBodyClickHandler(this.documentClickHandler_);
      }

      /**
       * @param {!Corner} corner Default anchor corner alignment of top-left menu corner.
       */

    }, {
      key: 'setAnchorCorner',
      value: function setAnchorCorner(corner) {
        this.anchorCorner_ = corner;
      }

      /**
       * @param {!AnchorMargin} margin 4-plet of margins from anchor.
       */

    }, {
      key: 'setAnchorMargin',
      value: function setAnchorMargin(margin) {
        this.anchorMargin_.top = typeof margin.top === 'number' ? margin.top : 0;
        this.anchorMargin_.right = typeof margin.right === 'number' ? margin.right : 0;
        this.anchorMargin_.bottom = typeof margin.bottom === 'number' ? margin.bottom : 0;
        this.anchorMargin_.left = typeof margin.left === 'number' ? margin.left : 0;
      }

      /** @param {boolean} rememberSelection */

    }, {
      key: 'setRememberSelection',
      value: function setRememberSelection(rememberSelection) {
        this.rememberSelection_ = rememberSelection;
        this.setSelectedIndex(-1);
      }

      /** @param {boolean} quickOpen */

    }, {
      key: 'setQuickOpen',
      value: function setQuickOpen(quickOpen) {
        this.quickOpen_ = quickOpen;
      }

      /**
       * @param {?number} focusIndex
       * @private
       */

    }, {
      key: 'focusOnOpen_',
      value: function focusOnOpen_(focusIndex) {
        if (focusIndex === null) {
          // If this instance of MDCMenu remembers selections, and the user has
          // made a selection, then focus the last selected item
          if (this.rememberSelection_ && this.selectedIndex_ >= 0) {
            this.adapter_.focusItemAtIndex(this.selectedIndex_);
            return;
          }

          this.adapter_.focus();
          // If that doesn't work, focus first item instead.
          if (!this.adapter_.isFocused()) {
            this.adapter_.focusItemAtIndex(0);
          }
        } else {
          this.adapter_.focusItemAtIndex(focusIndex);
        }
      }

      /**
       * Handle clicks and cancel the menu if not a child list-item
       * @param {!Event} evt
       * @private
       */

    }, {
      key: 'handleDocumentClick_',
      value: function handleDocumentClick_(evt) {
        var el = evt.target;

        while (el && el !== document.documentElement) {
          if (this.adapter_.getIndexForEventTarget(el) !== -1) {
            return;
          }
          el = el.parentNode;
        }

        this.adapter_.notifyCancel();
        this.close(evt);
      }
    }, {
      key: 'handleKeyboardDown_',


      /**
       * Handle keys that we want to repeat on hold (tab and arrows).
       * @param {!Event} evt
       * @return {boolean}
       * @private
       */
      value: function handleKeyboardDown_(evt) {
        // Do nothing if Alt, Ctrl or Meta are pressed.
        if (evt.altKey || evt.ctrlKey || evt.metaKey) {
          return true;
        }

        var keyCode = evt.keyCode,
            key = evt.key,
            shiftKey = evt.shiftKey;

        var isTab = key === 'Tab' || keyCode === 9;
        var isArrowUp = key === 'ArrowUp' || keyCode === 38;
        var isArrowDown = key === 'ArrowDown' || keyCode === 40;
        var isSpace = key === 'Space' || keyCode === 32;
        var isEnter = key === 'Enter' || keyCode === 13;
        // The menu needs to know if the keydown event was triggered on the menu
        this.keyDownWithinMenu_ = isEnter || isSpace;

        var focusedItemIndex = this.adapter_.getFocusedItemIndex();
        var lastItemIndex = this.adapter_.getNumberOfItems() - 1;

        if (shiftKey && isTab && focusedItemIndex === 0) {
          this.adapter_.focusItemAtIndex(lastItemIndex);
          evt.preventDefault();
          return false;
        }

        if (!shiftKey && isTab && focusedItemIndex === lastItemIndex) {
          this.adapter_.focusItemAtIndex(0);
          evt.preventDefault();
          return false;
        }

        // Ensure Arrow{Up,Down} and space do not cause inadvertent scrolling
        if (isArrowUp || isArrowDown || isSpace) {
          evt.preventDefault();
        }

        if (isArrowUp) {
          if (focusedItemIndex === 0 || this.adapter_.isFocused()) {
            this.adapter_.focusItemAtIndex(lastItemIndex);
          } else {
            this.adapter_.focusItemAtIndex(focusedItemIndex - 1);
          }
        } else if (isArrowDown) {
          if (focusedItemIndex === lastItemIndex || this.adapter_.isFocused()) {
            this.adapter_.focusItemAtIndex(0);
          } else {
            this.adapter_.focusItemAtIndex(focusedItemIndex + 1);
          }
        }

        return true;
      }

      /**
       * Handle keys that we don't want to repeat on hold (Enter, Space, Escape).
       * @param {!Event} evt
       * @return {boolean}
       * @private
       */

    }, {
      key: 'handleKeyboardUp_',
      value: function handleKeyboardUp_(evt) {
        // Do nothing if Alt, Ctrl or Meta are pressed.
        if (evt.altKey || evt.ctrlKey || evt.metaKey) {
          return true;
        }

        var keyCode = evt.keyCode,
            key = evt.key;

        var isEnter = key === 'Enter' || keyCode === 13;
        var isSpace = key === 'Space' || keyCode === 32;
        var isEscape = key === 'Escape' || keyCode === 27;

        if (isEnter || isSpace) {
          // If the keydown event didn't occur on the menu, then it should
          // disregard the possible selected event.
          if (this.keyDownWithinMenu_) {
            this.handlePossibleSelected_(evt);
          }
          this.keyDownWithinMenu_ = false;
        }

        if (isEscape) {
          this.adapter_.notifyCancel();
          this.close();
        }

        return true;
      }

      /**
       * @param {!Event} evt
       * @private
       */

    }, {
      key: 'handlePossibleSelected_',
      value: function handlePossibleSelected_(evt) {
        var _this2 = this;

        if (this.adapter_.getAttributeForEventTarget(evt.target, strings$11.ARIA_DISABLED_ATTR) === 'true') {
          return;
        }
        var targetIndex = this.adapter_.getIndexForEventTarget(evt.target);
        if (targetIndex < 0) {
          return;
        }
        // Debounce multiple selections
        if (this.selectedTriggerTimerId_) {
          return;
        }
        this.selectedTriggerTimerId_ = setTimeout(function () {
          _this2.selectedTriggerTimerId_ = 0;
          _this2.close();
          if (_this2.rememberSelection_) {
            _this2.setSelectedIndex(targetIndex);
          }
          _this2.adapter_.notifySelected({ index: targetIndex });
        }, numbers$2.SELECTED_TRIGGER_DELAY);
      }

      /**
       * @return {AutoLayoutMeasurements} Measurements used to position menu popup.
       */

    }, {
      key: 'getAutoLayoutMeasurements_',
      value: function getAutoLayoutMeasurements_() {
        var anchorRect = this.adapter_.getAnchorDimensions();
        var viewport = this.adapter_.getWindowDimensions();

        return {
          viewport: viewport,
          viewportDistance: {
            top: anchorRect.top,
            right: viewport.width - anchorRect.right,
            left: anchorRect.left,
            bottom: viewport.height - anchorRect.bottom
          },
          anchorHeight: anchorRect.height,
          anchorWidth: anchorRect.width,
          menuHeight: this.dimensions_.height,
          menuWidth: this.dimensions_.width
        };
      }

      /**
       * Computes the corner of the anchor from which to animate and position the menu.
       * @return {Corner}
       * @private
       */

    }, {
      key: 'getOriginCorner_',
      value: function getOriginCorner_() {
        // Defaults: open from the top left.
        var corner = Corner.TOP_LEFT;

        var _measures_ = this.measures_,
            viewportDistance = _measures_.viewportDistance,
            anchorHeight = _measures_.anchorHeight,
            anchorWidth = _measures_.anchorWidth,
            menuHeight = _measures_.menuHeight,
            menuWidth = _measures_.menuWidth;

        var isBottomAligned = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);
        var availableTop = isBottomAligned ? viewportDistance.top + anchorHeight + this.anchorMargin_.bottom : viewportDistance.top + this.anchorMargin_.top;
        var availableBottom = isBottomAligned ? viewportDistance.bottom - this.anchorMargin_.bottom : viewportDistance.bottom + anchorHeight - this.anchorMargin_.top;

        var topOverflow = menuHeight - availableTop;
        var bottomOverflow = menuHeight - availableBottom;
        if (bottomOverflow > 0 && topOverflow < bottomOverflow) {
          corner |= CornerBit.BOTTOM;
        }

        var isRtl = this.adapter_.isRtl();
        var isFlipRtl = Boolean(this.anchorCorner_ & CornerBit.FLIP_RTL);
        var avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);
        var isAlignedRight = avoidHorizontalOverlap && !isRtl || !avoidHorizontalOverlap && isFlipRtl && isRtl;
        var availableLeft = isAlignedRight ? viewportDistance.left + anchorWidth + this.anchorMargin_.right : viewportDistance.left + this.anchorMargin_.left;
        var availableRight = isAlignedRight ? viewportDistance.right - this.anchorMargin_.right : viewportDistance.right + anchorWidth - this.anchorMargin_.left;

        var leftOverflow = menuWidth - availableLeft;
        var rightOverflow = menuWidth - availableRight;

        if (leftOverflow < 0 && isAlignedRight && isRtl || avoidHorizontalOverlap && !isAlignedRight && leftOverflow < 0 || rightOverflow > 0 && leftOverflow < rightOverflow) {
          corner |= CornerBit.RIGHT;
        }

        return corner;
      }

      /**
       * @param {Corner} corner Origin corner of the menu.
       * @return {number} Horizontal offset of menu origin corner from corresponding anchor corner.
       * @private
       */

    }, {
      key: 'getHorizontalOriginOffset_',
      value: function getHorizontalOriginOffset_(corner) {
        var anchorWidth = this.measures_.anchorWidth;

        var isRightAligned = Boolean(corner & CornerBit.RIGHT);
        var avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);
        var x = 0;
        if (isRightAligned) {
          var rightOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.left : this.anchorMargin_.right;
          x = rightOffset;
        } else {
          var leftOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.right : this.anchorMargin_.left;
          x = leftOffset;
        }
        return x;
      }

      /**
       * @param {Corner} corner Origin corner of the menu.
       * @return {number} Vertical offset of menu origin corner from corresponding anchor corner.
       * @private
       */

    }, {
      key: 'getVerticalOriginOffset_',
      value: function getVerticalOriginOffset_(corner) {
        var _measures_2 = this.measures_,
            viewport = _measures_2.viewport,
            viewportDistance = _measures_2.viewportDistance,
            anchorHeight = _measures_2.anchorHeight,
            menuHeight = _measures_2.menuHeight;

        var isBottomAligned = Boolean(corner & CornerBit.BOTTOM);
        var MARGIN_TO_EDGE = MDCMenuFoundation.numbers.MARGIN_TO_EDGE;

        var avoidVerticalOverlap = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);
        var canOverlapVertically = !avoidVerticalOverlap;
        var y = 0;

        if (isBottomAligned) {
          y = avoidVerticalOverlap ? anchorHeight - this.anchorMargin_.top : -this.anchorMargin_.bottom;
          // adjust for when menu can overlap anchor, but too tall to be aligned to bottom
          // anchor corner. Bottom margin is ignored in such cases.
          if (canOverlapVertically && menuHeight > viewportDistance.top + anchorHeight) {
            y = -(Math.min(menuHeight, viewport.height - MARGIN_TO_EDGE) - (viewportDistance.top + anchorHeight));
          }
        } else {
          y = avoidVerticalOverlap ? anchorHeight + this.anchorMargin_.bottom : this.anchorMargin_.top;
          // adjust for when menu can overlap anchor, but too tall to be aligned to top
          // anchor corners. Top margin is ignored in that case.
          if (canOverlapVertically && menuHeight > viewportDistance.bottom + anchorHeight) {
            y = -(Math.min(menuHeight, viewport.height - MARGIN_TO_EDGE) - (viewportDistance.bottom + anchorHeight));
          }
        }
        return y;
      }

      /**
       * @param {Corner} corner Origin corner of the menu.
       * @return {number} Maximum height of the menu, based on available space. 0 indicates should not be set.
       * @private
       */

    }, {
      key: 'getMenuMaxHeight_',
      value: function getMenuMaxHeight_(corner) {
        var maxHeight = 0;
        var viewportDistance = this.measures_.viewportDistance;

        var isBottomAligned = Boolean(corner & CornerBit.BOTTOM);

        // When maximum height is not specified, it is handled from css.
        if (this.anchorCorner_ & CornerBit.BOTTOM) {
          if (isBottomAligned) {
            maxHeight = viewportDistance.top + this.anchorMargin_.top;
          } else {
            maxHeight = viewportDistance.bottom - this.anchorMargin_.bottom;
          }
        }

        return maxHeight;
      }

      /** @private */

    }, {
      key: 'autoPosition_',
      value: function autoPosition_() {
        var _position;

        if (!this.adapter_.hasAnchor()) {
          return;
        }

        // Compute measurements for autoposition methods reuse.
        this.measures_ = this.getAutoLayoutMeasurements_();

        var corner = this.getOriginCorner_();
        var maxMenuHeight = this.getMenuMaxHeight_(corner);
        var verticalAlignment = corner & CornerBit.BOTTOM ? 'bottom' : 'top';
        var horizontalAlignment = corner & CornerBit.RIGHT ? 'right' : 'left';
        var horizontalOffset = this.getHorizontalOriginOffset_(corner);
        var verticalOffset = this.getVerticalOriginOffset_(corner);
        var position = (_position = {}, defineProperty(_position, horizontalAlignment, horizontalOffset ? horizontalOffset + 'px' : '0'), defineProperty(_position, verticalAlignment, verticalOffset ? verticalOffset + 'px' : '0'), _position);
        var _measures_3 = this.measures_,
            anchorWidth = _measures_3.anchorWidth,
            menuHeight = _measures_3.menuHeight,
            menuWidth = _measures_3.menuWidth;
        // Center align when anchor width is comparable or greater than menu, otherwise keep corner.

        if (anchorWidth / menuWidth > numbers$2.ANCHOR_TO_MENU_WIDTH_RATIO) {
          horizontalAlignment = 'center';
        }

        // Adjust vertical origin when menu is positioned with significant offset from anchor. This is done so that
        // scale animation is "anchored" on the anchor.
        if (!(this.anchorCorner_ & CornerBit.BOTTOM) && Math.abs(verticalOffset / menuHeight) > numbers$2.OFFSET_TO_MENU_HEIGHT_RATIO) {
          var verticalOffsetPercent = Math.abs(verticalOffset / menuHeight) * 100;
          var originPercent = corner & CornerBit.BOTTOM ? 100 - verticalOffsetPercent : verticalOffsetPercent;
          verticalAlignment = Math.round(originPercent * 100) / 100 + '%';
        }

        this.adapter_.setTransformOrigin(horizontalAlignment + ' ' + verticalAlignment);
        this.adapter_.setPosition(position);
        this.adapter_.setMaxHeight(maxMenuHeight ? maxMenuHeight + 'px' : '');

        // Clear measures after positioning is complete.
        this.measures_ = null;
      }

      /**
       * Open the menu.
       * @param {{focusIndex: ?number}=} options
       */

    }, {
      key: 'open',
      value: function open() {
        var _this3 = this;

        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref$focusIndex = _ref.focusIndex,
            focusIndex = _ref$focusIndex === undefined ? null : _ref$focusIndex;

        this.adapter_.saveFocus();

        if (!this.quickOpen_) {
          this.adapter_.addClass(MDCMenuFoundation.cssClasses.ANIMATING_OPEN);
        }

        this.animationRequestId_ = requestAnimationFrame(function () {
          _this3.dimensions_ = _this3.adapter_.getInnerDimensions();
          _this3.autoPosition_();
          _this3.adapter_.addClass(MDCMenuFoundation.cssClasses.OPEN);
          _this3.focusOnOpen_(focusIndex);
          _this3.adapter_.registerBodyClickHandler(_this3.documentClickHandler_);
          if (!_this3.quickOpen_) {
            _this3.openAnimationEndTimerId_ = setTimeout(function () {
              _this3.openAnimationEndTimerId_ = 0;
              _this3.adapter_.removeClass(MDCMenuFoundation.cssClasses.ANIMATING_OPEN);
            }, numbers$2.TRANSITION_OPEN_DURATION);
          }
        });
        this.isOpen_ = true;
      }

      /**
       * Closes the menu.
       * @param {Event=} evt
       */

    }, {
      key: 'close',
      value: function close() {
        var _this4 = this;

        var evt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

        var targetIsDisabled = evt ? this.adapter_.getAttributeForEventTarget(evt.target, strings$11.ARIA_DISABLED_ATTR) === 'true' : false;

        if (targetIsDisabled) {
          return;
        }

        this.adapter_.deregisterBodyClickHandler(this.documentClickHandler_);

        if (!this.quickOpen_) {
          this.adapter_.addClass(MDCMenuFoundation.cssClasses.ANIMATING_CLOSED);
        }

        requestAnimationFrame(function () {
          _this4.adapter_.removeClass(MDCMenuFoundation.cssClasses.OPEN);
          if (!_this4.quickOpen_) {
            _this4.closeAnimationEndTimerId_ = setTimeout(function () {
              _this4.closeAnimationEndTimerId_ = 0;
              _this4.adapter_.removeClass(MDCMenuFoundation.cssClasses.ANIMATING_CLOSED);
            }, numbers$2.TRANSITION_CLOSE_DURATION);
          }
        });
        this.isOpen_ = false;
        this.adapter_.restoreFocus();
      }

      /** @return {boolean} */

    }, {
      key: 'isOpen',
      value: function isOpen() {
        return this.isOpen_;
      }

      /** @return {number} */

    }, {
      key: 'getSelectedIndex',
      value: function getSelectedIndex() {
        return this.selectedIndex_;
      }

      /**
       * @param {number} index Index of the item to set as selected.
       */

    }, {
      key: 'setSelectedIndex',
      value: function setSelectedIndex(index) {
        if (index === this.selectedIndex_) {
          return;
        }

        var prevSelectedIndex = this.selectedIndex_;
        if (prevSelectedIndex >= 0) {
          this.adapter_.rmAttrForOptionAtIndex(prevSelectedIndex, 'aria-selected');
          this.adapter_.rmClassForOptionAtIndex(prevSelectedIndex, cssClasses$10.SELECTED_LIST_ITEM);
        }

        this.selectedIndex_ = index >= 0 && index < this.adapter_.getNumberOfItems() ? index : -1;
        if (this.selectedIndex_ >= 0) {
          this.adapter_.setAttrForOptionAtIndex(this.selectedIndex_, 'aria-selected', 'true');
          this.adapter_.addClassForOptionAtIndex(this.selectedIndex_, cssClasses$10.SELECTED_LIST_ITEM);
        }
      }
    }]);
    return MDCMenuFoundation;
  }(MDCFoundation);

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @type {string|undefined} */
  var storedTransformPropertyName_$1 = void 0;

  /**
   * Returns the name of the correct transform property to use on the current browser.
   * @param {!Window} globalObj
   * @param {boolean=} forceRefresh
   * @return {string}
   */
  function getTransformPropertyName$1(globalObj) {
    var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (storedTransformPropertyName_$1 === undefined || forceRefresh) {
      var el = globalObj.document.createElement('div');
      var transformPropertyName = 'transform' in el.style ? 'transform' : 'webkitTransform';
      storedTransformPropertyName_$1 = transformPropertyName;
    }

    return storedTransformPropertyName_$1;
  }

  var mdcMenu = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { ref: "root", staticClass: "mdc-menu mdc-simple-menu", class: _vm.classes, style: _vm.styles, attrs: { "tabindex": "-1" } }, [_c('ul', { ref: "items", staticClass: "mdc-simple-menu__items mdc-list", attrs: { "role": "menu", "aria-hidden": "true" } }, [_vm._t("default")], 2)]);
    }, staticRenderFns: [],
    name: 'mdc-menu',
    props: {
      'open-from-top-left': Boolean,
      'open-from-top-right': Boolean,
      'open-from-bottom-left': Boolean,
      'open-from-bottom-right': Boolean,
      'quick-open': Boolean,
      'anchor-corner': [String, Number],
      'anchor-margin': Object
    },
    data: function data() {
      return {
        classes: {
          'mdc-simple-menu--open-from-top-left': this.openFromTopLeft,
          'mdc-simple-menu--open-from-top-right': this.openFromTopRight,
          'mdc-simple-menu--open-from-bottom-left': this.openFromBottomLeft,
          'mdc-simple-menu--open-from-bottom-right': this.openFromBottomRight
        },
        styles: {},
        items: []
      };
    },

    methods: {
      show: function show(options) {
        this.foundation.open(options);
      },
      hide: function hide() {
        this.foundation.close();
      },
      isOpen: function isOpen() {
        return this.foundation ? this.foundation.isOpen() : false;
      }
    },
    mounted: function mounted() {
      var _this = this;

      var refreshItems = function refreshItems() {
        _this.items = [].slice.call(_this.$refs.items.querySelectorAll('.mdc-list-item[role]'));
        _this.$emit('update');
      };
      this.slotObserver = new MutationObserver(function () {
        return refreshItems();
      });
      this.slotObserver.observe(this.$el, { childList: true, subtree: true });

      this._previousFocus = undefined;

      this.foundation = new MDCMenuFoundation({
        addClass: function addClass(className) {
          return _this.$set(_this.classes, className, true);
        },
        removeClass: function removeClass(className) {
          return _this.$delete(_this.classes, className);
        },
        hasClass: function hasClass(className) {
          return _this.$refs.root.classList.contains(className);
        },
        hasNecessaryDom: function hasNecessaryDom() {
          return Boolean(_this.$refs.items);
        },
        getAttributeForEventTarget: function getAttributeForEventTarget(target, attributeName) {
          return target.getAttribute(attributeName);
        },
        getInnerDimensions: function getInnerDimensions() {
          return {
            width: _this.$refs.items.offsetWidth,
            height: _this.$refs.items.offsetHeight
          };
        },
        hasAnchor: function hasAnchor() {
          return _this.$refs.root.parentElement && _this.$refs.root.parentElement.classList.contains('mdc-menu-anchor');
        },
        getAnchorDimensions: function getAnchorDimensions() {
          return _this.$refs.root.parentElement.getBoundingClientRect();
        },
        getWindowDimensions: function getWindowDimensions() {
          return {
            width: window.innerWidth,
            height: window.innerHeight
          };
        },
        getNumberOfItems: function getNumberOfItems() {
          return _this.items.length;
        },
        registerInteractionHandler: function registerInteractionHandler(type, handler) {
          return _this.$refs.root.addEventListener(type, handler);
        },
        deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
          return _this.$refs.root.removeEventListener(type, handler);
        },
        registerBodyClickHandler: function registerBodyClickHandler(handler) {
          return document.body.addEventListener('click', handler);
        },
        deregisterBodyClickHandler: function deregisterBodyClickHandler(handler) {
          return document.body.removeEventListener('click', handler);
        },
        getIndexForEventTarget: function getIndexForEventTarget(target) {
          return _this.items.indexOf(target);
        },
        notifySelected: function notifySelected(evtData) {
          var evt = {
            index: evtData.index,
            item: _this.items[evtData.index]
          };
          _this.$emit('select', evt);
          emitCustomEvent(_this.$el, MDCMenuFoundation.strings.SELECTED_EVENT, evt);
        },
        notifyCancel: function notifyCancel() {
          _this.$emit('cancel');
          emitCustomEvent(_this.$el, MDCMenuFoundation.strings.CANCEL_EVENT, {});
        },
        saveFocus: function saveFocus() {
          _this._previousFocus = document.activeElement;
        },
        restoreFocus: function restoreFocus() {
          if (_this._previousFocus) {
            _this._previousFocus.focus();
          }
        },
        isFocused: function isFocused() {
          return document.activeElement === _this.$refs.root;
        },
        focus: function focus() {
          return _this.$refs.root.focus();
        },
        getFocusedItemIndex: function getFocusedItemIndex() {
          return _this.items.indexOf(document.activeElement);
        },
        focusItemAtIndex: function focusItemAtIndex(index) {
          return _this.items[index].focus();
        },
        isRtl: function isRtl() {
          return getComputedStyle(_this.$refs.root).getPropertyValue('direction') === 'rtl';
        },
        setTransformOrigin: function setTransformOrigin(origin) {
          _this.$set(_this.styles, getTransformPropertyName$1(window) + '-origin', origin);
        },
        setPosition: function setPosition(position) {
          _this.$set(_this.styles, 'left', position.left);
          _this.$set(_this.styles, 'right', position.right);
          _this.$set(_this.styles, 'top', position.top);
          _this.$set(_this.styles, 'bottom', position.bottom);
        },
        setMaxHeight: function setMaxHeight(height) {
          _this.$set(_this.styles, 'max-height', height);
        },
        setAttrForOptionAtIndex: function setAttrForOptionAtIndex(index, attr, value) {
          _this.items[index].setAttribute(attr, value);
        },
        rmAttrForOptionAtIndex: function rmAttrForOptionAtIndex(index, attr) {
          _this.items[index].removeAttribute(attr);
        },
        addClassForOptionAtIndex: function addClassForOptionAtIndex(index, className) {
          _this.items[index].classList.add(className);
        },
        rmClassForOptionAtIndex: function rmClassForOptionAtIndex(index, className) {
          _this.items[index].classList.remove(className);
        }
      });

      refreshItems();
      this.foundation.init();
      if (this.anchorCorner !== void 0) {
        this.foundation.setAnchorCorner(Number(this.anchorCorner));
      }
      if (this.anchorMargin !== void 0) {
        this.foundation.setAnchorMargin(this.anchorMargin);
      }
    },

    watch: {
      quickOpen: function quickOpen(nv) {
        this.foundation.setQuickOpen(nv);
      },
      anchorCorner: function anchorCorner(nv) {
        this.foundation.setAnchorCorner(Number(nv));
      },
      anchorMargin: function anchorMargin(nv) {
        this.foundation.setAnchorMargin(nv);
      }
    },
    beforeDestroy: function beforeDestroy() {
      this._previousFocus = null;
      this.slotObserver.disconnect();
      this.foundation.destroy();
    }
  };

  var mdcMenuItem = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('li', { staticClass: "mdc-menu-item mdc-list-item", attrs: { "role": "menuitem", "tabindex": _vm.disabled ? '-1' : '0', "aria-disabled": _vm.disabled } }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-menu-item',
    props: {
      disabled: Boolean
    }
  };

  var mdcMenuDivider = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('li', { staticClass: "mdc-menu-divider mdc-list-divider", attrs: { "role": "separator" } });
    }, staticRenderFns: [],
    name: 'mdc-menu-divider'
  };

  var mdcMenuAnchor = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-menu-anchor" }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-menu-anchor'
  };

  var VueMDCMenu = BasePlugin({
    mdcMenu: mdcMenu,
    mdcMenuItem: mdcMenuItem,
    mdcMenuDivider: mdcMenuDivider,
    mdcMenuAnchor: mdcMenuAnchor
  });

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /* eslint no-unused-vars: [2, {"args": "none"}] */

  /**
   * Adapter for MDC Radio. Provides an interface for managing
   * - classes
   * - dom
   *
   * Additionally, provides type information for the adapter to the Closure
   * compiler.
   *
   * Implement this adapter for your framework of choice to delegate updates to
   * the component in your framework of choice. See architecture documentation
   * for more details.
   * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
   *
   * @record
   */

  var MDCRadioAdapter = function () {
    function MDCRadioAdapter() {
      classCallCheck(this, MDCRadioAdapter);
    }

    createClass(MDCRadioAdapter, [{
      key: 'addClass',

      /** @param {string} className */
      value: function addClass(className) {}

      /** @param {string} className */

    }, {
      key: 'removeClass',
      value: function removeClass(className) {}

      /** @return {!MDCSelectionControlState} */

    }, {
      key: 'getNativeControl',
      value: function getNativeControl() {}
    }]);
    return MDCRadioAdapter;
  }();

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @enum {string} */
  var strings$12 = {
    NATIVE_CONTROL_SELECTOR: '.mdc-radio__native-control'
  };

  /** @enum {string} */
  var cssClasses$11 = {
    ROOT: 'mdc-radio',
    DISABLED: 'mdc-radio--disabled'
  };

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends {MDCFoundation<!MDCRadioAdapter>}
   */

  var MDCRadioFoundation = function (_MDCFoundation) {
    inherits(MDCRadioFoundation, _MDCFoundation);

    function MDCRadioFoundation() {
      classCallCheck(this, MDCRadioFoundation);
      return possibleConstructorReturn(this, (MDCRadioFoundation.__proto__ || Object.getPrototypeOf(MDCRadioFoundation)).apply(this, arguments));
    }

    createClass(MDCRadioFoundation, [{
      key: 'isChecked',


      /** @return {boolean} */
      value: function isChecked() {
        return this.getNativeControl_().checked;
      }

      /** @param {boolean} checked */

    }, {
      key: 'setChecked',
      value: function setChecked(checked) {
        this.getNativeControl_().checked = checked;
      }

      /** @return {boolean} */

    }, {
      key: 'isDisabled',
      value: function isDisabled() {
        return this.getNativeControl_().disabled;
      }

      /** @param {boolean} disabled */

    }, {
      key: 'setDisabled',
      value: function setDisabled(disabled) {
        var DISABLED = MDCRadioFoundation.cssClasses.DISABLED;

        this.getNativeControl_().disabled = disabled;
        if (disabled) {
          this.adapter_.addClass(DISABLED);
        } else {
          this.adapter_.removeClass(DISABLED);
        }
      }

      /** @return {?string} */

    }, {
      key: 'getValue',
      value: function getValue() {
        return this.getNativeControl_().value;
      }

      /** @param {?string} value */

    }, {
      key: 'setValue',
      value: function setValue(value) {
        this.getNativeControl_().value = value;
      }

      /**
       * @return {!MDCSelectionControlState}
       * @private
       */

    }, {
      key: 'getNativeControl_',
      value: function getNativeControl_() {
        return this.adapter_.getNativeControl() || {
          checked: false,
          disabled: false,
          value: null
        };
      }
    }], [{
      key: 'cssClasses',

      /** @return enum {cssClasses} */
      get: function get$$1() {
        return cssClasses$11;
      }

      /** @return enum {strings} */

    }, {
      key: 'strings',
      get: function get$$1() {
        return strings$12;
      }

      /** @return {!MDCRadioAdapter} */

    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return (/** @type {!MDCRadioAdapter} */{
            addClass: function addClass() /* className: string */{},
            removeClass: function removeClass() /* className: string */{},
            getNativeControl: function getNativeControl() /* !MDCSelectionControlState */{}
          }
        );
      }
    }]);
    return MDCRadioFoundation;
  }(MDCFoundation);

  var mdcRadio = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-radio-wrapper", class: _vm.formFieldClasses }, [_c('div', { ref: "root", staticClass: "mdc-radio", class: _vm.classes, style: _vm.styles }, [_c('input', { ref: "control", staticClass: "mdc-radio__native-control", attrs: { "type": "radio", "id": _vm._uid, "name": _vm.name }, on: { "change": _vm.sync } }), _vm._v(" "), _c('div', { ref: "label", staticClass: "mdc-radio__background" }, [_c('div', { staticClass: "mdc-radio__outer-circle" }), _vm._v(" "), _c('div', { staticClass: "mdc-radio__inner-circle" })])]), _vm._v(" "), _c('label', { ref: "label", attrs: { "for": _vm._uid } }, [_vm._t("default", [_vm._v(_vm._s(_vm.label))])], 2)]);
    }, staticRenderFns: [],
    name: 'mdc-radio',
    mixins: [DispatchFocusMixin],
    model: {
      prop: 'picked',
      event: 'change'
    },
    props: {
      'name': { type: String, required: true },
      'value': String,
      'picked': String,
      'checked': Boolean,
      'label': String,
      'align-end': Boolean,
      'disabled': Boolean
    },
    data: function data() {
      return {
        classes: {},
        styles: {},
        formFieldClasses: {
          'mdc-form-field': this.label,
          'mdc-form-field--align-end': this.label && this.alignEnd
        }
      };
    },
    mounted: function mounted() {
      var _this = this;

      // add foundation
      this.foundation = new MDCRadioFoundation({
        addClass: function addClass(className) {
          return _this.$set(_this.classes, className, true);
        },
        removeClass: function removeClass(className) {
          return _this.$delete(_this.classes, className);
        },
        getNativeControl: function getNativeControl() {
          return _this.$refs.control;
        }
      });

      // add ripple
      this.ripple = new RippleBase(this, {
        isUnbounded: function isUnbounded() {
          return true;
        },
        isSurfaceActive: function isSurfaceActive() {
          return false;
        },
        registerInteractionHandler: function registerInteractionHandler(evt, handler) {
          _this.$refs.control.addEventListener(evt, handler);
        },
        deregisterInteractionHandler: function deregisterInteractionHandler(evt, handler) {
          _this.$refs.control.removeEventListener(evt, handler);
        },
        computeBoundingRect: function computeBoundingRect() {
          return _this.$refs.root.getBoundingClientRect();
        }
      });

      this.formField = new MDCFormFieldFoundation({
        registerInteractionHandler: function registerInteractionHandler(type, handler) {
          _this.$refs.label.addEventListener(type, handler);
        },
        deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
          _this.$refs.label.removeEventListener(type, handler);
        },
        activateInputRipple: function activateInputRipple() {
          _this.ripple && _this.ripple.activate();
        },
        deactivateInputRipple: function deactivateInputRipple() {
          _this.ripple && _this.ripple.deactivate();
        }
      });

      this.foundation.init();
      this.ripple.init();
      this.formField.init();

      this.foundation.setValue(this.value ? this.value : this.label);
      this.foundation.setDisabled(this.disabled);
      this.foundation.setChecked(this.checked || this.picked == this.foundation.getValue());

      // refresh model
      this.checked && this.sync();
    },
    beforeDestroy: function beforeDestroy() {
      this.formField.destroy();
      this.ripple.destroy();
      this.foundation.destroy();
    },

    watch: {
      disabled: function disabled(value) {
        this.foundation.setDisabled(value);
      }
    },
    methods: {
      isChecked: function isChecked() {
        return this.foundation.isChecked();
      },
      sync: function sync() {
        this.$emit('change', this.foundation.getValue());
      }
    }
  };

  var VueMDCRadio = BasePlugin({
    mdcRadio: mdcRadio
  });

  var MDCNativeSelect = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('select', { directives: [{ name: "model", rawName: "v-model", value: _vm.selected, expression: "selected" }], ref: "root", staticClass: "mdc-select mdc-native-select", attrs: { "disabled": _vm.disabled }, on: { "change": [function ($event) {
            var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {
              return o.selected;
            }).map(function (o) {
              var val = "_value" in o ? o._value : o.value;return val;
            });_vm.selected = $event.target.multiple ? $$selectedVal : $$selectedVal[0];
          }, _vm.onChange] } }, [_vm.label ? _c('option', { attrs: { "disabled": "disabled", "value": "" } }, [_vm._v(_vm._s(_vm.label))]) : _vm._e(), _vm._v(" "), _vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-native-select',
    model: {
      prop: 'value',
      event: 'change'
    },
    props: {
      value: [String, Array],
      disabled: Boolean,
      label: String
    },
    data: function data() {
      return {
        selected: this.value
      };
    },

    methods: {
      onChange: function onChange() {
        this.$emit('change', this.selected);
      }
    },
    watch: {
      value: function value(newValue) {
        this.selected = newValue;
      }
    }
  };

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */
  var cssClasses$12 = {
    BOX: 'mdc-select--box',
    DISABLED: 'mdc-select--disabled',
    OPEN: 'mdc-select--open',
    ROOT: 'mdc-select',
    SCROLL_LOCK: 'mdc-select-scroll-lock'
  };

  var strings$13 = {
    CHANGE_EVENT: 'MDCSelect:change',
    BOTTOM_LINE_SELECTOR: '.mdc-select__bottom-line',
    LABEL_SELECTOR: '.mdc-select__label',
    MENU_SELECTOR: '.mdc-select__menu',
    SURFACE_SELECTOR: '.mdc-select__surface',
    SELECTED_TEXT_SELECTOR: '.mdc-select__selected-text'
  };

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends MDCComponent<!MDCMenuFoundation>
   */

  var MDCMenu = function (_MDCComponent) {
    inherits(MDCMenu, _MDCComponent);

    /** @param {...?} args */
    function MDCMenu() {
      var _ref;

      classCallCheck(this, MDCMenu);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      /** @private {!Element} */
      var _this = possibleConstructorReturn(this, (_ref = MDCMenu.__proto__ || Object.getPrototypeOf(MDCMenu)).call.apply(_ref, [this].concat(args)));

      _this.previousFocus_;
      return _this;
    }

    /**
     * @param {!Element} root
     * @return {!MDCMenu}
     */


    createClass(MDCMenu, [{
      key: 'show',


      /** @param {{focusIndex: ?number}=} options */
      value: function show() {
        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref2$focusIndex = _ref2.focusIndex,
            focusIndex = _ref2$focusIndex === undefined ? null : _ref2$focusIndex;

        this.foundation_.open({ focusIndex: focusIndex });
      }
    }, {
      key: 'hide',
      value: function hide() {
        this.foundation_.close();
      }

      /**
       * @param {Corner} corner Default anchor corner alignment of top-left
       *     menu corner.
       */

    }, {
      key: 'setAnchorCorner',
      value: function setAnchorCorner(corner) {
        this.foundation_.setAnchorCorner(corner);
      }

      /**
       * @param {AnchorMargin} margin
       */

    }, {
      key: 'setAnchorMargin',
      value: function setAnchorMargin(margin) {
        this.foundation_.setAnchorMargin(margin);
      }

      /**
       * Return the item container element inside the component.
       * @return {?Element}
       */

    }, {
      key: 'getOptionByIndex',


      /**
       * Return the item within the menu that is selected.
       * @param {number} index
       * @return {?Element}
       */
      value: function getOptionByIndex(index) {
        var items = this.items;

        if (index < items.length) {
          return this.items[index];
        } else {
          return null;
        }
      }

      /** @param {number} index */

    }, {
      key: 'getDefaultFoundation',


      /** @return {!MDCMenuFoundation} */
      value: function getDefaultFoundation() {
        var _this2 = this;

        return new MDCMenuFoundation({
          addClass: function addClass(className) {
            return _this2.root_.classList.add(className);
          },
          removeClass: function removeClass(className) {
            return _this2.root_.classList.remove(className);
          },
          hasClass: function hasClass(className) {
            return _this2.root_.classList.contains(className);
          },
          hasNecessaryDom: function hasNecessaryDom() {
            return Boolean(_this2.itemsContainer_);
          },
          getAttributeForEventTarget: function getAttributeForEventTarget(target, attributeName) {
            return target.getAttribute(attributeName);
          },
          getInnerDimensions: function getInnerDimensions() {
            var itemsContainer = _this2.itemsContainer_;

            return { width: itemsContainer.offsetWidth, height: itemsContainer.offsetHeight };
          },
          hasAnchor: function hasAnchor() {
            return _this2.root_.parentElement && _this2.root_.parentElement.classList.contains('mdc-menu-anchor');
          },
          getAnchorDimensions: function getAnchorDimensions() {
            return _this2.root_.parentElement.getBoundingClientRect();
          },
          getWindowDimensions: function getWindowDimensions() {
            return { width: window.innerWidth, height: window.innerHeight };
          },
          getNumberOfItems: function getNumberOfItems() {
            return _this2.items.length;
          },
          registerInteractionHandler: function registerInteractionHandler(type, handler) {
            return _this2.root_.addEventListener(type, handler);
          },
          deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
            return _this2.root_.removeEventListener(type, handler);
          },
          registerBodyClickHandler: function registerBodyClickHandler(handler) {
            return document.body.addEventListener('click', handler);
          },
          deregisterBodyClickHandler: function deregisterBodyClickHandler(handler) {
            return document.body.removeEventListener('click', handler);
          },
          getIndexForEventTarget: function getIndexForEventTarget(target) {
            return _this2.items.indexOf(target);
          },
          notifySelected: function notifySelected(evtData) {
            return _this2.emit(MDCMenuFoundation.strings.SELECTED_EVENT, {
              index: evtData.index,
              item: _this2.items[evtData.index]
            });
          },
          notifyCancel: function notifyCancel() {
            return _this2.emit(MDCMenuFoundation.strings.CANCEL_EVENT, {});
          },
          saveFocus: function saveFocus() {
            _this2.previousFocus_ = document.activeElement;
          },
          restoreFocus: function restoreFocus() {
            if (_this2.previousFocus_) {
              _this2.previousFocus_.focus();
            }
          },
          isFocused: function isFocused() {
            return document.activeElement === _this2.root_;
          },
          focus: function focus() {
            return _this2.root_.focus();
          },
          getFocusedItemIndex: function getFocusedItemIndex() {
            return _this2.items.indexOf(document.activeElement);
          },
          focusItemAtIndex: function focusItemAtIndex(index) {
            return _this2.items[index].focus();
          },
          isRtl: function isRtl() {
            return getComputedStyle(_this2.root_).getPropertyValue('direction') === 'rtl';
          },
          setTransformOrigin: function setTransformOrigin(origin) {
            _this2.root_.style[getTransformPropertyName$1(window) + '-origin'] = origin;
          },
          setPosition: function setPosition(position) {
            _this2.root_.style.left = 'left' in position ? position.left : null;
            _this2.root_.style.right = 'right' in position ? position.right : null;
            _this2.root_.style.top = 'top' in position ? position.top : null;
            _this2.root_.style.bottom = 'bottom' in position ? position.bottom : null;
          },
          setMaxHeight: function setMaxHeight(height) {
            _this2.root_.style.maxHeight = height;
          },
          setAttrForOptionAtIndex: function setAttrForOptionAtIndex(index, attr, value) {
            return _this2.items[index].setAttribute(attr, value);
          },
          rmAttrForOptionAtIndex: function rmAttrForOptionAtIndex(index, attr) {
            return _this2.items[index].removeAttribute(attr);
          },
          addClassForOptionAtIndex: function addClassForOptionAtIndex(index, className) {
            return _this2.items[index].classList.add(className);
          },
          rmClassForOptionAtIndex: function rmClassForOptionAtIndex(index, className) {
            return _this2.items[index].classList.remove(className);
          }
        });
      }
    }, {
      key: 'open',


      /** @return {boolean} */
      get: function get$$1() {
        return this.foundation_.isOpen();
      }

      /** @param {boolean} value */
      ,
      set: function set$$1(value) {
        if (value) {
          this.foundation_.open();
        } else {
          this.foundation_.close();
        }
      }
    }, {
      key: 'itemsContainer_',
      get: function get$$1() {
        return this.root_.querySelector(MDCMenuFoundation.strings.ITEMS_SELECTOR);
      }

      /**
       * Return the items within the menu. Note that this only contains the set of elements within
       * the items container that are proper list items, and not supplemental / presentational DOM
       * elements.
       * @return {!Array<!Element>}
       */

    }, {
      key: 'items',
      get: function get$$1() {
        var itemsContainer = this.itemsContainer_;

        return [].slice.call(itemsContainer.querySelectorAll('.mdc-list-item[role]'));
      }
    }, {
      key: 'selectedItemIndex',
      set: function set$$1(index) {
        this.foundation_.setSelectedIndex(index);
      }

      /** @return {number} */
      ,
      get: function get$$1() {
        return this.foundation_.getSelectedIndex();
      }

      /** @param {!boolean} rememberSelection */

    }, {
      key: 'rememberSelection',
      set: function set$$1(rememberSelection) {
        this.foundation_.setRememberSelection(rememberSelection);
      }

      /** @param {boolean} quickOpen */

    }, {
      key: 'quickOpen',
      set: function set$$1(quickOpen) {
        this.foundation_.setQuickOpen(quickOpen);
      }
    }], [{
      key: 'attachTo',
      value: function attachTo(root) {
        return new MDCMenu(root);
      }
    }]);
    return MDCMenu;
  }(MDCComponent);

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var OPENER_KEYS = [{ key: 'ArrowUp', keyCode: 38, forType: 'keydown' }, { key: 'ArrowDown', keyCode: 40, forType: 'keydown' }, { key: 'Space', keyCode: 32, forType: 'keyup' }];

  var MDCSelectFoundation = function (_MDCFoundation) {
    inherits(MDCSelectFoundation, _MDCFoundation);
    createClass(MDCSelectFoundation, null, [{
      key: 'cssClasses',
      get: function get$$1() {
        return cssClasses$12;
      }
    }, {
      key: 'strings',
      get: function get$$1() {
        return strings$13;
      }
    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return {
          addClass: function addClass() /* className: string */{},
          removeClass: function removeClass() /* className: string */{},
          floatLabel: function floatLabel() /* value: boolean */{},
          activateBottomLine: function activateBottomLine() {},
          deactivateBottomLine: function deactivateBottomLine() {},
          addBodyClass: function addBodyClass() /* className: string */{},
          removeBodyClass: function removeBodyClass() /* className: string */{},
          setAttr: function setAttr() /* attr: string, value: string */{},
          rmAttr: function rmAttr() /* attr: string */{},
          computeBoundingRect: function computeBoundingRect() {
            return (/* {left: number, top: number} */{ left: 0, top: 0 }
            );
          },
          registerInteractionHandler: function registerInteractionHandler() /* type: string, handler: EventListener */{},
          deregisterInteractionHandler: function deregisterInteractionHandler() /* type: string, handler: EventListener */{},
          focus: function focus() {},
          makeTabbable: function makeTabbable() {},
          makeUntabbable: function makeUntabbable() {},
          getComputedStyleValue: function getComputedStyleValue() {
            return (/* propertyName: string */ /* string */''
            );
          },
          setStyle: function setStyle() /* propertyName: string, value: string */{},
          create2dRenderingContext: function create2dRenderingContext() {
            return (/* {font: string, measureText: (string) => {width: number}} */{
                font: '',
                measureText: function measureText() {
                  return { width: 0 };
                }
              }
            );
          },
          setMenuElStyle: function setMenuElStyle() /* propertyName: string, value: string */{},
          setMenuElAttr: function setMenuElAttr() /* attr: string, value: string */{},
          rmMenuElAttr: function rmMenuElAttr() /* attr: string */{},
          getMenuElOffsetHeight: function getMenuElOffsetHeight() {
            return (/* number */0
            );
          },
          openMenu: function openMenu() /* focusIndex: number */{},
          isMenuOpen: function isMenuOpen() {
            return (/* boolean */false
            );
          },
          setSelectedTextContent: function setSelectedTextContent() /* textContent: string */{},
          getNumberOfOptions: function getNumberOfOptions() {
            return (/* number */0
            );
          },
          getTextForOptionAtIndex: function getTextForOptionAtIndex() {
            return (/* index: number */ /* string */''
            );
          },
          getValueForOptionAtIndex: function getValueForOptionAtIndex() {
            return (/* index: number */ /* string */''
            );
          },
          setAttrForOptionAtIndex: function setAttrForOptionAtIndex() /* index: number, attr: string, value: string */{},
          rmAttrForOptionAtIndex: function rmAttrForOptionAtIndex() /* index: number, attr: string */{},
          getOffsetTopForOptionAtIndex: function getOffsetTopForOptionAtIndex() {
            return (/* index: number */ /* number */0
            );
          },
          registerMenuInteractionHandler: function registerMenuInteractionHandler() /* type: string, handler: EventListener */{},
          deregisterMenuInteractionHandler: function deregisterMenuInteractionHandler() /* type: string, handler: EventListener */{},
          notifyChange: function notifyChange() {},
          getWindowInnerHeight: function getWindowInnerHeight() {
            return (/* number */0
            );
          }
        };
      }
    }]);

    function MDCSelectFoundation(adapter) {
      classCallCheck(this, MDCSelectFoundation);

      var _this = possibleConstructorReturn(this, (MDCSelectFoundation.__proto__ || Object.getPrototypeOf(MDCSelectFoundation)).call(this, _extends(MDCSelectFoundation.defaultAdapter, adapter)));

      _this.ctx_ = null;
      _this.selectedIndex_ = -1;
      _this.disabled_ = false;
      _this.isFocused_ = false;

      /** @private {number} */
      _this.animationRequestId_ = 0;

      _this.displayHandler_ = function (evt) {
        evt.preventDefault();
        if (!_this.adapter_.isMenuOpen()) {
          _this.open_();
        }
      };
      _this.displayViaKeyboardHandler_ = function (evt) {
        return _this.handleDisplayViaKeyboard_(evt);
      };
      _this.selectionHandler_ = function (_ref) {
        var detail = _ref.detail;
        var index = detail.index;


        if (index !== _this.selectedIndex_) {
          _this.setSelectedIndex(index);
          _this.adapter_.notifyChange();
        }
        _this.close_();
      };
      _this.cancelHandler_ = function () {
        _this.close_();
        if (_this.selectedIndex_ === -1) {
          _this.adapter_.floatLabel(false);
        }
      };
      return _this;
    }

    createClass(MDCSelectFoundation, [{
      key: 'init',
      value: function init() {
        this.ctx_ = this.adapter_.create2dRenderingContext();
        this.adapter_.registerInteractionHandler('click', this.displayHandler_);
        this.adapter_.registerInteractionHandler('keydown', this.displayViaKeyboardHandler_);
        this.adapter_.registerInteractionHandler('keyup', this.displayViaKeyboardHandler_);
        this.adapter_.registerMenuInteractionHandler(MDCMenuFoundation.strings.SELECTED_EVENT, this.selectionHandler_);
        this.adapter_.registerMenuInteractionHandler(MDCMenuFoundation.strings.CANCEL_EVENT, this.cancelHandler_);
        this.resize();
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        // Drop reference to context object to prevent potential leaks
        this.ctx_ = null;
        cancelAnimationFrame(this.animationRequestId_);
        this.adapter_.deregisterInteractionHandler('click', this.displayHandler_);
        this.adapter_.deregisterInteractionHandler('keydown', this.displayViaKeyboardHandler_);
        this.adapter_.deregisterInteractionHandler('keyup', this.displayViaKeyboardHandler_);
        this.adapter_.deregisterMenuInteractionHandler(MDCMenuFoundation.strings.SELECTED_EVENT, this.selectionHandler_);
        this.adapter_.deregisterMenuInteractionHandler(MDCMenuFoundation.strings.CANCEL_EVENT, this.cancelHandler_);
      }
    }, {
      key: 'getValue',
      value: function getValue() {
        return this.selectedIndex_ >= 0 ? this.adapter_.getValueForOptionAtIndex(this.selectedIndex_) : '';
      }
    }, {
      key: 'getSelectedIndex',
      value: function getSelectedIndex() {
        return this.selectedIndex_;
      }
    }, {
      key: 'setSelectedIndex',
      value: function setSelectedIndex(index) {
        var prevSelectedIndex = this.selectedIndex_;
        if (prevSelectedIndex >= 0) {
          this.adapter_.rmAttrForOptionAtIndex(this.selectedIndex_, 'aria-selected');
        }

        this.selectedIndex_ = index >= 0 && index < this.adapter_.getNumberOfOptions() ? index : -1;
        var selectedTextContent = '';
        if (this.selectedIndex_ >= 0) {
          selectedTextContent = this.adapter_.getTextForOptionAtIndex(this.selectedIndex_).trim();
          this.adapter_.setAttrForOptionAtIndex(this.selectedIndex_, 'aria-selected', 'true');
          this.adapter_.floatLabel(true);
        } else {
          if (!this.adapter_.isMenuOpen()) {
            this.adapter_.floatLabel(false);
          }
        }
        this.adapter_.setSelectedTextContent(selectedTextContent);
      }
    }, {
      key: 'isDisabled',
      value: function isDisabled() {
        return this.disabled_;
      }
    }, {
      key: 'setDisabled',
      value: function setDisabled(disabled) {
        var DISABLED = MDCSelectFoundation.cssClasses.DISABLED;

        this.disabled_ = disabled;
        if (this.disabled_) {
          this.adapter_.addClass(DISABLED);
          this.adapter_.setAttr('aria-disabled', 'true');
          this.adapter_.makeUntabbable();
        } else {
          this.adapter_.removeClass(DISABLED);
          this.adapter_.rmAttr('aria-disabled');
          this.adapter_.makeTabbable();
        }
      }
    }, {
      key: 'resize',
      value: function resize() {
        var font = this.adapter_.getComputedStyleValue('font');
        var letterSpacing = parseFloat(this.adapter_.getComputedStyleValue('letter-spacing'));

        if (font) {
          this.ctx_.font = font;
        } else {
          var primaryFontFamily = this.adapter_.getComputedStyleValue('font-family').split(',')[0];
          var fontSize = this.adapter_.getComputedStyleValue('font-size');
          this.ctx_.font = fontSize + ' ' + primaryFontFamily;
        }

        var maxTextLength = 0;

        for (var i = 0, l = this.adapter_.getNumberOfOptions(); i < l; i++) {
          var surfacePaddingRight = parseInt(this.adapter_.getComputedStyleValue('padding-right'), 10);
          var surfacePaddingLeft = parseInt(this.adapter_.getComputedStyleValue('padding-left'), 10);
          var selectBoxAddedPadding = surfacePaddingRight + surfacePaddingLeft;
          var txt = this.adapter_.getTextForOptionAtIndex(i).trim();

          var _ctx_$measureText = this.ctx_.measureText(txt),
              width = _ctx_$measureText.width;

          var addedSpace = letterSpacing * txt.length;

          maxTextLength = Math.max(maxTextLength, Math.ceil(width + addedSpace + selectBoxAddedPadding));
        }

        this.adapter_.setStyle('width', maxTextLength + 'px');
      }
    }, {
      key: 'open_',
      value: function open_() {
        var _this2 = this;

        this.disableScroll_();
        var OPEN = MDCSelectFoundation.cssClasses.OPEN;

        var focusIndex = this.selectedIndex_ < 0 ? 0 : this.selectedIndex_;

        this.setMenuStylesForOpenAtIndex_(focusIndex);
        this.adapter_.floatLabel(true);
        this.adapter_.activateBottomLine();
        this.adapter_.addClass(OPEN);
        this.animationRequestId_ = requestAnimationFrame(function () {
          _this2.adapter_.openMenu(focusIndex);
          _this2.isFocused_ = true;
        });
      }
    }, {
      key: 'setMenuStylesForOpenAtIndex_',
      value: function setMenuStylesForOpenAtIndex_(index) {
        var innerHeight = this.adapter_.getWindowInnerHeight();

        var _adapter_$computeBoun = this.adapter_.computeBoundingRect(),
            left = _adapter_$computeBoun.left,
            top = _adapter_$computeBoun.top;

        this.adapter_.setMenuElAttr('aria-hidden', 'true');
        this.adapter_.setMenuElStyle('display', 'block');
        var menuHeight = this.adapter_.getMenuElOffsetHeight();
        var itemOffsetTop = this.adapter_.getOffsetTopForOptionAtIndex(index);
        this.adapter_.setMenuElStyle('display', '');
        this.adapter_.rmMenuElAttr('aria-hidden');

        var adjustedTop = top - itemOffsetTop;
        var overflowsTop = adjustedTop < 0;
        var overflowsBottom = adjustedTop + menuHeight > innerHeight;
        if (overflowsTop) {
          adjustedTop = 0;
        } else if (overflowsBottom) {
          adjustedTop = Math.max(0, innerHeight - menuHeight);
        }
        this.adapter_.setMenuElStyle('left', left + 'px');
        this.adapter_.setMenuElStyle('top', adjustedTop + 'px');
        this.adapter_.setMenuElStyle('transform-origin', 'center ' + itemOffsetTop + 'px');
      }
    }, {
      key: 'close_',
      value: function close_() {
        var OPEN = MDCSelectFoundation.cssClasses.OPEN;

        this.adapter_.removeClass(OPEN);
        this.adapter_.deactivateBottomLine();
        this.adapter_.focus();
        this.enableScroll_();
      }
    }, {
      key: 'handleDisplayViaKeyboard_',
      value: function handleDisplayViaKeyboard_(evt) {
        // We use a hard-coded 2 instead of Event.AT_TARGET to avoid having to reference a browser
        // global.
        var EVENT_PHASE_AT_TARGET = 2;
        if (evt.eventPhase !== EVENT_PHASE_AT_TARGET) {
          return;
        }

        // Prevent pressing space down from scrolling the page
        var isSpaceDown = evt.type === 'keydown' && (evt.key === 'Space' || evt.keyCode === 32);
        if (isSpaceDown) {
          evt.preventDefault();
        }

        var isOpenerKey = OPENER_KEYS.some(function (_ref2) {
          var key = _ref2.key,
              keyCode = _ref2.keyCode,
              forType = _ref2.forType;

          return evt.type === forType && (evt.key === key || evt.keyCode === keyCode);
        });

        if (isOpenerKey) {
          this.displayHandler_(evt);
        }
      }
    }, {
      key: 'disableScroll_',
      value: function disableScroll_() {
        this.adapter_.addBodyClass(cssClasses$12.SCROLL_LOCK);
      }
    }, {
      key: 'enableScroll_',
      value: function enableScroll_() {
        this.adapter_.removeBodyClass(cssClasses$12.SCROLL_LOCK);
      }
    }]);
    return MDCSelectFoundation;
  }(MDCFoundation);

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /* eslint no-unused-vars: [2, {"args": "none"}] */

  /**
   * Adapter for MDC Select Bottom Line.
   *
   * Defines the shape of the adapter expected by the foundation. Implement this
   * adapter to integrate the Select label into your framework. See
   * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
   * for more information.
   *
   * @record
   */
  var MDCSelectBottomLineAdapter = function () {
    function MDCSelectBottomLineAdapter() {
      classCallCheck(this, MDCSelectBottomLineAdapter);
    }

    createClass(MDCSelectBottomLineAdapter, [{
      key: "addClass",

      /**
       * Adds a class to the bottom line element.
       * @param {string} className
       */
      value: function addClass(className) {}

      /**
       * Removes a class from the bottom line element.
       * @param {string} className
       */

    }, {
      key: "removeClass",
      value: function removeClass(className) {}
    }]);
    return MDCSelectBottomLineAdapter;
  }();

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var cssClasses$13 = {
    BOTTOM_LINE_ACTIVE: 'mdc-select__bottom-line--active'
  };

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends {MDCFoundation<!MDCSelectBottomLineAdapter>}
   * @final
   */

  var MDCSelectBottomLineFoundation = function (_MDCFoundation) {
    inherits(MDCSelectBottomLineFoundation, _MDCFoundation);
    createClass(MDCSelectBottomLineFoundation, [{
      key: 'activate',


      /**
       * Adds the active class to bottom line
       */
      value: function activate() {
        this.adapter_.addClass(cssClasses$13.BOTTOM_LINE_ACTIVE);
      }

      /**
       * Removes the active class from the bottom line
       */

    }, {
      key: 'deactivate',
      value: function deactivate() {
        this.adapter_.removeClass(cssClasses$13.BOTTOM_LINE_ACTIVE);
      }

      /**
       * @param {!MDCSelectBottomLineAdapter} adapter
       */

    }], [{
      key: 'cssClasses',

      /** @return enum {string} */
      get: function get$$1() {
        return cssClasses$13;
      }

      /**
       * {@see MDCSelectBottomLineAdapter} for typing information on parameters and return
       * types.
       * @return {!MDCSelectBottomLineAdapter}
       */

    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return (/** @type {!MDCSelectBottomLineAdapter} */{
            addClass: function addClass() {},
            removeClass: function removeClass() {}
          }
        );
      }
    }]);

    function MDCSelectBottomLineFoundation(adapter) {
      classCallCheck(this, MDCSelectBottomLineFoundation);
      return possibleConstructorReturn(this, (MDCSelectBottomLineFoundation.__proto__ || Object.getPrototypeOf(MDCSelectBottomLineFoundation)).call(this, _extends(MDCSelectBottomLineFoundation.defaultAdapter, adapter)));
    }

    return MDCSelectBottomLineFoundation;
  }(MDCFoundation);

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /* eslint no-unused-vars: [2, {"args": "none"}] */

  /**
   * Adapter for MDC Select Label.
   *
   * Defines the shape of the adapter expected by the foundation. Implement this
   * adapter to integrate the Select label into your framework. See
   * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
   * for more information.
   *
   * @record
   */
  var MDCSelectLabelAdapter = function () {
    function MDCSelectLabelAdapter() {
      classCallCheck(this, MDCSelectLabelAdapter);
    }

    createClass(MDCSelectLabelAdapter, [{
      key: "addClass",

      /**
       * Adds a class to the label element.
       * @param {string} className
       */
      value: function addClass(className) {}

      /**
       * Removes a class from the label element.
       * @param {string} className
       */

    }, {
      key: "removeClass",
      value: function removeClass(className) {}
    }]);
    return MDCSelectLabelAdapter;
  }();

  var cssClasses$14 = {
    LABEL_FLOAT_ABOVE: 'mdc-select__label--float-above'
  };

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends {MDCFoundation<!MDCSelectLabelAdapter>}
   * @final
   */

  var MDCSelectLabelFoundation = function (_MDCFoundation) {
    inherits(MDCSelectLabelFoundation, _MDCFoundation);
    createClass(MDCSelectLabelFoundation, null, [{
      key: 'cssClasses',

      /** @return enum {string} */
      get: function get$$1() {
        return cssClasses$14;
      }

      /**
       * {@see MDCSelectLabelAdapter} for typing information on parameters and return
       * types.
       * @return {!MDCSelectLabelAdapter}
       */

    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return (/** @type {!MDCSelectLabelAdapter} */{
            addClass: function addClass() {},
            removeClass: function removeClass() {},
            getWidth: function getWidth() {}
          }
        );
      }

      /**
       * @param {!MDCSelectLabelAdapter} adapter
       */

    }]);

    function MDCSelectLabelFoundation(adapter) {
      classCallCheck(this, MDCSelectLabelFoundation);
      return possibleConstructorReturn(this, (MDCSelectLabelFoundation.__proto__ || Object.getPrototypeOf(MDCSelectLabelFoundation)).call(this, _extends(MDCSelectLabelFoundation.defaultAdapter, adapter)));
    }

    /**
     * Styles the label to float or defloat as necessary.
     * @param {string} value The value of the input.
     */


    createClass(MDCSelectLabelFoundation, [{
      key: 'styleFloat',
      value: function styleFloat(value) {
        var LABEL_FLOAT_ABOVE = MDCSelectLabelFoundation.cssClasses.LABEL_FLOAT_ABOVE;

        if (!!value) {
          this.adapter_.addClass(LABEL_FLOAT_ABOVE);
        } else {
          this.adapter_.removeClass(LABEL_FLOAT_ABOVE);
        }
      }
    }]);
    return MDCSelectLabelFoundation;
  }(MDCFoundation);

  var MDCMenuSelect = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-select mdc-menu-select", class: _vm.classes, attrs: { "role": "listbox" } }, [_c('div', { ref: "surface", staticClass: "mdc-select__surface", style: _vm.surfaceStyles, attrs: { "tabindex": _vm.tabIndex } }, [_c('div', { ref: "label", staticClass: "mdc-select__label", class: _vm.labelClasses }, [_vm._v(_vm._s(_vm.label))]), _vm._v(" "), _c('div', { ref: "selectedContent", staticClass: "mdc-select__selected-text" }, [_vm._v(_vm._s(_vm.selectedTextContent))]), _vm._v(" "), _c('div', { ref: "bottomLine", staticClass: "mdc-select__bottom-line", class: _vm.bottomLineClasses })]), _vm._v(" "), _c('mdc-menu', { ref: "menu", staticClass: "mdc-select__menu", on: { "update": _vm.refreshIndex } }, [_vm._t("default")], 2)], 1);
    }, staticRenderFns: [],
    name: 'mdc-menu-select',
    model: {
      prop: 'value',
      event: 'change'
    },
    props: {
      multiple: Boolean,
      value: [String, Array],
      disabled: Boolean,
      label: String,
      box: Boolean
    },
    data: function data() {
      return {
        classes: {
          'mdc-select--box': this.box
        },
        labelClasses: {},
        bottomLineClasses: {},
        surfaceStyles: {},
        tabIndex: 0,
        selectedTextContent: ''
      };
    },

    components: {
      'mdc-menu': mdcMenu
    },
    watch: {
      disabled: function disabled(value) {
        this.foundation && this.foundation.setDisabled(value);
      },
      value: function value() {
        this.refreshIndex();
      },
      box: function box() {
        this.$set(this.classes, 'mdc-select--box', this.box);
      }
    },
    methods: {
      refreshIndex: function refreshIndex() {
        if (this.foundation) {
          var options = this.$refs.menu.items;
          for (var i = 0; i < options.length; i++) {
            var optionValue = options[i].getAttribute('data-value') || options[i].textContent.trim();
            if (this.value == optionValue) {
              this.foundation.setSelectedIndex(i);
              //TODO: MDCFIX force float above if value is valid
              this.$set(this.labelClasses, 'mdc-select__label--float-above', true);
              return;
            }
          }
          //TODO: MDCFIX force float above if value is valid
          this.foundation.setSelectedIndex(-1);
          this.$set(this.labelClasses, 'mdc-select__label--float-above', false);
          this.$emit('change', this.foundation.getValue()); // TODO: MDCFIX
        }
      }
    },
    mounted: function mounted() {
      var _this = this;

      this.labelFoundation = new MDCSelectLabelFoundation({
        addClass: function addClass(className) {
          return _this.$set(_this.labelClasses, className, true);
        },
        removeClass: function removeClass(className) {
          return _this.$delete(_this.labelClasses, className);
        }
      });

      this.bottomLineFoundation = new MDCSelectBottomLineFoundation({
        addClass: function addClass(className) {
          _this.$set(_this.bottomLineClasses, className, true);
        },
        removeClass: function removeClass(className) {
          _this.$delete(_this.bottomLineClasses, className);
        }
      });
      this.bottomLineFoundation.init();

      this.foundation = new MDCSelectFoundation({
        addClass: function addClass(className) {
          return _this.$set(_this.classes, className, true);
        },
        removeClass: function removeClass(className) {
          return _this.$delete(_this.classes, className);
        },
        floatLabel: function floatLabel(value) {
          _this.labelFoundation.styleFloat(value);
        },
        activateBottomLine: function activateBottomLine() {
          _this.bottomLineFoundation.activate();
        },
        deactivateBottomLine: function deactivateBottomLine() {
          _this.bottomLineFoundation.deactivate();
        },
        setAttr: function setAttr(attr, value) {
          return _this.$el.setAttribute(attr, value);
        },
        rmAttr: function rmAttr(attr, value) {
          return _this.$el.removeAttribute(attr, value);
        },
        computeBoundingRect: function computeBoundingRect() {
          return _this.$refs.surface.getBoundingClientRect();
        },
        registerInteractionHandler: function registerInteractionHandler(type, handler) {
          return _this.$refs.surface.addEventListener(type, handler);
        },
        deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
          return _this.$refs.surface.removeEventListener(type, handler);
        },
        focus: function focus() {
          return _this.$refs.surface.focus();
        },
        makeTabbable: function makeTabbable() {
          _this.tabIndex = 0;
        },
        makeUntabbable: function makeUntabbable() {
          _this.tabIndex = -1;
        },
        getComputedStyleValue: function getComputedStyleValue(prop) {
          return window.getComputedStyle(_this.$refs.surface).getPropertyValue(prop);
        },
        setStyle: function setStyle(propertyName, value) {
          return _this.$set(_this.surfaceStyles, propertyName, value);
        },
        create2dRenderingContext: function create2dRenderingContext() {
          return document.createElement('canvas').getContext('2d');
        },
        setMenuElStyle: function setMenuElStyle(propertyName, value) {
          return _this.$refs.menu.$el.style[propertyName] = value;
        },
        setMenuElAttr: function setMenuElAttr(attr, value) {
          return _this.$refs.menu.$el.setAttribute(attr, value);
        },
        rmMenuElAttr: function rmMenuElAttr(attr) {
          return _this.$refs.menu.$el.removeAttribute(attr);
        },
        getMenuElOffsetHeight: function getMenuElOffsetHeight() {
          return _this.$refs.menu.$el.offsetHeight;
        },
        openMenu: function openMenu(focusIndex) {
          return _this.$refs.menu.show({ focusIndex: focusIndex });
        },
        isMenuOpen: function isMenuOpen() {
          return _this.$refs.menu.isOpen();
        },
        setSelectedTextContent: function setSelectedTextContent(selectedTextContent) {
          _this.selectedTextContent = selectedTextContent;
        },
        getNumberOfOptions: function getNumberOfOptions() {
          return _this.$refs.menu.items.length;
        },
        getTextForOptionAtIndex: function getTextForOptionAtIndex(index) {
          return _this.$refs.menu.items[index].textContent.trim();
        },
        getValueForOptionAtIndex: function getValueForOptionAtIndex(index) {
          return _this.$refs.menu.items[index].getAttribute('data-value') || _this.$refs.menu.items[index].textContent.trim();
        },
        setAttrForOptionAtIndex: function setAttrForOptionAtIndex(index, attr, value) {
          return _this.$refs.menu.items[index].setAttribute(attr, value);
        },
        rmAttrForOptionAtIndex: function rmAttrForOptionAtIndex(index, attr) {
          return _this.$refs.menu.items[index].removeAttribute(attr);
        },
        getOffsetTopForOptionAtIndex: function getOffsetTopForOptionAtIndex(index) {
          return _this.$refs.menu.items[index].offsetTop;
        },
        registerMenuInteractionHandler: function registerMenuInteractionHandler(type, handler) {
          return _this.$refs.menu.$el.addEventListener(type, handler);
        },
        deregisterMenuInteractionHandler: function deregisterMenuInteractionHandler(type, handler) {
          return _this.$refs.menu.$el.removeEventListener(type, handler);
        },
        notifyChange: function notifyChange() {
          _this.$emit('change', _this.foundation.getValue());
        },
        getWindowInnerHeight: function getWindowInnerHeight() {
          return window.innerHeight;
        },
        addBodyClass: function addBodyClass(className) {
          return document.body.classList.add(className);
        },
        removeBodyClass: function removeBodyClass(className) {
          return document.body.classList.remove(className);
        }
      });

      //TODO: MDCFIX
      var foundation = this.foundation;
      if (foundation) {
        foundation.resize = function () {
          if (!foundation.ctx_) {
            return;
          }
          var font = foundation.adapter_.getComputedStyleValue('font');
          var letterSpacing = parseFloat(foundation.adapter_.getComputedStyleValue('letter-spacing'));
          if (font) {
            foundation.ctx_.font = font;
          } else {
            var primaryFontFamily = foundation.adapter_.getComputedStyleValue('font-family').split(',')[0];
            var fontSize = foundation.adapter_.getComputedStyleValue('font-size');
            foundation.ctx_.font = fontSize + ' ' + primaryFontFamily;
          }

          var maxTextLength = 0;

          var surfacePaddingRight = parseInt(foundation.adapter_.getComputedStyleValue('padding-right'), 10);
          var surfacePaddingLeft = parseInt(foundation.adapter_.getComputedStyleValue('padding-left'), 10);
          var selectBoxAddedPadding = surfacePaddingRight + surfacePaddingLeft;

          for (var i = 0, l = foundation.adapter_.getNumberOfOptions(); i < l; i++) {
            var txt = foundation.adapter_.getTextForOptionAtIndex(i).trim();

            var _foundation$ctx_$meas = foundation.ctx_.measureText(txt),
                _width = _foundation$ctx_$meas.width;

            var _addedSpace = letterSpacing * txt.length;

            maxTextLength = Math.max(maxTextLength, Math.ceil(_width + _addedSpace + selectBoxAddedPadding));
          }

          var labelTxt = _this.label;

          var _foundation$ctx_$meas2 = foundation.ctx_.measureText(labelTxt),
              width = _foundation$ctx_$meas2.width;

          var addedSpace = letterSpacing * labelTxt.length;

          maxTextLength = Math.max(maxTextLength, Math.ceil(width + addedSpace + selectBoxAddedPadding));

          foundation.adapter_.setStyle('width', maxTextLength + 'px');
        };
      }
      ///
      this.labelFoundation.init();
      this.foundation.init();
      this.foundation.setDisabled(this.disabled);
      this.refreshIndex();
      if (this.value !== this.foundation.getValue()) {
        this.$emit('change', this.foundation.getValue());
      }
    },
    beforeDestroy: function beforeDestroy() {
      var foundation = this.foundation;
      this.foundation = null;
      foundation.destroy();

      var labelFoundation = this.labelFoundation;
      this.labelFoundation = null;
      labelFoundation.destroy();

      var bottomLineFoundation = this.bottomLineFoundation;
      this.bottomLineFoundation = null;
      bottomLineFoundation.destroy();
    }
  };

  var MDCMultiSelect = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('select', { directives: [{ name: "model", rawName: "v-model", value: _vm.selected, expression: "selected" }], ref: "root", staticClass: "mdc-select mdc-multi-select mdc-list", style: _vm.styles, attrs: { "multiple": _vm.multiple, "disabled": _vm.disabled }, on: { "change": [function ($event) {
            var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {
              return o.selected;
            }).map(function (o) {
              var val = "_value" in o ? o._value : o.value;return val;
            });_vm.selected = $event.target.multiple ? $$selectedVal : $$selectedVal[0];
          }, _vm.onChange] } }, [_vm.label ? _c('optgroup', { ref: "optgroup", staticClass: "mdc-list-group", attrs: { "label": _vm.label } }, [_vm._t("default")], 2) : _vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-multi-select',
    model: {
      prop: 'value',
      event: 'change'
    },
    props: {
      multiple: Boolean,
      value: [String, Array],
      disabled: Boolean,
      label: String,
      maxSize: {
        type: [String, Number],
        default: 4
      }
    },
    data: function data() {
      return {
        selected: this.value,
        size: undefined,
        count: undefined
      };
    },

    computed: {
      styles: function styles() {
        var scroll = this.count > this.size;
        var size = 48 * this.size + (scroll ? 0 : 16);

        var styles = {
          'height': size + 'px',
          'overflow-y': scroll ? 'scroll' : 'hidden'
        };
        if (!scroll) {
          styles['background-image'] = 'unset';
        }
        return styles;
      }
    },
    methods: {
      onChange: function onChange() {
        this.$emit('change', this.selected);
      }
    },
    mounted: function mounted() {
      var _this = this;

      var refreshSize = function refreshSize() {
        var count = _this.$refs.root.querySelectorAll('option, optgroup').length;
        _this.count = count;
        var max = Number(_this.maxSize);
        if (_this.label) {
          max += 1;
        }
        _this.size = Math.min(count, max);
      };

      this.slotObserver = new MutationObserver(function () {
        return refreshSize();
      });
      this.slotObserver.observe(this.$el, { childList: true, subtree: true });

      refreshSize();
    },
    beforeDestroy: function beforeDestroy() {
      this.slotObserver.disconnect();
    }
  };

  var media$1 = new (function () {
    function _class() {
      classCallCheck(this, _class);
    }

    createClass(_class, [{
      key: 'mobile',
      get: function get$$1() {
        return this._mobile || (this._mobile = window.matchMedia('(max-width: 600px) and (pointer: coarse)'));
      }
    }]);
    return _class;
  }())();

  var mdcSelect = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c(_vm.type, _vm._b({ tag: "component", attrs: { "multiple": _vm.multiple, "label": _vm.label, "value": _vm.value }, on: { "change": _vm.onChange } }, 'component', _vm.$attrs, false), [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-select',
    mixins: [DispatchFocusMixin],
    model: {
      prop: 'value',
      event: 'change'
    },
    props: {
      multiple: Boolean,
      value: [String, Array],
      label: String,
      native: Boolean,
      menu: Boolean
    },
    provide: function provide() {
      return { mdcSelect: this };
    },

    components: {
      'mdc-native-select': MDCNativeSelect,
      'mdc-menu-select': MDCMenuSelect,
      'mdc-multi-select': MDCMultiSelect
    },
    data: function data() {
      return {
        mobile: window ? media$1.mobile.matches : true
      };
    },

    computed: {
      type: function type() {
        return this.multiple ? 'mdc-multi-select' : this.menu ? 'mdc-menu-select' : this.isNative ? 'mdc-native-select' : 'mdc-menu-select';
      },
      isNative: function isNative() {
        return this.native || this.multiple || this.mobile;
      }
    },
    methods: {
      onChange: function onChange(value) {
        this.$emit('change', value);
      },
      refreshMedia: function refreshMedia() {
        this.mobile = media$1.mobile.matches;
      }
    },
    beforeMount: function beforeMount() {
      media$1.mobile.addListener(this.refreshMedia);
      this.refreshMedia();
    },
    beforeDestroy: function beforeDestroy() {
      media$1.mobile.removeListener(this.refreshMedia);
    }
  };

  var MDCNativeOption = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _vm.hasValue ? _c('option', { staticClass: "mdc-option mdc-native-option", attrs: { "disabled": _vm.disabled }, domProps: { "value": _vm.value } }, [_vm._t("default")], 2) : _c('option', { staticClass: "mdc-option mdc-native-option", attrs: { "disabled": _vm.disabled } }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-native-option',
    props: {
      value: String,
      disabled: Boolean
    },
    computed: {
      hasValue: function hasValue() {
        return !(typeof this.value === 'undefined');
      }
    }
  };

  var MDCMenuOption = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('li', { staticClass: "mdc-option mdc-menu-option mdc-list-item", attrs: { "role": "option", "tabindex": _vm.disabled ? -1 : 0, "aria-disabled": _vm.disabled, "data-value": _vm.value } }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-menu-option',
    props: {
      value: String,
      disabled: Boolean
    }
  };

  var MDCMultiOption = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _vm.hasValue ? _c('option', { staticClass: "mdc-option mdc-multi-option mdc-list-item", attrs: { "disabled": _vm.disabled }, domProps: { "value": _vm.value } }, [_vm._t("default")], 2) : _c('option', { staticClass: "mdc-option mdc-multi-option mdc-list-item", attrs: { "disabled": _vm.disabled } }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-multi-option',
    props: {
      value: String,
      disabled: Boolean
    },
    computed: {
      hasValue: function hasValue() {
        return !(typeof this.value === 'undefined');
      }
    }
  };

  var mdcOption = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c(_vm.type, { tag: "component", attrs: { "disabled": _vm.disabled, "value": _vm.value } }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-option',
    props: {
      value: String,
      disabled: Boolean
    },
    inject: ['mdcSelect'],
    components: {
      'mdc-native-option': MDCNativeOption,
      'mdc-multi-option': MDCMultiOption,
      'mdc-menu-option': MDCMenuOption
    },
    computed: {
      isNative: function isNative() {
        return this.mdcSelect.isNative;
      },
      multiple: function multiple() {
        return this.mdcSelect.multiple;
      },
      menu: function menu() {
        return this.mdcSelect.menu;
      },
      type: function type() {
        return this.multiple ? 'mdc-multi-option' : this.menu ? 'mdc-menu-option' : this.isNative ? 'mdc-native-option' : 'mdc-menu-option';
      }
    }
  };

  var VueMDCSelect = BasePlugin({
    mdcSelect: mdcSelect,
    mdcOption: mdcOption
  });

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   * http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @enum {string} */
  var cssClasses$15 = {
    ACTIVE: 'mdc-slider--active',
    DISABLED: 'mdc-slider--disabled',
    DISCRETE: 'mdc-slider--discrete',
    FOCUS: 'mdc-slider--focus',
    IN_TRANSIT: 'mdc-slider--in-transit',
    IS_DISCRETE: 'mdc-slider--discrete',
    HAS_TRACK_MARKER: 'mdc-slider--display-markers'
  };

  /** @enum {string} */
  var strings$14 = {
    TRACK_SELECTOR: '.mdc-slider__track',
    TRACK_MARKER_CONTAINER_SELECTOR: '.mdc-slider__track-marker-container',
    LAST_TRACK_MARKER_SELECTOR: '.mdc-slider__track-marker:last-child',
    THUMB_CONTAINER_SELECTOR: '.mdc-slider__thumb-container',
    PIN_VALUE_MARKER_SELECTOR: '.mdc-slider__pin-value-marker',
    ARIA_VALUEMIN: 'aria-valuemin',
    ARIA_VALUEMAX: 'aria-valuemax',
    ARIA_VALUENOW: 'aria-valuenow',
    ARIA_DISABLED: 'aria-disabled',
    STEP_DATA_ATTR: 'data-step',
    CHANGE_EVENT: 'MDCSlider:change',
    INPUT_EVENT: 'MDCSlider:input'
  };

  /** @enum {number} */
  var numbers$3 = {
    PAGE_FACTOR: 4
  };

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   * http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /* eslint-disable no-unused-vars */

  /**
   * Adapter for MDC Slider.
   *
   * Defines the shape of the adapter expected by the foundation. Implement this
   * adapter to integrate the Slider into your framework. See
   * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
   * for more information.
   *
   * @record
   */
  var MDCSliderAdapter = function () {
    function MDCSliderAdapter() {
      classCallCheck(this, MDCSliderAdapter);
    }

    createClass(MDCSliderAdapter, [{
      key: "hasClass",

      /**
       * Returns true if className exists for the slider Element
       * @param {string} className
       * @return {boolean}
       */
      value: function hasClass(className) {}

      /**
       * Adds a class to the slider Element
       * @param {string} className
       */

    }, {
      key: "addClass",
      value: function addClass(className) {}

      /**
       * Removes a class from the slider Element
       * @param {string} className
       */

    }, {
      key: "removeClass",
      value: function removeClass(className) {}

      /**
       * Returns a string if attribute name exists on the slider Element,
       * otherwise returns null
       * @param {string} name
       * @return {?string}
       */

    }, {
      key: "getAttribute",
      value: function getAttribute(name) {}

      /**
       * Sets attribute name on slider Element to value
       * @param {string} name
       * @param {string} value
       */

    }, {
      key: "setAttribute",
      value: function setAttribute(name, value) {}

      /**
       * Removes attribute name from slider Element
       * @param {string} name
       */

    }, {
      key: "removeAttribute",
      value: function removeAttribute(name) {}

      /**
       * Returns the bounding client rect for the slider Element
       * @return {?ClientRect}
       */

    }, {
      key: "computeBoundingRect",
      value: function computeBoundingRect() {}

      /**
       * Returns the tab index of the slider Element
       * @return {number}
       */

    }, {
      key: "getTabIndex",
      value: function getTabIndex() {}

      /**
       * Registers an event handler on the root element for a given event.
       * @param {string} type
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "registerInteractionHandler",
      value: function registerInteractionHandler(type, handler) {}

      /**
       * Deregisters an event handler on the root element for a given event.
       * @param {string} type
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "deregisterInteractionHandler",
      value: function deregisterInteractionHandler(type, handler) {}

      /**
       * Registers an event handler on the thumb container element for a given event.
       * @param {string} type
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "registerThumbContainerInteractionHandler",
      value: function registerThumbContainerInteractionHandler(type, handler) {}

      /**
       * Deregisters an event handler on the thumb container element for a given event.
       * @param {string} type
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "deregisterThumbContainerInteractionHandler",
      value: function deregisterThumbContainerInteractionHandler(type, handler) {}

      /**
       * Registers an event handler on the body for a given event.
       * @param {string} type
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "registerBodyInteractionHandler",
      value: function registerBodyInteractionHandler(type, handler) {}

      /**
       * Deregisters an event handler on the body for a given event.
       * @param {string} type
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "deregisterBodyInteractionHandler",
      value: function deregisterBodyInteractionHandler(type, handler) {}

      /**
       * Registers an event handler for the window resize event
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "registerResizeHandler",
      value: function registerResizeHandler(handler) {}

      /**
       * Deregisters an event handler for the window resize event
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "deregisterResizeHandler",
      value: function deregisterResizeHandler(handler) {}

      /**
       * Emits a custom event MDCSlider:input from the root
       */

    }, {
      key: "notifyInput",
      value: function notifyInput() {}

      /**
       * Emits a custom event MDCSlider:change from the root
       */

    }, {
      key: "notifyChange",
      value: function notifyChange() {}

      /**
       * Sets a style property of the thumb container element to the passed value
       * @param {string} propertyName
       * @param {string} value
       */

    }, {
      key: "setThumbContainerStyleProperty",
      value: function setThumbContainerStyleProperty(propertyName, value) {}

      /**
       * Sets a style property of the track element to the passed value
       * @param {string} propertyName
       * @param {string} value
       */

    }, {
      key: "setTrackStyleProperty",
      value: function setTrackStyleProperty(propertyName, value) {}

      /**
       * Sets the inner text of the pin marker to the passed value
       * @param {number} value
       */

    }, {
      key: "setMarkerValue",
      value: function setMarkerValue(value) {}

      /**
       * Appends the passed number of track markers to the track mark container element
       * @param {number} numMarkers
       */

    }, {
      key: "appendTrackMarkers",
      value: function appendTrackMarkers(numMarkers) {}

      /**
       * Removes all track markers fromt he track mark container element
       */

    }, {
      key: "removeTrackMarkers",
      value: function removeTrackMarkers() {}

      /**
       * Sets a style property of the last track marker to the passed value
       * @param {string} propertyName
       * @param {string} value
       */

    }, {
      key: "setLastTrackMarkersStyleProperty",
      value: function setLastTrackMarkersStyleProperty(propertyName, value) {}

      /**
       * Returns true if the root element is RTL, otherwise false
       * @return {boolean}
       */

    }, {
      key: "isRTL",
      value: function isRTL() {}
    }]);
    return MDCSliderAdapter;
  }();

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   *you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   * http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @enum {string} */
  var KEY_IDS = {
    ARROW_LEFT: 'ArrowLeft',
    ARROW_RIGHT: 'ArrowRight',
    ARROW_UP: 'ArrowUp',
    ARROW_DOWN: 'ArrowDown',
    HOME: 'Home',
    END: 'End',
    PAGE_UP: 'PageUp',
    PAGE_DOWN: 'PageDown'
  };

  /** @enum {string} */
  var MOVE_EVENT_MAP = {
    'mousedown': 'mousemove',
    'touchstart': 'touchmove',
    'pointerdown': 'pointermove'
  };

  var DOWN_EVENTS = ['mousedown', 'pointerdown', 'touchstart'];
  var UP_EVENTS = ['mouseup', 'pointerup', 'touchend'];

  /**
   * @extends {MDCFoundation<!MDCSliderAdapter>}
   */

  var MDCSliderFoundation = function (_MDCFoundation) {
    inherits(MDCSliderFoundation, _MDCFoundation);
    createClass(MDCSliderFoundation, null, [{
      key: 'cssClasses',

      /** @return enum {cssClasses} */
      get: function get$$1() {
        return cssClasses$15;
      }

      /** @return enum {strings} */

    }, {
      key: 'strings',
      get: function get$$1() {
        return strings$14;
      }

      /** @return enum {numbers} */

    }, {
      key: 'numbers',
      get: function get$$1() {
        return numbers$3;
      }

      /** @return {!MDCSliderAdapter} */

    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return (/** @type {!MDCSliderAdapter} */{
            hasClass: function hasClass() {
              return (/* className: string */ /* boolean */false
              );
            },
            addClass: function addClass() /* className: string */{},
            removeClass: function removeClass() /* className: string */{},
            getAttribute: function getAttribute() {
              return (/* name: string */ /* string|null */null
              );
            },
            setAttribute: function setAttribute() /* name: string, value: string */{},
            removeAttribute: function removeAttribute() /* name: string */{},
            computeBoundingRect: function computeBoundingRect() {
              return (/* ClientRect */{
                  top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0
                }
              );
            },
            getTabIndex: function getTabIndex() {
              return (/* number */0
              );
            },
            registerInteractionHandler: function registerInteractionHandler() /* type: string, handler: EventListener */{},
            deregisterInteractionHandler: function deregisterInteractionHandler() /* type: string, handler: EventListener */{},
            registerThumbContainerInteractionHandler: function registerThumbContainerInteractionHandler() /* type: string, handler: EventListener */{},
            deregisterThumbContainerInteractionHandler: function deregisterThumbContainerInteractionHandler() /* type: string, handler: EventListener */{},
            registerBodyInteractionHandler: function registerBodyInteractionHandler() /* type: string, handler: EventListener */{},
            deregisterBodyInteractionHandler: function deregisterBodyInteractionHandler() /* type: string, handler: EventListener */{},
            registerResizeHandler: function registerResizeHandler() /* handler: EventListener */{},
            deregisterResizeHandler: function deregisterResizeHandler() /* handler: EventListener */{},
            notifyInput: function notifyInput() {},
            notifyChange: function notifyChange() {},
            setThumbContainerStyleProperty: function setThumbContainerStyleProperty() /* propertyName: string, value: string */{},
            setTrackStyleProperty: function setTrackStyleProperty() /* propertyName: string, value: string */{},
            setMarkerValue: function setMarkerValue() /* value: number */{},
            appendTrackMarkers: function appendTrackMarkers() /* numMarkers: number */{},
            removeTrackMarkers: function removeTrackMarkers() {},
            setLastTrackMarkersStyleProperty: function setLastTrackMarkersStyleProperty() /* propertyName: string, value: string */{},
            isRTL: function isRTL() {
              return (/* boolean */false
              );
            }
          }
        );
      }

      /**
       * Creates a new instance of MDCSliderFoundation
       * @param {?MDCSliderAdapter} adapter
       */

    }]);

    function MDCSliderFoundation(adapter) {
      classCallCheck(this, MDCSliderFoundation);

      /** @private {?ClientRect} */
      var _this = possibleConstructorReturn(this, (MDCSliderFoundation.__proto__ || Object.getPrototypeOf(MDCSliderFoundation)).call(this, _extends(MDCSliderFoundation.defaultAdapter, adapter)));

      _this.rect_ = null;
      // We set this to NaN since we want it to be a number, but we can't use '0' or '-1'
      // because those could be valid tabindices set by the client code.
      _this.savedTabIndex_ = NaN;
      _this.active_ = false;
      _this.inTransit_ = false;
      _this.isDiscrete_ = false;
      _this.hasTrackMarker_ = false;
      _this.handlingThumbTargetEvt_ = false;
      _this.min_ = 0;
      _this.max_ = 100;
      _this.step_ = 0;
      _this.value_ = 0;
      _this.disabled_ = false;
      _this.preventFocusState_ = false;
      _this.updateUIFrame_ = 0;
      _this.thumbContainerPointerHandler_ = function () {
        _this.handlingThumbTargetEvt_ = true;
      };
      _this.interactionStartHandler_ = function (evt) {
        return _this.handleDown_(evt);
      };
      _this.keydownHandler_ = function (evt) {
        return _this.handleKeydown_(evt);
      };
      _this.focusHandler_ = function () {
        return _this.handleFocus_();
      };
      _this.blurHandler_ = function () {
        return _this.handleBlur_();
      };
      _this.resizeHandler_ = function () {
        return _this.layout();
      };
      return _this;
    }

    createClass(MDCSliderFoundation, [{
      key: 'init',
      value: function init() {
        var _this2 = this;

        this.isDiscrete_ = this.adapter_.hasClass(cssClasses$15.IS_DISCRETE);
        this.hasTrackMarker_ = this.adapter_.hasClass(cssClasses$15.HAS_TRACK_MARKER);
        DOWN_EVENTS.forEach(function (evtName) {
          return _this2.adapter_.registerInteractionHandler(evtName, _this2.interactionStartHandler_);
        });
        this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);
        this.adapter_.registerInteractionHandler('focus', this.focusHandler_);
        this.adapter_.registerInteractionHandler('blur', this.blurHandler_);
        DOWN_EVENTS.forEach(function (evtName) {
          _this2.adapter_.registerThumbContainerInteractionHandler(evtName, _this2.thumbContainerPointerHandler_);
        });
        this.adapter_.registerResizeHandler(this.resizeHandler_);
        this.layout();
        // At last step, provide a reasonable default value to discrete slider
        if (this.isDiscrete_ && this.getStep() == 0) {
          this.step_ = 1;
        }
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        var _this3 = this;

        DOWN_EVENTS.forEach(function (evtName) {
          _this3.adapter_.deregisterInteractionHandler(evtName, _this3.interactionStartHandler_);
        });
        this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);
        this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);
        this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);
        DOWN_EVENTS.forEach(function (evtName) {
          _this3.adapter_.deregisterThumbContainerInteractionHandler(evtName, _this3.thumbContainerPointerHandler_);
        });
        this.adapter_.deregisterResizeHandler(this.resizeHandler_);
      }
    }, {
      key: 'setupTrackMarker',
      value: function setupTrackMarker() {
        if (this.isDiscrete_ && this.hasTrackMarker_ && this.getStep() != 0) {
          var min = this.getMin();
          var max = this.getMax();
          var step = this.getStep();
          var numMarkers = (max - min) / step;

          // In case distance between max & min is indivisible to step,
          // we place the secondary to last marker proportionally at where thumb
          // could reach and place the last marker at max value
          var indivisible = Math.ceil(numMarkers) !== numMarkers;
          if (indivisible) {
            numMarkers = Math.ceil(numMarkers);
          }

          this.adapter_.removeTrackMarkers();
          this.adapter_.appendTrackMarkers(numMarkers);

          if (indivisible) {
            var lastStepRatio = (max - numMarkers * step) / step + 1;
            var flex = getCorrectPropertyName(window, 'flex');
            this.adapter_.setLastTrackMarkersStyleProperty(flex, String(lastStepRatio));
          }
        }
      }
    }, {
      key: 'layout',
      value: function layout() {
        this.rect_ = this.adapter_.computeBoundingRect();
        this.updateUIForCurrentValue_();
      }

      /** @return {number} */

    }, {
      key: 'getValue',
      value: function getValue() {
        return this.value_;
      }

      /** @param {number} value */

    }, {
      key: 'setValue',
      value: function setValue(value) {
        this.setValue_(value, false);
      }

      /** @return {number} */

    }, {
      key: 'getMax',
      value: function getMax() {
        return this.max_;
      }

      /** @param {number} max */

    }, {
      key: 'setMax',
      value: function setMax(max) {
        if (max < this.min_) {
          throw new Error('Cannot set max to be less than the slider\'s minimum value');
        }
        this.max_ = max;
        this.setValue_(this.value_, false, true);
        this.adapter_.setAttribute(strings$14.ARIA_VALUEMAX, String(this.max_));
        this.setupTrackMarker();
      }

      /** @return {number} */

    }, {
      key: 'getMin',
      value: function getMin() {
        return this.min_;
      }

      /** @param {number} min */

    }, {
      key: 'setMin',
      value: function setMin(min) {
        if (min > this.max_) {
          throw new Error('Cannot set min to be greater than the slider\'s maximum value');
        }
        this.min_ = min;
        this.setValue_(this.value_, false, true);
        this.adapter_.setAttribute(strings$14.ARIA_VALUEMIN, String(this.min_));
        this.setupTrackMarker();
      }

      /** @return {number} */

    }, {
      key: 'getStep',
      value: function getStep() {
        return this.step_;
      }

      /** @param {number} step */

    }, {
      key: 'setStep',
      value: function setStep(step) {
        if (step < 0) {
          throw new Error('Step cannot be set to a negative number');
        }
        if (this.isDiscrete_ && (typeof step !== 'number' || step < 1)) {
          step = 1;
        }
        this.step_ = step;
        this.setValue_(this.value_, false, true);
        this.setupTrackMarker();
      }

      /** @return {boolean} */

    }, {
      key: 'isDisabled',
      value: function isDisabled() {
        return this.disabled_;
      }

      /** @param {boolean} disabled */

    }, {
      key: 'setDisabled',
      value: function setDisabled(disabled) {
        this.disabled_ = disabled;
        this.toggleClass_(cssClasses$15.DISABLED, this.disabled_);
        if (this.disabled_) {
          this.savedTabIndex_ = this.adapter_.getTabIndex();
          this.adapter_.setAttribute(strings$14.ARIA_DISABLED, 'true');
          this.adapter_.removeAttribute('tabindex');
        } else {
          this.adapter_.removeAttribute(strings$14.ARIA_DISABLED);
          if (!isNaN(this.savedTabIndex_)) {
            this.adapter_.setAttribute('tabindex', String(this.savedTabIndex_));
          }
        }
      }

      /**
       * Called when the user starts interacting with the slider
       * @param {!Event} evt
       * @private
       */

    }, {
      key: 'handleDown_',
      value: function handleDown_(evt) {
        var _this4 = this;

        if (this.disabled_) {
          return;
        }

        this.preventFocusState_ = true;
        this.setInTransit_(!this.handlingThumbTargetEvt_);
        this.handlingThumbTargetEvt_ = false;
        this.setActive_(true);

        var moveHandler = function moveHandler(evt) {
          _this4.handleMove_(evt);
        };

        // Note: upHandler is [de]registered on ALL potential pointer-related release event types, since some browsers
        // do not always fire these consistently in pairs.
        // (See https://github.com/material-components/material-components-web/issues/1192)
        var upHandler = function upHandler() {
          _this4.handleUp_();
          _this4.adapter_.deregisterBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);
          UP_EVENTS.forEach(function (evtName) {
            return _this4.adapter_.deregisterBodyInteractionHandler(evtName, upHandler);
          });
        };

        this.adapter_.registerBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);
        UP_EVENTS.forEach(function (evtName) {
          return _this4.adapter_.registerBodyInteractionHandler(evtName, upHandler);
        });
        this.setValueFromEvt_(evt);
      }

      /**
       * Called when the user moves the slider
       * @param {!Event} evt
       * @private
       */

    }, {
      key: 'handleMove_',
      value: function handleMove_(evt) {
        evt.preventDefault();
        this.setValueFromEvt_(evt);
      }

      /**
       * Called when the user's interaction with the slider ends
       * @private
       */

    }, {
      key: 'handleUp_',
      value: function handleUp_() {
        this.setActive_(false);
        this.adapter_.notifyChange();
      }

      /**
       * Returns the pageX of the event
       * @param {!Event} evt
       * @return {number}
       * @private
       */

    }, {
      key: 'getPageX_',
      value: function getPageX_(evt) {
        if (evt.targetTouches && evt.targetTouches.length > 0) {
          return evt.targetTouches[0].pageX;
        }
        return evt.pageX;
      }

      /**
       * Sets the slider value from an event
       * @param {!Event} evt
       * @private
       */

    }, {
      key: 'setValueFromEvt_',
      value: function setValueFromEvt_(evt) {
        var pageX = this.getPageX_(evt);
        var value = this.computeValueFromPageX_(pageX);
        this.setValue_(value, true);
      }

      /**
       * Computes the new value from the pageX position
       * @param {number} pageX
       * @return {number}
       */

    }, {
      key: 'computeValueFromPageX_',
      value: function computeValueFromPageX_(pageX) {
        var max = this.max_,
            min = this.min_;

        var xPos = pageX - this.rect_.left;
        var pctComplete = xPos / this.rect_.width;
        if (this.adapter_.isRTL()) {
          pctComplete = 1 - pctComplete;
        }
        // Fit the percentage complete between the range [min,max]
        // by remapping from [0, 1] to [min, min+(max-min)].
        return min + pctComplete * (max - min);
      }

      /**
       * Handles keydown events
       * @param {!Event} evt
       */

    }, {
      key: 'handleKeydown_',
      value: function handleKeydown_(evt) {
        var keyId = this.getKeyId_(evt);
        var value = this.getValueForKeyId_(keyId);
        if (isNaN(value)) {
          return;
        }

        // Prevent page from scrolling due to key presses that would normally scroll the page
        evt.preventDefault();
        this.adapter_.addClass(cssClasses$15.FOCUS);
        this.setValue_(value, true);
        this.adapter_.notifyChange();
      }

      /**
       * Returns the computed name of the event
       * @param {!Event} kbdEvt
       * @return {string}
       */

    }, {
      key: 'getKeyId_',
      value: function getKeyId_(kbdEvt) {
        if (kbdEvt.key === KEY_IDS.ARROW_LEFT || kbdEvt.keyCode === 37) {
          return KEY_IDS.ARROW_LEFT;
        }
        if (kbdEvt.key === KEY_IDS.ARROW_RIGHT || kbdEvt.keyCode === 39) {
          return KEY_IDS.ARROW_RIGHT;
        }
        if (kbdEvt.key === KEY_IDS.ARROW_UP || kbdEvt.keyCode === 38) {
          return KEY_IDS.ARROW_UP;
        }
        if (kbdEvt.key === KEY_IDS.ARROW_DOWN || kbdEvt.keyCode === 40) {
          return KEY_IDS.ARROW_DOWN;
        }
        if (kbdEvt.key === KEY_IDS.HOME || kbdEvt.keyCode === 36) {
          return KEY_IDS.HOME;
        }
        if (kbdEvt.key === KEY_IDS.END || kbdEvt.keyCode === 35) {
          return KEY_IDS.END;
        }
        if (kbdEvt.key === KEY_IDS.PAGE_UP || kbdEvt.keyCode === 33) {
          return KEY_IDS.PAGE_UP;
        }
        if (kbdEvt.key === KEY_IDS.PAGE_DOWN || kbdEvt.keyCode === 34) {
          return KEY_IDS.PAGE_DOWN;
        }

        return '';
      }

      /**
       * Computes the value given a keyboard key ID
       * @param {string} keyId
       * @return {number}
       */

    }, {
      key: 'getValueForKeyId_',
      value: function getValueForKeyId_(keyId) {
        var max = this.max_,
            min = this.min_,
            step = this.step_;

        var delta = step || (max - min) / 100;
        var valueNeedsToBeFlipped = this.adapter_.isRTL() && (keyId === KEY_IDS.ARROW_LEFT || keyId === KEY_IDS.ARROW_RIGHT);
        if (valueNeedsToBeFlipped) {
          delta = -delta;
        }

        switch (keyId) {
          case KEY_IDS.ARROW_LEFT:
          case KEY_IDS.ARROW_DOWN:
            return this.value_ - delta;
          case KEY_IDS.ARROW_RIGHT:
          case KEY_IDS.ARROW_UP:
            return this.value_ + delta;
          case KEY_IDS.HOME:
            return this.min_;
          case KEY_IDS.END:
            return this.max_;
          case KEY_IDS.PAGE_UP:
            return this.value_ + delta * numbers$3.PAGE_FACTOR;
          case KEY_IDS.PAGE_DOWN:
            return this.value_ - delta * numbers$3.PAGE_FACTOR;
          default:
            return NaN;
        }
      }
    }, {
      key: 'handleFocus_',
      value: function handleFocus_() {
        if (this.preventFocusState_) {
          return;
        }
        this.adapter_.addClass(cssClasses$15.FOCUS);
      }
    }, {
      key: 'handleBlur_',
      value: function handleBlur_() {
        this.preventFocusState_ = false;
        this.adapter_.removeClass(cssClasses$15.FOCUS);
      }

      /**
       * Sets the value of the slider
       * @param {number} value
       * @param {boolean} shouldFireInput
       * @param {boolean=} force
       */

    }, {
      key: 'setValue_',
      value: function setValue_(value, shouldFireInput) {
        var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        if (value === this.value_ && !force) {
          return;
        }

        var min = this.min_,
            max = this.max_;

        var valueSetToBoundary = value === min || value === max;
        if (this.step_ && !valueSetToBoundary) {
          value = this.quantize_(value);
        }
        if (value < min) {
          value = min;
        } else if (value > max) {
          value = max;
        }
        this.value_ = value;
        this.adapter_.setAttribute(strings$14.ARIA_VALUENOW, String(this.value_));
        this.updateUIForCurrentValue_();

        if (shouldFireInput) {
          this.adapter_.notifyInput();
          if (this.isDiscrete_) {
            this.adapter_.setMarkerValue(value);
          }
        }
      }

      /**
       * Calculates the quantized value
       * @param {number} value
       * @return {number}
       */

    }, {
      key: 'quantize_',
      value: function quantize_(value) {
        var numSteps = Math.round(value / this.step_);
        var quantizedVal = numSteps * this.step_;
        return quantizedVal;
      }
    }, {
      key: 'updateUIForCurrentValue_',
      value: function updateUIForCurrentValue_() {
        var _this5 = this;

        var max = this.max_,
            min = this.min_,
            value = this.value_;

        var pctComplete = (value - min) / (max - min);
        var translatePx = pctComplete * this.rect_.width;
        if (this.adapter_.isRTL()) {
          translatePx = this.rect_.width - translatePx;
        }

        var transformProp = getCorrectPropertyName(window, 'transform');
        var transitionendEvtName = getCorrectEventName(window, 'transitionend');

        if (this.inTransit_) {
          var onTransitionEnd = function onTransitionEnd() {
            _this5.setInTransit_(false);
            _this5.adapter_.deregisterThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);
          };
          this.adapter_.registerThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);
        }

        this.updateUIFrame_ = requestAnimationFrame(function () {
          // NOTE(traviskaufman): It would be nice to use calc() here,
          // but IE cannot handle calcs in transforms correctly.
          // See: https://goo.gl/NC2itk
          // Also note that the -50% offset is used to center the slider thumb.
          _this5.adapter_.setThumbContainerStyleProperty(transformProp, 'translateX(' + translatePx + 'px) translateX(-50%)');
          _this5.adapter_.setTrackStyleProperty(transformProp, 'scaleX(' + pctComplete + ')');
        });
      }

      /**
       * Toggles the active state of the slider
       * @param {boolean} active
       */

    }, {
      key: 'setActive_',
      value: function setActive_(active) {
        this.active_ = active;
        this.toggleClass_(cssClasses$15.ACTIVE, this.active_);
      }

      /**
       * Toggles the inTransit state of the slider
       * @param {boolean} inTransit
       */

    }, {
      key: 'setInTransit_',
      value: function setInTransit_(inTransit) {
        this.inTransit_ = inTransit;
        this.toggleClass_(cssClasses$15.IN_TRANSIT, this.inTransit_);
      }

      /**
       * Conditionally adds or removes a class based on shouldBePresent
       * @param {string} className
       * @param {boolean} shouldBePresent
       */

    }, {
      key: 'toggleClass_',
      value: function toggleClass_(className, shouldBePresent) {
        if (shouldBePresent) {
          this.adapter_.addClass(className);
        } else {
          this.adapter_.removeClass(className);
        }
      }
    }]);
    return MDCSliderFoundation;
  }(MDCFoundation);

  var mdcSlider = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-slider", class: _vm.classes, attrs: { "tabindex": "0", "role": "slider" } }, [_c('div', { staticClass: "mdc-slider__track-container" }, [_c('div', { staticClass: "mdc-slider__track", style: _vm.trackStyles }), _vm._v(" "), _vm.hasMarkers ? _c('div', { staticClass: "mdc-slider__track-marker-container" }, _vm._l(_vm.numMarkers, function (markerNum) {
        return _c('div', { key: markerNum, staticClass: "mdc-slider__track-marker", style: markerNum == _vm.numMarkers ? _vm.lastTrackMarkersStyles : {} });
      })) : _vm._e()]), _vm._v(" "), _c('div', { ref: "thumbContainer", staticClass: "mdc-slider__thumb-container", style: _vm.thumbStyles }, [_vm.isDiscrete ? _c('div', { staticClass: "mdc-slider__pin" }, [_c('span', { staticClass: "mdc-slider__pin-value-marker" }, [_vm._v(_vm._s(_vm.markerValue))])]) : _vm._e(), _vm._v(" "), _c('svg', { staticClass: "mdc-slider__thumb", attrs: { "width": "21", "height": "21" } }, [_c('circle', { attrs: { "cx": "10.5", "cy": "10.5", "r": "7.875" } })]), _vm._v(" "), _c('div', { staticClass: "mdc-slider__focus-ring" })])]);
    }, staticRenderFns: [],
    name: 'mdc-slider',
    mixins: [DispatchFocusMixin],
    model: {
      prop: 'value',
      event: 'change'
    },
    props: {
      value: [Number, String],
      min: { type: [Number, String], default: 0 },
      max: { type: [Number, String], default: 100 },
      step: { type: [Number, String], default: 0 },
      displayMarkers: Boolean,
      disabled: Boolean,
      layoutOn: String,
      layoutOnSource: { type: Object, required: false }
    },
    data: function data() {
      return {
        classes: {
          'mdc-slider--discrete': !!this.step,
          'mdc-slider--display-markers': this.displayMarkers
        },
        trackStyles: {},
        lastTrackMarkersStyles: {},
        thumbStyles: {},
        markerValue: '',
        numMarkers: 0
      };
    },

    computed: {
      isDiscrete: function isDiscrete() {
        return !!this.step;
      },
      hasMarkers: function hasMarkers() {
        return !!this.step && this.displayMarkers && this.numMarkers;
      }
    },
    watch: {
      value: function value() {
        if (this.foundation.getValue() !== Number(this.value)) {
          this.foundation.setValue(this.value);
        }
      },
      min: function min() {
        this.foundation.setMin(Number(this.min));
      },
      max: function max() {
        this.foundation.setMax(Number(this.max));
      },
      step: function step() {
        this.foundation.setStep(Number(this.step));
      },
      disabled: function disabled() {
        this.foundation.setDisabled(this.disabled);
      }
    },
    methods: {
      layout: function layout() {
        var _this = this;

        this.$nextTick(function () {
          _this.foundation && _this.foundation.layout();
        });
      }
    },
    mounted: function mounted() {
      var _this2 = this;

      this.foundation = new MDCSliderFoundation({
        hasClass: function hasClass(className) {
          return _this2.$el.classList.contains(className);
        },
        addClass: function addClass(className) {
          _this2.$set(_this2.classes, className, true);
        },
        removeClass: function removeClass(className) {
          _this2.$delete(_this2.classes, className, true);
        },
        getAttribute: function getAttribute(name) {
          return _this2.$el.getAttribute(name);
        },
        setAttribute: function setAttribute(name, value) {
          return _this2.$el.setAttribute(name, value);
        },
        removeAttribute: function removeAttribute(name) {
          return _this2.$el.removeAttribute(name);
        },
        computeBoundingRect: function computeBoundingRect() {
          return _this2.$el.getBoundingClientRect();
        },
        getTabIndex: function getTabIndex() {
          return _this2.$el.tabIndex;
        },
        registerInteractionHandler: function registerInteractionHandler(type, handler) {
          _this2.$el.addEventListener(type, handler);
        },
        deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
          _this2.$el.removeEventListener(type, handler);
        },
        registerThumbContainerInteractionHandler: function registerThumbContainerInteractionHandler(type, handler) {
          _this2.$refs.thumbContainer.addEventListener(type, handler);
        },
        deregisterThumbContainerInteractionHandler: function deregisterThumbContainerInteractionHandler(type, handler) {
          _this2.$refs.thumbContainer.removeEventListener(type, handler);
        },
        registerBodyInteractionHandler: function registerBodyInteractionHandler(type, handler) {
          document.body.addEventListener(type, handler);
        },
        deregisterBodyInteractionHandler: function deregisterBodyInteractionHandler(type, handler) {
          document.body.removeEventListener(type, handler);
        },
        registerResizeHandler: function registerResizeHandler(handler) {
          window.addEventListener('resize', handler);
        },
        deregisterResizeHandler: function deregisterResizeHandler(handler) {
          window.removeEventListener('resize', handler);
        },
        notifyInput: function notifyInput() {
          _this2.$emit('input', _this2.foundation.getValue());
        },
        notifyChange: function notifyChange() {
          _this2.$emit('change', _this2.foundation.getValue());
        },
        setThumbContainerStyleProperty: function setThumbContainerStyleProperty(propertyName, value) {
          _this2.$set(_this2.thumbStyles, propertyName, value);
        },
        setTrackStyleProperty: function setTrackStyleProperty(propertyName, value) {
          _this2.$set(_this2.trackStyles, propertyName, value);
        },
        setMarkerValue: function setMarkerValue(value) {
          _this2.markerValue = value;
        },
        appendTrackMarkers: function appendTrackMarkers(numMarkers) {
          _this2.numMarkers = numMarkers;
        },
        removeTrackMarkers: function removeTrackMarkers() {
          _this2.numMarkers = 0;
        },
        setLastTrackMarkersStyleProperty: function setLastTrackMarkersStyleProperty(propertyName, value) {
          _this2.$set(_this2.lastTrackMarkersStyles, propertyName, value);
        },
        isRTL: function isRTL() {
          return false;
        }
      });

      this.foundation.init();
      this.foundation.setDisabled(this.disabled);
      if (Number(this.min) <= this.foundation.getMax()) {
        this.foundation.setMin(Number(this.min));
        this.foundation.setMax(Number(this.max));
      } else {
        this.foundation.setMax(Number(this.max));
        this.foundation.setMin(Number(this.min));
      }
      this.foundation.setStep(Number(this.step));
      this.foundation.setValue(Number(this.value));
      if (this.hasMarkers) {
        this.foundation.setupTrackMarker();
      }

      this.$root.$on('mdc:layout', this.layout);

      if (this.layoutOn) {
        var source = this.layoutOnSource || this.$root;
        source.$on(this.layoutOn, this.layout);
      }
    },
    beforeDestroy: function beforeDestroy() {
      this.foundation.destroy();
    }
  };

  var VueMDCSlider = BasePlugin({
    mdcSlider: mdcSlider
  });

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */
  var cssClasses$16 = {
    ROOT: 'mdc-snackbar',
    TEXT: 'mdc-snackbar__text',
    ACTION_WRAPPER: 'mdc-snackbar__action-wrapper',
    ACTION_BUTTON: 'mdc-snackbar__action-button',
    ACTIVE: 'mdc-snackbar--active',
    MULTILINE: 'mdc-snackbar--multiline',
    ACTION_ON_BOTTOM: 'mdc-snackbar--action-on-bottom'
  };

  var strings$15 = {
    TEXT_SELECTOR: '.mdc-snackbar__text',
    ACTION_WRAPPER_SELECTOR: '.mdc-snackbar__action-wrapper',
    ACTION_BUTTON_SELECTOR: '.mdc-snackbar__action-button',
    SHOW_EVENT: 'MDCSnackbar:show',
    HIDE_EVENT: 'MDCSnackbar:hide'
  };

  var numbers$4 = {
    MESSAGE_TIMEOUT: 2750
  };

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var MDCSnackbarFoundation = function (_MDCFoundation) {
    inherits(MDCSnackbarFoundation, _MDCFoundation);
    createClass(MDCSnackbarFoundation, [{
      key: 'active',
      get: function get$$1() {
        return this.active_;
      }
    }], [{
      key: 'cssClasses',
      get: function get$$1() {
        return cssClasses$16;
      }
    }, {
      key: 'strings',
      get: function get$$1() {
        return strings$15;
      }
    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return {
          addClass: function addClass() /* className: string */{},
          removeClass: function removeClass() /* className: string */{},
          setAriaHidden: function setAriaHidden() {},
          unsetAriaHidden: function unsetAriaHidden() {},
          setActionAriaHidden: function setActionAriaHidden() {},
          unsetActionAriaHidden: function unsetActionAriaHidden() {},
          setActionText: function setActionText() /* actionText: string */{},
          setMessageText: function setMessageText() /* message: string */{},
          setFocus: function setFocus() {},
          visibilityIsHidden: function visibilityIsHidden() {
            return (/* boolean */false
            );
          },
          registerCapturedBlurHandler: function registerCapturedBlurHandler() /* handler: EventListener */{},
          deregisterCapturedBlurHandler: function deregisterCapturedBlurHandler() /* handler: EventListener */{},
          registerVisibilityChangeHandler: function registerVisibilityChangeHandler() /* handler: EventListener */{},
          deregisterVisibilityChangeHandler: function deregisterVisibilityChangeHandler() /* handler: EventListener */{},
          registerCapturedInteractionHandler: function registerCapturedInteractionHandler() /* evtType: string, handler: EventListener */{},
          deregisterCapturedInteractionHandler: function deregisterCapturedInteractionHandler() /* evtType: string, handler: EventListener */{},
          registerActionClickHandler: function registerActionClickHandler() /* handler: EventListener */{},
          deregisterActionClickHandler: function deregisterActionClickHandler() /* handler: EventListener */{},
          registerTransitionEndHandler: function registerTransitionEndHandler() /* handler: EventListener */{},
          deregisterTransitionEndHandler: function deregisterTransitionEndHandler() /* handler: EventListener */{},
          notifyShow: function notifyShow() {},
          notifyHide: function notifyHide() {}
        };
      }
    }]);

    function MDCSnackbarFoundation(adapter) {
      classCallCheck(this, MDCSnackbarFoundation);

      var _this = possibleConstructorReturn(this, (MDCSnackbarFoundation.__proto__ || Object.getPrototypeOf(MDCSnackbarFoundation)).call(this, _extends(MDCSnackbarFoundation.defaultAdapter, adapter)));

      _this.active_ = false;
      _this.actionWasClicked_ = false;
      _this.dismissOnAction_ = true;
      _this.firstFocus_ = true;
      _this.pointerDownRecognized_ = false;
      _this.snackbarHasFocus_ = false;
      _this.snackbarData_ = null;
      _this.queue_ = [];
      _this.actionClickHandler_ = function () {
        _this.actionWasClicked_ = true;
        _this.invokeAction_();
      };
      _this.visibilitychangeHandler_ = function () {
        clearTimeout(_this.timeoutId_);
        _this.snackbarHasFocus_ = true;

        if (!_this.adapter_.visibilityIsHidden()) {
          setTimeout(_this.cleanup_.bind(_this), _this.snackbarData_.timeout || numbers$4.MESSAGE_TIMEOUT);
        }
      };
      _this.interactionHandler_ = function (evt) {
        if (evt.type == 'touchstart' || evt.type == 'mousedown') {
          _this.pointerDownRecognized_ = true;
        }
        _this.handlePossibleTabKeyboardFocus_(evt);

        if (evt.type == 'focus') {
          _this.pointerDownRecognized_ = false;
        }
      };
      _this.blurHandler_ = function () {
        clearTimeout(_this.timeoutId_);
        _this.snackbarHasFocus_ = false;
        _this.timeoutId_ = setTimeout(_this.cleanup_.bind(_this), _this.snackbarData_.timeout || numbers$4.MESSAGE_TIMEOUT);
      };
      return _this;
    }

    createClass(MDCSnackbarFoundation, [{
      key: 'init',
      value: function init() {
        this.adapter_.registerActionClickHandler(this.actionClickHandler_);
        this.adapter_.setAriaHidden();
        this.adapter_.setActionAriaHidden();
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        var _this2 = this;

        this.adapter_.deregisterActionClickHandler(this.actionClickHandler_);
        this.adapter_.deregisterCapturedBlurHandler(this.blurHandler_);
        this.adapter_.deregisterVisibilityChangeHandler(this.visibilitychangeHandler_);
        ['touchstart', 'mousedown', 'focus'].forEach(function (evtType) {
          _this2.adapter_.deregisterCapturedInteractionHandler(evtType, _this2.interactionHandler_);
        });
      }
    }, {
      key: 'dismissesOnAction',
      value: function dismissesOnAction() {
        return this.dismissOnAction_;
      }
    }, {
      key: 'setDismissOnAction',
      value: function setDismissOnAction(dismissOnAction) {
        this.dismissOnAction_ = !!dismissOnAction;
      }
    }, {
      key: 'show',
      value: function show(data) {
        var _this3 = this;

        if (!data) {
          throw new Error('Please provide a data object with at least a message to display.');
        }
        if (!data.message) {
          throw new Error('Please provide a message to be displayed.');
        }
        if (data.actionHandler && !data.actionText) {
          throw new Error('Please provide action text with the handler.');
        }
        if (this.active) {
          this.queue_.push(data);
          return;
        }
        clearTimeout(this.timeoutId_);
        this.snackbarData_ = data;
        this.firstFocus_ = true;
        this.adapter_.registerVisibilityChangeHandler(this.visibilitychangeHandler_);
        this.adapter_.registerCapturedBlurHandler(this.blurHandler_);
        ['touchstart', 'mousedown', 'focus'].forEach(function (evtType) {
          _this3.adapter_.registerCapturedInteractionHandler(evtType, _this3.interactionHandler_);
        });

        var ACTIVE = cssClasses$16.ACTIVE,
            MULTILINE = cssClasses$16.MULTILINE,
            ACTION_ON_BOTTOM = cssClasses$16.ACTION_ON_BOTTOM;


        this.adapter_.setMessageText(this.snackbarData_.message);

        if (this.snackbarData_.multiline) {
          this.adapter_.addClass(MULTILINE);
          if (this.snackbarData_.actionOnBottom) {
            this.adapter_.addClass(ACTION_ON_BOTTOM);
          }
        }

        if (this.snackbarData_.actionHandler) {
          this.adapter_.setActionText(this.snackbarData_.actionText);
          this.actionHandler_ = this.snackbarData_.actionHandler;
          this.setActionHidden_(false);
        } else {
          this.setActionHidden_(true);
          this.actionHandler_ = null;
          this.adapter_.setActionText(null);
        }

        this.active_ = true;
        this.adapter_.addClass(ACTIVE);
        this.adapter_.unsetAriaHidden();
        this.adapter_.notifyShow();

        this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers$4.MESSAGE_TIMEOUT);
      }
    }, {
      key: 'handlePossibleTabKeyboardFocus_',
      value: function handlePossibleTabKeyboardFocus_() {
        var hijackFocus = this.firstFocus_ && !this.pointerDownRecognized_;

        if (hijackFocus) {
          this.setFocusOnAction_();
        }

        this.firstFocus_ = false;
      }
    }, {
      key: 'setFocusOnAction_',
      value: function setFocusOnAction_() {
        this.adapter_.setFocus();
        this.snackbarHasFocus_ = true;
        this.firstFocus_ = false;
      }
    }, {
      key: 'invokeAction_',
      value: function invokeAction_() {
        try {
          if (!this.actionHandler_) {
            return;
          }

          this.actionHandler_();
        } finally {
          if (this.dismissOnAction_) {
            this.cleanup_();
          }
        }
      }
    }, {
      key: 'cleanup_',
      value: function cleanup_() {
        var _this4 = this;

        var allowDismissal = !this.snackbarHasFocus_ || this.actionWasClicked_;

        if (allowDismissal) {
          var ACTIVE = cssClasses$16.ACTIVE,
              MULTILINE = cssClasses$16.MULTILINE,
              ACTION_ON_BOTTOM = cssClasses$16.ACTION_ON_BOTTOM;


          this.adapter_.removeClass(ACTIVE);

          var handler = function handler() {
            clearTimeout(_this4.timeoutId_);
            _this4.adapter_.deregisterTransitionEndHandler(handler);
            _this4.adapter_.removeClass(MULTILINE);
            _this4.adapter_.removeClass(ACTION_ON_BOTTOM);
            _this4.setActionHidden_(true);
            _this4.adapter_.setAriaHidden();
            _this4.active_ = false;
            _this4.snackbarHasFocus_ = false;
            _this4.adapter_.notifyHide();
            _this4.showNext_();
          };

          this.adapter_.registerTransitionEndHandler(handler);
        }
      }
    }, {
      key: 'showNext_',
      value: function showNext_() {
        if (!this.queue_.length) {
          return;
        }
        this.show(this.queue_.shift());
      }
    }, {
      key: 'setActionHidden_',
      value: function setActionHidden_(isHidden) {
        if (isHidden) {
          this.adapter_.setActionAriaHidden();
        } else {
          this.adapter_.unsetActionAriaHidden();
        }
      }
    }]);
    return MDCSnackbarFoundation;
  }(MDCFoundation);

  var mdcSnackbar = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { ref: "root", staticClass: "mdc-snackbar", class: _vm.classes, attrs: { "aria-live": "assertive", "aria-atomic": "true", "aria-hidden": _vm.hidden } }, [_c('div', { staticClass: "mdc-snackbar__text" }, [_vm._v(_vm._s(_vm.message))]), _vm._v(" "), _c('div', { staticClass: "mdc-snackbar__action-wrapper" }, [_c('button', { ref: "button", staticClass: "mdc-snackbar__action-button", attrs: { "type": "button", "aria-hidden": _vm.actionHidden } }, [_vm._v(_vm._s(_vm.actionText))])])]);
    }, staticRenderFns: [],
    name: 'mdc-snackbar',
    props: {
      'align-start': Boolean,
      'event': {
        type: String,
        required: false,
        default: function _default() {
          return 'show-snackbar';
        }
      },
      'event-source': {
        type: Object,
        required: false,
        default: function _default() {
          return this.$root;
        }
      },
      'dismisses-on-action': { type: Boolean, default: true }
    },
    data: function data() {
      return {
        classes: {
          'mdc-snackbar--align-start': this.alignStart
        },
        message: '',
        actionText: '',
        hidden: false,
        actionHidden: false
      };
    },

    methods: {
      show: function show(data) {
        this.foundation.show(data);
      }
    },
    mounted: function mounted() {
      var _this = this;

      this.foundation = new MDCSnackbarFoundation({
        addClass: function addClass(className) {
          return _this.$set(_this.classes, className, true);
        },
        removeClass: function removeClass(className) {
          return _this.$delete(_this.classes, className);
        },
        setAriaHidden: function setAriaHidden() {
          return _this.hidden = true;
        },
        unsetAriaHidden: function unsetAriaHidden() {
          return _this.hidden = false;
        },
        setActionAriaHidden: function setActionAriaHidden() {
          return _this.actionHidden = true;
        },
        unsetActionAriaHidden: function unsetActionAriaHidden() {
          return _this.actionHidden = false;
        },
        setActionText: function setActionText(text) {
          _this.actionText = text;
        },
        setMessageText: function setMessageText(text) {
          _this.message = text;
        },
        setFocus: function setFocus() {
          return _this.$refs.button.focus();
        },
        visibilityIsHidden: function visibilityIsHidden() {
          return document.hidden;
        },
        registerCapturedBlurHandler: function registerCapturedBlurHandler(handler) {
          return _this.$refs.button.addEventListener('blur', handler, true);
        },
        deregisterCapturedBlurHandler: function deregisterCapturedBlurHandler(handler) {
          return _this.$refs.button.removeEventListener('blur', handler, true);
        },
        registerVisibilityChangeHandler: function registerVisibilityChangeHandler(handler) {
          return document.addEventListener('visibilitychange', handler);
        },
        deregisterVisibilityChangeHandler: function deregisterVisibilityChangeHandler(handler) {
          return document.removeEventListener('visibilitychange', handler);
        },
        registerCapturedInteractionHandler: function registerCapturedInteractionHandler(evt, handler) {
          return document.body.addEventListener(evt, handler, true);
        },
        deregisterCapturedInteractionHandler: function deregisterCapturedInteractionHandler(evt, handler) {
          return document.body.removeEventListener(evt, handler, true);
        },
        registerActionClickHandler: function registerActionClickHandler(handler) {
          return _this.$refs.button.addEventListener('click', handler);
        },
        deregisterActionClickHandler: function deregisterActionClickHandler(handler) {
          return _this.$refs.button.removeEventListener('click', handler);
        },
        registerTransitionEndHandler: function registerTransitionEndHandler(handler) {
          _this.$refs.root.addEventListener(getCorrectEventName(window, 'transitionend'), handler);
        },
        deregisterTransitionEndHandler: function deregisterTransitionEndHandler(handler) {
          _this.$refs.root.removeEventListener(getCorrectEventName(window, 'transitionend'), handler);
        },
        notifyShow: function notifyShow() {
          return _this.$emit('show');
        },
        notifyHide: function notifyHide() {
          return _this.$emit('hide');
        }
      });
      this.foundation.init();
      if (this.event) {
        this.eventSource.$on(this.event, function (data) {
          _this.foundation.show(data);
        });
      }
      this.foundation.setDismissOnAction(this.dismissesOnAction);
    },
    beforeDestroy: function beforeDestroy() {
      this.foundation.destroy();
    }
  };

  var VueMDCSnackbar = BasePlugin({
    mdcSnackbar: mdcSnackbar
  });

  var mdcSwitch = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-switch-wrapper", class: { 'mdc-form-field': this.hasLabel, 'mdc-form-field--align-end': this.hasLabel && this.alignEnd } }, [_c('div', { staticClass: "mdc-switch", class: { 'mdc-switch--disabled': _vm.disabled } }, [_c('input', { ref: "control", staticClass: "mdc-switch__native-control", attrs: { "type": "checkbox", "name": _vm.name, "id": _vm._uid, "disabled": _vm.disabled }, domProps: { "checked": _vm.checked }, on: { "change": _vm.onChanged } }), _vm._v(" "), _vm._m(0)]), _vm._v(" "), _vm.hasLabel ? _c('label', { staticClass: "mdc-switch-label", attrs: { "for": _vm._uid } }, [_vm._t("default", [_vm._v(_vm._s(_vm.label))])], 2) : _vm._e()]);
    }, staticRenderFns: [function () {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-switch__background" }, [_c('div', { staticClass: "mdc-switch__knob" })]);
    }],
    name: 'mdc-switch',
    mixins: [DispatchFocusMixin],
    model: {
      prop: 'checked',
      event: 'change'
    },
    props: {
      'checked': Boolean,
      'label': String,
      'alignEnd': Boolean,
      'disabled': Boolean,
      'value': { type: String, default: function _default() {
          return 'on';
        }
      },
      'name': String
    },
    computed: {
      hasLabel: function hasLabel() {
        return this.label || this.$slots.default;
      }
    },
    methods: {
      onChanged: function onChanged(event) {
        this.$emit('change', event.target.checked);
      }
    }
  };

  var VueMDCSwitch = BasePlugin({
    mdcSwitch: mdcSwitch
  });

  /**
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var cssClasses$17 = {
    ACTIVE: 'mdc-tab--active'
  };

  var strings$16 = {
    SELECTED_EVENT: 'MDCTab:selected'
  };

  /**
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var MDCTabFoundation = function (_MDCFoundation) {
    inherits(MDCTabFoundation, _MDCFoundation);
    createClass(MDCTabFoundation, null, [{
      key: 'cssClasses',
      get: function get$$1() {
        return cssClasses$17;
      }
    }, {
      key: 'strings',
      get: function get$$1() {
        return strings$16;
      }
    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return {
          addClass: function addClass() /* className: string */{},
          removeClass: function removeClass() /* className: string */{},
          registerInteractionHandler: function registerInteractionHandler() /* type: string, handler: EventListener */{},
          deregisterInteractionHandler: function deregisterInteractionHandler() /* type: string, handler: EventListener */{},
          getOffsetWidth: function getOffsetWidth() {
            return (/* number */0
            );
          },
          getOffsetLeft: function getOffsetLeft() {
            return (/* number */0
            );
          },
          notifySelected: function notifySelected() {}
        };
      }
    }]);

    function MDCTabFoundation() {
      var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      classCallCheck(this, MDCTabFoundation);

      var _this = possibleConstructorReturn(this, (MDCTabFoundation.__proto__ || Object.getPrototypeOf(MDCTabFoundation)).call(this, _extends(MDCTabFoundation.defaultAdapter, adapter)));

      _this.computedWidth_ = 0;
      _this.computedLeft_ = 0;
      _this.isActive_ = false;
      _this.preventDefaultOnClick_ = false;

      _this.clickHandler_ = function (evt) {
        if (_this.preventDefaultOnClick_) {
          evt.preventDefault();
        }
        _this.adapter_.notifySelected();
      };

      _this.keydownHandler_ = function (evt) {
        if (evt.key && evt.key === 'Enter' || evt.keyCode === 13) {
          _this.adapter_.notifySelected();
        }
      };
      return _this;
    }

    createClass(MDCTabFoundation, [{
      key: 'init',
      value: function init() {
        this.adapter_.registerInteractionHandler('click', this.clickHandler_);
        this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);
        this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);
      }
    }, {
      key: 'getComputedWidth',
      value: function getComputedWidth() {
        return this.computedWidth_;
      }
    }, {
      key: 'getComputedLeft',
      value: function getComputedLeft() {
        return this.computedLeft_;
      }
    }, {
      key: 'isActive',
      value: function isActive() {
        return this.isActive_;
      }
    }, {
      key: 'setActive',
      value: function setActive(isActive) {
        this.isActive_ = isActive;
        if (this.isActive_) {
          this.adapter_.addClass(cssClasses$17.ACTIVE);
        } else {
          this.adapter_.removeClass(cssClasses$17.ACTIVE);
        }
      }
    }, {
      key: 'preventsDefaultOnClick',
      value: function preventsDefaultOnClick() {
        return this.preventDefaultOnClick_;
      }
    }, {
      key: 'setPreventDefaultOnClick',
      value: function setPreventDefaultOnClick(preventDefaultOnClick) {
        this.preventDefaultOnClick_ = preventDefaultOnClick;
      }
    }, {
      key: 'measureSelf',
      value: function measureSelf() {
        this.computedWidth_ = this.adapter_.getOffsetWidth();
        this.computedLeft_ = this.adapter_.getOffsetLeft();
      }
    }]);
    return MDCTabFoundation;
  }(MDCFoundation);

  var mdcTab = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('custom-link', { staticClass: "mdc-tab", class: _vm.classes, style: _vm.styles, attrs: { "link": _vm.link }, on: { "click": _vm.dispatchEvent } }, [!!_vm.hasIcon ? _c('i', { ref: "icon", staticClass: "mdc-tab__icon", class: _vm.hasIcon.classes, attrs: { "tabindex": "0" } }, [_vm._t("icon", [_vm._v(_vm._s(_vm.hasIcon.content))])], 2) : _vm._e(), _vm._v(" "), _vm.hasText ? _c('span', { class: { 'mdc-tab__icon-text': !!_vm.hasIcon } }, [_vm._t("default")], 2) : _vm._e()]);
    }, staticRenderFns: [],
    name: 'mdc-tab',
    mixins: [CustomLinkMixin, DispatchEventMixin],
    props: {
      active: Boolean,
      icon: [String, Array, Object]
    },
    data: function data() {
      return {
        classes: {},
        styles: {}
      };
    },

    computed: {
      hasIcon: function hasIcon() {
        if (this.icon || this.$slots.icon) {
          this.icon ? extractIconProp(this.icon) : {};
        }
        return false;
      },
      hasText: function hasText() {
        return !!this.$slots.default;
      }
    },
    methods: {
      getComputedWidth: function getComputedWidth() {
        return this.foundation.getComputedWidth();
      },
      getComputedLeft: function getComputedLeft() {
        return this.foundation.getComputedLeft();
      },
      isActive: function isActive() {
        return this.foundation.isActive();
      },
      setActive: function setActive(isActive) {
        this.foundation.setActive(isActive);
      },
      isDefaultPreventedOnClick: function isDefaultPreventedOnClick() {
        return this.foundation.preventsDefaultOnClick();
      },
      setPreventDefaultOnClick: function setPreventDefaultOnClick(preventDefaultOnClick) {
        this.foundation.setPreventDefaultOnClick(preventDefaultOnClick);
      },
      measureSelf: function measureSelf() {
        this.foundation.measureSelf();
      }
    },
    mounted: function mounted() {
      var _this = this;

      this.foundation = new MDCTabFoundation({
        addClass: function addClass(className) {
          return _this.$set(_this.classes, className, true);
        },
        removeClass: function removeClass(className) {
          return _this.$delete(_this.classes, className);
        },
        registerInteractionHandler: function registerInteractionHandler(type, handler) {
          return _this.$el.addEventListener(type, handler);
        },
        deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
          return _this.$el.removeEventListener(type, handler);
        },
        getOffsetWidth: function getOffsetWidth() {
          return _this.$el.offsetWidth;
        },
        getOffsetLeft: function getOffsetLeft() {
          return _this.$el.offsetLeft;
        },
        notifySelected: function notifySelected() {
          emitCustomEvent(_this.$el, MDCTabFoundation.strings.SELECTED_EVENT, { tab: _this }, true);
        }
      });
      this.foundation.init();
      this.setActive(this.active);
      this.ripple = new RippleBase(this);
      this.ripple.init();
    },
    beforeDestroy: function beforeDestroy() {
      this.foundation.destroy();
      this.ripple.destroy();
    }
  };

  /**
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var cssClasses$18 = {
    UPGRADED: 'mdc-tab-bar-upgraded'
  };

  var strings$17 = {
    TAB_SELECTOR: '.mdc-tab',
    INDICATOR_SELECTOR: '.mdc-tab-bar__indicator',
    CHANGE_EVENT: 'MDCTabBar:change'
  };

  /**
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var MDCTabBarFoundation = function (_MDCFoundation) {
    inherits(MDCTabBarFoundation, _MDCFoundation);
    createClass(MDCTabBarFoundation, null, [{
      key: 'cssClasses',
      get: function get$$1() {
        return cssClasses$18;
      }
    }, {
      key: 'strings',
      get: function get$$1() {
        return strings$17;
      }
    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return {
          addClass: function addClass() /* className: string */{},
          removeClass: function removeClass() /* className: string */{},
          bindOnMDCTabSelectedEvent: function bindOnMDCTabSelectedEvent() {},
          unbindOnMDCTabSelectedEvent: function unbindOnMDCTabSelectedEvent() {},
          registerResizeHandler: function registerResizeHandler() /* handler: EventListener */{},
          deregisterResizeHandler: function deregisterResizeHandler() /* handler: EventListener */{},
          getOffsetWidth: function getOffsetWidth() {
            return (/* number */0
            );
          },
          setStyleForIndicator: function setStyleForIndicator() /* propertyName: string, value: string */{},
          getOffsetWidthForIndicator: function getOffsetWidthForIndicator() {
            return (/* number */0
            );
          },
          notifyChange: function notifyChange() /* evtData: {activeTabIndex: number} */{},
          getNumberOfTabs: function getNumberOfTabs() {
            return (/* number */0
            );
          },
          isTabActiveAtIndex: function isTabActiveAtIndex() {
            return (/* index: number */ /* boolean */false
            );
          },
          setTabActiveAtIndex: function setTabActiveAtIndex() /* index: number, isActive: true */{},
          isDefaultPreventedOnClickForTabAtIndex: function isDefaultPreventedOnClickForTabAtIndex() {
            return (/* index: number */ /* boolean */false
            );
          },
          setPreventDefaultOnClickForTabAtIndex: function setPreventDefaultOnClickForTabAtIndex() /* index: number, preventDefaultOnClick: boolean */{},
          measureTabAtIndex: function measureTabAtIndex() /* index: number */{},
          getComputedWidthForTabAtIndex: function getComputedWidthForTabAtIndex() {
            return (/* index: number */ /* number */0
            );
          },
          getComputedLeftForTabAtIndex: function getComputedLeftForTabAtIndex() {
            return (/* index: number */ /* number */0
            );
          }
        };
      }
    }]);

    function MDCTabBarFoundation(adapter) {
      classCallCheck(this, MDCTabBarFoundation);

      var _this = possibleConstructorReturn(this, (MDCTabBarFoundation.__proto__ || Object.getPrototypeOf(MDCTabBarFoundation)).call(this, _extends(MDCTabBarFoundation.defaultAdapter, adapter)));

      _this.isIndicatorShown_ = false;
      _this.computedWidth_ = 0;
      _this.computedLeft_ = 0;
      _this.activeTabIndex_ = 0;
      _this.layoutFrame_ = 0;
      _this.resizeHandler_ = function () {
        return _this.layout();
      };
      return _this;
    }

    createClass(MDCTabBarFoundation, [{
      key: 'init',
      value: function init() {
        this.adapter_.addClass(cssClasses$18.UPGRADED);
        this.adapter_.bindOnMDCTabSelectedEvent();
        this.adapter_.registerResizeHandler(this.resizeHandler_);
        var activeTabIndex = this.findActiveTabIndex_();
        if (activeTabIndex >= 0) {
          this.activeTabIndex_ = activeTabIndex;
        }
        this.layout();
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        this.adapter_.removeClass(cssClasses$18.UPGRADED);
        this.adapter_.unbindOnMDCTabSelectedEvent();
        this.adapter_.deregisterResizeHandler(this.resizeHandler_);
      }
    }, {
      key: 'layoutInternal_',
      value: function layoutInternal_() {
        var _this2 = this;

        this.forEachTabIndex_(function (index) {
          return _this2.adapter_.measureTabAtIndex(index);
        });
        this.computedWidth_ = this.adapter_.getOffsetWidth();
        this.layoutIndicator_();
      }
    }, {
      key: 'layoutIndicator_',
      value: function layoutIndicator_() {
        var isIndicatorFirstRender = !this.isIndicatorShown_;

        // Ensure that indicator appears in the right position immediately for correct first render.
        if (isIndicatorFirstRender) {
          this.adapter_.setStyleForIndicator('transition', 'none');
        }

        var translateAmtForActiveTabLeft = this.adapter_.getComputedLeftForTabAtIndex(this.activeTabIndex_);
        var scaleAmtForActiveTabWidth = this.adapter_.getComputedWidthForTabAtIndex(this.activeTabIndex_) / this.adapter_.getOffsetWidth();

        var transformValue = 'translateX(' + translateAmtForActiveTabLeft + 'px) scale(' + scaleAmtForActiveTabWidth + ', 1)';
        this.adapter_.setStyleForIndicator(getCorrectPropertyName(window, 'transform'), transformValue);

        if (isIndicatorFirstRender) {
          // Force layout so that transform styles to take effect.
          this.adapter_.getOffsetWidthForIndicator();
          this.adapter_.setStyleForIndicator('transition', '');
          this.adapter_.setStyleForIndicator('visibility', 'visible');
          this.isIndicatorShown_ = true;
        }
      }
    }, {
      key: 'findActiveTabIndex_',
      value: function findActiveTabIndex_() {
        var _this3 = this;

        var activeTabIndex = -1;
        this.forEachTabIndex_(function (index) {
          if (_this3.adapter_.isTabActiveAtIndex(index)) {
            activeTabIndex = index;
            return true;
          }
        });
        return activeTabIndex;
      }
    }, {
      key: 'forEachTabIndex_',
      value: function forEachTabIndex_(iterator) {
        var numTabs = this.adapter_.getNumberOfTabs();
        for (var index = 0; index < numTabs; index++) {
          var shouldBreak = iterator(index);
          if (shouldBreak) {
            break;
          }
        }
      }
    }, {
      key: 'layout',
      value: function layout() {
        var _this4 = this;

        if (this.layoutFrame_) {
          cancelAnimationFrame(this.layoutFrame_);
        }

        this.layoutFrame_ = requestAnimationFrame(function () {
          _this4.layoutInternal_();
          _this4.layoutFrame_ = 0;
        });
      }
    }, {
      key: 'switchToTabAtIndex',
      value: function switchToTabAtIndex(index, shouldNotify) {
        var _this5 = this;

        if (index === this.activeTabIndex_) {
          return;
        }

        if (index < 0 || index >= this.adapter_.getNumberOfTabs()) {
          throw new Error('Out of bounds index specified for tab: ' + index);
        }

        var prevActiveTabIndex = this.activeTabIndex_;
        this.activeTabIndex_ = index;
        requestAnimationFrame(function () {
          if (prevActiveTabIndex >= 0) {
            _this5.adapter_.setTabActiveAtIndex(prevActiveTabIndex, false);
          }
          _this5.adapter_.setTabActiveAtIndex(_this5.activeTabIndex_, true);
          _this5.layoutIndicator_();
          if (shouldNotify) {
            _this5.adapter_.notifyChange({ activeTabIndex: _this5.activeTabIndex_ });
          }
        });
      }
    }, {
      key: 'getActiveTabIndex',
      value: function getActiveTabIndex() {
        return this.findActiveTabIndex_();
      }
    }]);
    return MDCTabBarFoundation;
  }(MDCFoundation);

  var mdcTabBar = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('nav', { staticClass: "mdc-tab-bar", class: _vm.classes }, [_vm._t("default"), _vm._v(" "), _c('span', { ref: "indicator", staticClass: "mdc-tab-bar__indicator", style: _vm.indicatorStyles })], 2);
    }, staticRenderFns: [],
    name: 'mdc-tab-bar',
    props: {
      'indicator-primary': Boolean,
      'indicator-accent': Boolean
    },
    data: function data() {
      return {
        classes: {
          'mdc-tab-bar--indicator-primary': this.indicatorPrimary,
          'mdc-tab-bar--indicator-accent': this.indicatorAccent
        },
        indicatorStyles: {},
        tabs: []
      };
    },

    methods: {
      onSelect: function onSelect(_ref) {
        var detail = _ref.detail;
        var tab = detail.tab;

        var index = this.tabs.indexOf(tab);
        if (index < 0) {
          throw new Error('mdc-tab-bar internal error: index not found');
        }
        this.foundation.switchToTabAtIndex(index, true);
      }
    },
    mounted: function mounted() {
      var _this = this;

      this.foundation = new MDCTabBarFoundation({
        addClass: function addClass(className) {
          return _this.$set(_this.classes, className, true);
        },
        removeClass: function removeClass(className) {
          return _this.$delete(_this.classes, className);
        },
        bindOnMDCTabSelectedEvent: function bindOnMDCTabSelectedEvent() {
          _this.$el.addEventListener(MDCTabFoundation.strings.SELECTED_EVENT, _this.onSelect);
        },
        unbindOnMDCTabSelectedEvent: function unbindOnMDCTabSelectedEvent() {
          return _this.$el.removeEventListener(MDCTabFoundation.strings.SELECTED_EVENT, _this.onSelect);
        },
        registerResizeHandler: function registerResizeHandler(handler) {
          return window.addEventListener('resize', handler);
        },
        deregisterResizeHandler: function deregisterResizeHandler(handler) {
          return window.removeEventListener('resize', handler);
        },
        getOffsetWidth: function getOffsetWidth() {
          return _this.$el.offsetWidth;
        },
        setStyleForIndicator: function setStyleForIndicator(propertyName, value) {
          return _this.$set(_this.indicatorStyles, propertyName, value);
        },
        getOffsetWidthForIndicator: function getOffsetWidthForIndicator() {
          return _this.$refs.indicator.offsetWidth;
        },
        notifyChange: function notifyChange(evtData) {
          _this.$emit('change', evtData.activeTabIndex);
        },
        getNumberOfTabs: function getNumberOfTabs() {
          return _this.tabs.length;
        },
        isTabActiveAtIndex: function isTabActiveAtIndex(index) {
          return _this.tabs[index].isActive();
        },
        setTabActiveAtIndex: function setTabActiveAtIndex(index, isActive) {
          _this.tabs[index].setActive(isActive);
        },
        isDefaultPreventedOnClickForTabAtIndex: function isDefaultPreventedOnClickForTabAtIndex(index) {
          return _this.tabs[index].isDefaultPreventedOnClick();
        },
        setPreventDefaultOnClickForTabAtIndex: function setPreventDefaultOnClickForTabAtIndex(index, preventDefaultOnClick) {
          _this.tabs[index].setPreventDefaultOnClick(preventDefaultOnClick);
        },
        measureTabAtIndex: function measureTabAtIndex(index) {
          return _this.tabs[index].measureSelf();
        },
        getComputedWidthForTabAtIndex: function getComputedWidthForTabAtIndex(index) {
          return _this.tabs[index].getComputedWidth();
        },
        getComputedLeftForTabAtIndex: function getComputedLeftForTabAtIndex(index) {
          return _this.tabs[index].getComputedLeft();
        }
      });

      var resetTabs = function resetTabs() {
        var tabElements = [].slice.call(_this.$el.querySelectorAll(MDCTabBarFoundation.strings.TAB_SELECTOR));
        _this.tabs = tabElements.map(function (el) {
          return el.__vue__;
        });

        var hasText = void 0,
            hasIcon = void 0;
        var tabs = _this.tabs;
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = tabs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var tab = _step.value;

            if (tab.hasText) {
              hasText = true;
              break;
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }

        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
          for (var _iterator2 = tabs[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var _tab = _step2.value;

            if (_tab.hasIcon) {
              hasIcon = true;
              break;
            }
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2.return) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }

        if (hasText && hasIcon) {
          _this.$set(_this.classes, 'mdc-tab-bar--icons-with-text', true);
        } else if (hasIcon) {
          _this.$set(_this.classes, 'mdc-tab-bar--icon-tab-bar', true);
        }

        if (_this.foundation) {
          var activeTabIndex = _this.foundation.getActiveTabIndex();
          if (activeTabIndex >= 0) {
            _this.foundation.switchToTabAtIndex(activeTabIndex, true);
          } else {
            _this.foundation.switchToTabAtIndex(0, true);
          }
          _this.foundation.layout();
        }
      };

      resetTabs();

      this.slotObserver = new MutationObserver(function () {
        return resetTabs();
      });
      this.slotObserver.observe(this.$el, { childList: true, subtree: true });

      this.foundation.init();
    },
    beforeDestroy: function beforeDestroy() {
      this.slotObserver.disconnect();
      this.foundation.destroy();
    }
  };

  var VueMDCTabs = BasePlugin({
    mdcTab: mdcTab,
    mdcTabBar: mdcTabBar
  });

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /* eslint no-unused-vars: [2, {"args": "none"}] */

  /**
   * Adapter for MDC Text Field Helper Text.
   *
   * Defines the shape of the adapter expected by the foundation. Implement this
   * adapter to integrate the TextField helper text into your framework. See
   * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
   * for more information.
   *
   * @record
   */
  var MDCTextFieldHelperTextAdapter = function () {
    function MDCTextFieldHelperTextAdapter() {
      classCallCheck(this, MDCTextFieldHelperTextAdapter);
    }

    createClass(MDCTextFieldHelperTextAdapter, [{
      key: "addClass",

      /**
       * Adds a class to the helper text element.
       * @param {string} className
       */
      value: function addClass(className) {}

      /**
       * Removes a class from the helper text element.
       * @param {string} className
       */

    }, {
      key: "removeClass",
      value: function removeClass(className) {}

      /**
       * Returns whether or not the helper text element contains the given class.
       * @param {string} className
       * @return {boolean}
       */

    }, {
      key: "hasClass",
      value: function hasClass(className) {}

      /**
       * Sets an attribute with a given value on the helper text element.
       * @param {string} attr
       * @param {string} value
       */

    }, {
      key: "setAttr",
      value: function setAttr(attr, value) {}

      /**
       * Removes an attribute from the helper text element.
       * @param {string} attr
       */

    }, {
      key: "removeAttr",
      value: function removeAttr(attr) {}

      /**
       * Sets the text content for the helper text element.
       * @param {string} content
       */

    }, {
      key: "setContent",
      value: function setContent(content) {}
    }]);
    return MDCTextFieldHelperTextAdapter;
  }();

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @enum {string} */
  var strings$18 = {
    ARIA_HIDDEN: 'aria-hidden',
    ROLE: 'role'
  };

  /** @enum {string} */
  var cssClasses$19 = {
    HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',
    HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg'
  };

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}
   * @final
   */

  var MDCTextFieldHelperTextFoundation = function (_MDCFoundation) {
    inherits(MDCTextFieldHelperTextFoundation, _MDCFoundation);
    createClass(MDCTextFieldHelperTextFoundation, null, [{
      key: 'cssClasses',

      /** @return enum {string} */
      get: function get$$1() {
        return cssClasses$19;
      }

      /** @return enum {string} */

    }, {
      key: 'strings',
      get: function get$$1() {
        return strings$18;
      }

      /**
       * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return
       * types.
       * @return {!MDCTextFieldHelperTextAdapter}
       */

    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return (/** @type {!MDCTextFieldHelperTextAdapter} */{
            addClass: function addClass() {},
            removeClass: function removeClass() {},
            hasClass: function hasClass() {},
            setAttr: function setAttr() {},
            removeAttr: function removeAttr() {},
            setContent: function setContent() {}
          }
        );
      }

      /**
       * @param {!MDCTextFieldHelperTextAdapter} adapter
       */

    }]);

    function MDCTextFieldHelperTextFoundation(adapter) {
      classCallCheck(this, MDCTextFieldHelperTextFoundation);
      return possibleConstructorReturn(this, (MDCTextFieldHelperTextFoundation.__proto__ || Object.getPrototypeOf(MDCTextFieldHelperTextFoundation)).call(this, _extends(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter)));
    }

    /**
     * Sets the content of the helper text field.
     * @param {string} content
     */


    createClass(MDCTextFieldHelperTextFoundation, [{
      key: 'setContent',
      value: function setContent(content) {
        this.adapter_.setContent(content);
      }

      /** @param {boolean} isPersistent Sets the persistency of the helper text. */

    }, {
      key: 'setPersistent',
      value: function setPersistent(isPersistent) {
        if (isPersistent) {
          this.adapter_.addClass(cssClasses$19.HELPER_TEXT_PERSISTENT);
        } else {
          this.adapter_.removeClass(cssClasses$19.HELPER_TEXT_PERSISTENT);
        }
      }

      /**
       * @param {boolean} isValidation True to make the helper text act as an
       *   error validation message.
       */

    }, {
      key: 'setValidation',
      value: function setValidation(isValidation) {
        if (isValidation) {
          this.adapter_.addClass(cssClasses$19.HELPER_TEXT_VALIDATION_MSG);
        } else {
          this.adapter_.removeClass(cssClasses$19.HELPER_TEXT_VALIDATION_MSG);
        }
      }

      /** Makes the helper text visible to the screen reader. */

    }, {
      key: 'showToScreenReader',
      value: function showToScreenReader() {
        this.adapter_.removeAttr(strings$18.ARIA_HIDDEN);
      }

      /**
       * Sets the validity of the helper text based on the input validity.
       * @param {boolean} inputIsValid
       */

    }, {
      key: 'setValidity',
      value: function setValidity(inputIsValid) {
        var helperTextIsPersistent = this.adapter_.hasClass(cssClasses$19.HELPER_TEXT_PERSISTENT);
        var helperTextIsValidationMsg = this.adapter_.hasClass(cssClasses$19.HELPER_TEXT_VALIDATION_MSG);
        var validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;

        if (validationMsgNeedsDisplay) {
          this.adapter_.setAttr(strings$18.ROLE, 'alert');
        } else {
          this.adapter_.removeAttr(strings$18.ROLE);
        }

        if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {
          this.hide_();
        }
      }

      /**
       * Hides the help text from screen readers.
       * @private
       */

    }, {
      key: 'hide_',
      value: function hide_() {
        this.adapter_.setAttr(strings$18.ARIA_HIDDEN, 'true');
      }
    }]);
    return MDCTextFieldHelperTextFoundation;
  }(MDCFoundation);

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /* eslint no-unused-vars: [2, {"args": "none"}] */

  /**
   * Adapter for MDC Text Field Icon.
   *
   * Defines the shape of the adapter expected by the foundation. Implement this
   * adapter to integrate the text field icon into your framework. See
   * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
   * for more information.
   *
   * @record
   */
  var MDCTextFieldIconAdapter = function () {
    function MDCTextFieldIconAdapter() {
      classCallCheck(this, MDCTextFieldIconAdapter);
    }

    createClass(MDCTextFieldIconAdapter, [{
      key: "setAttr",

      /**
       * Sets an attribute on the icon element.
       * @param {string} attr
       * @param {string} value
       */
      value: function setAttr(attr, value) {}

      /**
       * Registers an event listener on the icon element for a given event.
       * @param {string} evtType
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "registerInteractionHandler",
      value: function registerInteractionHandler(evtType, handler) {}

      /**
       * Deregisters an event listener on the icon element for a given event.
       * @param {string} evtType
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "deregisterInteractionHandler",
      value: function deregisterInteractionHandler(evtType, handler) {}

      /**
       * Emits a custom event "MDCTextField:icon" denoting a user has clicked the icon.
       */

    }, {
      key: "notifyIconAction",
      value: function notifyIconAction() {}
    }]);
    return MDCTextFieldIconAdapter;
  }();

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @enum {string} */
  var strings$19 = {
    ICON_EVENT: 'MDCTextField:icon'
  };

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}
   * @final
   */

  var MDCTextFieldIconFoundation = function (_MDCFoundation) {
    inherits(MDCTextFieldIconFoundation, _MDCFoundation);
    createClass(MDCTextFieldIconFoundation, null, [{
      key: 'strings',

      /** @return enum {string} */
      get: function get$$1() {
        return strings$19;
      }

      /**
       * {@see MDCTextFieldIconAdapter} for typing information on parameters and return
       * types.
       * @return {!MDCTextFieldIconAdapter}
       */

    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return (/** @type {!MDCTextFieldIconAdapter} */{
            setAttr: function setAttr() {},
            registerInteractionHandler: function registerInteractionHandler() {},
            deregisterInteractionHandler: function deregisterInteractionHandler() {},
            notifyIconAction: function notifyIconAction() {}
          }
        );
      }

      /**
       * @param {!MDCTextFieldIconAdapter} adapter
       */

    }]);

    function MDCTextFieldIconFoundation(adapter) {
      classCallCheck(this, MDCTextFieldIconFoundation);

      /** @private {function(!Event): undefined} */
      var _this = possibleConstructorReturn(this, (MDCTextFieldIconFoundation.__proto__ || Object.getPrototypeOf(MDCTextFieldIconFoundation)).call(this, _extends(MDCTextFieldIconFoundation.defaultAdapter, adapter)));

      _this.interactionHandler_ = function (evt) {
        return _this.handleInteraction(evt);
      };
      return _this;
    }

    createClass(MDCTextFieldIconFoundation, [{
      key: 'init',
      value: function init() {
        var _this2 = this;

        ['click', 'keydown'].forEach(function (evtType) {
          _this2.adapter_.registerInteractionHandler(evtType, _this2.interactionHandler_);
        });
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        var _this3 = this;

        ['click', 'keydown'].forEach(function (evtType) {
          _this3.adapter_.deregisterInteractionHandler(evtType, _this3.interactionHandler_);
        });
      }

      /**
       * Sets the content of the helper text field.
       * @param {boolean} disabled
       */

    }, {
      key: 'setDisabled',
      value: function setDisabled(disabled) {
        if (disabled) {
          this.adapter_.setAttr('tabindex', '-1');
        } else {
          this.adapter_.setAttr('tabindex', '0');
        }
      }

      /**
       * Handles an interaction event
       * @param {!Event} evt
       */

    }, {
      key: 'handleInteraction',
      value: function handleInteraction(evt) {
        if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {
          this.adapter_.notifyIconAction();
        }
      }
    }]);
    return MDCTextFieldIconFoundation;
  }(MDCFoundation);

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * Adapter for MDC Text Field.
   *
   * Defines the shape of the adapter expected by the foundation. Implement this
   * adapter to integrate the Text Field into your framework. See
   * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
   * for more information.
   *
   * @record
   */

  var MDCTextFieldAdapter = function () {
    function MDCTextFieldAdapter() {
      classCallCheck(this, MDCTextFieldAdapter);
    }

    createClass(MDCTextFieldAdapter, [{
      key: 'addClass',

      /**
       * Adds a class to the root Element.
       * @param {string} className
       */
      value: function addClass(className) {}

      /**
       * Removes a class from the root Element.
       * @param {string} className
       */

    }, {
      key: 'removeClass',
      value: function removeClass(className) {}

      /**
       * Returns true if the root element contains the given class name.
       * @param {string} className
       * @return {boolean}
       */

    }, {
      key: 'hasClass',
      value: function hasClass(className) {}

      /**
       * Registers an event handler on the root element for a given event.
       * @param {string} type
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: 'registerTextFieldInteractionHandler',
      value: function registerTextFieldInteractionHandler(type, handler) {}

      /**
       * Deregisters an event handler on the root element for a given event.
       * @param {string} type
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: 'deregisterTextFieldInteractionHandler',
      value: function deregisterTextFieldInteractionHandler(type, handler) {}

      /**
       * Registers an event listener on the native input element for a given event.
       * @param {string} evtType
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: 'registerInputInteractionHandler',
      value: function registerInputInteractionHandler(evtType, handler) {}

      /**
       * Deregisters an event listener on the native input element for a given event.
       * @param {string} evtType
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: 'deregisterInputInteractionHandler',
      value: function deregisterInputInteractionHandler(evtType, handler) {}

      /**
       * Registers a validation attribute change listener on the input element.
       * @param {function(!Array): undefined} handler
       * @return {!MutationObserver}
       */

    }, {
      key: 'registerValidationAttributeChangeHandler',
      value: function registerValidationAttributeChangeHandler(handler) {}

      /**
       * Disconnects a validation attribute observer on the input element.
       * @param {!MutationObserver} observer
       */

    }, {
      key: 'deregisterValidationAttributeChangeHandler',
      value: function deregisterValidationAttributeChangeHandler(observer) {}

      /**
       * Returns an object representing the native text input element, with a
       * similar API shape. The object returned should include the value, disabled
       * and badInput properties, as well as the checkValidity() function. We never
       * alter the value within our code, however we do update the disabled
       * property, so if you choose to duck-type the return value for this method
       * in your implementation it's important to keep this in mind. Also note that
       * this method can return null, which the foundation will handle gracefully.
       * @return {?Element|?NativeInputType}
       */

    }, {
      key: 'getNativeInput',
      value: function getNativeInput() {}

      /**
       * Returns true if the textfield is focused.
       * We achieve this via `document.activeElement === this.root_`.
       * @return {boolean}
       */

    }, {
      key: 'isFocused',
      value: function isFocused() {}

      /**
       * Returns true if the direction of the root element is set to RTL.
       * @return {boolean}
       */

    }, {
      key: 'isRtl',
      value: function isRtl() {}

      /**
       * Activates the line ripple.
       */

    }, {
      key: 'activateLineRipple',
      value: function activateLineRipple() {}

      /**
       * Deactivates the line ripple.
       */

    }, {
      key: 'deactivateLineRipple',
      value: function deactivateLineRipple() {}

      /**
       * Sets the transform origin of the line ripple.
       * @param {number} normalizedX
       */

    }, {
      key: 'setLineRippleTransformOrigin',
      value: function setLineRippleTransformOrigin(normalizedX) {}

      /**
       * Only implement if label exists.
       * Shakes label if shouldShake is true.
       * @param {boolean} shouldShake
       */

    }, {
      key: 'shakeLabel',
      value: function shakeLabel(shouldShake) {}

      /**
       * Only implement if label exists.
       * Floats the label above the input element if shouldFloat is true.
       * @param {boolean} shouldFloat
       */

    }, {
      key: 'floatLabel',
      value: function floatLabel(shouldFloat) {}

      /**
       * Returns true if label element exists, false if it doesn't.
       * @return {boolean}
       */

    }, {
      key: 'hasLabel',
      value: function hasLabel() {}

      /**
       * Only implement if label exists.
       * Returns width of label in pixels.
       * @return {number}
       */

    }, {
      key: 'getLabelWidth',
      value: function getLabelWidth() {}

      /**
       * Returns true if outline element exists, false if it doesn't.
       * @return {boolean}
       */

    }, {
      key: 'hasOutline',
      value: function hasOutline() {}

      /**
       * Only implement if outline element exists.
       * Updates SVG Path on outline element based on the
       * label element width and RTL context.
       * @param {number} labelWidth
       * @param {boolean} isRtl
       */

    }, {
      key: 'updateOutlinePath',
      value: function updateOutlinePath(labelWidth, isRtl) {}
    }]);
    return MDCTextFieldAdapter;
  }();

  /**
   * @license
   * Copyright 2018 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /* eslint no-unused-vars: [2, {"args": "none"}] */

  /**
   * Adapter for MDC TextField Line Ripple.
   *
   * Defines the shape of the adapter expected by the foundation. Implement this
   * adapter to integrate the line ripple into your framework. See
   * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
   * for more information.
   *
   * @record
   */
  var MDCLineRippleAdapter = function () {
    function MDCLineRippleAdapter() {
      classCallCheck(this, MDCLineRippleAdapter);
    }

    createClass(MDCLineRippleAdapter, [{
      key: "addClass",

      /**
       * Adds a class to the line ripple element.
       * @param {string} className
       */
      value: function addClass(className) {}

      /**
       * Removes a class from the line ripple element.
       * @param {string} className
       */

    }, {
      key: "removeClass",
      value: function removeClass(className) {}

      /**
       * @param {string} className
       * @return {boolean}
       */

    }, {
      key: "hasClass",
      value: function hasClass(className) {}

      /**
       * Sets an attribute with a given value on the line ripple element.
       * @param {string} attr
       * @param {string} value
       */

    }, {
      key: "setAttr",
      value: function setAttr(attr, value) {}

      /**
       * Registers an event listener on the line ripple element for a given event.
       * @param {string} evtType
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "registerEventHandler",
      value: function registerEventHandler(evtType, handler) {}

      /**
       * Deregisters an event listener on the line ripple element for a given event.
       * @param {string} evtType
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "deregisterEventHandler",
      value: function deregisterEventHandler(evtType, handler) {}
    }]);
    return MDCLineRippleAdapter;
  }();

  /**
   * @license
   * Copyright 2018 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @enum {string} */
  var cssClasses$20 = {
    LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',
    LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating'
  };

  /**
   * @license
   * Copyright 2018 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends {MDCFoundation<!MDCLineRippleAdapter>}
   * @final
   */

  var MDCLineRippleFoundation = function (_MDCFoundation) {
    inherits(MDCLineRippleFoundation, _MDCFoundation);
    createClass(MDCLineRippleFoundation, null, [{
      key: 'cssClasses',

      /** @return enum {string} */
      get: function get$$1() {
        return cssClasses$20;
      }

      /**
       * {@see MDCLineRippleAdapter} for typing information on parameters and return
       * types.
       * @return {!MDCLineRippleAdapter}
       */

    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return (/** @type {!MDCLineRippleAdapter} */{
            addClass: function addClass() {},
            removeClass: function removeClass() {},
            hasClass: function hasClass() {},
            setAttr: function setAttr() {},
            registerEventHandler: function registerEventHandler() {},
            deregisterEventHandler: function deregisterEventHandler() {}
          }
        );
      }

      /**
       * @param {!MDCLineRippleAdapter=} adapter
       */

    }]);

    function MDCLineRippleFoundation() {
      var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : /** @type {!MDCLineRippleAdapter} */{};
      classCallCheck(this, MDCLineRippleFoundation);

      /** @private {function(!Event): undefined} */
      var _this = possibleConstructorReturn(this, (MDCLineRippleFoundation.__proto__ || Object.getPrototypeOf(MDCLineRippleFoundation)).call(this, _extends(MDCLineRippleFoundation.defaultAdapter, adapter)));

      _this.transitionEndHandler_ = function (evt) {
        return _this.handleTransitionEnd(evt);
      };
      return _this;
    }

    createClass(MDCLineRippleFoundation, [{
      key: 'init',
      value: function init() {
        this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);
      }

      /**
       * Activates the line ripple
       */

    }, {
      key: 'activate',
      value: function activate() {
        this.adapter_.removeClass(cssClasses$20.LINE_RIPPLE_DEACTIVATING);
        this.adapter_.addClass(cssClasses$20.LINE_RIPPLE_ACTIVE);
      }

      /**
       * Sets the center of the ripple animation to the given X coordinate.
       * @param {!number} xCoordinate
       */

    }, {
      key: 'setRippleCenter',
      value: function setRippleCenter(xCoordinate) {
        var attributeString = 'transform-origin: ' + xCoordinate + 'px center';

        this.adapter_.setAttr('style', attributeString);
      }

      /**
       * Deactivates the line ripple
       */

    }, {
      key: 'deactivate',
      value: function deactivate() {
        this.adapter_.addClass(cssClasses$20.LINE_RIPPLE_DEACTIVATING);
      }

      /**
       * Handles a transition end event
       * @param {!Event} evt
       */

    }, {
      key: 'handleTransitionEnd',
      value: function handleTransitionEnd(evt) {
        // Wait for the line ripple to be either transparent or opaque
        // before emitting the animation end event
        var isDeactivating = this.adapter_.hasClass(cssClasses$20.LINE_RIPPLE_DEACTIVATING);

        if (evt.propertyName === 'opacity') {
          if (isDeactivating) {
            this.adapter_.removeClass(cssClasses$20.LINE_RIPPLE_ACTIVE);
            this.adapter_.removeClass(cssClasses$20.LINE_RIPPLE_DEACTIVATING);
          }
        }
      }
    }]);
    return MDCLineRippleFoundation;
  }(MDCFoundation);

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /* eslint no-unused-vars: [2, {"args": "none"}] */

  /**
   * Adapter for MDC Floating Label.
   *
   * Defines the shape of the adapter expected by the foundation. Implement this
   * adapter to integrate the floating label into your framework. See
   * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
   * for more information.
   *
   * @record
   */
  var MDCFloatingLabelAdapter = function () {
    function MDCFloatingLabelAdapter() {
      classCallCheck(this, MDCFloatingLabelAdapter);
    }

    createClass(MDCFloatingLabelAdapter, [{
      key: "addClass",

      /**
       * Adds a class to the label element.
       * @param {string} className
       */
      value: function addClass(className) {}

      /**
       * Removes a class from the label element.
       * @param {string} className
       */

    }, {
      key: "removeClass",
      value: function removeClass(className) {}

      /**
       * Returns the width of the label element.
       * @return {number}
       */

    }, {
      key: "getWidth",
      value: function getWidth() {}

      /**
       * Registers an event listener on the root element for a given event.
       * @param {string} evtType
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "registerInteractionHandler",
      value: function registerInteractionHandler(evtType, handler) {}

      /**
       * Deregisters an event listener on the root element for a given event.
       * @param {string} evtType
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "deregisterInteractionHandler",
      value: function deregisterInteractionHandler(evtType, handler) {}
    }]);
    return MDCFloatingLabelAdapter;
  }();

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @enum {string} */
  var cssClasses$21 = {
    LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',
    LABEL_SHAKE: 'mdc-floating-label--shake'
  };

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}
   * @final
   */

  var MDCFloatingLabelFoundation = function (_MDCFoundation) {
    inherits(MDCFloatingLabelFoundation, _MDCFoundation);
    createClass(MDCFloatingLabelFoundation, null, [{
      key: 'cssClasses',

      /** @return enum {string} */
      get: function get$$1() {
        return cssClasses$21;
      }

      /**
       * {@see MDCFloatingLabelAdapter} for typing information on parameters and return
       * types.
       * @return {!MDCFloatingLabelAdapter}
       */

    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return (/** @type {!MDCFloatingLabelAdapter} */{
            addClass: function addClass() {},
            removeClass: function removeClass() {},
            getWidth: function getWidth() {},
            registerInteractionHandler: function registerInteractionHandler() {},
            deregisterInteractionHandler: function deregisterInteractionHandler() {}
          }
        );
      }

      /**
       * @param {!MDCFloatingLabelAdapter} adapter
       */

    }]);

    function MDCFloatingLabelFoundation(adapter) {
      classCallCheck(this, MDCFloatingLabelFoundation);

      /** @private {function(!Event): undefined} */
      var _this = possibleConstructorReturn(this, (MDCFloatingLabelFoundation.__proto__ || Object.getPrototypeOf(MDCFloatingLabelFoundation)).call(this, _extends(MDCFloatingLabelFoundation.defaultAdapter, adapter)));

      _this.shakeAnimationEndHandler_ = function () {
        return _this.handleShakeAnimationEnd_();
      };
      return _this;
    }

    createClass(MDCFloatingLabelFoundation, [{
      key: 'init',
      value: function init() {
        this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);
      }

      /**
       * Returns the width of the label element.
       * @return {number}
       */

    }, {
      key: 'getWidth',
      value: function getWidth() {
        return this.adapter_.getWidth();
      }

      /**
       * Styles the label to produce the label shake for errors.
       * @param {boolean} shouldShake adds shake class if true,
       * otherwise removes shake class.
       */

    }, {
      key: 'shake',
      value: function shake(shouldShake) {
        var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;

        if (shouldShake) {
          this.adapter_.addClass(LABEL_SHAKE);
        } else {
          this.adapter_.removeClass(LABEL_SHAKE);
        }
      }

      /**
       * Styles the label to float or dock.
       * @param {boolean} shouldFloat adds float class if true, otherwise remove
       * float and shake class to dock label.
       */

    }, {
      key: 'float',
      value: function float(shouldFloat) {
        var _MDCFloatingLabelFoun = MDCFloatingLabelFoundation.cssClasses,
            LABEL_FLOAT_ABOVE = _MDCFloatingLabelFoun.LABEL_FLOAT_ABOVE,
            LABEL_SHAKE = _MDCFloatingLabelFoun.LABEL_SHAKE;

        if (shouldFloat) {
          this.adapter_.addClass(LABEL_FLOAT_ABOVE);
        } else {
          this.adapter_.removeClass(LABEL_FLOAT_ABOVE);
          this.adapter_.removeClass(LABEL_SHAKE);
        }
      }

      /**
       * Handles an interaction event on the root element.
       */

    }, {
      key: 'handleShakeAnimationEnd_',
      value: function handleShakeAnimationEnd_() {
        var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;

        this.adapter_.removeClass(LABEL_SHAKE);
      }
    }]);
    return MDCFloatingLabelFoundation;
  }(MDCFoundation);

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /* eslint no-unused-vars: [2, {"args": "none"}] */

  /**
   * Adapter for MDC Notched Outline.
   *
   * Defines the shape of the adapter expected by the foundation. Implement this
   * adapter to integrate the Notched Outline into your framework. See
   * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
   * for more information.
   *
   * @record
   */
  var MDCNotchedOutlineAdapter = function () {
    function MDCNotchedOutlineAdapter() {
      classCallCheck(this, MDCNotchedOutlineAdapter);
    }

    createClass(MDCNotchedOutlineAdapter, [{
      key: "getWidth",

      /**
       * Returns the width of the root element.
       * @return {number}
       */
      value: function getWidth() {}

      /**
       * Returns the height of the root element.
       * @return {number}
       */

    }, {
      key: "getHeight",
      value: function getHeight() {}

      /**
       * Sets the "d" attribute of the outline element's SVG path.
       * @param {string} value
       */

    }, {
      key: "setOutlinePathAttr",
      value: function setOutlinePathAttr(value) {}

      /**
       * Returns the idle outline element's computed style value of the given css property `propertyName`.
       * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.
       * @param {string} propertyName
       * @return {string}
       */

    }, {
      key: "getIdleOutlineStyleValue",
      value: function getIdleOutlineStyleValue(propertyName) {}
    }]);
    return MDCNotchedOutlineAdapter;
  }();

  /**
   * @license
   * Copyright 2018 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @enum {string} */
  var strings$20 = {
    PATH_SELECTOR: '.mdc-notched-outline__path',
    IDLE_OUTLINE_SELECTOR: '.mdc-notched-outline__idle'
  };

  /**
   * @license
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}
   * @final
   */

  var MDCNotchedOutlineFoundation = function (_MDCFoundation) {
    inherits(MDCNotchedOutlineFoundation, _MDCFoundation);
    createClass(MDCNotchedOutlineFoundation, null, [{
      key: 'strings',

      /** @return enum {string} */
      get: function get$$1() {
        return strings$20;
      }

      /**
       * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return
       * types.
       * @return {!MDCNotchedOutlineAdapter}
       */

    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return (/** @type {!MDCNotchedOutlineAdapter} */{
            getWidth: function getWidth() {},
            getHeight: function getHeight() {},
            setOutlinePathAttr: function setOutlinePathAttr() {},
            getIdleOutlineStyleValue: function getIdleOutlineStyleValue() {}
          }
        );
      }

      /**
       * @param {!MDCNotchedOutlineAdapter} adapter
       */

    }]);

    function MDCNotchedOutlineFoundation(adapter) {
      classCallCheck(this, MDCNotchedOutlineFoundation);
      return possibleConstructorReturn(this, (MDCNotchedOutlineFoundation.__proto__ || Object.getPrototypeOf(MDCNotchedOutlineFoundation)).call(this, _extends(MDCNotchedOutlineFoundation.defaultAdapter, adapter)));
    }

    /**
     * Updates the SVG path of the focus outline element based on the notchWidth
     * and the RTL context.
     * @param {number} notchWidth
     * @param {boolean=} isRtl
     */


    createClass(MDCNotchedOutlineFoundation, [{
      key: 'updateSvgPath',
      value: function updateSvgPath(notchWidth) {
        var isRtl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        // Fall back to reading a specific corner's style because Firefox doesn't report the style on border-radius.
        var radiusStyleValue = this.adapter_.getIdleOutlineStyleValue('border-radius') || this.adapter_.getIdleOutlineStyleValue('border-top-left-radius');
        var radius = parseFloat(radiusStyleValue);
        var width = this.adapter_.getWidth();
        var height = this.adapter_.getHeight();
        var cornerWidth = radius + 1.2;
        var leadingStrokeLength = Math.abs(11 - cornerWidth);
        var paddedNotchWidth = notchWidth + 8;

        // The right, bottom, and left sides of the outline follow the same SVG path.
        var pathMiddle = 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius + 'v' + (height - 2 * cornerWidth) + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius + 'h' + (-width + 2 * cornerWidth) + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius + 'v' + (-height + 2 * cornerWidth) + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;

        var path = void 0;
        if (!isRtl) {
          path = 'M' + (cornerWidth + leadingStrokeLength + paddedNotchWidth) + ',' + 1 + 'h' + (width - 2 * cornerWidth - paddedNotchWidth - leadingStrokeLength) + pathMiddle + 'h' + leadingStrokeLength;
        } else {
          path = 'M' + (width - cornerWidth - leadingStrokeLength) + ',' + 1 + 'h' + leadingStrokeLength + pathMiddle + 'h' + (width - 2 * cornerWidth - paddedNotchWidth - leadingStrokeLength);
        }

        this.adapter_.setOutlinePathAttr(path);
      }
    }]);
    return MDCNotchedOutlineFoundation;
  }(MDCFoundation);

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @enum {string} */
  var strings$21 = {
    ARIA_CONTROLS: 'aria-controls',
    INPUT_SELECTOR: '.mdc-text-field__input',
    LABEL_SELECTOR: '.mdc-floating-label',
    ICON_SELECTOR: '.mdc-text-field__icon',
    OUTLINE_SELECTOR: '.mdc-notched-outline',
    BOTTOM_LINE_SELECTOR: '.mdc-line-ripple'
  };

  /** @enum {string} */
  var cssClasses$22 = {
    ROOT: 'mdc-text-field',
    UPGRADED: 'mdc-text-field--upgraded',
    DISABLED: 'mdc-text-field--disabled',
    DENSE: 'mdc-text-field--dense',
    FOCUSED: 'mdc-text-field--focused',
    INVALID: 'mdc-text-field--invalid',
    BOX: 'mdc-text-field--box',
    OUTLINED: 'mdc-text-field--outlined'
  };

  /** @enum {number} */
  var numbers$5 = {
    LABEL_SCALE: 0.75,
    DENSE_LABEL_SCALE: 0.923
  };

  /**
   * @license
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  // whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation
  // under section: `Validation-related attributes`
  var VALIDATION_ATTR_WHITELIST = ['pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength'];

  /**
   * @extends {MDCFoundation<!MDCTextFieldAdapter>}
   * @final
   */

  var MDCTextFieldFoundation = function (_MDCFoundation) {
    inherits(MDCTextFieldFoundation, _MDCFoundation);
    createClass(MDCTextFieldFoundation, [{
      key: 'shouldShake',


      /** @return {boolean} */
      get: function get$$1() {
        return !this.isValid() && !this.isFocused_;
      }

      /** @return {boolean} */

    }, {
      key: 'shouldFloat',
      get: function get$$1() {
        return !this.isBadInput_() && (!!this.getValue() || this.isFocused_);
      }

      /**
       * {@see MDCTextFieldAdapter} for typing information on parameters and return
       * types.
       * @return {!MDCTextFieldAdapter}
       */

    }], [{
      key: 'cssClasses',

      /** @return enum {string} */
      get: function get$$1() {
        return cssClasses$22;
      }

      /** @return enum {string} */

    }, {
      key: 'strings',
      get: function get$$1() {
        return strings$21;
      }

      /** @return enum {string} */

    }, {
      key: 'numbers',
      get: function get$$1() {
        return numbers$5;
      }
    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return (/** @type {!MDCTextFieldAdapter} */{
            addClass: function addClass() {},
            removeClass: function removeClass() {},
            hasClass: function hasClass() {},
            registerTextFieldInteractionHandler: function registerTextFieldInteractionHandler() {},
            deregisterTextFieldInteractionHandler: function deregisterTextFieldInteractionHandler() {},
            registerInputInteractionHandler: function registerInputInteractionHandler() {},
            deregisterInputInteractionHandler: function deregisterInputInteractionHandler() {},
            registerValidationAttributeChangeHandler: function registerValidationAttributeChangeHandler() {},
            deregisterValidationAttributeChangeHandler: function deregisterValidationAttributeChangeHandler() {},
            getNativeInput: function getNativeInput() {},
            isFocused: function isFocused() {},
            isRtl: function isRtl() {},
            activateLineRipple: function activateLineRipple() {},
            deactivateLineRipple: function deactivateLineRipple() {},
            setLineRippleTransformOrigin: function setLineRippleTransformOrigin() {},
            shakeLabel: function shakeLabel() {},
            floatLabel: function floatLabel() {},
            hasLabel: function hasLabel() {},
            getLabelWidth: function getLabelWidth() {},
            hasOutline: function hasOutline() {},
            updateOutlinePath: function updateOutlinePath() {}
          }
        );
      }

      /**
       * @param {!MDCTextFieldAdapter} adapter
       * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.
       */

    }]);

    function MDCTextFieldFoundation(adapter) {
      var foundationMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /** @type {!FoundationMapType} */{};
      classCallCheck(this, MDCTextFieldFoundation);

      /** @type {!MDCTextFieldHelperTextFoundation|undefined} */
      var _this = possibleConstructorReturn(this, (MDCTextFieldFoundation.__proto__ || Object.getPrototypeOf(MDCTextFieldFoundation)).call(this, _extends(MDCTextFieldFoundation.defaultAdapter, adapter)));

      _this.helperText_ = foundationMap.helperText;
      /** @type {!MDCTextFieldIconFoundation|undefined} */
      _this.icon_ = foundationMap.icon;

      /** @private {boolean} */
      _this.isFocused_ = false;
      /** @private {boolean} */
      _this.receivedUserInput_ = false;
      /** @private {boolean} */
      _this.useCustomValidityChecking_ = false;
      /** @private {boolean} */
      _this.isValid_ = true;
      /** @private {function(): undefined} */
      _this.inputFocusHandler_ = function () {
        return _this.activateFocus();
      };
      /** @private {function(): undefined} */
      _this.inputBlurHandler_ = function () {
        return _this.deactivateFocus();
      };
      /** @private {function(): undefined} */
      _this.inputInputHandler_ = function () {
        return _this.autoCompleteFocus();
      };
      /** @private {function(!Event): undefined} */
      _this.setPointerXOffset_ = function (evt) {
        return _this.setTransformOrigin(evt);
      };
      /** @private {function(!Event): undefined} */
      _this.textFieldInteractionHandler_ = function () {
        return _this.handleTextFieldInteraction();
      };
      /** @private {function(!Array): undefined} */
      _this.validationAttributeChangeHandler_ = function (mutations) {
        return _this.handleValidationAttributeMutation_(mutations);
      };
      /** @private {!MutationObserver} */
      _this.validationObserver_;
      return _this;
    }

    createClass(MDCTextFieldFoundation, [{
      key: 'init',
      value: function init() {
        var _this2 = this;

        this.adapter_.addClass(MDCTextFieldFoundation.cssClasses.UPGRADED);
        // Ensure label does not collide with any pre-filled value.
        if (this.adapter_.hasLabel() && this.getValue()) {
          this.adapter_.floatLabel(this.shouldFloat);
        }

        if (this.adapter_.isFocused()) {
          this.inputFocusHandler_();
        }

        this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);
        this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);
        this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);
        ['mousedown', 'touchstart'].forEach(function (evtType) {
          _this2.adapter_.registerInputInteractionHandler(evtType, _this2.setPointerXOffset_);
        });
        ['click', 'keydown'].forEach(function (evtType) {
          _this2.adapter_.registerTextFieldInteractionHandler(evtType, _this2.textFieldInteractionHandler_);
        });
        this.validationObserver_ = this.adapter_.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        var _this3 = this;

        this.adapter_.removeClass(MDCTextFieldFoundation.cssClasses.UPGRADED);
        this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);
        this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);
        this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);
        ['mousedown', 'touchstart'].forEach(function (evtType) {
          _this3.adapter_.deregisterInputInteractionHandler(evtType, _this3.setPointerXOffset_);
        });
        ['click', 'keydown'].forEach(function (evtType) {
          _this3.adapter_.deregisterTextFieldInteractionHandler(evtType, _this3.textFieldInteractionHandler_);
        });
        this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);
      }

      /**
       * Handles user interactions with the Text Field.
       */

    }, {
      key: 'handleTextFieldInteraction',
      value: function handleTextFieldInteraction() {
        if (this.adapter_.getNativeInput().disabled) {
          return;
        }
        this.receivedUserInput_ = true;
      }

      /**
       * Handles validation attribute changes
       * @param {Array<MutationRecord>} mutationsList
       * @private
       */

    }, {
      key: 'handleValidationAttributeMutation_',
      value: function handleValidationAttributeMutation_(mutationsList) {
        var _this4 = this;

        mutationsList.some(function (mutation) {
          if (VALIDATION_ATTR_WHITELIST.indexOf(mutation.attributeName) > -1) {
            _this4.styleValidity_(true);
            return true;
          }
        });
      }

      /**
       * Updates the focus outline for outlined text fields.
       */

    }, {
      key: 'updateOutline',
      value: function updateOutline() {
        if (!this.adapter_.hasOutline() || !this.adapter_.hasLabel()) {
          return;
        }

        var isDense = this.adapter_.hasClass(cssClasses$22.DENSE);
        var labelScale = isDense ? numbers$5.DENSE_LABEL_SCALE : numbers$5.LABEL_SCALE;
        var labelWidth = this.adapter_.getLabelWidth() * labelScale;
        var isRtl = this.adapter_.isRtl();
        this.adapter_.updateOutlinePath(labelWidth, isRtl);
      }

      /**
       * Activates the text field focus state.
       */

    }, {
      key: 'activateFocus',
      value: function activateFocus() {
        this.isFocused_ = true;
        this.styleFocused_(this.isFocused_);
        this.adapter_.activateLineRipple();
        this.updateOutline();
        if (this.adapter_.hasLabel()) {
          this.adapter_.shakeLabel(this.shouldShake);
          this.adapter_.floatLabel(this.shouldFloat);
        }
        if (this.helperText_) {
          this.helperText_.showToScreenReader();
        }
      }

      /**
       * Sets the line ripple's transform origin, so that the line ripple activate
       * animation will animate out from the user's click location.
       * @param {!Event} evt
       */

    }, {
      key: 'setTransformOrigin',
      value: function setTransformOrigin(evt) {
        var targetClientRect = evt.target.getBoundingClientRect();
        var evtCoords = { x: evt.clientX, y: evt.clientY };
        var normalizedX = evtCoords.x - targetClientRect.left;
        this.adapter_.setLineRippleTransformOrigin(normalizedX);
      }

      /**
       * Activates the Text Field's focus state in cases when the input value
       * changes without user input (e.g. programatically).
       */

    }, {
      key: 'autoCompleteFocus',
      value: function autoCompleteFocus() {
        if (!this.receivedUserInput_) {
          this.activateFocus();
        }
      }

      /**
       * Deactivates the Text Field's focus state.
       */

    }, {
      key: 'deactivateFocus',
      value: function deactivateFocus() {
        this.isFocused_ = false;
        this.adapter_.deactivateLineRipple();
        var input = this.getNativeInput_();
        var shouldRemoveLabelFloat = !input.value && !this.isBadInput_();
        var isValid = this.isValid();
        this.styleValidity_(isValid);
        this.styleFocused_(this.isFocused_);
        if (this.adapter_.hasLabel()) {
          this.adapter_.shakeLabel(this.shouldShake);
          this.adapter_.floatLabel(this.shouldFloat);
        }
        if (shouldRemoveLabelFloat) {
          this.receivedUserInput_ = false;
        }
      }

      /**
       * @return {string} The value of the input Element.
       */

    }, {
      key: 'getValue',
      value: function getValue() {
        return this.getNativeInput_().value;
      }

      /**
       * @param {string} value The value to set on the input Element.
       */

    }, {
      key: 'setValue',
      value: function setValue(value) {
        this.getNativeInput_().value = value;
        var isValid = this.isValid();
        this.styleValidity_(isValid);
        if (this.adapter_.hasLabel()) {
          this.adapter_.shakeLabel(this.shouldShake);
          this.adapter_.floatLabel(this.shouldFloat);
        }
      }

      /**
       * @return {boolean} If a custom validity is set, returns that value.
       *     Otherwise, returns the result of native validity checks.
       */

    }, {
      key: 'isValid',
      value: function isValid() {
        return this.useCustomValidityChecking_ ? this.isValid_ : this.isNativeInputValid_();
      }

      /**
       * @param {boolean} isValid Sets the validity state of the Text Field.
       */

    }, {
      key: 'setValid',
      value: function setValid(isValid) {
        this.useCustomValidityChecking_ = true;
        this.isValid_ = isValid;
        // Retrieve from the getter to ensure correct logic is applied.
        isValid = this.isValid();
        this.styleValidity_(isValid);
        if (this.adapter_.hasLabel()) {
          this.adapter_.shakeLabel(this.shouldShake);
        }
      }

      /**
       * @return {boolean} True if the Text Field is disabled.
       */

    }, {
      key: 'isDisabled',
      value: function isDisabled() {
        return this.getNativeInput_().disabled;
      }

      /**
       * @param {boolean} disabled Sets the text-field disabled or enabled.
       */

    }, {
      key: 'setDisabled',
      value: function setDisabled(disabled) {
        this.getNativeInput_().disabled = disabled;
        this.styleDisabled_(disabled);
      }

      /**
       * @param {string} content Sets the content of the helper text.
       */

    }, {
      key: 'setHelperTextContent',
      value: function setHelperTextContent(content) {
        if (this.helperText_) {
          this.helperText_.setContent(content);
        }
      }

      /**
       * @return {boolean} True if the Text Field input fails in converting the
       *     user-supplied value.
       * @private
       */

    }, {
      key: 'isBadInput_',
      value: function isBadInput_() {
        return this.getNativeInput_().validity.badInput;
      }

      /**
       * @return {boolean} The result of native validity checking
       *     (ValidityState.valid).
       */

    }, {
      key: 'isNativeInputValid_',
      value: function isNativeInputValid_() {
        return this.getNativeInput_().validity.valid;
      }

      /**
       * Styles the component based on the validity state.
       * @param {boolean} isValid
       * @private
       */

    }, {
      key: 'styleValidity_',
      value: function styleValidity_(isValid) {
        var INVALID = MDCTextFieldFoundation.cssClasses.INVALID;

        if (isValid) {
          this.adapter_.removeClass(INVALID);
        } else {
          this.adapter_.addClass(INVALID);
        }
        if (this.helperText_) {
          this.helperText_.setValidity(isValid);
        }
      }

      /**
       * Styles the component based on the focused state.
       * @param {boolean} isFocused
       * @private
       */

    }, {
      key: 'styleFocused_',
      value: function styleFocused_(isFocused) {
        var FOCUSED = MDCTextFieldFoundation.cssClasses.FOCUSED;

        if (isFocused) {
          this.adapter_.addClass(FOCUSED);
        } else {
          this.adapter_.removeClass(FOCUSED);
        }
      }

      /**
       * Styles the component based on the disabled state.
       * @param {boolean} isDisabled
       * @private
       */

    }, {
      key: 'styleDisabled_',
      value: function styleDisabled_(isDisabled) {
        var _MDCTextFieldFoundati = MDCTextFieldFoundation.cssClasses,
            DISABLED = _MDCTextFieldFoundati.DISABLED,
            INVALID = _MDCTextFieldFoundati.INVALID;

        if (isDisabled) {
          this.adapter_.addClass(DISABLED);
          this.adapter_.removeClass(INVALID);
        } else {
          this.adapter_.removeClass(DISABLED);
        }
        if (this.icon_) {
          this.icon_.setDisabled(isDisabled);
        }
      }

      /**
       * @return {!Element|!NativeInputType} The native text input from the
       * host environment, or a dummy if none exists.
       * @private
       */

    }, {
      key: 'getNativeInput_',
      value: function getNativeInput_() {
        return this.adapter_.getNativeInput() ||
        /** @type {!NativeInputType} */{
          value: '',
          disabled: false,
          validity: {
            badInput: false,
            valid: true
          }
        };
      }
    }]);
    return MDCTextFieldFoundation;
  }(MDCFoundation);

  var mdcTextField = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-textfield-wrapper", style: { width: _vm.fullwidth ? '100%' : undefined } }, [_c('div', { ref: "root", class: _vm.rootClasses }, [!!_vm.hasLeadingIcon ? _c('i', { ref: "icon", staticClass: "mdc-text-field__icon", class: _vm.hasLeadingIcon.classes, attrs: { "tabindex": "0" } }, [_vm._t("leading-icon", [_vm._v(_vm._s(_vm.hasLeadingIcon.content))])], 2) : _vm._e(), _vm._v(" "), _vm.multiline ? _c('textarea', _vm._g(_vm._b({ ref: "input", class: _vm.inputClasses, attrs: { "minlength": _vm.minlength, "maxlength": _vm.maxlength, "placeholder": _vm.inputPlaceHolder, "aria-label": _vm.inputPlaceHolder, "aria-controls": _vm.inputAriaControls, "rows": _vm.rows, "cols": _vm.cols }, on: { "input": function input($event) {
            _vm.updateValue($event.target.value);
          } } }, 'textarea', _vm.inputAttrs, false), _vm.$listeners)) : _c('input', _vm._g(_vm._b({ ref: "input", class: _vm.inputClasses, attrs: { "type": _vm.type, "minlength": _vm.minlength, "maxlength": _vm.maxlength, "placeholder": _vm.inputPlaceHolder, "aria-label": _vm.inputPlaceHolder, "aria-controls": _vm.inputAriaControls }, on: { "input": function input($event) {
            _vm.updateValue($event.target.value);
          } } }, 'input', _vm.inputAttrs, false), _vm.$listeners)), _vm._v(" "), _vm.hasLabel ? _c('label', { ref: "label", class: _vm.labelClassesUpgraded, attrs: { "for": _vm._uid } }, [_vm._v(" " + _vm._s(_vm.label) + " ")]) : _vm._e(), _vm._v(" "), !!_vm.hasTrailingIcon ? _c('i', { ref: "icon", staticClass: "mdc-text-field__icon", class: _vm.hasTrailingIcon.classes, attrs: { "tabindex": "0" } }, [_vm._t("trailing-icon", [_vm._v(_vm._s(_vm.hasTrailingIcon.content))])], 2) : _vm._e(), _vm._v(" "), _vm.hasOutline ? _c('div', { ref: "outline", staticClass: "mdc-notched-outline" }, [_c('svg', [_c('path', { staticClass: "mdc-notched-outline__path", attrs: { "d": _vm.outlinePathAttr } })])]) : _vm._e(), _vm._v(" "), _vm.hasOutline ? _c('div', { ref: "outlineIdle", staticClass: "mdc-notched-outline__idle" }) : _vm._e(), _vm._v(" "), _vm.hasBottomLine ? _c('div', { ref: "bottom", class: _vm.bottomClasses }) : _vm._e()]), _vm._v(" "), _vm.helptext ? _c('p', { ref: "help", class: _vm.helpClasses, attrs: { "id": 'help-' + _vm._uid, "aria-hidden": "true" } }, [_vm._v(" " + _vm._s(_vm.helptext) + " ")]) : _vm._e()]);
    }, staticRenderFns: [],
    name: 'mdc-textfield',
    mixins: [CustomElementMixin, DispatchFocusMixin],
    model: {
      prop: 'value',
      event: 'model'
    },
    props: {
      value: String,
      type: {
        type: String,
        default: 'text',
        validator: function validator(value) {
          return ['text', 'email', 'search', 'password', 'tel', 'url'].indexOf(value) !== -1;
        }
      },
      dense: Boolean,
      label: String,
      helptext: String,
      helptextPersistent: Boolean,
      helptextValidation: Boolean,
      box: Boolean,
      outline: Boolean,
      disabled: Boolean,
      required: Boolean,
      valid: { type: Boolean, default: undefined },
      fullwidth: Boolean,
      multiline: Boolean,
      leadingIcon: [String, Array, Object],
      trailingIcon: [String, Array, Object],
      size: { type: [Number, String], default: 20 },
      minlength: { type: [Number, String], default: undefined },
      maxlength: { type: [Number, String], default: undefined },
      rows: { type: [Number, String], default: 8 },
      cols: { type: [Number, String], default: 40 },

      // other input props
      name: String,
      readonly: Boolean,
      autocomplete: Boolean,
      autofocus: Boolean
    },
    data: function data() {
      return {
        text: this.value,
        rootClasses: {
          'mdc-textfield': true,
          'mdc-text-field': true,
          'mdc-text-field--upgraded': true,
          'mdc-text-field--disabled': this.disabled,
          'mdc-text-field--dense': this.dense,
          'mdc-text-field--fullwidth': this.fullwidth,
          'mdc-text-field--textarea': this.multiline,
          'mdc-text-field--box': !this.fullwidth && this.box,
          'mdc-text-field--outlined': !this.fullwidth && this.outline
        },
        inputClasses: {
          'mdc-text-field__input': true
        },
        labelClasses: {
          'mdc-floating-label': true
        },
        bottomClasses: {
          'mdc-line-ripple': true
        },
        helpClasses: {
          'mdc-text-field-helper-text': true,
          'mdc-text-field-helper-text--persistent': this.helptextPersistent,
          'mdc-text-field-helper-text--validation-msg': this.helptextValidation
        },
        outlinePathAttr: undefined
      };
    },
    watch: {
      disabled: function disabled() {
        this.foundation && this.foundation.setDisabled(this.disabled);
      },
      required: function required() {
        this.$refs.input && (this.$refs.input.required = this.required);
      },
      valid: function valid() {
        if (typeof this.valid !== 'undefined') {
          this.foundation && this.foundation.setValid(this.valid);
        }
      },
      dense: function dense() {
        this.$set(this.rootClasses, 'mdc-text-field--dense', this.dense);
      },
      helptextPersistent: function helptextPersistent() {
        this.helperTextFoundation && this.helperTextFoundation.setPersistent(this.helptextPersistent);
      },
      helptextValidation: function helptextValidation() {
        this.helperTextFoundation && this.helperTextFoundation.setValidation(this.helptextValidation);
      },
      value: function value(_value) {
        if (this.foundation) {
          if (_value !== this.foundation.getValue()) {
            this.foundation.setValue(_value);
          }
        }
      }
    },
    methods: {
      updateValue: function updateValue(value) {
        this.$emit('model', value);
      },
      focus: function focus() {
        this.$refs.input && this.$refs.input.focus();
      },
      blur: function blur() {
        this.$refs.input && this.$refs.input.blur();
      }
    },
    computed: {
      inputAttrs: function inputAttrs() {
        var name = this.name,
            readonly = this.readonly,
            autocomplete = this.autocomplete,
            autofocus = this.autofocus;

        return { name: name, readonly: readonly, autocomplete: autocomplete, autofocus: autofocus };
      },
      inputPlaceHolder: function inputPlaceHolder() {
        return this.fullwidth ? this.label : undefined;
      },
      inputAriaControls: function inputAriaControls() {
        return this.help ? 'help-' + this._uid : undefined;
      },
      hasLabel: function hasLabel() {
        return !this.fullwidth && this.label;
      },
      hasOutline: function hasOutline() {
        return !this.fullwidth && this.outline;
      },
      hasBottomLine: function hasBottomLine() {
        return !this.hasOutline && !this.multiline;
      },
      hasLeadingIcon: function hasLeadingIcon() {
        if ((this.leadingIcon || this.$slots['leading-icon']) && !(this.trailingIcon || this.$slots['trailing-icon'])) {
          return this.leadingIcon ? extractIconProp(this.leadingIcon) : {};
        }
        return false;
      },
      hasTrailingIcon: function hasTrailingIcon() {
        if (this.trailingIcon || this.$slots['trailing-icon']) {
          return this.trailingIcon ? extractIconProp(this.trailingIcon) : {};
        }
        return false;
      },
      labelClassesUpgraded: function labelClassesUpgraded() {
        return _extends(this.labelClasses, {
          'mdc-floating-label--float-above': this.value
        });
      }
    },
    mounted: function mounted() {
      var _this = this;

      if (this.$refs.bottom) {
        this.bottomLineFoundation = new MDCLineRippleFoundation({
          addClass: function addClass(className) {
            _this.$set(_this.bottomClasses, className, true);
          },
          removeClass: function removeClass(className) {
            _this.$delete(_this.bottomClasses, className);
          },
          hasClass: function hasClass(className) {
            _this.$refs.bottom.classList.contains(className);
          },
          setAttr: function setAttr(name, value) {
            _this.$refs.bottom.setAttribute(name, value);
          },
          registerEventHandler: function registerEventHandler(evtType, handler) {
            _this.$refs.bottom.addEventListener(evtType, handler);
          },
          deregisterEventHandler: function deregisterEventHandler(evtType, handler) {
            _this.$refs.bottom.removeEventListener(evtType, handler);
          }
        });
        this.bottomLineFoundation.init();
      }

      if (this.$refs.help) {
        this.helperTextFoundation = new MDCTextFieldHelperTextFoundation({
          addClass: function addClass(className) {
            _this.$set(_this.helpClasses, className, true);
          },
          removeClass: function removeClass(className) {
            _this.$delete(_this.helpClasses, className);
          },
          hasClass: function hasClass(className) {
            return _this.$refs.help.classList.contains(className);
          },
          setAttr: function setAttr(name, value) {
            _this.$refs.help.setAttribute(name, value);
          },
          removeAttr: function removeAttr(name) {
            _this.$refs.help.removeAttribute(name);
          },
          setContent: function setContent() /*content*/{
            // help text get's updated from {{helptext}}
            // this.$refs.help.textContent = content;
          }
        });
        this.helperTextFoundation.init();
      }

      if (this.$refs.icon) {
        if (this.hasLeadingIcon) {
          this.$set(this.rootClasses, 'mdc-text-field--with-leading-icon', true);
        } else if (this.hasTrailingIcon) {
          this.$set(this.rootClasses, 'mdc-text-field--with-trailing-icon', true);
        }

        this.iconFoundation = new MDCTextFieldIconFoundation({
          setAttr: function setAttr(attr, value) {
            return _this.$refs.icon.setAttribute(attr, value);
          },
          registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
            _this.$refs.icon.addEventListener(evtType, handler);
          },
          deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
            _this.$refs.icon.removeEventListener(evtType, handler);
          },
          notifyIconAction: function notifyIconAction() {
            return _this.$emit('icon-action');
          }
        });
        this.iconFoundation.init();
      }

      if (this.$refs.label) {
        this.labelFoundation = new MDCFloatingLabelFoundation({
          addClass: function addClass(className) {
            _this.$set(_this.labelClasses, className, true);
          },
          removeClass: function removeClass(className) {
            _this.$delete(_this.labelClasses, className);
          },
          getWidth: function getWidth() {
            return _this.$refs.label.offsetWidth;
          },
          registerInteractionHandler: function registerInteractionHandler(evtType, handler) {
            _this.$refs.label.addEventListener(evtType, handler);
          },
          deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {
            _this.$refs.label.removeEventListener(evtType, handler);
          }
        });
        this.labelFoundation.init();
      }

      if (this.$refs.outline) {
        this.outlineFoundation = new MDCNotchedOutlineFoundation({
          getWidth: function getWidth() {
            return _this.$refs.outline.offsetWidth;
          },
          getHeight: function getHeight() {
            return _this.$refs.outline.offsetHeight;
          },
          setOutlinePathAttr: function setOutlinePathAttr(value) {
            _this.outlinePathAttr = value;
          },
          getIdleOutlineStyleValue: function getIdleOutlineStyleValue(propertyName) {
            var idleOutlineElement = _this.$refs.outlineIdle;
            if (idleOutlineElement) {
              return window.getComputedStyle(idleOutlineElement).getPropertyValue(propertyName);
            }
          }
        });
        this.outlineFoundation.init();
      }

      this.foundation = new MDCTextFieldFoundation({
        addClass: function addClass(className) {
          _this.$set(_this.rootClasses, className, true);
        },
        removeClass: function removeClass(className) {
          _this.$delete(_this.rootClasses, className);
        },
        hasClass: function hasClass(className) {
          _this.$refs.root.classList.contains(className);
        },
        registerTextFieldInteractionHandler: function registerTextFieldInteractionHandler(evtType, handler) {
          _this.$refs.root.addEventListener(evtType, handler);
        },
        deregisterTextFieldInteractionHandler: function deregisterTextFieldInteractionHandler(evtType, handler) {
          _this.$refs.root.removeEventListener(evtType, handler);
        },
        isFocused: function isFocused() {
          return document.activeElement === _this.$refs.input;
        },
        isRtl: function isRtl() {
          return window.getComputedStyle(_this.$refs.root).getPropertyValue('direction') === 'rtl';
        },
        deactivateLineRipple: function deactivateLineRipple() {
          if (_this.bottom) {
            _this.bottom.deactivate();
          }
        },
        activateLineRipple: function activateLineRipple() {
          if (_this.bottom) {
            _this.bottom.activate();
          }
        },
        setLineRippleTransformOrigin: function setLineRippleTransformOrigin(normalizedX) {
          if (_this.bottom) {
            _this.bottom.setRippleCenter(normalizedX);
          }
        },
        registerInputInteractionHandler: function registerInputInteractionHandler(evtType, handler) {
          _this.$refs.input.addEventListener(evtType, handler);
        },
        deregisterInputInteractionHandler: function deregisterInputInteractionHandler(evtType, handler) {
          _this.$refs.input.removeEventListener(evtType, handler);
        },
        registerValidationAttributeChangeHandler: function registerValidationAttributeChangeHandler(handler) {
          var observer = new MutationObserver(handler);
          var targetNode = _this.$refs.input;
          var config = { attributes: true };
          observer.observe(targetNode, config);
          return observer;
        },
        deregisterValidationAttributeChangeHandler: function deregisterValidationAttributeChangeHandler(observer) {
          observer.disconnect();
        },
        shakeLabel: function shakeLabel(shouldShake) {
          _this.labelFoundation.shake(shouldShake);
        },
        floatLabel: function floatLabel(shouldFloat) {
          _this.labelFoundation.float(shouldFloat);
        },
        hasLabel: function hasLabel() {
          return !!_this.$refs.label;
        },
        getLabelWidth: function getLabelWidth() {
          return _this.labelFoundation.getWidth();
        },
        getNativeInput: function getNativeInput() {
          return _this.$refs.input;
        },
        hasOutline: function hasOutline() {
          return !!_this.hasOutline;
        },
        updateOutlinePath: function updateOutlinePath(labelWidth, isRtl) {
          _this.outlineFoundation.updateSvgPath(labelWidth, isRtl);
        }
      }, {
        bottomLine: this.bottomLineFoundation,
        helperText: this.helperTextFoundation,
        icon: this.iconFoundation,
        label: this.labelFoundation,
        outline: this.outlineFoundation
      });

      this.foundation.init();
      this.foundation.setValue(this.value);
      this.foundation.setDisabled(this.disabled);
      this.$refs.input && (this.$refs.input.required = this.required);
      if (typeof this.valid !== 'undefined') {
        this.foundation.setValid(this.valid);
      }

      if (this.textbox) {
        this.ripple = new RippleBase(this);
        this.ripple.init();
      }
    },
    beforeDestroy: function beforeDestroy() {
      this.foundation && this.foundation.destroy();
      this.bottomLineFoundation && this.bottomLineFoundation.destroy();
      this.helperTextFoundation && this.helperTextFoundation.destroy();
      this.iconFoundation && this.iconFoundation.destroy();
      this.labelFoundation && this.labelFoundation.destroy();
      this.outlineFoundation && this.outlineFoundation.destroy();
      this.ripple && this.ripple.destroy();
    }
  };

  var VueMDCTextfield = BasePlugin({
    mdcTextField: mdcTextField
  });

  var THEME_COLORS = ['primary', 'secondary', 'background', 'primary-light', 'secondary-light', 'secondary-dark', 'primary-dark'];

  var THEME_STYLES = ['text-primary', 'text-secondary', 'text-hint', 'text-icon', 'text-disabled'];

  var mdcTheme = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('custom-element', { staticClass: "mdc-theme", class: _vm.classes, attrs: { "tag": _vm.tag } }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-theme',
    components: {
      CustomElement: CustomElement
    },
    props: {
      tag: { type: String, default: 'div' },
      color: String,
      background: String
    },
    computed: {
      classes: function classes() {
        var classes = {};

        if (this.color && THEME_COLORS.indexOf(this.color) !== -1) {
          classes['mdc-theme--' + this.color] = true;
        }

        if (this.background && THEME_COLORS.indexOf(this.background) !== -1) {
          classes['mdc-theme--' + this.background + '-bg'] = true;

          if (this.color && THEME_STYLES.indexOf(this.color) !== -1) {
            classes['mdc-theme--' + this.color + '-on-' + this.background] = true;
          }
        }
        return classes;
      }
    }
  };

  var VueMDCTheme = BasePlugin({
    mdcTheme: mdcTheme
  });

  /**
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var cssClasses$23 = {
    FIXED: 'mdc-toolbar--fixed',
    FIXED_LASTROW: 'mdc-toolbar--fixed-lastrow-only',
    FIXED_AT_LAST_ROW: 'mdc-toolbar--fixed-at-last-row',
    TOOLBAR_ROW_FLEXIBLE: 'mdc-toolbar--flexible',
    FLEXIBLE_DEFAULT_BEHAVIOR: 'mdc-toolbar--flexible-default-behavior',
    FLEXIBLE_MAX: 'mdc-toolbar--flexible-space-maximized',
    FLEXIBLE_MIN: 'mdc-toolbar--flexible-space-minimized'
  };

  var strings$22 = {
    TITLE_SELECTOR: '.mdc-toolbar__title',
    ICON_SELECTOR: '.mdc-toolbar__icon',
    FIRST_ROW_SELECTOR: '.mdc-toolbar__row:first-child',
    CHANGE_EVENT: 'MDCToolbar:change'
  };

  var numbers$6 = {
    MAX_TITLE_SIZE: 2.125,
    MIN_TITLE_SIZE: 1.25,
    TOOLBAR_ROW_HEIGHT: 64,
    TOOLBAR_ROW_MOBILE_HEIGHT: 56,
    TOOLBAR_MOBILE_BREAKPOINT: 600
  };

  /**
   * Copyright 2017 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var MDCToolbarFoundation = function (_MDCFoundation) {
    inherits(MDCToolbarFoundation, _MDCFoundation);
    createClass(MDCToolbarFoundation, null, [{
      key: 'cssClasses',
      get: function get$$1() {
        return cssClasses$23;
      }
    }, {
      key: 'strings',
      get: function get$$1() {
        return strings$22;
      }
    }, {
      key: 'numbers',
      get: function get$$1() {
        return numbers$6;
      }
    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return {
          hasClass: function hasClass() {
            return (/* className: string */ /* boolean */false
            );
          },
          addClass: function addClass() /* className: string */{},
          removeClass: function removeClass() /* className: string */{},
          registerScrollHandler: function registerScrollHandler() /* handler: EventListener */{},
          deregisterScrollHandler: function deregisterScrollHandler() /* handler: EventListener */{},
          registerResizeHandler: function registerResizeHandler() /* handler: EventListener */{},
          deregisterResizeHandler: function deregisterResizeHandler() /* handler: EventListener */{},
          getViewportWidth: function getViewportWidth() {
            return (/* number */0
            );
          },
          getViewportScrollY: function getViewportScrollY() {
            return (/* number */0
            );
          },
          getOffsetHeight: function getOffsetHeight() {
            return (/* number */0
            );
          },
          getFirstRowElementOffsetHeight: function getFirstRowElementOffsetHeight() {
            return (/* number */0
            );
          },
          notifyChange: function notifyChange() /* evtData: {flexibleExpansionRatio: number} */{},
          setStyle: function setStyle() /* property: string, value: string */{},
          setStyleForTitleElement: function setStyleForTitleElement() /* property: string, value: string */{},
          setStyleForFlexibleRowElement: function setStyleForFlexibleRowElement() /* property: string, value: string */{},
          setStyleForFixedAdjustElement: function setStyleForFixedAdjustElement() /* property: string, value: string */{}
        };
      }
    }]);

    function MDCToolbarFoundation(adapter) {
      classCallCheck(this, MDCToolbarFoundation);

      var _this = possibleConstructorReturn(this, (MDCToolbarFoundation.__proto__ || Object.getPrototypeOf(MDCToolbarFoundation)).call(this, _extends(MDCToolbarFoundation.defaultAdapter, adapter)));

      _this.resizeHandler_ = function () {
        return _this.checkRowHeight_();
      };
      _this.scrollHandler_ = function () {
        return _this.updateToolbarStyles_();
      };
      _this.checkRowHeightFrame_ = 0;
      _this.scrollFrame_ = 0;
      _this.executedLastChange_ = false;

      _this.calculations_ = {
        toolbarRowHeight: 0,
        // Calculated Height ratio. We use ratio to calculate corresponding heights in resize event.
        toolbarRatio: 0, // The ratio of toolbar height to row height
        flexibleExpansionRatio: 0, // The ratio of flexible space height to row height
        maxTranslateYRatio: 0, // The ratio of max toolbar move up distance to row height
        scrollThresholdRatio: 0, // The ratio of max scrollTop that we should listen to to row height
        // Derived Heights based on the above key ratios.
        toolbarHeight: 0,
        flexibleExpansionHeight: 0, // Flexible row minus toolbar height (derived)
        maxTranslateYDistance: 0, // When toolbar only fix last row (derived)
        scrollThreshold: 0
      };
      // Toolbar fixed behavior
      // If toolbar is fixed
      _this.fixed_ = false;
      // If fixed is targeted only at the last row
      _this.fixedLastrow_ = false;
      // Toolbar flexible behavior
      // If the first row is flexible
      _this.hasFlexibleRow_ = false;
      // If use the default behavior
      _this.useFlexDefaultBehavior_ = false;
      return _this;
    }

    createClass(MDCToolbarFoundation, [{
      key: 'init',
      value: function init() {
        this.fixed_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED);
        this.fixedLastrow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED_LASTROW) & this.fixed_;
        this.hasFlexibleRow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.TOOLBAR_ROW_FLEXIBLE);
        if (this.hasFlexibleRow_) {
          this.useFlexDefaultBehavior_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_DEFAULT_BEHAVIOR);
        }
        this.initKeyRatio_();
        this.setKeyHeights_();
        this.adapter_.registerResizeHandler(this.resizeHandler_);
        this.adapter_.registerScrollHandler(this.scrollHandler_);
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        this.adapter_.deregisterResizeHandler(this.resizeHandler_);
        this.adapter_.deregisterScrollHandler(this.scrollHandler_);
      }
    }, {
      key: 'updateAdjustElementStyles',
      value: function updateAdjustElementStyles() {
        if (this.fixed_) {
          this.adapter_.setStyleForFixedAdjustElement('margin-top', this.calculations_.toolbarHeight + 'px');
        }
      }
    }, {
      key: 'getFlexibleExpansionRatio_',
      value: function getFlexibleExpansionRatio_(scrollTop) {
        // To prevent division by zero when there is no flexibleExpansionHeight
        var delta = 0.0001;
        return Math.max(0, 1 - scrollTop / (this.calculations_.flexibleExpansionHeight + delta));
      }
    }, {
      key: 'checkRowHeight_',
      value: function checkRowHeight_() {
        var _this2 = this;

        cancelAnimationFrame(this.checkRowHeightFrame_);
        this.checkRowHeightFrame_ = requestAnimationFrame(function () {
          return _this2.setKeyHeights_();
        });
      }
    }, {
      key: 'setKeyHeights_',
      value: function setKeyHeights_() {
        var newToolbarRowHeight = this.getRowHeight_();
        if (newToolbarRowHeight !== this.calculations_.toolbarRowHeight) {
          this.calculations_.toolbarRowHeight = newToolbarRowHeight;
          this.calculations_.toolbarHeight = this.calculations_.toolbarRatio * this.calculations_.toolbarRowHeight;
          this.calculations_.flexibleExpansionHeight = this.calculations_.flexibleExpansionRatio * this.calculations_.toolbarRowHeight;
          this.calculations_.maxTranslateYDistance = this.calculations_.maxTranslateYRatio * this.calculations_.toolbarRowHeight;
          this.calculations_.scrollThreshold = this.calculations_.scrollThresholdRatio * this.calculations_.toolbarRowHeight;
          this.updateAdjustElementStyles();
          this.updateToolbarStyles_();
        }
      }
    }, {
      key: 'updateToolbarStyles_',
      value: function updateToolbarStyles_() {
        var _this3 = this;

        cancelAnimationFrame(this.scrollFrame_);
        this.scrollFrame_ = requestAnimationFrame(function () {
          var scrollTop = _this3.adapter_.getViewportScrollY();
          var hasScrolledOutOfThreshold = _this3.scrolledOutOfThreshold_(scrollTop);

          if (hasScrolledOutOfThreshold && _this3.executedLastChange_) {
            return;
          }

          var flexibleExpansionRatio = _this3.getFlexibleExpansionRatio_(scrollTop);

          _this3.updateToolbarFlexibleState_(flexibleExpansionRatio);
          if (_this3.fixedLastrow_) {
            _this3.updateToolbarFixedState_(scrollTop);
          }
          if (_this3.hasFlexibleRow_) {
            _this3.updateFlexibleRowElementStyles_(flexibleExpansionRatio);
          }
          _this3.executedLastChange_ = hasScrolledOutOfThreshold;
          _this3.adapter_.notifyChange({ flexibleExpansionRatio: flexibleExpansionRatio });
        });
      }
    }, {
      key: 'scrolledOutOfThreshold_',
      value: function scrolledOutOfThreshold_(scrollTop) {
        return scrollTop > this.calculations_.scrollThreshold;
      }
    }, {
      key: 'initKeyRatio_',
      value: function initKeyRatio_() {
        var toolbarRowHeight = this.getRowHeight_();
        var firstRowMaxRatio = this.adapter_.getFirstRowElementOffsetHeight() / toolbarRowHeight;
        this.calculations_.toolbarRatio = this.adapter_.getOffsetHeight() / toolbarRowHeight;
        this.calculations_.flexibleExpansionRatio = firstRowMaxRatio - 1;
        this.calculations_.maxTranslateYRatio = this.fixedLastrow_ ? this.calculations_.toolbarRatio - firstRowMaxRatio : 0;
        this.calculations_.scrollThresholdRatio = (this.fixedLastrow_ ? this.calculations_.toolbarRatio : firstRowMaxRatio) - 1;
      }
    }, {
      key: 'getRowHeight_',
      value: function getRowHeight_() {
        var breakpoint = MDCToolbarFoundation.numbers.TOOLBAR_MOBILE_BREAKPOINT;
        return this.adapter_.getViewportWidth() < breakpoint ? MDCToolbarFoundation.numbers.TOOLBAR_ROW_MOBILE_HEIGHT : MDCToolbarFoundation.numbers.TOOLBAR_ROW_HEIGHT;
      }
    }, {
      key: 'updateToolbarFlexibleState_',
      value: function updateToolbarFlexibleState_(flexibleExpansionRatio) {
        this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);
        this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);
        if (flexibleExpansionRatio === 1) {
          this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);
        } else if (flexibleExpansionRatio === 0) {
          this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);
        }
      }
    }, {
      key: 'updateToolbarFixedState_',
      value: function updateToolbarFixedState_(scrollTop) {
        var translateDistance = Math.max(0, Math.min(scrollTop - this.calculations_.flexibleExpansionHeight, this.calculations_.maxTranslateYDistance));
        this.adapter_.setStyle('transform', 'translateY(' + -translateDistance + 'px)');

        if (translateDistance === this.calculations_.maxTranslateYDistance) {
          this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);
        } else {
          this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);
        }
      }
    }, {
      key: 'updateFlexibleRowElementStyles_',
      value: function updateFlexibleRowElementStyles_(flexibleExpansionRatio) {
        if (this.fixed_) {
          var height = this.calculations_.flexibleExpansionHeight * flexibleExpansionRatio;
          this.adapter_.setStyleForFlexibleRowElement('height', height + this.calculations_.toolbarRowHeight + 'px');
        }
        if (this.useFlexDefaultBehavior_) {
          this.updateElementStylesDefaultBehavior_(flexibleExpansionRatio);
        }
      }
    }, {
      key: 'updateElementStylesDefaultBehavior_',
      value: function updateElementStylesDefaultBehavior_(flexibleExpansionRatio) {
        var maxTitleSize = MDCToolbarFoundation.numbers.MAX_TITLE_SIZE;
        var minTitleSize = MDCToolbarFoundation.numbers.MIN_TITLE_SIZE;
        var currentTitleSize = (maxTitleSize - minTitleSize) * flexibleExpansionRatio + minTitleSize;

        this.adapter_.setStyleForTitleElement('font-size', currentTitleSize + 'rem');
      }
    }]);
    return MDCToolbarFoundation;
  }(MDCFoundation);

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var supportsPassive_$2 = void 0;

  // Determine whether the current browser supports passive event listeners, and if so, use them.
  function applyPassive$2() {
    var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
    var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (supportsPassive_$2 === undefined || forceRefresh) {
      var isSupported = false;
      try {
        globalObj.document.addEventListener('test', null, { get passive() {
            isSupported = true;
          } });
      } catch (e) {}

      supportsPassive_$2 = isSupported;
    }

    return supportsPassive_$2 ? { passive: true } : false;
  }

  var mdcToolbar = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('header', { staticClass: "mdc-toolbar-wrapper" }, [_c('div', { ref: "root", class: _vm.rootClasses, style: _vm.rootStyles }, [_vm._t("default")], 2), _vm._v(" "), _vm.fixed || _vm.waterfall || _vm.fixedLastrow ? _c('div', { ref: "fixed-adjust", staticClass: "mdc-toolbar-fixed-adjust", style: _vm.adjustStyles }) : _vm._e()]);
    }, staticRenderFns: [],
    name: 'mdc-toolbar',
    props: {
      'fixed': Boolean,
      'waterfall': Boolean,
      'fixed-lastrow': Boolean,
      'flexible': Boolean,
      'flexible-default': { type: Boolean, default: true }
    },
    data: function data() {
      return {
        rootClasses: {
          'mdc-toolbar': true,
          'mdc-toolbar--fixed': this.fixed || this.waterfall || this.fixedLastrow,
          'mdc-toolbar--waterfall': this.waterfall,
          'mdc-toolbar--fixed-lastrow-only': this.fixedLastrow,
          'mdc-toolbar--flexible': this.flexible,
          'mdc-toolbar--flexible-default-behavior': this.flexible && this.flexibleDefault
        },
        rootStyles: {},
        adjustStyles: {
          // to avoid top margin collapse with :after el
          // 0.1 px should be rounded to 0px
          // TODO: find a better trick
          // height: '0.1px'
        },
        foundation: null
      };
    },
    mounted: function mounted() {
      var _this = this;

      this.foundation = new MDCToolbarFoundation({
        addClass: function addClass(className) {
          _this.$set(_this.rootClasses, className, true);
        },
        removeClass: function removeClass(className) {
          _this.$delete(_this.rootClasses, className);
        },
        hasClass: function hasClass(className) {
          return _this.$refs.root.classList.contains(className);
        },
        registerScrollHandler: function registerScrollHandler(handler) {
          window.addEventListener('scroll', handler, applyPassive$2());
        },
        deregisterScrollHandler: function deregisterScrollHandler(handler) {
          window.removeEventListener('scroll', handler, applyPassive$2());
        },
        registerResizeHandler: function registerResizeHandler(handler) {
          window.addEventListener('resize', handler);
        },
        deregisterResizeHandler: function deregisterResizeHandler(handler) {
          window.removeEventListener('resize', handler);
        },
        getViewportWidth: function getViewportWidth() {
          return window.innerWidth;
        },
        getViewportScrollY: function getViewportScrollY() {
          return window.pageYOffset;
        },
        getOffsetHeight: function getOffsetHeight() {
          return _this.$refs.root.offsetHeight;
        },
        getFirstRowElementOffsetHeight: function getFirstRowElementOffsetHeight() {
          var el = _this.$refs.root.querySelector(MDCToolbarFoundation.strings.FIRST_ROW_SELECTOR);
          return el ? el.offsetHeight : undefined;
        },
        notifyChange: function notifyChange(evtData) {
          _this.$emit('change', evtData);
        },
        setStyle: function setStyle(property, value) {
          _this.$set(_this.rootStyles, property, value);
        },
        setStyleForTitleElement: function setStyleForTitleElement(property, value) {
          var el = _this.$refs.root.querySelector(MDCToolbarFoundation.strings.TITLE_SELECTOR);
          if (el) el.style.setProperty(property, value);
        },
        setStyleForFlexibleRowElement: function setStyleForFlexibleRowElement(property, value) {
          var el = _this.$refs.root.querySelector(MDCToolbarFoundation.strings.FIRST_ROW_SELECTOR);
          if (el) el.style.setProperty(property, value);
        },
        setStyleForFixedAdjustElement: function setStyleForFixedAdjustElement(property, value) {
          _this.$set(_this.adjustStyles, property, value);
        }
      });
      this.foundation.init();
    },
    beforeDestroy: function beforeDestroy() {
      this.foundation.destroy();
    }
  };

  var mdcToolbarRow = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "mdc-toolbar-row mdc-toolbar__row" }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-toolbar-row'
  };

  var mdcToolbarSection = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('section', { staticClass: "mdc-toolbar-section mdc-toolbar__section", class: _vm.classes }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-toolbar-section',
    props: {
      'align-start': Boolean,
      'align-end': Boolean,
      'shrink-to-fit': Boolean
    },
    data: function data() {
      return {
        classes: {
          'mdc-toolbar__section--align-start': this.alignStart,
          'mdc-toolbar__section--align-end': this.alignEnd,
          'mdc-toolbar__section--shrink-to-fit': this.shrinkToFit
        }
      };
    }
  };

  var mdcToolbarMenuIcon = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('a', { staticClass: "mdc-toolbar-menu-icon mdc-toolbar__menu-icon", class: { 'material-icons': !!_vm.icon }, on: { "click": _vm.dispatchEvent } }, [_vm._t("default", [_vm._v(_vm._s(_vm.icon))])], 2);
    }, staticRenderFns: [],
    name: 'mdc-toolbar-menu-icon',
    mixins: [DispatchEventMixin],
    props: {
      icon: { type: String, 'default': "menu" }
    }
  };

  var mdcToolbarTitle = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('a', { staticClass: "mdc-toolbar-title mdc-toolbar__title", on: { "click": _vm.dispatchEvent } }, [_vm._t("default")], 2);
    }, staticRenderFns: [],
    name: 'mdc-toolbar-title',
    mixins: [DispatchEventMixin]
  };

  var mdcToolbarIcon = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('a', { staticClass: "mdc-toolbar-icon mdc-toolbar__icon", class: { 'material-icons': !!_vm.icon }, on: { "click": _vm.dispatchEvent } }, [_vm._t("default", [_vm._v(_vm._s(_vm.icon))])], 2);
    }, staticRenderFns: [],
    name: 'mdc-toolbar-icon',
    mixins: [DispatchEventMixin],
    props: {
      icon: String
    }
  };

  var VueMDCToolbar = BasePlugin({
    mdcToolbar: mdcToolbar,
    mdcToolbarRow: mdcToolbarRow,
    mdcToolbarSection: mdcToolbarSection,
    mdcToolbarMenuIcon: mdcToolbarMenuIcon,
    mdcToolbarTitle: mdcToolbarTitle,
    mdcToolbarIcon: mdcToolbarIcon
  });

  /**
   * @license
   * Copyright 2018 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /** @enum {string} */
  var strings$23 = {
    NAVIGATION_EVENT: 'MDCTopAppBar:nav',
    ROOT_SELECTOR: '.mdc-top-app-bar',
    TITLE_SELECTOR: '.mdc-top-app-bar__title',
    NAVIGATION_ICON_SELECTOR: '.mdc-top-app-bar__navigation-icon',
    ACTION_ITEM_SELECTOR: '.mdc-top-app-bar__action-item'
  };

  /** @enum {string} */
  var cssClasses$24 = {
    SHORT_CLASS: 'mdc-top-app-bar--short',
    SHORT_HAS_ACTION_ITEM_CLASS: 'mdc-top-app-bar--short-has-action-item',
    SHORT_COLLAPSED_CLASS: 'mdc-top-app-bar--short-collapsed'
  };

  /**
   * @license
   * Copyright 2018 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /* eslint no-unused-vars: [2, {"args": "none"}] */

  /**
   * Adapter for MDC Top App Bar
   *
   * Defines the shape of the adapter expected by the foundation. Implement this
   * adapter to integrate the Top App Bar into your framework. See
   * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
   * for more information.
   *
   * @record
   */
  var MDCTopAppBarAdapter = function () {
    function MDCTopAppBarAdapter() {
      classCallCheck(this, MDCTopAppBarAdapter);
    }

    createClass(MDCTopAppBarAdapter, [{
      key: "addClass",

      /**
       * Adds a class to the root Element.
       * @param {string} className
       */
      value: function addClass(className) {}

      /**
       * Removes a class from the root Element.
       * @param {string} className
       */

    }, {
      key: "removeClass",
      value: function removeClass(className) {}

      /**
       * Returns true if the root Element contains the given class.
       * @param {string} className
       * @return {boolean}
       */

    }, {
      key: "hasClass",
      value: function hasClass(className) {}

      /**
       * Registers an event handler on the navigation icon element for a given event.
       * @param {string} type
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "registerNavigationIconInteractionHandler",
      value: function registerNavigationIconInteractionHandler(type, handler) {}

      /**
       * Deregisters an event handler on the navigation icon element for a given event.
       * @param {string} type
       * @param {function(!Event): undefined} handler
       */

    }, {
      key: "deregisterNavigationIconInteractionHandler",
      value: function deregisterNavigationIconInteractionHandler(type, handler) {}

      /**
       * Emits an event when the navigation icon is clicked.
       */

    }, {
      key: "notifyNavigationIconClicked",
      value: function notifyNavigationIconClicked() {}

      /** @param {function(!Event)} handler */

    }, {
      key: "registerScrollHandler",
      value: function registerScrollHandler(handler) {}

      /** @param {function(!Event)} handler */

    }, {
      key: "deregisterScrollHandler",
      value: function deregisterScrollHandler(handler) {}

      /** @return {number} */

    }, {
      key: "getViewportScrollY",
      value: function getViewportScrollY() {}

      /** @return {number} */

    }, {
      key: "getTotalActionItems",
      value: function getTotalActionItems() {}
    }]);
    return MDCTopAppBarAdapter;
  }();

  /**
   * @license
   * Copyright 2018 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends {MDCFoundation<!MDCTopAppBarAdapter>}
   */

  var MDCTopAppBarFoundation = function (_MDCFoundation) {
    inherits(MDCTopAppBarFoundation, _MDCFoundation);
    createClass(MDCTopAppBarFoundation, null, [{
      key: 'strings',

      /** @return enum {string} */
      get: function get$$1() {
        return strings$23;
      }

      /** @return enum {string} */

    }, {
      key: 'cssClasses',
      get: function get$$1() {
        return cssClasses$24;
      }

      /**
       * {@see MDCTopAppBarAdapter} for typing information on parameters and return
       * types.
       * @return {!MDCTopAppBarAdapter}
       */

    }, {
      key: 'defaultAdapter',
      get: function get$$1() {
        return (/** @type {!MDCTopAppBarAdapter} */{
            hasClass: function hasClass() /* className: string */{},
            addClass: function addClass() /* className: string */{},
            removeClass: function removeClass() /* className: string */{},
            registerNavigationIconInteractionHandler: function registerNavigationIconInteractionHandler() /* type: string, handler: EventListener */{},
            deregisterNavigationIconInteractionHandler: function deregisterNavigationIconInteractionHandler() /* type: string, handler: EventListener */{},
            notifyNavigationIconClicked: function notifyNavigationIconClicked() {},
            registerScrollHandler: function registerScrollHandler() /* handler: EventListener */{},
            deregisterScrollHandler: function deregisterScrollHandler() /* handler: EventListener */{},
            getViewportScrollY: function getViewportScrollY() {
              return (/* number */0
              );
            },
            getTotalActionItems: function getTotalActionItems() {
              return (/* number */0
              );
            }
          }
        );
      }

      /**
       * @param {!MDCTopAppBarAdapter} adapter
       */

    }]);

    function MDCTopAppBarFoundation(adapter) {
      classCallCheck(this, MDCTopAppBarFoundation);

      var _this = possibleConstructorReturn(this, (MDCTopAppBarFoundation.__proto__ || Object.getPrototypeOf(MDCTopAppBarFoundation)).call(this, _extends(MDCTopAppBarFoundation.defaultAdapter, adapter)));

      _this.navClickHandler_ = function () {
        return _this.adapter_.notifyNavigationIconClicked();
      };
      return _this;
    }

    createClass(MDCTopAppBarFoundation, [{
      key: 'init',
      value: function init() {
        this.adapter_.registerNavigationIconInteractionHandler('click', this.navClickHandler_);
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        this.adapter_.deregisterNavigationIconInteractionHandler('click', this.navClickHandler_);
      }
    }]);
    return MDCTopAppBarFoundation;
  }(MDCFoundation);

  /**
   * @license
   * Copyright 2018 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  /**
   * @extends {MDCTopAppBarFoundation<!MDCShortTopAppBarFoundation>}
   * @final
   */

  var MDCShortTopAppBarFoundation = function (_MDCTopAppBarFoundati) {
    inherits(MDCShortTopAppBarFoundation, _MDCTopAppBarFoundati);

    /**
     * @param {!MDCTopAppBarAdapter} adapter
     */
    function MDCShortTopAppBarFoundation(adapter) {
      classCallCheck(this, MDCShortTopAppBarFoundation);

      // State variable for the current top app bar state
      var _this = possibleConstructorReturn(this, (MDCShortTopAppBarFoundation.__proto__ || Object.getPrototypeOf(MDCShortTopAppBarFoundation)).call(this, adapter));

      _this.isCollapsed = false;

      _this.scrollHandler_ = function () {
        return _this.shortAppBarScrollHandler_();
      };
      return _this;
    }

    createClass(MDCShortTopAppBarFoundation, [{
      key: 'init',
      value: function init() {
        get(MDCShortTopAppBarFoundation.prototype.__proto__ || Object.getPrototypeOf(MDCShortTopAppBarFoundation.prototype), 'init', this).call(this);
        var isAlwaysCollapsed = this.adapter_.hasClass(cssClasses$24.SHORT_COLLAPSED_CLASS);

        if (this.adapter_.getTotalActionItems() > 0) {
          this.adapter_.addClass(cssClasses$24.SHORT_HAS_ACTION_ITEM_CLASS);
        }

        if (!isAlwaysCollapsed) {
          this.adapter_.registerScrollHandler(this.scrollHandler_);
          this.shortAppBarScrollHandler_();
        }
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        get(MDCShortTopAppBarFoundation.prototype.__proto__ || Object.getPrototypeOf(MDCShortTopAppBarFoundation.prototype), 'destroy', this).call(this);
        this.adapter_.deregisterScrollHandler(this.scrollHandler_);
      }

      /**
       * Scroll handler for applying/removing the collapsed modifier class
       * on the short top app bar.
       */

    }, {
      key: 'shortAppBarScrollHandler_',
      value: function shortAppBarScrollHandler_() {
        var currentScroll = this.adapter_.getViewportScrollY();

        if (currentScroll <= 0) {
          if (this.isCollapsed) {
            this.adapter_.removeClass(cssClasses$24.SHORT_COLLAPSED_CLASS);
            this.isCollapsed = false;
          }
        } else {
          if (!this.isCollapsed) {
            this.adapter_.addClass(cssClasses$24.SHORT_COLLAPSED_CLASS);
            this.isCollapsed = true;
          }
        }
      }
    }]);
    return MDCShortTopAppBarFoundation;
  }(MDCTopAppBarFoundation);

  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */

  var supportsPassive_$3 = void 0;

  /**
   * Determine whether the current browser supports passive event listeners, and if so, use them.
   * @param {!Window=} globalObj
   * @param {boolean=} forceRefresh
   * @return {boolean|{passive: boolean}}
   */
  function applyPassive$3() {
    var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
    var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (supportsPassive_$3 === undefined || forceRefresh) {
      var isSupported = false;
      try {
        globalObj.document.addEventListener('test', null, { get passive() {
            isSupported = true;
          } });
      } catch (e) {}

      supportsPassive_$3 = isSupported;
    }

    return supportsPassive_$3 ? { passive: true } : false;
  }

  var mdcTopAppBar = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('header', { ref: "root", class: _vm.rootClasses }, [_c('div', { staticClass: "mdc-top-app-bar__row" }, [_c('section', { staticClass: "mdc-top-app-bar__section mdc-top-app-bar__section--align-start" }, [_vm.haveNavigationIcon ? _c('a', { ref: "navigationIcon", class: _vm.naviconClasses, attrs: { "href": "#" }, on: { "click": _vm.dispatchEvent } }, [_vm._v(_vm._s(_vm.icon))]) : _vm._e(), _vm._v(" "), !!_vm.title ? _c('span', { staticClass: "mdc-top-app-bar__title" }, [_vm._v(_vm._s(_vm.title))]) : _vm._e()]), _vm._v(" "), _vm.$slots.default ? _c('section', { staticClass: "mdc-top-app-bar__section mdc-top-app-bar__section--align-end" }, [_vm._t("default")], 2) : _vm._e()])]);
    }, staticRenderFns: [],
    name: 'mdc-top-app-bar',
    props: {
      short: Boolean,
      shortCollapsed: Boolean,
      title: String,
      icon: {
        type: String,
        default: 'menu'
      },
      iconClasses: Object
    },
    data: function data() {
      return {
        rootClasses: {
          'mdc-top-app-bar': true,
          'mdc-top-app-bar--short': this.short,
          'mdc-top-app-bar--short-collapsed': this.shortCollapsed
        },
        foundation: null
      };
    },

    mixins: [DispatchEventMixin],
    mounted: function mounted() {
      var _this = this;

      var adapter = {
        addClass: function addClass(className) {
          _this.$set(_this.rootClasses, className, true);
        },
        removeClass: function removeClass(className) {
          _this.$delete(_this.rootClasses, className);
        },
        hasClass: function hasClass(className) {
          return _this.$refs.root.classList.contains(className);
        },
        registerNavigationIconInteractionHandler: function registerNavigationIconInteractionHandler(type, handler) {
          if (_this.$refs.navigationIcon) {
            _this.$refs.navigationIcon.addEventListener(type, handler);
          }
        },
        deregisterNavigationIconInteractionHandler: function deregisterNavigationIconInteractionHandler(type, handler) {
          if (_this.$refs.navigationIcon) {
            _this.$refs.navigationIcon.removeEventListener(type, handler);
          }
        },
        notifyNavigationIconClicked: function notifyNavigationIconClicked() {
          emitCustomEvent(_this.$el, MDCTopAppBarFoundation.strings.NAVIGATION_EVENT, {}, true);
        },
        registerScrollHandler: function registerScrollHandler(handler) {
          window.addEventListener('scroll', handler, applyPassive$3());
        },
        deregisterScrollHandler: function deregisterScrollHandler(handler) {
          window.removeEventListener('scroll', handler);
        },

        getViewportScrollY: function getViewportScrollY() {
          return window.pageYOffset;
        },
        getTotalActionItems: function getTotalActionItems() {
          return _this.$refs.root.querySelectorAll(MDCTopAppBarFoundation.strings.ACTION_ITEM_SELECTOR).length;
        }
      };

      this.foundation = this.short ? new MDCShortTopAppBarFoundation(adapter) : new MDCTopAppBarFoundation(adapter);

      this.foundation.init();
    },

    computed: {
      haveNavigationIcon: function haveNavigationIcon() {
        return !!this.icon || this.iconClasses;
      },
      naviconClasses: function naviconClasses() {
        return _extends({
          'mdc-top-app-bar__navigation-icon': true,
          'material-icons': !!this.icon
        }, this.iconClasses);
      }
    },
    beforeDestroy: function beforeDestroy() {
      this.foundation.destroy();
    }
  };

  var mdcTopAppBarAction = { render: function render() {
      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('a', { staticClass: "mdc-top-app-bar--action mdc-top-app-bar__action-item", class: _vm.actioniconClasses, attrs: { "href": "#" }, on: { "click": _vm.dispatchEvent } }, [_vm._t("default", [_vm._v(_vm._s(_vm.icon))])], 2);
    }, staticRenderFns: [],
    name: 'mdc-top-app-bar--action',
    mixins: [DispatchEventMixin, RippleMixin],
    props: {
      icon: String,
      iconClasses: Object
    },
    computed: {
      actioniconClasses: function actioniconClasses() {
        return _extends({
          'material-icons': !!this.icon
        }, this.iconClasses);
      }
    }
  };

  var VueMDCTopAppBar = BasePlugin({
    mdcTopAppBar: mdcTopAppBar,
    mdcTopAppBarAction: mdcTopAppBarAction
  });

  var typos = ['display4', 'display3', 'display2', 'display1', 'headline', 'title', 'subheading1', 'subheading2', 'body1', 'body2', 'caption', 'button'];

  var mdcTypoMixin = function mdcTypoMixin(name) {
    return {
      render: function render(createElement) {
        var _class;

        return createElement(this.tag, {
          'class': (_class = {
            'mdc-typo': true
          }, defineProperty(_class, name, true), defineProperty(_class, 'mdc-typography--' + this.typo, true), defineProperty(_class, 'mdc-typography--adjust-margin', this.adjustMargin), _class),
          'attrs': this.$attrs,
          'on': this.$listeners
        }, this.$slots.default);
      }
    };
  };

  function mdcTypoPropMixin(defaultTag, defaultTypo, validTypos) {
    return {
      props: {
        'tag': {
          type: String,
          default: defaultTag
        },
        'typo': {
          type: String,
          default: defaultTypo,
          validator: function validator(value) {
            return validTypos.indexOf(value) !== -1;
          }
        },
        'adjust-margin': {
          type: Boolean,
          default: false
        }
      }
    };
  }

  var mdcTextSection = {
    name: 'mdc-text-section',
    props: {
      'tag': {
        type: String,
        default: 'section'
      }
    },
    render: function render(createElement) {
      return createElement(this.tag, {
        'class': {
          'mdc-typography': true,
          'mdc-text-section': true
        },
        'attrs': this.$attrs,
        'on': this.$listeners
      }, this.$slots.default);
    }
  };

  var mdcText = {
    name: 'mdc-text',
    mixins: [mdcTypoMixin('mdc-text'), mdcTypoPropMixin('p', 'body1', typos)]
  };

  var mdcDisplay = {
    name: 'mdc-display',
    mixins: [mdcTypoMixin('mdc-display'), mdcTypoPropMixin('h1', 'display1', ['display4', 'display3', 'display2', 'display1'])]
  };

  var mdcHeadline = {
    name: 'mdc-headline',
    mixins: [mdcTypoMixin('mdc-headline'), mdcTypoPropMixin('h2', 'headline', ['headline'])]
  };

  var mdcTitle = {
    name: 'mdc-title',
    mixins: [mdcTypoMixin('mdc-title'), mdcTypoPropMixin('h3', 'title', ['title'])]
  };

  var mdcSubHeading = {
    name: 'mdc-subheading',
    mixins: [mdcTypoMixin('mdc-subheading'), mdcTypoPropMixin('h4', 'subheading2', ['subheading1', 'subheading2'])]
  };

  var mdcBody = {
    name: 'mdc-body',
    mixins: [mdcTypoMixin('mdc-body'), mdcTypoPropMixin('p', 'body1', ['body1', 'body2'])]
  };

  var mdcCaption = {
    name: 'mdc-caption',
    mixins: [mdcTypoMixin('mdc-caption'), mdcTypoPropMixin('span', 'caption', ['caption'])]
  };

  var VueMDCTypography = BasePlugin({
    mdcTextSection: mdcTextSection,
    mdcText: mdcText,
    mdcBody: mdcBody,
    mdcCaption: mdcCaption,
    mdcDisplay: mdcDisplay,
    mdcHeadline: mdcHeadline,
    mdcSubHeading: mdcSubHeading,
    mdcTitle: mdcTitle
  });

  //

  var plugin = {
    version: '0.13.2',
    install: function install(vm) {
      vm.use(VueMDCButton);
      vm.use(VueMDCCard);
      vm.use(VueMDCCheckbox);
      vm.use(VueMDCChipSet);
      vm.use(VueMDCDialog);
      vm.use(VueMDCDrawer);
      vm.use(VueMDCElevation);
      vm.use(VueMDCFab);
      vm.use(VueMDCGridList);
      vm.use(VueMDCIcon);
      vm.use(VueMDCIconToggle);
      vm.use(VueMDCLayoutApp);
      vm.use(VueMDCLayoutGrid);
      vm.use(VueMDCLinearProgress);
      vm.use(VueMDCList);
      vm.use(VueMDCMenu);
      vm.use(VueMDCRadio);
      vm.use(VueMDCRipple);
      vm.use(VueMDCSelect);
      vm.use(VueMDCSlider);
      vm.use(VueMDCSnackbar);
      vm.use(VueMDCSwitch);
      vm.use(VueMDCTabs);
      vm.use(VueMDCTextfield);
      vm.use(VueMDCTheme);
      vm.use(VueMDCToolbar);
      vm.use(VueMDCTopAppBar);
      vm.use(VueMDCTypography);
    }
  };

  autoInit(plugin);

  return plugin;

})));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidnVlLW1kYy1hZGFwdGVyLnVtZC5qcyIsInNvdXJjZXMiOlsiLi4vY29tcG9uZW50cy9iYXNlL2F1dG8taW5pdC5qcyIsIi4uL2NvbXBvbmVudHMvYmFzZS9iYXNlLXBsdWdpbi5qcyIsIi4uL2NvbXBvbmVudHMvYmFzZS9jdXN0b20tZWxlbWVudC5qcyIsIi4uL2NvbXBvbmVudHMvYmFzZS9jdXN0b20tbGluay5qcyIsIi4uL2NvbXBvbmVudHMvYmFzZS9jdXN0b20tZXZlbnQuanMiLCIuLi9jb21wb25lbnRzL2Jhc2UvY3VzdG9tLWJ1dHRvbi5qcyIsIi4uL2NvbXBvbmVudHMvYmFzZS9jdXN0b20taWNvbi5qcyIsIi4uL2NvbXBvbmVudHMvYmFzZS9kaXNwYXRjaC1ldmVudC1taXhpbi5qcyIsIi4uL2NvbXBvbmVudHMvYmFzZS9kaXNwYXRjaC1mb2N1cy1taXhpbi5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvYmFzZS9mb3VuZGF0aW9uLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9yaXBwbGUvYWRhcHRlci5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvcmlwcGxlL2NvbnN0YW50cy5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvcmlwcGxlL3V0aWwuanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3JpcHBsZS9mb3VuZGF0aW9uLmpzIiwiLi4vY29tcG9uZW50cy9yaXBwbGUvbWRjLXJpcHBsZS1iYXNlLmpzIiwiLi4vY29tcG9uZW50cy9yaXBwbGUvbWRjLXJpcHBsZS52dWUiLCIuLi9jb21wb25lbnRzL3JpcHBsZS9pbmRleC5qcyIsIi4uL2NvbXBvbmVudHMvYnV0dG9uL21kYy1idXR0b24tYmFzZS52dWUiLCIuLi9jb21wb25lbnRzL2J1dHRvbi9tZGMtYnV0dG9uLnZ1ZSIsIi4uL2NvbXBvbmVudHMvYnV0dG9uL2luZGV4LmpzIiwiLi4vY29tcG9uZW50cy9jYXJkL21kYy1jYXJkLnZ1ZSIsIi4uL2NvbXBvbmVudHMvY2FyZC9tZGMtY2FyZC1wcmltYXJ5LWFjdGlvbi52dWUiLCIuLi9jb21wb25lbnRzL2NhcmQvbWRjLWNhcmQtbWVkaWEudnVlIiwiLi4vY29tcG9uZW50cy9jYXJkL21kYy1jYXJkLWhlYWRlci52dWUiLCIuLi9jb21wb25lbnRzL2NhcmQvbWRjLWNhcmQtdGl0bGUudnVlIiwiLi4vY29tcG9uZW50cy9jYXJkL21kYy1jYXJkLXN1YnRpdGxlLnZ1ZSIsIi4uL2NvbXBvbmVudHMvY2FyZC9tZGMtY2FyZC10ZXh0LnZ1ZSIsIi4uL2NvbXBvbmVudHMvY2FyZC9tZGMtY2FyZC1hY3Rpb25zLnZ1ZSIsIi4uL2NvbXBvbmVudHMvY2FyZC9tZGMtY2FyZC1hY3Rpb24tYnV0dG9ucy52dWUiLCIuLi9jb21wb25lbnRzL2NhcmQvbWRjLWNhcmQtYWN0aW9uLWJ1dHRvbi52dWUiLCIuLi9jb21wb25lbnRzL2NhcmQvbWRjLWNhcmQtYWN0aW9uLWljb25zLnZ1ZSIsIi4uL2NvbXBvbmVudHMvY2FyZC9tZGMtY2FyZC1hY3Rpb24taWNvbi52dWUiLCIuLi9jb21wb25lbnRzL2NhcmQvaW5kZXguanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2Jhc2UvY29tcG9uZW50LmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9yaXBwbGUvaW5kZXguanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3NlbGVjdGlvbi1jb250cm9sL2luZGV4LmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9jaGVja2JveC9hZGFwdGVyLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9jaGVja2JveC9jb25zdGFudHMuanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2NoZWNrYm94L2ZvdW5kYXRpb24uanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2Zvcm0tZmllbGQvYWRhcHRlci5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvZm9ybS1maWVsZC9jb25zdGFudHMuanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2Zvcm0tZmllbGQvZm91bmRhdGlvbi5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvYW5pbWF0aW9uL2luZGV4LmpzIiwiLi4vY29tcG9uZW50cy9jaGVja2JveC9tZGMtY2hlY2tib3gudnVlIiwiLi4vY29tcG9uZW50cy9jaGVja2JveC9pbmRleC5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvY2hpcHMvY2hpcC9hZGFwdGVyLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9jaGlwcy9jaGlwL2NvbnN0YW50cy5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvY2hpcHMvY2hpcC9mb3VuZGF0aW9uLmpzIiwiLi4vY29tcG9uZW50cy9jaGlwcy9tZGMtY2hpcC52dWUiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2NoaXBzL2NoaXAtc2V0L2FkYXB0ZXIuanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2NoaXBzL2NoaXAvaW5kZXguanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2NoaXBzL2NoaXAtc2V0L2NvbnN0YW50cy5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvY2hpcHMvY2hpcC1zZXQvZm91bmRhdGlvbi5qcyIsIi4uL2NvbXBvbmVudHMvY2hpcHMvbWRjLWNoaXAtc2V0LnZ1ZSIsIi4uL2NvbXBvbmVudHMvY2hpcHMvaW5kZXguanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2Jhc2UvaW5kZXguanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2RpYWxvZy9jb25zdGFudHMuanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2RpYWxvZy9mb3VuZGF0aW9uLmpzIiwiLi4vbm9kZV9tb2R1bGVzL3RhYmJhYmxlL2luZGV4LmpzIiwiLi4vbm9kZV9tb2R1bGVzL2ZvY3VzLXRyYXAvaW5kZXguanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2RpYWxvZy91dGlsLmpzIiwiLi4vY29tcG9uZW50cy9kaWFsb2cvbWRjLWRpYWxvZy52dWUiLCIuLi9jb21wb25lbnRzL2RpYWxvZy9pbmRleC5qcyIsIi4uL2NvbXBvbmVudHMvZHJhd2VyL21kYy1wZXJtYW5lbnQtZHJhd2VyLnZ1ZSIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvZHJhd2VyL3NsaWRhYmxlL2NvbnN0YW50cy5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvZHJhd2VyL3NsaWRhYmxlL2ZvdW5kYXRpb24uanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2RyYXdlci9zbGlkYWJsZS9pbmRleC5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvZHJhd2VyL3BlcnNpc3RlbnQvY29uc3RhbnRzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9kcmF3ZXIvcGVyc2lzdGVudC9mb3VuZGF0aW9uLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9kcmF3ZXIvdXRpbC5qcyIsIi4uL2NvbXBvbmVudHMvZHJhd2VyL21kYy1wZXJzaXN0ZW50LWRyYXdlci52dWUiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2RyYXdlci90ZW1wb3JhcnkvY29uc3RhbnRzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9kcmF3ZXIvdGVtcG9yYXJ5L2ZvdW5kYXRpb24uanMiLCIuLi9jb21wb25lbnRzL2RyYXdlci9tZGMtdGVtcG9yYXJ5LWRyYXdlci52dWUiLCIuLi9jb21wb25lbnRzL2RyYXdlci9tZGMtZHJhd2VyLnZ1ZSIsIi4uL2NvbXBvbmVudHMvZHJhd2VyL21kYy1kcmF3ZXItbGF5b3V0LnZ1ZSIsIi4uL2NvbXBvbmVudHMvZHJhd2VyL21kYy1kcmF3ZXItaGVhZGVyLnZ1ZSIsIi4uL2NvbXBvbmVudHMvZHJhd2VyL21kYy1kcmF3ZXItbGlzdC52dWUiLCIuLi9jb21wb25lbnRzL2RyYXdlci9tZGMtZHJhd2VyLWl0ZW0udnVlIiwiLi4vY29tcG9uZW50cy9kcmF3ZXIvbWRjLWRyYXdlci1kaXZpZGVyLnZ1ZSIsIi4uL2NvbXBvbmVudHMvZHJhd2VyL2luZGV4LmpzIiwiLi4vY29tcG9uZW50cy9lbGV2YXRpb24vbWRjLWVsZXZhdGlvbi52dWUiLCIuLi9jb21wb25lbnRzL2VsZXZhdGlvbi9pbmRleC5qcyIsIi4uL2NvbXBvbmVudHMvZmFiL21kYy1mYWIudnVlIiwiLi4vY29tcG9uZW50cy9mYWIvaW5kZXguanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2dyaWQtbGlzdC9jb25zdGFudHMuanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2dyaWQtbGlzdC9mb3VuZGF0aW9uLmpzIiwiLi4vY29tcG9uZW50cy9ncmlkLWxpc3QvbWRjLWdyaWQtbGlzdC52dWUiLCIuLi9jb21wb25lbnRzL2dyaWQtbGlzdC9tZGMtZ3JpZC10aWxlLnZ1ZSIsIi4uL2NvbXBvbmVudHMvZ3JpZC1saXN0L2luZGV4LmpzIiwiLi4vY29tcG9uZW50cy9pY29uL21kYy1pY29uLnZ1ZSIsIi4uL2NvbXBvbmVudHMvaWNvbi9pbmRleC5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvaWNvbi10b2dnbGUvYWRhcHRlci5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvaWNvbi10b2dnbGUvY29uc3RhbnRzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9pY29uLXRvZ2dsZS9mb3VuZGF0aW9uLmpzIiwiLi4vY29tcG9uZW50cy9pY29uLXRvZ2dsZS9tZGMtaWNvbi10b2dnbGUudnVlIiwiLi4vY29tcG9uZW50cy9pY29uLXRvZ2dsZS9pbmRleC5qcyIsIi4uL2NvbXBvbmVudHMvbGF5b3V0LWFwcC9tZGMtbGF5b3V0LWFwcC52dWUiLCIuLi9jb21wb25lbnRzL2xheW91dC1hcHAvaW5kZXguanMiLCIuLi9jb21wb25lbnRzL2xheW91dC1ncmlkL21kYy1sYXlvdXQtZ3JpZC52dWUiLCIuLi9jb21wb25lbnRzL2xheW91dC1ncmlkL21kYy1sYXlvdXQtY2VsbC52dWUiLCIuLi9jb21wb25lbnRzL2xheW91dC1ncmlkL21kYy1sYXlvdXQtaW5uZXItZ3JpZC52dWUiLCIuLi9jb21wb25lbnRzL2xheW91dC1ncmlkL2luZGV4LmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9saW5lYXItcHJvZ3Jlc3MvY29uc3RhbnRzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9saW5lYXItcHJvZ3Jlc3MvZm91bmRhdGlvbi5qcyIsIi4uL2NvbXBvbmVudHMvbGluZWFyLXByb2dyZXNzL21kYy1saW5lYXItcHJvZ3Jlc3MudnVlIiwiLi4vY29tcG9uZW50cy9saW5lYXItcHJvZ3Jlc3MvaW5kZXguanMiLCIuLi9jb21wb25lbnRzL2xpc3QvbWRjLWxpc3QudnVlIiwiLi4vY29tcG9uZW50cy9saXN0L21kYy1saXN0LWl0ZW0udnVlIiwiLi4vY29tcG9uZW50cy9saXN0L21kYy1saXN0LWRpdmlkZXIudnVlIiwiLi4vY29tcG9uZW50cy9saXN0L21kYy1saXN0LWdyb3VwLnZ1ZSIsIi4uL2NvbXBvbmVudHMvbGlzdC9tZGMtbGlzdC1ncm91cC1oZWFkZXIudnVlIiwiLi4vY29tcG9uZW50cy9saXN0L21kYy1saXN0LWdyb3VwLWRpdmlkZXIudnVlIiwiLi4vY29tcG9uZW50cy9saXN0L2luZGV4LmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9tZW51L2FkYXB0ZXIuanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL21lbnUvY29uc3RhbnRzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9tZW51L2ZvdW5kYXRpb24uanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL21lbnUvdXRpbC5qcyIsIi4uL2NvbXBvbmVudHMvbWVudS9tZGMtbWVudS52dWUiLCIuLi9jb21wb25lbnRzL21lbnUvbWRjLW1lbnUtaXRlbS52dWUiLCIuLi9jb21wb25lbnRzL21lbnUvbWRjLW1lbnUtZGl2aWRlci52dWUiLCIuLi9jb21wb25lbnRzL21lbnUvbWRjLW1lbnUtYW5jaG9yLnZ1ZSIsIi4uL2NvbXBvbmVudHMvbWVudS9pbmRleC5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvcmFkaW8vYWRhcHRlci5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvcmFkaW8vY29uc3RhbnRzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9yYWRpby9mb3VuZGF0aW9uLmpzIiwiLi4vY29tcG9uZW50cy9yYWRpby9tZGMtcmFkaW8udnVlIiwiLi4vY29tcG9uZW50cy9yYWRpby9pbmRleC5qcyIsIi4uL2NvbXBvbmVudHMvc2VsZWN0L21kYy1uYXRpdmUtc2VsZWN0LnZ1ZSIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvc2VsZWN0L2NvbnN0YW50cy5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvbWVudS9pbmRleC5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvc2VsZWN0L2ZvdW5kYXRpb24uanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3NlbGVjdC9ib3R0b20tbGluZS9hZGFwdGVyLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9zZWxlY3QvYm90dG9tLWxpbmUvY29uc3RhbnRzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9zZWxlY3QvYm90dG9tLWxpbmUvZm91bmRhdGlvbi5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvc2VsZWN0L2xhYmVsL2FkYXB0ZXIuanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3NlbGVjdC9sYWJlbC9jb25zdGFudHMuanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3NlbGVjdC9sYWJlbC9mb3VuZGF0aW9uLmpzIiwiLi4vY29tcG9uZW50cy9zZWxlY3QvbWRjLW1lbnUtc2VsZWN0LnZ1ZSIsIi4uL2NvbXBvbmVudHMvc2VsZWN0L21kYy1tdWx0aS1zZWxlY3QudnVlIiwiLi4vY29tcG9uZW50cy9zZWxlY3QvbWRjLXNlbGVjdC52dWUiLCIuLi9jb21wb25lbnRzL3NlbGVjdC9tZGMtbmF0aXZlLW9wdGlvbi52dWUiLCIuLi9jb21wb25lbnRzL3NlbGVjdC9tZGMtbWVudS1vcHRpb24udnVlIiwiLi4vY29tcG9uZW50cy9zZWxlY3QvbWRjLW11bHRpLW9wdGlvbi52dWUiLCIuLi9jb21wb25lbnRzL3NlbGVjdC9tZGMtb3B0aW9uLnZ1ZSIsIi4uL2NvbXBvbmVudHMvc2VsZWN0L2luZGV4LmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9zbGlkZXIvY29uc3RhbnRzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9zbGlkZXIvYWRhcHRlci5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvc2xpZGVyL2ZvdW5kYXRpb24uanMiLCIuLi9jb21wb25lbnRzL3NsaWRlci9tZGMtc2xpZGVyLnZ1ZSIsIi4uL2NvbXBvbmVudHMvc2xpZGVyL2luZGV4LmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9zbmFja2Jhci9jb25zdGFudHMuanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3NuYWNrYmFyL2ZvdW5kYXRpb24uanMiLCIuLi9jb21wb25lbnRzL3NuYWNrYmFyL21kYy1zbmFja2Jhci52dWUiLCIuLi9jb21wb25lbnRzL3NuYWNrYmFyL2luZGV4LmpzIiwiLi4vY29tcG9uZW50cy9zd2l0Y2gvbWRjLXN3aXRjaC52dWUiLCIuLi9jb21wb25lbnRzL3N3aXRjaC9pbmRleC5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvdGFicy90YWIvY29uc3RhbnRzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC90YWJzL3RhYi9mb3VuZGF0aW9uLmpzIiwiLi4vY29tcG9uZW50cy90YWJzL21kYy10YWIudnVlIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC90YWJzL3RhYi1iYXIvY29uc3RhbnRzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC90YWJzL3RhYi1iYXIvZm91bmRhdGlvbi5qcyIsIi4uL2NvbXBvbmVudHMvdGFicy9tZGMtdGFiLWJhci52dWUiLCIuLi9jb21wb25lbnRzL3RhYnMvaW5kZXguanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3RleHRmaWVsZC9oZWxwZXItdGV4dC9hZGFwdGVyLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC90ZXh0ZmllbGQvaGVscGVyLXRleHQvY29uc3RhbnRzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC90ZXh0ZmllbGQvaGVscGVyLXRleHQvZm91bmRhdGlvbi5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvdGV4dGZpZWxkL2ljb24vYWRhcHRlci5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvdGV4dGZpZWxkL2ljb24vY29uc3RhbnRzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC90ZXh0ZmllbGQvaWNvbi9mb3VuZGF0aW9uLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC90ZXh0ZmllbGQvYWRhcHRlci5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvbGluZS1yaXBwbGUvYWRhcHRlci5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvbGluZS1yaXBwbGUvY29uc3RhbnRzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9saW5lLXJpcHBsZS9mb3VuZGF0aW9uLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9mbG9hdGluZy1sYWJlbC9hZGFwdGVyLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9mbG9hdGluZy1sYWJlbC9jb25zdGFudHMuanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2Zsb2F0aW5nLWxhYmVsL2ZvdW5kYXRpb24uanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL25vdGNoZWQtb3V0bGluZS9hZGFwdGVyLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9ub3RjaGVkLW91dGxpbmUvY29uc3RhbnRzLmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC9ub3RjaGVkLW91dGxpbmUvZm91bmRhdGlvbi5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvdGV4dGZpZWxkL2NvbnN0YW50cy5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvdGV4dGZpZWxkL2ZvdW5kYXRpb24uanMiLCIuLi9jb21wb25lbnRzL3RleHRmaWVsZC9tZGMtdGV4dGZpZWxkLnZ1ZSIsIi4uL2NvbXBvbmVudHMvdGV4dGZpZWxkL2luZGV4LmpzIiwiLi4vY29tcG9uZW50cy90aGVtZS9tZGMtdGhlbWUudnVlIiwiLi4vY29tcG9uZW50cy90aGVtZS9pbmRleC5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvdG9vbGJhci9jb25zdGFudHMuanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3Rvb2xiYXIvZm91bmRhdGlvbi5qcyIsIi4uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvdG9vbGJhci91dGlsLmpzIiwiLi4vY29tcG9uZW50cy90b29sYmFyL21kYy10b29sYmFyLnZ1ZSIsIi4uL2NvbXBvbmVudHMvdG9vbGJhci9tZGMtdG9vbGJhci1yb3cudnVlIiwiLi4vY29tcG9uZW50cy90b29sYmFyL21kYy10b29sYmFyLXNlY3Rpb24udnVlIiwiLi4vY29tcG9uZW50cy90b29sYmFyL21kYy10b29sYmFyLW1lbnUtaWNvbi52dWUiLCIuLi9jb21wb25lbnRzL3Rvb2xiYXIvbWRjLXRvb2xiYXItdGl0bGUudnVlIiwiLi4vY29tcG9uZW50cy90b29sYmFyL21kYy10b29sYmFyLWljb24udnVlIiwiLi4vY29tcG9uZW50cy90b29sYmFyL2luZGV4LmpzIiwiLi4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC90b3AtYXBwLWJhci9jb25zdGFudHMuanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3RvcC1hcHAtYmFyL2FkYXB0ZXIuanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3RvcC1hcHAtYmFyL2ZvdW5kYXRpb24uanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3RvcC1hcHAtYmFyL3Nob3J0L2ZvdW5kYXRpb24uanMiLCIuLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3RvcC1hcHAtYmFyL3V0aWwuanMiLCIuLi9jb21wb25lbnRzL3RvcC1hcHAtYmFyL21kYy10b3AtYXBwLWJhci52dWUiLCIuLi9jb21wb25lbnRzL3RvcC1hcHAtYmFyL21kYy10b3AtYXBwLWJhci0tYWN0aW9uLnZ1ZSIsIi4uL2NvbXBvbmVudHMvdG9wLWFwcC1iYXIvaW5kZXguanMiLCIuLi9jb21wb25lbnRzL3R5cG9ncmFwaHkvbWRjLXR5cG9ncmFwaHkuanMiLCIuLi9jb21wb25lbnRzL3R5cG9ncmFwaHkvaW5kZXguanMiLCIuLi9jb21wb25lbnRzL2luZGV4LmpzIiwiLi4vY29tcG9uZW50cy9lbnRyeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gYXV0b0luaXQgKHBsdWdpbikge1xuICAvLyBBdXRvLWluc3RhbGxcbiAgbGV0IF9WdWUgPSBudWxsXG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIF9WdWUgPSB3aW5kb3cuVnVlXG4gIH0gZWxzZSBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAvKmdsb2JhbCBnbG9iYWwqL1xuICAgIF9WdWUgPSBnbG9iYWwuVnVlXG4gIH1cbiAgaWYgKF9WdWUpIHtcbiAgICBfVnVlLnVzZShwbHVnaW4pXG4gIH1cbn1cbiAgIiwiZXhwb3J0IGZ1bmN0aW9uIEJhc2VQbHVnaW4gKGNvbXBvbmVudHMpIHsgXG4gIHJldHVybiB7XG4gICAgdmVyc2lvbjogJ19fVkVSU0lPTl9fJyxcbiAgICBpbnN0YWxsOiAodm0pID0+IHtcbiAgICAgIGZvciAobGV0IGtleSBpbiBjb21wb25lbnRzKSB7XG4gICAgICAgIGxldCBjb21wb25lbnQgPSBjb21wb25lbnRzW2tleV1cbiAgICAgICAgICB2bS5jb21wb25lbnQoY29tcG9uZW50Lm5hbWUsY29tcG9uZW50KVxuICAgICAgfVxuICAgIH0sXG4gICAgY29tcG9uZW50c1xuICB9IFxufVxuXG4iLCJleHBvcnQgY29uc3QgQ3VzdG9tRWxlbWVudCA9IHtcbiAgZnVuY3Rpb25hbDogdHJ1ZSxcbiAgcmVuZGVyIChjcmVhdGVFbGVtZW50LCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoXG4gICAgICBjb250ZXh0LnByb3BzLmlzIHx8IGNvbnRleHQucHJvcHMudGFnIHx8ICdkaXYnLCBcbiAgICAgIGNvbnRleHQuZGF0YSxcbiAgICAgIGNvbnRleHQuY2hpbGRyZW4pXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IEN1c3RvbUVsZW1lbnRNaXhpbiA9IHtcbiAgY29tcG9uZW50czoge1xuICAgIEN1c3RvbUVsZW1lbnRcbiAgfVxufVxuIiwiZXhwb3J0IGNvbnN0IEN1c3RvbUxpbmsgPSB7XG4gIG5hbWU6ICdjdXN0b20tbGluaycsXG4gIGZ1bmN0aW9uYWw6IHRydWUsXG4gIHByb3BzOiB7XG4gICAgdGFnOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJ2EnIH0sXG4gICAgbGluayA6IE9iamVjdCxcbiAgfSxcbiAgcmVuZGVyIChoLCBjb250ZXh0KSB7XG4gICAgbGV0IGVsZW1lbnQgXG4gICAgbGV0IGRhdGEgPSBPYmplY3QuYXNzaWduKHt9LCBjb250ZXh0LmRhdGEpXG5cbiAgICBpZiAoY29udGV4dC5wcm9wcy5saW5rICYmIGNvbnRleHQucGFyZW50LiRyb3V0ZXIpIHtcbiAgICAgIC8vIHJvdXRlci1saW5rIGNhc2VcbiAgICAgIGVsZW1lbnQgPSBjb250ZXh0LnBhcmVudC4kcm9vdC4kb3B0aW9ucy5jb21wb25lbnRzWydyb3V0ZXItbGluayddIFxuICAgICAgZGF0YS5wcm9wcyA9IE9iamVjdC5hc3NpZ24oe3RhZzogY29udGV4dC5wcm9wcy50YWd9LCBjb250ZXh0LnByb3BzLmxpbmspXG4gICAgICBpZiAoZGF0YS5vbi5jbGljaykge1xuICAgICAgICBkYXRhLm5hdGl2ZU9uID0ge2NsaWNrOiBkYXRhLm9uLmNsaWNrIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gZWxlbWVudCBmYWxsYmFja1xuICAgICAgZWxlbWVudCA9IGNvbnRleHQucHJvcHMudGFnIFxuICAgIH0gXG5cbiAgICByZXR1cm4gaChlbGVtZW50LCBkYXRhLCBjb250ZXh0LmNoaWxkcmVuKVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBDdXN0b21MaW5rTWl4aW4gPSB7XG4gIHByb3BzOiB7XG4gICAgdG86IFtTdHJpbmcsIE9iamVjdF0sXG4gICAgZXhhY3Q6IEJvb2xlYW4sXG4gICAgYXBwZW5kOiBCb29sZWFuLFxuICAgIHJlcGxhY2U6IEJvb2xlYW4sXG4gICAgYWN0aXZlQ2xhc3M6IFN0cmluZyxcbiAgICBleGFjdEFjdGl2ZUNsYXNzOiBTdHJpbmcsXG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgbGluayAoKSB7XG4gICAgICByZXR1cm4gdGhpcy50byAmJiB7XG4gICAgICAgIHRvOiB0aGlzLnRvLFxuICAgICAgICBleGFjdDogdGhpcy5leGFjdCxcbiAgICAgICAgYXBwZW5kOiB0aGlzLmFwcGVuZCxcbiAgICAgICAgcmVwbGFjZTogdGhpcy5yZXBsYWNlLFxuICAgICAgICBhY3RpdmVDbGFzczogdGhpcy5hY3RpdmVDbGFzcyxcbiAgICAgICAgZXhhY3RBY3RpdmVDbGFzczogdGhpcy5leGFjdEFjdGl2ZUNsYXNzLFxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgY29tcG9uZW50cyA6IHsgXG4gICAgQ3VzdG9tTGluayBcbiAgfVxufSIsIi8qIGdsb2JhbCBDdXN0b21FdmVudCAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZW1pdEN1c3RvbUV2ZW50IChlbCwgZXZ0VHlwZSwgZXZ0RGF0YSwgc2hvdWxkQnViYmxlID0gZmFsc2UpIHtcbiAgbGV0IGV2dFxuICBpZiAodHlwZW9mIEN1c3RvbUV2ZW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZXZ0ID0gbmV3IEN1c3RvbUV2ZW50KGV2dFR5cGUsIHtcbiAgICAgIGRldGFpbDogZXZ0RGF0YSxcbiAgICAgIGJ1YmJsZXM6IHNob3VsZEJ1YmJsZVxuICAgIH0pXG4gIH0gZWxzZSB7XG4gICAgZXZ0ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0N1c3RvbUV2ZW50JylcbiAgICBldnQuaW5pdEN1c3RvbUV2ZW50KGV2dFR5cGUsIHNob3VsZEJ1YmJsZSwgZmFsc2UsIGV2dERhdGEpXG4gIH1cbiAgZWwuZGlzcGF0Y2hFdmVudChldnQpXG59XG4iLCJleHBvcnQgY29uc3QgQ3VzdG9tQnV0dG9uID0ge1xuICBuYW1lOiAnY3VzdG9tLWJ1dHRvbicsXG4gIGZ1bmN0aW9uYWw6IHRydWUsXG4gIHByb3BzOiB7XG4gICAgbGluayA6IE9iamVjdCxcbiAgfSxcbiAgcmVuZGVyIChoLCBjb250ZXh0KSB7XG4gICAgbGV0IGVsZW1lbnQgXG4gICAgbGV0IGRhdGEgPSBPYmplY3QuYXNzaWduKHt9LCBjb250ZXh0LmRhdGEpXG5cbiAgICBpZiAoY29udGV4dC5wcm9wcy5saW5rICYmIGNvbnRleHQucGFyZW50LiRyb3V0ZXIpIHtcbiAgICAgIC8vIHJvdXRlci1saW5rIGNhc2VcbiAgICAgIGVsZW1lbnQgPSBjb250ZXh0LnBhcmVudC4kcm9vdC4kb3B0aW9ucy5jb21wb25lbnRzWydyb3V0ZXItbGluayddIFxuICAgICAgZGF0YS5wcm9wcyA9IE9iamVjdC5hc3NpZ24oe3RhZzogY29udGV4dC5wcm9wcy50YWd9LCBjb250ZXh0LnByb3BzLmxpbmspXG4gICAgICBkYXRhLmF0dHJzLnJvbGUgPSAnYnV0dG9uJ1xuICAgICAgaWYgKGRhdGEub24uY2xpY2spIHtcbiAgICAgICAgZGF0YS5uYXRpdmVPbiA9IHtjbGljazogZGF0YS5vbi5jbGljayB9XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChkYXRhLmF0dHJzICYmIGRhdGEuYXR0cnMuaHJlZikge1xuICAgICAgLy8gaHJlZiBjYXNlXG4gICAgICBlbGVtZW50ID0gJ2EnIFxuICAgICAgZGF0YS5hdHRycy5yb2xlID0gJ2J1dHRvbidcbiAgICB9ICBlbHNlIHtcbiAgICAgIC8vIGJ1dHRvbiBmYWxsYmFja1xuICAgICAgZWxlbWVudCA9ICdidXR0b24nXG4gICAgfSBcblxuICAgIHJldHVybiBoKGVsZW1lbnQsIGRhdGEsIGNvbnRleHQuY2hpbGRyZW4pXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IEN1c3RvbUJ1dHRvbk1peGluID0ge1xuICBwcm9wczoge1xuICAgIGhyZWY6IFN0cmluZyxcbiAgICBkaXNhYmxlZDogQm9vbGVhbixcbiAgICB0bzogW1N0cmluZywgT2JqZWN0XSxcbiAgICBleGFjdDogQm9vbGVhbixcbiAgICBhcHBlbmQ6IEJvb2xlYW4sXG4gICAgcmVwbGFjZTogQm9vbGVhbixcbiAgICBhY3RpdmVDbGFzczogU3RyaW5nLFxuICAgIGV4YWN0QWN0aXZlQ2xhc3M6IFN0cmluZyxcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBsaW5rICgpIHtcbiAgICAgIHJldHVybiB0aGlzLnRvICYmIHtcbiAgICAgICAgdG86IHRoaXMudG8sXG4gICAgICAgIGV4YWN0OiB0aGlzLmV4YWN0LFxuICAgICAgICBhcHBlbmQ6IHRoaXMuYXBwZW5kLFxuICAgICAgICByZXBsYWNlOiB0aGlzLnJlcGxhY2UsXG4gICAgICAgIGFjdGl2ZUNsYXNzOiB0aGlzLmFjdGl2ZUNsYXNzLFxuICAgICAgICBleGFjdEFjdGl2ZUNsYXNzOiB0aGlzLmV4YWN0QWN0aXZlQ2xhc3MsXG4gICAgICB9XG4gICAgfVxuICB9LFxuICBjb21wb25lbnRzIDogeyBcbiAgICBDdXN0b21CdXR0b24gXG4gIH1cbn1cbiIsImV4cG9ydCBmdW5jdGlvbiBleHRyYWN0SWNvblByb3AgKGljb25Qcm9wKSB7XG4gICAgaWYgKHR5cGVvZiBpY29uUHJvcCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNsYXNzZXM6IHsgJ21hdGVyaWFsLWljb25zJyA6IHRydWV9LFxuICAgICAgICBjb250ZW50OiBpY29uUHJvcCBcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoaWNvblByb3AgaW5zdGFuY2VvZiBBcnJheSl7XG4gICAgICByZXR1cm4geyBcbiAgICAgICAgY2xhc3NlczogaWNvblByb3AucmVkdWNlKFxuICAgICAgICAgIChyZXN1bHQsIHZhbHVlKSA9PiBPYmplY3QuYXNzaWduKHJlc3VsdCx7W3ZhbHVlXTp0cnVlfSksXG4gICAgICAgICAge30pLFxuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBpY29uUHJvcCA9PT0gJ29iamVjdCcpe1xuICAgICAgcmV0dXJuIHsgXG4gICAgICAgIGNsYXNzZXM6IGljb25Qcm9wLmNsYXNzTmFtZS5zcGxpdCgnICcpLnJlZHVjZShcbiAgICAgICAgICAocmVzdWx0LCB2YWx1ZSkgPT4gT2JqZWN0LmFzc2lnbihyZXN1bHQse1t2YWx1ZV06dHJ1ZX0pLFxuICAgICAgICAgIHt9KSxcbiAgICAgICAgY29udGVudDogaWNvblByb3AudGV4dENvbnRlbnQgXG4gICAgICB9XG4gICAgfVxuICB9XG4iLCJleHBvcnQgY29uc3QgRGlzcGF0Y2hFdmVudE1peGluID0ge1xuICBwcm9wczoge1xuICAgICdldmVudCc6IFN0cmluZyxcbiAgICAnZXZlbnQtdGFyZ2V0JzogT2JqZWN0LFxuICAgICdldmVudC1hcmdzJzogQXJyYXksXG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBkaXNwYXRjaEV2ZW50IChldnQpIHtcbiAgICAgIHRoaXMuJGVtaXQoZXZ0LnR5cGUpXG4gICAgICBpZiAodGhpcy5ldmVudCkge1xuICAgICAgICBsZXQgdGFyZ2V0ID0gdGhpcy5ldmVudFRhcmdldCB8fCB0aGlzLiRyb290XG4gICAgICAgIGxldCBhcmdzID0gdGhpcy5ldmVudEFyZ3MgfHwgW11cbiAgICAgICAgdGFyZ2V0LiRlbWl0KHRoaXMuZXZlbnQsIC4uLmFyZ3MpXG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCJleHBvcnQgY29uc3QgRGlzcGF0Y2hGb2N1c01peGluID0ge1xuICBkYXRhICgpIHtcbiAgICByZXR1cm4gIHtoYXNGb2N1czogZmFsc2V9XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBvbk1vdXNlRG93bigpIHtcbiAgICAgIHRoaXMuX2FjdGl2ZSA9IHRydWVcbiAgICB9LFxuICAgIG9uTW91c2VVcCAoKSB7XG4gICAgICB0aGlzLl9hY3RpdmUgPSBmYWxzZVxuICAgIH0sXG4gICAgb25Gb2N1c0V2ZW50ICgpIHtcbiAgICAgIC8vIGRpc3BhdGNoIGFzeW5jIHRvIGxldCB0aW1lIHRvIG90aGVyIGZvY3VzIGV2ZW50IHRvIHByb3BhZ2F0ZVxuICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLmRpc3BhdGNoRm9jdXNFdmVudCgpLDApXG4gICAgfSxcbiAgICBvbkJsdXJFdmVudCAoKSB7XG4gICAgICAvLyBkaXNwYXRjaCBhc3luYyB0byBsZXQgdGltZSB0byBvdGhlciBmb2N1cyBldmVudCB0byBwcm9wYWdhdGVcbiAgICAgIC8vIGFsc28gZmlsdHVyIGJsdXIgaWYgbW91c2Vkb3duXG4gICAgICB0aGlzLl9hY3RpdmUgfHwgc2V0VGltZW91dCgoKSA9PiB0aGlzLmRpc3BhdGNoRm9jdXNFdmVudCgpLDApXG4gICAgfSxcbiAgICBkaXNwYXRjaEZvY3VzRXZlbnQoKSB7XG4gICAgICBsZXQgaGFzRm9jdXMgPSB0aGlzLiRlbCA9PT0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCB8fCB0aGlzLiRlbC5jb250YWlucyhkb2N1bWVudC5hY3RpdmVFbGVtZW50KTtcbiAgICAgIGlmIChoYXNGb2N1cyAhPSB0aGlzLmhhc0ZvY3VzKSB7XG4gICAgICAgIHRoaXMuJGVtaXQoaGFzRm9jdXMgPyAnZm9jdXMnIDogJ2JsdXInKVxuICAgICAgICB0aGlzLmhhc0ZvY3VzID0gaGFzRm9jdXNcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIG1vdW50ZWQgKCkge1xuICAgIHRoaXMuJGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzaW4nLCB0aGlzLm9uRm9jdXNFdmVudClcbiAgICB0aGlzLiRlbC5hZGRFdmVudExpc3RlbmVyKCdmb2N1c291dCcsIHRoaXMub25CbHVyRXZlbnQpXG4gICAgdGhpcy4kZWwuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgdGhpcy5vbk1vdXNlRG93bilcbiAgICB0aGlzLiRlbC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgdGhpcy5vbk1vdXNlVXApXG4gIH0sXG4gIGJlZm9yZURlc3Ryb3kgKCkge1xuICAgIHRoaXMuJGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2ZvY3VzaW4nLCB0aGlzLm9uRm9jdXNFdmVudClcbiAgICB0aGlzLiRlbC5yZW1vdmVFdmVudExpc3RlbmVyKCdmb2N1c291dCcsIHRoaXMub25CbHVyRXZlbnQpXG4gICAgdGhpcy4kZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgdGhpcy5vbk1vdXNlRG93bilcbiAgICB0aGlzLiRlbC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgdGhpcy5vbk1vdXNlVXApXG4gIH1cbn1cbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBBXG4gKi9cbmNsYXNzIE1EQ0ZvdW5kYXRpb24ge1xuICAvKiogQHJldHVybiBlbnVte2Nzc0NsYXNzZXN9ICovXG4gIHN0YXRpYyBnZXQgY3NzQ2xhc3NlcygpIHtcbiAgICAvLyBDbGFzc2VzIGV4dGVuZGluZyBNRENGb3VuZGF0aW9uIHNob3VsZCBpbXBsZW1lbnQgdGhpcyBtZXRob2QgdG8gcmV0dXJuIGFuIG9iamVjdCB3aGljaCBleHBvcnRzIGV2ZXJ5XG4gICAgLy8gQ1NTIGNsYXNzIHRoZSBmb3VuZGF0aW9uIGNsYXNzIG5lZWRzIGFzIGEgcHJvcGVydHkuIGUuZy4ge0FDVElWRTogJ21kYy1jb21wb25lbnQtLWFjdGl2ZSd9XG4gICAgcmV0dXJuIHt9O1xuICB9XG5cbiAgLyoqIEByZXR1cm4gZW51bXtzdHJpbmdzfSAqL1xuICBzdGF0aWMgZ2V0IHN0cmluZ3MoKSB7XG4gICAgLy8gQ2xhc3NlcyBleHRlbmRpbmcgTURDRm91bmRhdGlvbiBzaG91bGQgaW1wbGVtZW50IHRoaXMgbWV0aG9kIHRvIHJldHVybiBhbiBvYmplY3Qgd2hpY2ggZXhwb3J0cyBhbGxcbiAgICAvLyBzZW1hbnRpYyBzdHJpbmdzIGFzIGNvbnN0YW50cy4gZS5nLiB7QVJJQV9ST0xFOiAndGFibGlzdCd9XG4gICAgcmV0dXJuIHt9O1xuICB9XG5cbiAgLyoqIEByZXR1cm4gZW51bXtudW1iZXJzfSAqL1xuICBzdGF0aWMgZ2V0IG51bWJlcnMoKSB7XG4gICAgLy8gQ2xhc3NlcyBleHRlbmRpbmcgTURDRm91bmRhdGlvbiBzaG91bGQgaW1wbGVtZW50IHRoaXMgbWV0aG9kIHRvIHJldHVybiBhbiBvYmplY3Qgd2hpY2ggZXhwb3J0cyBhbGxcbiAgICAvLyBvZiBpdHMgc2VtYW50aWMgbnVtYmVycyBhcyBjb25zdGFudHMuIGUuZy4ge0FOSU1BVElPTl9ERUxBWV9NUzogMzUwfVxuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIC8qKiBAcmV0dXJuIHshT2JqZWN0fSAqL1xuICBzdGF0aWMgZ2V0IGRlZmF1bHRBZGFwdGVyKCkge1xuICAgIC8vIENsYXNzZXMgZXh0ZW5kaW5nIE1EQ0ZvdW5kYXRpb24gbWF5IGNob29zZSB0byBpbXBsZW1lbnQgdGhpcyBnZXR0ZXIgaW4gb3JkZXIgdG8gcHJvdmlkZSBhIGNvbnZlbmllbnRcbiAgICAvLyB3YXkgb2Ygdmlld2luZyB0aGUgbmVjZXNzYXJ5IG1ldGhvZHMgb2YgYW4gYWRhcHRlci4gSW4gdGhlIGZ1dHVyZSwgdGhpcyBjb3VsZCBhbHNvIGJlIHVzZWQgZm9yIGFkYXB0ZXJcbiAgICAvLyB2YWxpZGF0aW9uLlxuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0E9fSBhZGFwdGVyXG4gICAqL1xuICBjb25zdHJ1Y3RvcihhZGFwdGVyID0ge30pIHtcbiAgICAvKiogQHByb3RlY3RlZCB7IUF9ICovXG4gICAgdGhpcy5hZGFwdGVyXyA9IGFkYXB0ZXI7XG4gIH1cblxuICBpbml0KCkge1xuICAgIC8vIFN1YmNsYXNzZXMgc2hvdWxkIG92ZXJyaWRlIHRoaXMgbWV0aG9kIHRvIHBlcmZvcm0gaW5pdGlhbGl6YXRpb24gcm91dGluZXMgKHJlZ2lzdGVyaW5nIGV2ZW50cywgZXRjLilcbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgLy8gU3ViY2xhc3NlcyBzaG91bGQgb3ZlcnJpZGUgdGhpcyBtZXRob2QgdG8gcGVyZm9ybSBkZS1pbml0aWFsaXphdGlvbiByb3V0aW5lcyAoZGUtcmVnaXN0ZXJpbmcgZXZlbnRzLCBldGMuKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1EQ0ZvdW5kYXRpb247XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyogZXNsaW50IG5vLXVudXNlZC12YXJzOiBbMiwge1wiYXJnc1wiOiBcIm5vbmVcIn1dICovXG5cbi8qKlxuICogQWRhcHRlciBmb3IgTURDIFJpcHBsZS4gUHJvdmlkZXMgYW4gaW50ZXJmYWNlIGZvciBtYW5hZ2luZ1xuICogLSBjbGFzc2VzXG4gKiAtIGRvbVxuICogLSBDU1MgdmFyaWFibGVzXG4gKiAtIHBvc2l0aW9uXG4gKiAtIGRpbWVuc2lvbnNcbiAqIC0gc2Nyb2xsIHBvc2l0aW9uXG4gKiAtIGV2ZW50IGhhbmRsZXJzXG4gKiAtIHVuYm91bmRlZCwgYWN0aXZlIGFuZCBkaXNhYmxlZCBzdGF0ZXNcbiAqXG4gKiBBZGRpdGlvbmFsbHksIHByb3ZpZGVzIHR5cGUgaW5mb3JtYXRpb24gZm9yIHRoZSBhZGFwdGVyIHRvIHRoZSBDbG9zdXJlXG4gKiBjb21waWxlci5cbiAqXG4gKiBJbXBsZW1lbnQgdGhpcyBhZGFwdGVyIGZvciB5b3VyIGZyYW1ld29yayBvZiBjaG9pY2UgdG8gZGVsZWdhdGUgdXBkYXRlcyB0b1xuICogdGhlIGNvbXBvbmVudCBpbiB5b3VyIGZyYW1ld29yayBvZiBjaG9pY2UuIFNlZSBhcmNoaXRlY3R1cmUgZG9jdW1lbnRhdGlvblxuICogZm9yIG1vcmUgZGV0YWlscy5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRlcmlhbC1jb21wb25lbnRzL21hdGVyaWFsLWNvbXBvbmVudHMtd2ViL2Jsb2IvbWFzdGVyL2RvY3MvY29kZS9hcmNoaXRlY3R1cmUubWRcbiAqXG4gKiBAcmVjb3JkXG4gKi9cbmNsYXNzIE1EQ1JpcHBsZUFkYXB0ZXIge1xuICAvKiogQHJldHVybiB7Ym9vbGVhbn0gKi9cbiAgYnJvd3NlclN1cHBvcnRzQ3NzVmFycygpIHt9XG5cbiAgLyoqIEByZXR1cm4ge2Jvb2xlYW59ICovXG4gIGlzVW5ib3VuZGVkKCkge31cblxuICAvKiogQHJldHVybiB7Ym9vbGVhbn0gKi9cbiAgaXNTdXJmYWNlQWN0aXZlKCkge31cblxuICAvKiogQHJldHVybiB7Ym9vbGVhbn0gKi9cbiAgaXNTdXJmYWNlRGlzYWJsZWQoKSB7fVxuXG4gIC8qKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lICovXG4gIGFkZENsYXNzKGNsYXNzTmFtZSkge31cblxuICAvKiogQHBhcmFtIHtzdHJpbmd9IGNsYXNzTmFtZSAqL1xuICByZW1vdmVDbGFzcyhjbGFzc05hbWUpIHt9XG5cbiAgLyoqIEBwYXJhbSB7IUV2ZW50VGFyZ2V0fSB0YXJnZXQgKi9cbiAgY29udGFpbnNFdmVudFRhcmdldCh0YXJnZXQpIHt9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldnRUeXBlXG4gICAqIEBwYXJhbSB7IUZ1bmN0aW9ufSBoYW5kbGVyXG4gICAqL1xuICByZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcihldnRUeXBlLCBoYW5kbGVyKSB7fVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXZ0VHlwZVxuICAgKiBAcGFyYW0geyFGdW5jdGlvbn0gaGFuZGxlclxuICAgKi9cbiAgZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcihldnRUeXBlLCBoYW5kbGVyKSB7fVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXZ0VHlwZVxuICAgKiBAcGFyYW0geyFGdW5jdGlvbn0gaGFuZGxlclxuICAgKi9cbiAgcmVnaXN0ZXJEb2N1bWVudEludGVyYWN0aW9uSGFuZGxlcihldnRUeXBlLCBoYW5kbGVyKSB7fVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXZ0VHlwZVxuICAgKiBAcGFyYW0geyFGdW5jdGlvbn0gaGFuZGxlclxuICAgKi9cbiAgZGVyZWdpc3RlckRvY3VtZW50SW50ZXJhY3Rpb25IYW5kbGVyKGV2dFR5cGUsIGhhbmRsZXIpIHt9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7IUZ1bmN0aW9ufSBoYW5kbGVyXG4gICAqL1xuICByZWdpc3RlclJlc2l6ZUhhbmRsZXIoaGFuZGxlcikge31cblxuICAvKipcbiAgICogQHBhcmFtIHshRnVuY3Rpb259IGhhbmRsZXJcbiAgICovXG4gIGRlcmVnaXN0ZXJSZXNpemVIYW5kbGVyKGhhbmRsZXIpIHt9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB2YXJOYW1lXG4gICAqIEBwYXJhbSB7P251bWJlcnxzdHJpbmd9IHZhbHVlXG4gICAqL1xuICB1cGRhdGVDc3NWYXJpYWJsZSh2YXJOYW1lLCB2YWx1ZSkge31cblxuICAvKiogQHJldHVybiB7IUNsaWVudFJlY3R9ICovXG4gIGNvbXB1dGVCb3VuZGluZ1JlY3QoKSB7fVxuXG4gIC8qKiBAcmV0dXJuIHt7eDogbnVtYmVyLCB5OiBudW1iZXJ9fSAqL1xuICBnZXRXaW5kb3dQYWdlT2Zmc2V0KCkge31cbn1cblxuZXhwb3J0IGRlZmF1bHQgTURDUmlwcGxlQWRhcHRlcjtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5jb25zdCBjc3NDbGFzc2VzID0ge1xuICAvLyBSaXBwbGUgaXMgYSBzcGVjaWFsIGNhc2Ugd2hlcmUgdGhlIFwicm9vdFwiIGNvbXBvbmVudCBpcyByZWFsbHkgYSBcIm1peGluXCIgb2Ygc29ydHMsXG4gIC8vIGdpdmVuIHRoYXQgaXQncyBhbiAndXBncmFkZScgdG8gYW4gZXhpc3RpbmcgY29tcG9uZW50LiBUaGF0IGJlaW5nIHNhaWQgaXQgaXMgdGhlIHJvb3RcbiAgLy8gQ1NTIGNsYXNzIHRoYXQgYWxsIG90aGVyIENTUyBjbGFzc2VzIGRlcml2ZSBmcm9tLlxuICBST09UOiAnbWRjLXJpcHBsZS11cGdyYWRlZCcsXG4gIFVOQk9VTkRFRDogJ21kYy1yaXBwbGUtdXBncmFkZWQtLXVuYm91bmRlZCcsXG4gIEJHX0ZPQ1VTRUQ6ICdtZGMtcmlwcGxlLXVwZ3JhZGVkLS1iYWNrZ3JvdW5kLWZvY3VzZWQnLFxuICBGR19BQ1RJVkFUSU9OOiAnbWRjLXJpcHBsZS11cGdyYWRlZC0tZm9yZWdyb3VuZC1hY3RpdmF0aW9uJyxcbiAgRkdfREVBQ1RJVkFUSU9OOiAnbWRjLXJpcHBsZS11cGdyYWRlZC0tZm9yZWdyb3VuZC1kZWFjdGl2YXRpb24nLFxufTtcblxuY29uc3Qgc3RyaW5ncyA9IHtcbiAgVkFSX0xFRlQ6ICctLW1kYy1yaXBwbGUtbGVmdCcsXG4gIFZBUl9UT1A6ICctLW1kYy1yaXBwbGUtdG9wJyxcbiAgVkFSX0ZHX1NJWkU6ICctLW1kYy1yaXBwbGUtZmctc2l6ZScsXG4gIFZBUl9GR19TQ0FMRTogJy0tbWRjLXJpcHBsZS1mZy1zY2FsZScsXG4gIFZBUl9GR19UUkFOU0xBVEVfU1RBUlQ6ICctLW1kYy1yaXBwbGUtZmctdHJhbnNsYXRlLXN0YXJ0JyxcbiAgVkFSX0ZHX1RSQU5TTEFURV9FTkQ6ICctLW1kYy1yaXBwbGUtZmctdHJhbnNsYXRlLWVuZCcsXG59O1xuXG5jb25zdCBudW1iZXJzID0ge1xuICBQQURESU5HOiAxMCxcbiAgSU5JVElBTF9PUklHSU5fU0NBTEU6IDAuNixcbiAgREVBQ1RJVkFUSU9OX1RJTUVPVVRfTVM6IDIyNSwgLy8gQ29ycmVzcG9uZHMgdG8gJG1kYy1yaXBwbGUtdHJhbnNsYXRlLWR1cmF0aW9uIChpLmUuIGFjdGl2YXRpb24gYW5pbWF0aW9uIGR1cmF0aW9uKVxuICBGR19ERUFDVElWQVRJT05fTVM6IDE1MCwgLy8gQ29ycmVzcG9uZHMgdG8gJG1kYy1yaXBwbGUtZmFkZS1vdXQtZHVyYXRpb24gKGkuZS4gZGVhY3RpdmF0aW9uIGFuaW1hdGlvbiBkdXJhdGlvbilcbiAgVEFQX0RFTEFZX01TOiAzMDAsIC8vIERlbGF5IGJldHdlZW4gdG91Y2ggYW5kIHNpbXVsYXRlZCBtb3VzZSBldmVudHMgb24gdG91Y2ggZGV2aWNlc1xufTtcblxuZXhwb3J0IHtjc3NDbGFzc2VzLCBzdHJpbmdzLCBudW1iZXJzfTtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKipcbiAqIFN0b3JlcyByZXN1bHQgZnJvbSBzdXBwb3J0c0Nzc1ZhcmlhYmxlcyB0byBhdm9pZCByZWR1bmRhbnQgcHJvY2Vzc2luZyB0byBkZXRlY3QgQ1NTIGN1c3RvbSB2YXJpYWJsZSBzdXBwb3J0LlxuICogQHByaXZhdGUge2Jvb2xlYW58dW5kZWZpbmVkfVxuICovXG5sZXQgc3VwcG9ydHNDc3NWYXJpYWJsZXNfO1xuXG4vKipcbiAqIFN0b3JlcyByZXN1bHQgZnJvbSBhcHBseVBhc3NpdmUgdG8gYXZvaWQgcmVkdW5kYW50IHByb2Nlc3NpbmcgdG8gZGV0ZWN0IHBhc3NpdmUgZXZlbnQgbGlzdGVuZXIgc3VwcG9ydC5cbiAqIEBwcml2YXRlIHtib29sZWFufHVuZGVmaW5lZH1cbiAqL1xubGV0IHN1cHBvcnRzUGFzc2l2ZV87XG5cbi8qKlxuICogQHBhcmFtIHshV2luZG93fSB3aW5kb3dPYmpcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKi9cbmZ1bmN0aW9uIGRldGVjdEVkZ2VQc2V1ZG9WYXJCdWcod2luZG93T2JqKSB7XG4gIC8vIERldGVjdCB2ZXJzaW9ucyBvZiBFZGdlIHdpdGggYnVnZ3kgdmFyKCkgc3VwcG9ydFxuICAvLyBTZWU6IGh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vZW4tdXMvbWljcm9zb2Z0LWVkZ2UvcGxhdGZvcm0vaXNzdWVzLzExNDk1NDQ4L1xuICBjb25zdCBkb2N1bWVudCA9IHdpbmRvd09iai5kb2N1bWVudDtcbiAgY29uc3Qgbm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBub2RlLmNsYXNzTmFtZSA9ICdtZGMtcmlwcGxlLXN1cmZhY2UtLXRlc3QtZWRnZS12YXItYnVnJztcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChub2RlKTtcblxuICAvLyBUaGUgYnVnIGV4aXN0cyBpZiA6OmJlZm9yZSBzdHlsZSBlbmRzIHVwIHByb3BhZ2F0aW5nIHRvIHRoZSBwYXJlbnQgZWxlbWVudC5cbiAgLy8gQWRkaXRpb25hbGx5LCBnZXRDb21wdXRlZFN0eWxlIHJldHVybnMgbnVsbCBpbiBpZnJhbWVzIHdpdGggZGlzcGxheTogXCJub25lXCIgaW4gRmlyZWZveCxcbiAgLy8gYnV0IEZpcmVmb3ggaXMga25vd24gdG8gc3VwcG9ydCBDU1MgY3VzdG9tIHByb3BlcnRpZXMgY29ycmVjdGx5LlxuICAvLyBTZWU6IGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTU0ODM5N1xuICBjb25zdCBjb21wdXRlZFN0eWxlID0gd2luZG93T2JqLmdldENvbXB1dGVkU3R5bGUobm9kZSk7XG4gIGNvbnN0IGhhc1BzZXVkb1ZhckJ1ZyA9IGNvbXB1dGVkU3R5bGUgIT09IG51bGwgJiYgY29tcHV0ZWRTdHlsZS5ib3JkZXJUb3BTdHlsZSA9PT0gJ3NvbGlkJztcbiAgbm9kZS5yZW1vdmUoKTtcbiAgcmV0dXJuIGhhc1BzZXVkb1ZhckJ1Zztcbn1cblxuLyoqXG4gKiBAcGFyYW0geyFXaW5kb3d9IHdpbmRvd09ialxuICogQHBhcmFtIHtib29sZWFuPX0gZm9yY2VSZWZyZXNoXG4gKiBAcmV0dXJuIHtib29sZWFufHVuZGVmaW5lZH1cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0Nzc1ZhcmlhYmxlcyh3aW5kb3dPYmosIGZvcmNlUmVmcmVzaCA9IGZhbHNlKSB7XG4gIGlmICh0eXBlb2Ygc3VwcG9ydHNDc3NWYXJpYWJsZXNfID09PSAnYm9vbGVhbicgJiYgIWZvcmNlUmVmcmVzaCkge1xuICAgIHJldHVybiBzdXBwb3J0c0Nzc1ZhcmlhYmxlc187XG4gIH1cblxuICBjb25zdCBzdXBwb3J0c0Z1bmN0aW9uUHJlc2VudCA9IHdpbmRvd09iai5DU1MgJiYgdHlwZW9mIHdpbmRvd09iai5DU1Muc3VwcG9ydHMgPT09ICdmdW5jdGlvbic7XG4gIGlmICghc3VwcG9ydHNGdW5jdGlvblByZXNlbnQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBleHBsaWNpdGx5U3VwcG9ydHNDc3NWYXJzID0gd2luZG93T2JqLkNTUy5zdXBwb3J0cygnLS1jc3MtdmFycycsICd5ZXMnKTtcbiAgLy8gU2VlOiBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTU0NjY5XG4gIC8vIFNlZTogUkVBRE1FIHNlY3Rpb24gb24gU2FmYXJpXG4gIGNvbnN0IHdlQXJlRmVhdHVyZURldGVjdGluZ1NhZmFyaTEwcGx1cyA9IChcbiAgICB3aW5kb3dPYmouQ1NTLnN1cHBvcnRzKCcoLS1jc3MtdmFyczogeWVzKScpICYmXG4gICAgd2luZG93T2JqLkNTUy5zdXBwb3J0cygnY29sb3InLCAnIzAwMDAwMDAwJylcbiAgKTtcblxuICBpZiAoZXhwbGljaXRseVN1cHBvcnRzQ3NzVmFycyB8fCB3ZUFyZUZlYXR1cmVEZXRlY3RpbmdTYWZhcmkxMHBsdXMpIHtcbiAgICBzdXBwb3J0c0Nzc1ZhcmlhYmxlc18gPSAhZGV0ZWN0RWRnZVBzZXVkb1ZhckJ1Zyh3aW5kb3dPYmopO1xuICB9IGVsc2Uge1xuICAgIHN1cHBvcnRzQ3NzVmFyaWFibGVzXyA9IGZhbHNlO1xuICB9XG4gIHJldHVybiBzdXBwb3J0c0Nzc1ZhcmlhYmxlc187XG59XG5cbi8vXG4vKipcbiAqIERldGVybWluZSB3aGV0aGVyIHRoZSBjdXJyZW50IGJyb3dzZXIgc3VwcG9ydHMgcGFzc2l2ZSBldmVudCBsaXN0ZW5lcnMsIGFuZCBpZiBzbywgdXNlIHRoZW0uXG4gKiBAcGFyYW0geyFXaW5kb3c9fSBnbG9iYWxPYmpcbiAqIEBwYXJhbSB7Ym9vbGVhbj19IGZvcmNlUmVmcmVzaFxuICogQHJldHVybiB7Ym9vbGVhbnx7cGFzc2l2ZTogYm9vbGVhbn19XG4gKi9cbmZ1bmN0aW9uIGFwcGx5UGFzc2l2ZShnbG9iYWxPYmogPSB3aW5kb3csIGZvcmNlUmVmcmVzaCA9IGZhbHNlKSB7XG4gIGlmIChzdXBwb3J0c1Bhc3NpdmVfID09PSB1bmRlZmluZWQgfHwgZm9yY2VSZWZyZXNoKSB7XG4gICAgbGV0IGlzU3VwcG9ydGVkID0gZmFsc2U7XG4gICAgdHJ5IHtcbiAgICAgIGdsb2JhbE9iai5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd0ZXN0JywgbnVsbCwge2dldCBwYXNzaXZlKCkge1xuICAgICAgICBpc1N1cHBvcnRlZCA9IHRydWU7XG4gICAgICB9fSk7XG4gICAgfSBjYXRjaCAoZSkgeyB9XG5cbiAgICBzdXBwb3J0c1Bhc3NpdmVfID0gaXNTdXBwb3J0ZWQ7XG4gIH1cblxuICByZXR1cm4gc3VwcG9ydHNQYXNzaXZlXyA/IHtwYXNzaXZlOiB0cnVlfSA6IGZhbHNlO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7IU9iamVjdH0gSFRNTEVsZW1lbnRQcm90b3R5cGVcbiAqIEByZXR1cm4geyFBcnJheTxzdHJpbmc+fVxuICovXG5mdW5jdGlvbiBnZXRNYXRjaGVzUHJvcGVydHkoSFRNTEVsZW1lbnRQcm90b3R5cGUpIHtcbiAgcmV0dXJuIFtcbiAgICAnd2Via2l0TWF0Y2hlc1NlbGVjdG9yJywgJ21zTWF0Y2hlc1NlbGVjdG9yJywgJ21hdGNoZXMnLFxuICBdLmZpbHRlcigocCkgPT4gcCBpbiBIVE1MRWxlbWVudFByb3RvdHlwZSkucG9wKCk7XG59XG5cbi8qKlxuICogQHBhcmFtIHshRXZlbnR9IGV2XG4gKiBAcGFyYW0geyF7eDogbnVtYmVyLCB5OiBudW1iZXJ9fSBwYWdlT2Zmc2V0XG4gKiBAcGFyYW0geyFDbGllbnRSZWN0fSBjbGllbnRSZWN0XG4gKiBAcmV0dXJuIHshe3g6IG51bWJlciwgeTogbnVtYmVyfX1cbiAqL1xuZnVuY3Rpb24gZ2V0Tm9ybWFsaXplZEV2ZW50Q29vcmRzKGV2LCBwYWdlT2Zmc2V0LCBjbGllbnRSZWN0KSB7XG4gIGNvbnN0IHt4LCB5fSA9IHBhZ2VPZmZzZXQ7XG4gIGNvbnN0IGRvY3VtZW50WCA9IHggKyBjbGllbnRSZWN0LmxlZnQ7XG4gIGNvbnN0IGRvY3VtZW50WSA9IHkgKyBjbGllbnRSZWN0LnRvcDtcblxuICBsZXQgbm9ybWFsaXplZFg7XG4gIGxldCBub3JtYWxpemVkWTtcbiAgLy8gRGV0ZXJtaW5lIHRvdWNoIHBvaW50IHJlbGF0aXZlIHRvIHRoZSByaXBwbGUgY29udGFpbmVyLlxuICBpZiAoZXYudHlwZSA9PT0gJ3RvdWNoc3RhcnQnKSB7XG4gICAgbm9ybWFsaXplZFggPSBldi5jaGFuZ2VkVG91Y2hlc1swXS5wYWdlWCAtIGRvY3VtZW50WDtcbiAgICBub3JtYWxpemVkWSA9IGV2LmNoYW5nZWRUb3VjaGVzWzBdLnBhZ2VZIC0gZG9jdW1lbnRZO1xuICB9IGVsc2Uge1xuICAgIG5vcm1hbGl6ZWRYID0gZXYucGFnZVggLSBkb2N1bWVudFg7XG4gICAgbm9ybWFsaXplZFkgPSBldi5wYWdlWSAtIGRvY3VtZW50WTtcbiAgfVxuXG4gIHJldHVybiB7eDogbm9ybWFsaXplZFgsIHk6IG5vcm1hbGl6ZWRZfTtcbn1cblxuZXhwb3J0IHtzdXBwb3J0c0Nzc1ZhcmlhYmxlcywgYXBwbHlQYXNzaXZlLCBnZXRNYXRjaGVzUHJvcGVydHksIGdldE5vcm1hbGl6ZWRFdmVudENvb3Jkc307XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IE1EQ0ZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL2Jhc2UvZm91bmRhdGlvbic7XG5pbXBvcnQgTURDUmlwcGxlQWRhcHRlciBmcm9tICcuL2FkYXB0ZXInO1xuaW1wb3J0IHtjc3NDbGFzc2VzLCBzdHJpbmdzLCBudW1iZXJzfSBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQge2dldE5vcm1hbGl6ZWRFdmVudENvb3Jkc30gZnJvbSAnLi91dGlsJztcblxuLyoqXG4gKiBAdHlwZWRlZiB7IXtcbiAqICAgaXNBY3RpdmF0ZWQ6IChib29sZWFufHVuZGVmaW5lZCksXG4gKiAgIGhhc0RlYWN0aXZhdGlvblVYUnVuOiAoYm9vbGVhbnx1bmRlZmluZWQpLFxuICogICB3YXNBY3RpdmF0ZWRCeVBvaW50ZXI6IChib29sZWFufHVuZGVmaW5lZCksXG4gKiAgIHdhc0VsZW1lbnRNYWRlQWN0aXZlOiAoYm9vbGVhbnx1bmRlZmluZWQpLFxuICogICBhY3RpdmF0aW9uRXZlbnQ6IEV2ZW50LFxuICogICBpc1Byb2dyYW1tYXRpYzogKGJvb2xlYW58dW5kZWZpbmVkKVxuICogfX1cbiAqL1xubGV0IEFjdGl2YXRpb25TdGF0ZVR5cGU7XG5cbi8qKlxuICogQHR5cGVkZWYgeyF7XG4gKiAgIGFjdGl2YXRlOiAoc3RyaW5nfHVuZGVmaW5lZCksXG4gKiAgIGRlYWN0aXZhdGU6IChzdHJpbmd8dW5kZWZpbmVkKSxcbiAqICAgZm9jdXM6IChzdHJpbmd8dW5kZWZpbmVkKSxcbiAqICAgYmx1cjogKHN0cmluZ3x1bmRlZmluZWQpXG4gKiB9fVxuICovXG5sZXQgTGlzdGVuZXJJbmZvVHlwZTtcblxuLyoqXG4gKiBAdHlwZWRlZiB7IXtcbiAqICAgYWN0aXZhdGU6IGZ1bmN0aW9uKCFFdmVudCksXG4gKiAgIGRlYWN0aXZhdGU6IGZ1bmN0aW9uKCFFdmVudCksXG4gKiAgIGZvY3VzOiBmdW5jdGlvbigpLFxuICogICBibHVyOiBmdW5jdGlvbigpXG4gKiB9fVxuICovXG5sZXQgTGlzdGVuZXJzVHlwZTtcblxuLyoqXG4gKiBAdHlwZWRlZiB7IXtcbiAqICAgeDogbnVtYmVyLFxuICogICB5OiBudW1iZXJcbiAqIH19XG4gKi9cbmxldCBQb2ludFR5cGU7XG5cbi8vIEFjdGl2YXRpb24gZXZlbnRzIHJlZ2lzdGVyZWQgb24gdGhlIHJvb3QgZWxlbWVudCBvZiBlYWNoIGluc3RhbmNlIGZvciBhY3RpdmF0aW9uXG5jb25zdCBBQ1RJVkFUSU9OX0VWRU5UX1RZUEVTID0gWyd0b3VjaHN0YXJ0JywgJ3BvaW50ZXJkb3duJywgJ21vdXNlZG93bicsICdrZXlkb3duJ107XG5cbi8vIERlYWN0aXZhdGlvbiBldmVudHMgcmVnaXN0ZXJlZCBvbiBkb2N1bWVudEVsZW1lbnQgd2hlbiBhIHBvaW50ZXItcmVsYXRlZCBkb3duIGV2ZW50IG9jY3Vyc1xuY29uc3QgUE9JTlRFUl9ERUFDVElWQVRJT05fRVZFTlRfVFlQRVMgPSBbJ3RvdWNoZW5kJywgJ3BvaW50ZXJ1cCcsICdtb3VzZXVwJ107XG5cbi8vIFRyYWNrcyBhY3RpdmF0aW9ucyB0aGF0IGhhdmUgb2NjdXJyZWQgb24gdGhlIGN1cnJlbnQgZnJhbWUsIHRvIGF2b2lkIHNpbXVsdGFuZW91cyBuZXN0ZWQgYWN0aXZhdGlvbnNcbi8qKiBAdHlwZSB7IUFycmF5PCFFdmVudFRhcmdldD59ICovXG5sZXQgYWN0aXZhdGVkVGFyZ2V0cyA9IFtdO1xuXG4vKipcbiAqIEBleHRlbmRzIHtNRENGb3VuZGF0aW9uPCFNRENSaXBwbGVBZGFwdGVyPn1cbiAqL1xuY2xhc3MgTURDUmlwcGxlRm91bmRhdGlvbiBleHRlbmRzIE1EQ0ZvdW5kYXRpb24ge1xuICBzdGF0aWMgZ2V0IGNzc0NsYXNzZXMoKSB7XG4gICAgcmV0dXJuIGNzc0NsYXNzZXM7XG4gIH1cblxuICBzdGF0aWMgZ2V0IHN0cmluZ3MoKSB7XG4gICAgcmV0dXJuIHN0cmluZ3M7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG51bWJlcnMoKSB7XG4gICAgcmV0dXJuIG51bWJlcnM7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGRlZmF1bHRBZGFwdGVyKCkge1xuICAgIHJldHVybiB7XG4gICAgICBicm93c2VyU3VwcG9ydHNDc3NWYXJzOiAoKSA9PiAvKiBib29sZWFuIC0gY2FjaGVkICovIHt9LFxuICAgICAgaXNVbmJvdW5kZWQ6ICgpID0+IC8qIGJvb2xlYW4gKi8ge30sXG4gICAgICBpc1N1cmZhY2VBY3RpdmU6ICgpID0+IC8qIGJvb2xlYW4gKi8ge30sXG4gICAgICBpc1N1cmZhY2VEaXNhYmxlZDogKCkgPT4gLyogYm9vbGVhbiAqLyB7fSxcbiAgICAgIGFkZENsYXNzOiAoLyogY2xhc3NOYW1lOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgcmVtb3ZlQ2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICBjb250YWluc0V2ZW50VGFyZ2V0OiAoLyogdGFyZ2V0OiAhRXZlbnRUYXJnZXQgKi8pID0+IHt9LFxuICAgICAgcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6ICgvKiBldnRUeXBlOiBzdHJpbmcsIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKC8qIGV2dFR5cGU6IHN0cmluZywgaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICByZWdpc3RlckRvY3VtZW50SW50ZXJhY3Rpb25IYW5kbGVyOiAoLyogZXZ0VHlwZTogc3RyaW5nLCBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJEb2N1bWVudEludGVyYWN0aW9uSGFuZGxlcjogKC8qIGV2dFR5cGU6IHN0cmluZywgaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICByZWdpc3RlclJlc2l6ZUhhbmRsZXI6ICgvKiBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJSZXNpemVIYW5kbGVyOiAoLyogaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICB1cGRhdGVDc3NWYXJpYWJsZTogKC8qIHZhck5hbWU6IHN0cmluZywgdmFsdWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICBjb21wdXRlQm91bmRpbmdSZWN0OiAoKSA9PiAvKiBDbGllbnRSZWN0ICovIHt9LFxuICAgICAgZ2V0V2luZG93UGFnZU9mZnNldDogKCkgPT4gLyoge3g6IG51bWJlciwgeTogbnVtYmVyfSAqLyB7fSxcbiAgICB9O1xuICB9XG5cbiAgY29uc3RydWN0b3IoYWRhcHRlcikge1xuICAgIHN1cGVyKE9iamVjdC5hc3NpZ24oTURDUmlwcGxlRm91bmRhdGlvbi5kZWZhdWx0QWRhcHRlciwgYWRhcHRlcikpO1xuXG4gICAgLyoqIEBwcml2YXRlIHtudW1iZXJ9ICovXG4gICAgdGhpcy5sYXlvdXRGcmFtZV8gPSAwO1xuXG4gICAgLyoqIEBwcml2YXRlIHshQ2xpZW50UmVjdH0gKi9cbiAgICB0aGlzLmZyYW1lXyA9IC8qKiBAdHlwZSB7IUNsaWVudFJlY3R9ICovICh7d2lkdGg6IDAsIGhlaWdodDogMH0pO1xuXG4gICAgLyoqIEBwcml2YXRlIHshQWN0aXZhdGlvblN0YXRlVHlwZX0gKi9cbiAgICB0aGlzLmFjdGl2YXRpb25TdGF0ZV8gPSB0aGlzLmRlZmF1bHRBY3RpdmF0aW9uU3RhdGVfKCk7XG5cbiAgICAvKiogQHByaXZhdGUge251bWJlcn0gKi9cbiAgICB0aGlzLmluaXRpYWxTaXplXyA9IDA7XG5cbiAgICAvKiogQHByaXZhdGUge251bWJlcn0gKi9cbiAgICB0aGlzLm1heFJhZGl1c18gPSAwO1xuXG4gICAgLyoqIEBwcml2YXRlIHtmdW5jdGlvbighRXZlbnQpfSAqL1xuICAgIHRoaXMuYWN0aXZhdGVIYW5kbGVyXyA9IChlKSA9PiB0aGlzLmFjdGl2YXRlXyhlKTtcblxuICAgIC8qKiBAcHJpdmF0ZSB7ZnVuY3Rpb24oIUV2ZW50KX0gKi9cbiAgICB0aGlzLmRlYWN0aXZhdGVIYW5kbGVyXyA9IChlKSA9PiB0aGlzLmRlYWN0aXZhdGVfKGUpO1xuXG4gICAgLyoqIEBwcml2YXRlIHtmdW5jdGlvbig/RXZlbnQ9KX0gKi9cbiAgICB0aGlzLmZvY3VzSGFuZGxlcl8gPSAoKSA9PiByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoXG4gICAgICAoKSA9PiB0aGlzLmFkYXB0ZXJfLmFkZENsYXNzKE1EQ1JpcHBsZUZvdW5kYXRpb24uY3NzQ2xhc3Nlcy5CR19GT0NVU0VEKVxuICAgICk7XG5cbiAgICAvKiogQHByaXZhdGUge2Z1bmN0aW9uKD9FdmVudD0pfSAqL1xuICAgIHRoaXMuYmx1ckhhbmRsZXJfID0gKCkgPT4gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKFxuICAgICAgKCkgPT4gdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhNRENSaXBwbGVGb3VuZGF0aW9uLmNzc0NsYXNzZXMuQkdfRk9DVVNFRClcbiAgICApO1xuXG4gICAgLyoqIEBwcml2YXRlIHshRnVuY3Rpb259ICovXG4gICAgdGhpcy5yZXNpemVIYW5kbGVyXyA9ICgpID0+IHRoaXMubGF5b3V0KCk7XG5cbiAgICAvKiogQHByaXZhdGUgeyF7bGVmdDogbnVtYmVyLCB0b3A6bnVtYmVyfX0gKi9cbiAgICB0aGlzLnVuYm91bmRlZENvb3Jkc18gPSB7XG4gICAgICBsZWZ0OiAwLFxuICAgICAgdG9wOiAwLFxuICAgIH07XG5cbiAgICAvKiogQHByaXZhdGUge251bWJlcn0gKi9cbiAgICB0aGlzLmZnU2NhbGVfID0gMDtcblxuICAgIC8qKiBAcHJpdmF0ZSB7bnVtYmVyfSAqL1xuICAgIHRoaXMuYWN0aXZhdGlvblRpbWVyXyA9IDA7XG5cbiAgICAvKiogQHByaXZhdGUge251bWJlcn0gKi9cbiAgICB0aGlzLmZnRGVhY3RpdmF0aW9uUmVtb3ZhbFRpbWVyXyA9IDA7XG5cbiAgICAvKiogQHByaXZhdGUge2Jvb2xlYW59ICovXG4gICAgdGhpcy5hY3RpdmF0aW9uQW5pbWF0aW9uSGFzRW5kZWRfID0gZmFsc2U7XG5cbiAgICAvKiogQHByaXZhdGUgeyFGdW5jdGlvbn0gKi9cbiAgICB0aGlzLmFjdGl2YXRpb25UaW1lckNhbGxiYWNrXyA9ICgpID0+IHtcbiAgICAgIHRoaXMuYWN0aXZhdGlvbkFuaW1hdGlvbkhhc0VuZGVkXyA9IHRydWU7XG4gICAgICB0aGlzLnJ1bkRlYWN0aXZhdGlvblVYTG9naWNJZlJlYWR5XygpO1xuICAgIH07XG5cbiAgICAvKiogQHByaXZhdGUgez9FdmVudH0gKi9cbiAgICB0aGlzLnByZXZpb3VzQWN0aXZhdGlvbkV2ZW50XyA9IG51bGw7XG4gIH1cblxuICAvKipcbiAgICogV2UgY29tcHV0ZSB0aGlzIHByb3BlcnR5IHNvIHRoYXQgd2UgYXJlIG5vdCBxdWVyeWluZyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY2xpZW50XG4gICAqIHVudGlsIHRoZSBwb2ludCBpbiB0aW1lIHdoZXJlIHRoZSBmb3VuZGF0aW9uIHJlcXVlc3RzIGl0LiBUaGlzIHByZXZlbnRzIHNjZW5hcmlvcyB3aGVyZVxuICAgKiBjbGllbnQtc2lkZSBmZWF0dXJlLWRldGVjdGlvbiBtYXkgaGFwcGVuIHRvbyBlYXJseSwgc3VjaCBhcyB3aGVuIGNvbXBvbmVudHMgYXJlIHJlbmRlcmVkIG9uIHRoZSBzZXJ2ZXJcbiAgICogYW5kIHRoZW4gaW5pdGlhbGl6ZWQgYXQgbW91bnQgdGltZSBvbiB0aGUgY2xpZW50LlxuICAgKiBAcmV0dXJuIHtib29sZWFufVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgaXNTdXBwb3J0ZWRfKCkge1xuICAgIHJldHVybiB0aGlzLmFkYXB0ZXJfLmJyb3dzZXJTdXBwb3J0c0Nzc1ZhcnMoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHshQWN0aXZhdGlvblN0YXRlVHlwZX1cbiAgICovXG4gIGRlZmF1bHRBY3RpdmF0aW9uU3RhdGVfKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpc0FjdGl2YXRlZDogZmFsc2UsXG4gICAgICBoYXNEZWFjdGl2YXRpb25VWFJ1bjogZmFsc2UsXG4gICAgICB3YXNBY3RpdmF0ZWRCeVBvaW50ZXI6IGZhbHNlLFxuICAgICAgd2FzRWxlbWVudE1hZGVBY3RpdmU6IGZhbHNlLFxuICAgICAgYWN0aXZhdGlvbkV2ZW50OiBudWxsLFxuICAgICAgaXNQcm9ncmFtbWF0aWM6IGZhbHNlLFxuICAgIH07XG4gIH1cblxuICBpbml0KCkge1xuICAgIGlmICghdGhpcy5pc1N1cHBvcnRlZF8oKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLnJlZ2lzdGVyUm9vdEhhbmRsZXJzXygpO1xuXG4gICAgY29uc3Qge1JPT1QsIFVOQk9VTkRFRH0gPSBNRENSaXBwbGVGb3VuZGF0aW9uLmNzc0NsYXNzZXM7XG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoUk9PVCk7XG4gICAgICBpZiAodGhpcy5hZGFwdGVyXy5pc1VuYm91bmRlZCgpKSB7XG4gICAgICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoVU5CT1VOREVEKTtcbiAgICAgIH1cbiAgICAgIHRoaXMubGF5b3V0SW50ZXJuYWxfKCk7XG4gICAgfSk7XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIGlmICghdGhpcy5pc1N1cHBvcnRlZF8oKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmRlcmVnaXN0ZXJSb290SGFuZGxlcnNfKCk7XG4gICAgdGhpcy5kZXJlZ2lzdGVyRGVhY3RpdmF0aW9uSGFuZGxlcnNfKCk7XG5cbiAgICBjb25zdCB7Uk9PVCwgVU5CT1VOREVEfSA9IE1EQ1JpcHBsZUZvdW5kYXRpb24uY3NzQ2xhc3NlcztcbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhST09UKTtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoVU5CT1VOREVEKTtcbiAgICAgIHRoaXMucmVtb3ZlQ3NzVmFyc18oKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKiBAcHJpdmF0ZSAqL1xuICByZWdpc3RlclJvb3RIYW5kbGVyc18oKSB7XG4gICAgQUNUSVZBVElPTl9FVkVOVF9UWVBFUy5mb3JFYWNoKCh0eXBlKSA9PiB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKHR5cGUsIHRoaXMuYWN0aXZhdGVIYW5kbGVyXyk7XG4gICAgfSk7XG4gICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcignZm9jdXMnLCB0aGlzLmZvY3VzSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ2JsdXInLCB0aGlzLmJsdXJIYW5kbGVyXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlclJlc2l6ZUhhbmRsZXIodGhpcy5yZXNpemVIYW5kbGVyXyk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHshRXZlbnR9IGVcbiAgICogQHByaXZhdGVcbiAgICovXG4gIHJlZ2lzdGVyRGVhY3RpdmF0aW9uSGFuZGxlcnNfKGUpIHtcbiAgICBpZiAoZS50eXBlID09PSAna2V5ZG93bicpIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ2tleXVwJywgdGhpcy5kZWFjdGl2YXRlSGFuZGxlcl8pO1xuICAgIH0gZWxzZSB7XG4gICAgICBQT0lOVEVSX0RFQUNUSVZBVElPTl9FVkVOVF9UWVBFUy5mb3JFYWNoKCh0eXBlKSA9PiB7XG4gICAgICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJEb2N1bWVudEludGVyYWN0aW9uSGFuZGxlcih0eXBlLCB0aGlzLmRlYWN0aXZhdGVIYW5kbGVyXyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICAvKiogQHByaXZhdGUgKi9cbiAgZGVyZWdpc3RlclJvb3RIYW5kbGVyc18oKSB7XG4gICAgQUNUSVZBVElPTl9FVkVOVF9UWVBFUy5mb3JFYWNoKCh0eXBlKSA9PiB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIodHlwZSwgdGhpcy5hY3RpdmF0ZUhhbmRsZXJfKTtcbiAgICB9KTtcbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ2ZvY3VzJywgdGhpcy5mb2N1c0hhbmRsZXJfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ2JsdXInLCB0aGlzLmJsdXJIYW5kbGVyXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVyUmVzaXplSGFuZGxlcih0aGlzLnJlc2l6ZUhhbmRsZXJfKTtcbiAgfVxuXG4gIC8qKiBAcHJpdmF0ZSAqL1xuICBkZXJlZ2lzdGVyRGVhY3RpdmF0aW9uSGFuZGxlcnNfKCkge1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcigna2V5dXAnLCB0aGlzLmRlYWN0aXZhdGVIYW5kbGVyXyk7XG4gICAgUE9JTlRFUl9ERUFDVElWQVRJT05fRVZFTlRfVFlQRVMuZm9yRWFjaCgodHlwZSkgPT4ge1xuICAgICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVyRG9jdW1lbnRJbnRlcmFjdGlvbkhhbmRsZXIodHlwZSwgdGhpcy5kZWFjdGl2YXRlSGFuZGxlcl8pO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqIEBwcml2YXRlICovXG4gIHJlbW92ZUNzc1ZhcnNfKCkge1xuICAgIGNvbnN0IHtzdHJpbmdzfSA9IE1EQ1JpcHBsZUZvdW5kYXRpb247XG4gICAgT2JqZWN0LmtleXMoc3RyaW5ncykuZm9yRWFjaCgoaykgPT4ge1xuICAgICAgaWYgKGsuaW5kZXhPZignVkFSXycpID09PSAwKSB7XG4gICAgICAgIHRoaXMuYWRhcHRlcl8udXBkYXRlQ3NzVmFyaWFibGUoc3RyaW5nc1trXSwgbnVsbCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHs/RXZlbnR9IGVcbiAgICogQHByaXZhdGVcbiAgICovXG4gIGFjdGl2YXRlXyhlKSB7XG4gICAgaWYgKHRoaXMuYWRhcHRlcl8uaXNTdXJmYWNlRGlzYWJsZWQoKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGFjdGl2YXRpb25TdGF0ZSA9IHRoaXMuYWN0aXZhdGlvblN0YXRlXztcbiAgICBpZiAoYWN0aXZhdGlvblN0YXRlLmlzQWN0aXZhdGVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gQXZvaWQgcmVhY3RpbmcgdG8gZm9sbG93LW9uIGV2ZW50cyBmaXJlZCBieSB0b3VjaCBkZXZpY2UgYWZ0ZXIgYW4gYWxyZWFkeS1wcm9jZXNzZWQgdXNlciBpbnRlcmFjdGlvblxuICAgIGNvbnN0IHByZXZpb3VzQWN0aXZhdGlvbkV2ZW50ID0gdGhpcy5wcmV2aW91c0FjdGl2YXRpb25FdmVudF87XG4gICAgY29uc3QgaXNTYW1lSW50ZXJhY3Rpb24gPSBwcmV2aW91c0FjdGl2YXRpb25FdmVudCAmJiBlICYmIHByZXZpb3VzQWN0aXZhdGlvbkV2ZW50LnR5cGUgIT09IGUudHlwZTtcbiAgICBpZiAoaXNTYW1lSW50ZXJhY3Rpb24pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBhY3RpdmF0aW9uU3RhdGUuaXNBY3RpdmF0ZWQgPSB0cnVlO1xuICAgIGFjdGl2YXRpb25TdGF0ZS5pc1Byb2dyYW1tYXRpYyA9IGUgPT09IG51bGw7XG4gICAgYWN0aXZhdGlvblN0YXRlLmFjdGl2YXRpb25FdmVudCA9IGU7XG4gICAgYWN0aXZhdGlvblN0YXRlLndhc0FjdGl2YXRlZEJ5UG9pbnRlciA9IGFjdGl2YXRpb25TdGF0ZS5pc1Byb2dyYW1tYXRpYyA/IGZhbHNlIDogKFxuICAgICAgZS50eXBlID09PSAnbW91c2Vkb3duJyB8fCBlLnR5cGUgPT09ICd0b3VjaHN0YXJ0JyB8fCBlLnR5cGUgPT09ICdwb2ludGVyZG93bidcbiAgICApO1xuXG4gICAgY29uc3QgaGFzQWN0aXZhdGVkQ2hpbGQgPVxuICAgICAgZSAmJiBhY3RpdmF0ZWRUYXJnZXRzLmxlbmd0aCA+IDAgJiYgYWN0aXZhdGVkVGFyZ2V0cy5zb21lKCh0YXJnZXQpID0+IHRoaXMuYWRhcHRlcl8uY29udGFpbnNFdmVudFRhcmdldCh0YXJnZXQpKTtcbiAgICBpZiAoaGFzQWN0aXZhdGVkQ2hpbGQpIHtcbiAgICAgIC8vIEltbWVkaWF0ZWx5IHJlc2V0IGFjdGl2YXRpb24gc3RhdGUsIHdoaWxlIHByZXNlcnZpbmcgbG9naWMgdGhhdCBwcmV2ZW50cyB0b3VjaCBmb2xsb3ctb24gZXZlbnRzXG4gICAgICB0aGlzLnJlc2V0QWN0aXZhdGlvblN0YXRlXygpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChlKSB7XG4gICAgICBhY3RpdmF0ZWRUYXJnZXRzLnB1c2goLyoqIEB0eXBlIHshRXZlbnRUYXJnZXR9ICovIChlLnRhcmdldCkpO1xuICAgICAgdGhpcy5yZWdpc3RlckRlYWN0aXZhdGlvbkhhbmRsZXJzXyhlKTtcbiAgICB9XG5cbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgLy8gVGhpcyBuZWVkcyB0byBiZSB3cmFwcGVkIGluIGFuIHJBRiBjYWxsIGIvYyB3ZWIgYnJvd3NlcnNcbiAgICAgIC8vIHJlcG9ydCBhY3RpdmUgc3RhdGVzIGluY29uc2lzdGVudGx5IHdoZW4gdGhleSdyZSBjYWxsZWQgd2l0aGluXG4gICAgICAvLyBldmVudCBoYW5kbGluZyBjb2RlOlxuICAgICAgLy8gLSBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD02MzU5NzFcbiAgICAgIC8vIC0gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTI5Mzc0MVxuICAgICAgYWN0aXZhdGlvblN0YXRlLndhc0VsZW1lbnRNYWRlQWN0aXZlID0gKGUgJiYgZS50eXBlID09PSAna2V5ZG93bicpID8gdGhpcy5hZGFwdGVyXy5pc1N1cmZhY2VBY3RpdmUoKSA6IHRydWU7XG4gICAgICBpZiAoYWN0aXZhdGlvblN0YXRlLndhc0VsZW1lbnRNYWRlQWN0aXZlKSB7XG4gICAgICAgIHRoaXMuYW5pbWF0ZUFjdGl2YXRpb25fKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBSZXNldCBhY3RpdmF0aW9uIHN0YXRlIGltbWVkaWF0ZWx5IGlmIGVsZW1lbnQgd2FzIG5vdCBtYWRlIGFjdGl2ZS5cbiAgICAgICAgdGhpcy5hY3RpdmF0aW9uU3RhdGVfID0gdGhpcy5kZWZhdWx0QWN0aXZhdGlvblN0YXRlXygpO1xuICAgICAgfVxuXG4gICAgICAvLyBSZXNldCBhcnJheSBvbiBuZXh0IGZyYW1lIGFmdGVyIHRoZSBjdXJyZW50IGV2ZW50IGhhcyBoYWQgYSBjaGFuY2UgdG8gYnViYmxlIHRvIHByZXZlbnQgYW5jZXN0b3IgcmlwcGxlc1xuICAgICAgYWN0aXZhdGVkVGFyZ2V0cyA9IFtdO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7P0V2ZW50PX0gZXZlbnQgT3B0aW9uYWwgZXZlbnQgY29udGFpbmluZyBwb3NpdGlvbiBpbmZvcm1hdGlvbi5cbiAgICovXG4gIGFjdGl2YXRlKGV2ZW50ID0gbnVsbCkge1xuICAgIHRoaXMuYWN0aXZhdGVfKGV2ZW50KTtcbiAgfVxuXG4gIC8qKiBAcHJpdmF0ZSAqL1xuICBhbmltYXRlQWN0aXZhdGlvbl8oKSB7XG4gICAgY29uc3Qge1ZBUl9GR19UUkFOU0xBVEVfU1RBUlQsIFZBUl9GR19UUkFOU0xBVEVfRU5EfSA9IE1EQ1JpcHBsZUZvdW5kYXRpb24uc3RyaW5ncztcbiAgICBjb25zdCB7RkdfREVBQ1RJVkFUSU9OLCBGR19BQ1RJVkFUSU9OfSA9IE1EQ1JpcHBsZUZvdW5kYXRpb24uY3NzQ2xhc3NlcztcbiAgICBjb25zdCB7REVBQ1RJVkFUSU9OX1RJTUVPVVRfTVN9ID0gTURDUmlwcGxlRm91bmRhdGlvbi5udW1iZXJzO1xuXG4gICAgbGV0IHRyYW5zbGF0ZVN0YXJ0ID0gJyc7XG4gICAgbGV0IHRyYW5zbGF0ZUVuZCA9ICcnO1xuXG4gICAgaWYgKCF0aGlzLmFkYXB0ZXJfLmlzVW5ib3VuZGVkKCkpIHtcbiAgICAgIGNvbnN0IHtzdGFydFBvaW50LCBlbmRQb2ludH0gPSB0aGlzLmdldEZnVHJhbnNsYXRpb25Db29yZGluYXRlc18oKTtcbiAgICAgIHRyYW5zbGF0ZVN0YXJ0ID0gYCR7c3RhcnRQb2ludC54fXB4LCAke3N0YXJ0UG9pbnQueX1weGA7XG4gICAgICB0cmFuc2xhdGVFbmQgPSBgJHtlbmRQb2ludC54fXB4LCAke2VuZFBvaW50Lnl9cHhgO1xuICAgIH1cblxuICAgIHRoaXMuYWRhcHRlcl8udXBkYXRlQ3NzVmFyaWFibGUoVkFSX0ZHX1RSQU5TTEFURV9TVEFSVCwgdHJhbnNsYXRlU3RhcnQpO1xuICAgIHRoaXMuYWRhcHRlcl8udXBkYXRlQ3NzVmFyaWFibGUoVkFSX0ZHX1RSQU5TTEFURV9FTkQsIHRyYW5zbGF0ZUVuZCk7XG4gICAgLy8gQ2FuY2VsIGFueSBvbmdvaW5nIGFjdGl2YXRpb24vZGVhY3RpdmF0aW9uIGFuaW1hdGlvbnNcbiAgICBjbGVhclRpbWVvdXQodGhpcy5hY3RpdmF0aW9uVGltZXJfKTtcbiAgICBjbGVhclRpbWVvdXQodGhpcy5mZ0RlYWN0aXZhdGlvblJlbW92YWxUaW1lcl8pO1xuICAgIHRoaXMucm1Cb3VuZGVkQWN0aXZhdGlvbkNsYXNzZXNfKCk7XG4gICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhGR19ERUFDVElWQVRJT04pO1xuXG4gICAgLy8gRm9yY2UgbGF5b3V0IGluIG9yZGVyIHRvIHJlLXRyaWdnZXIgdGhlIGFuaW1hdGlvbi5cbiAgICB0aGlzLmFkYXB0ZXJfLmNvbXB1dGVCb3VuZGluZ1JlY3QoKTtcbiAgICB0aGlzLmFkYXB0ZXJfLmFkZENsYXNzKEZHX0FDVElWQVRJT04pO1xuICAgIHRoaXMuYWN0aXZhdGlvblRpbWVyXyA9IHNldFRpbWVvdXQoKCkgPT4gdGhpcy5hY3RpdmF0aW9uVGltZXJDYWxsYmFja18oKSwgREVBQ1RJVkFUSU9OX1RJTUVPVVRfTVMpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcml2YXRlXG4gICAqIEByZXR1cm4ge3tzdGFydFBvaW50OiBQb2ludFR5cGUsIGVuZFBvaW50OiBQb2ludFR5cGV9fVxuICAgKi9cbiAgZ2V0RmdUcmFuc2xhdGlvbkNvb3JkaW5hdGVzXygpIHtcbiAgICBjb25zdCB7YWN0aXZhdGlvbkV2ZW50LCB3YXNBY3RpdmF0ZWRCeVBvaW50ZXJ9ID0gdGhpcy5hY3RpdmF0aW9uU3RhdGVfO1xuXG4gICAgbGV0IHN0YXJ0UG9pbnQ7XG4gICAgaWYgKHdhc0FjdGl2YXRlZEJ5UG9pbnRlcikge1xuICAgICAgc3RhcnRQb2ludCA9IGdldE5vcm1hbGl6ZWRFdmVudENvb3JkcyhcbiAgICAgICAgLyoqIEB0eXBlIHshRXZlbnR9ICovIChhY3RpdmF0aW9uRXZlbnQpLFxuICAgICAgICB0aGlzLmFkYXB0ZXJfLmdldFdpbmRvd1BhZ2VPZmZzZXQoKSwgdGhpcy5hZGFwdGVyXy5jb21wdXRlQm91bmRpbmdSZWN0KClcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0YXJ0UG9pbnQgPSB7XG4gICAgICAgIHg6IHRoaXMuZnJhbWVfLndpZHRoIC8gMixcbiAgICAgICAgeTogdGhpcy5mcmFtZV8uaGVpZ2h0IC8gMixcbiAgICAgIH07XG4gICAgfVxuICAgIC8vIENlbnRlciB0aGUgZWxlbWVudCBhcm91bmQgdGhlIHN0YXJ0IHBvaW50LlxuICAgIHN0YXJ0UG9pbnQgPSB7XG4gICAgICB4OiBzdGFydFBvaW50LnggLSAodGhpcy5pbml0aWFsU2l6ZV8gLyAyKSxcbiAgICAgIHk6IHN0YXJ0UG9pbnQueSAtICh0aGlzLmluaXRpYWxTaXplXyAvIDIpLFxuICAgIH07XG5cbiAgICBjb25zdCBlbmRQb2ludCA9IHtcbiAgICAgIHg6ICh0aGlzLmZyYW1lXy53aWR0aCAvIDIpIC0gKHRoaXMuaW5pdGlhbFNpemVfIC8gMiksXG4gICAgICB5OiAodGhpcy5mcmFtZV8uaGVpZ2h0IC8gMikgLSAodGhpcy5pbml0aWFsU2l6ZV8gLyAyKSxcbiAgICB9O1xuXG4gICAgcmV0dXJuIHtzdGFydFBvaW50LCBlbmRQb2ludH07XG4gIH1cblxuICAvKiogQHByaXZhdGUgKi9cbiAgcnVuRGVhY3RpdmF0aW9uVVhMb2dpY0lmUmVhZHlfKCkge1xuICAgIC8vIFRoaXMgbWV0aG9kIGlzIGNhbGxlZCBib3RoIHdoZW4gYSBwb2ludGluZyBkZXZpY2UgaXMgcmVsZWFzZWQsIGFuZCB3aGVuIHRoZSBhY3RpdmF0aW9uIGFuaW1hdGlvbiBlbmRzLlxuICAgIC8vIFRoZSBkZWFjdGl2YXRpb24gYW5pbWF0aW9uIHNob3VsZCBvbmx5IHJ1biBhZnRlciBib3RoIG9mIHRob3NlIG9jY3VyLlxuICAgIGNvbnN0IHtGR19ERUFDVElWQVRJT059ID0gTURDUmlwcGxlRm91bmRhdGlvbi5jc3NDbGFzc2VzO1xuICAgIGNvbnN0IHtoYXNEZWFjdGl2YXRpb25VWFJ1biwgaXNBY3RpdmF0ZWR9ID0gdGhpcy5hY3RpdmF0aW9uU3RhdGVfO1xuICAgIGNvbnN0IGFjdGl2YXRpb25IYXNFbmRlZCA9IGhhc0RlYWN0aXZhdGlvblVYUnVuIHx8ICFpc0FjdGl2YXRlZDtcblxuICAgIGlmIChhY3RpdmF0aW9uSGFzRW5kZWQgJiYgdGhpcy5hY3RpdmF0aW9uQW5pbWF0aW9uSGFzRW5kZWRfKSB7XG4gICAgICB0aGlzLnJtQm91bmRlZEFjdGl2YXRpb25DbGFzc2VzXygpO1xuICAgICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyhGR19ERUFDVElWQVRJT04pO1xuICAgICAgdGhpcy5mZ0RlYWN0aXZhdGlvblJlbW92YWxUaW1lcl8gPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhGR19ERUFDVElWQVRJT04pO1xuICAgICAgfSwgbnVtYmVycy5GR19ERUFDVElWQVRJT05fTVMpO1xuICAgIH1cbiAgfVxuXG4gIC8qKiBAcHJpdmF0ZSAqL1xuICBybUJvdW5kZWRBY3RpdmF0aW9uQ2xhc3Nlc18oKSB7XG4gICAgY29uc3Qge0ZHX0FDVElWQVRJT059ID0gTURDUmlwcGxlRm91bmRhdGlvbi5jc3NDbGFzc2VzO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoRkdfQUNUSVZBVElPTik7XG4gICAgdGhpcy5hY3RpdmF0aW9uQW5pbWF0aW9uSGFzRW5kZWRfID0gZmFsc2U7XG4gICAgdGhpcy5hZGFwdGVyXy5jb21wdXRlQm91bmRpbmdSZWN0KCk7XG4gIH1cblxuICByZXNldEFjdGl2YXRpb25TdGF0ZV8oKSB7XG4gICAgdGhpcy5wcmV2aW91c0FjdGl2YXRpb25FdmVudF8gPSB0aGlzLmFjdGl2YXRpb25TdGF0ZV8uYWN0aXZhdGlvbkV2ZW50O1xuICAgIHRoaXMuYWN0aXZhdGlvblN0YXRlXyA9IHRoaXMuZGVmYXVsdEFjdGl2YXRpb25TdGF0ZV8oKTtcbiAgICAvLyBUb3VjaCBkZXZpY2VzIG1heSBmaXJlIGFkZGl0aW9uYWwgZXZlbnRzIGZvciB0aGUgc2FtZSBpbnRlcmFjdGlvbiB3aXRoaW4gYSBzaG9ydCB0aW1lLlxuICAgIC8vIFN0b3JlIHRoZSBwcmV2aW91cyBldmVudCB1bnRpbCBpdCdzIHNhZmUgdG8gYXNzdW1lIHRoYXQgc3Vic2VxdWVudCBldmVudHMgYXJlIGZvciBuZXcgaW50ZXJhY3Rpb25zLlxuICAgIHNldFRpbWVvdXQoKCkgPT4gdGhpcy5wcmV2aW91c0FjdGl2YXRpb25FdmVudF8gPSBudWxsLCBNRENSaXBwbGVGb3VuZGF0aW9uLm51bWJlcnMuVEFQX0RFTEFZX01TKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0gez9FdmVudH0gZVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgZGVhY3RpdmF0ZV8oZSkge1xuICAgIGNvbnN0IGFjdGl2YXRpb25TdGF0ZSA9IHRoaXMuYWN0aXZhdGlvblN0YXRlXztcbiAgICAvLyBUaGlzIGNhbiBoYXBwZW4gaW4gc2NlbmFyaW9zIHN1Y2ggYXMgd2hlbiB5b3UgaGF2ZSBhIGtleXVwIGV2ZW50IHRoYXQgYmx1cnMgdGhlIGVsZW1lbnQuXG4gICAgaWYgKCFhY3RpdmF0aW9uU3RhdGUuaXNBY3RpdmF0ZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBzdGF0ZSA9IC8qKiBAdHlwZSB7IUFjdGl2YXRpb25TdGF0ZVR5cGV9ICovIChPYmplY3QuYXNzaWduKHt9LCBhY3RpdmF0aW9uU3RhdGUpKTtcblxuICAgIGlmIChhY3RpdmF0aW9uU3RhdGUuaXNQcm9ncmFtbWF0aWMpIHtcbiAgICAgIGNvbnN0IGV2dE9iamVjdCA9IG51bGw7XG4gICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gdGhpcy5hbmltYXRlRGVhY3RpdmF0aW9uXyhldnRPYmplY3QsIHN0YXRlKSk7XG4gICAgICB0aGlzLnJlc2V0QWN0aXZhdGlvblN0YXRlXygpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmRlcmVnaXN0ZXJEZWFjdGl2YXRpb25IYW5kbGVyc18oKTtcbiAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgIHRoaXMuYWN0aXZhdGlvblN0YXRlXy5oYXNEZWFjdGl2YXRpb25VWFJ1biA9IHRydWU7XG4gICAgICAgIHRoaXMuYW5pbWF0ZURlYWN0aXZhdGlvbl8oZSwgc3RhdGUpO1xuICAgICAgICB0aGlzLnJlc2V0QWN0aXZhdGlvblN0YXRlXygpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7P0V2ZW50PX0gZXZlbnQgT3B0aW9uYWwgZXZlbnQgY29udGFpbmluZyBwb3NpdGlvbiBpbmZvcm1hdGlvbi5cbiAgICovXG4gIGRlYWN0aXZhdGUoZXZlbnQgPSBudWxsKSB7XG4gICAgdGhpcy5kZWFjdGl2YXRlXyhldmVudCk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgKiBAcGFyYW0geyFBY3RpdmF0aW9uU3RhdGVUeXBlfSBvcHRpb25zXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBhbmltYXRlRGVhY3RpdmF0aW9uXyhlLCB7d2FzQWN0aXZhdGVkQnlQb2ludGVyLCB3YXNFbGVtZW50TWFkZUFjdGl2ZX0pIHtcbiAgICBpZiAod2FzQWN0aXZhdGVkQnlQb2ludGVyIHx8IHdhc0VsZW1lbnRNYWRlQWN0aXZlKSB7XG4gICAgICB0aGlzLnJ1bkRlYWN0aXZhdGlvblVYTG9naWNJZlJlYWR5XygpO1xuICAgIH1cbiAgfVxuXG4gIGxheW91dCgpIHtcbiAgICBpZiAodGhpcy5sYXlvdXRGcmFtZV8pIHtcbiAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMubGF5b3V0RnJhbWVfKTtcbiAgICB9XG4gICAgdGhpcy5sYXlvdXRGcmFtZV8gPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgdGhpcy5sYXlvdXRJbnRlcm5hbF8oKTtcbiAgICAgIHRoaXMubGF5b3V0RnJhbWVfID0gMDtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKiBAcHJpdmF0ZSAqL1xuICBsYXlvdXRJbnRlcm5hbF8oKSB7XG4gICAgdGhpcy5mcmFtZV8gPSB0aGlzLmFkYXB0ZXJfLmNvbXB1dGVCb3VuZGluZ1JlY3QoKTtcbiAgICBjb25zdCBtYXhEaW0gPSBNYXRoLm1heCh0aGlzLmZyYW1lXy5oZWlnaHQsIHRoaXMuZnJhbWVfLndpZHRoKTtcblxuICAgIC8vIFN1cmZhY2UgZGlhbWV0ZXIgaXMgdHJlYXRlZCBkaWZmZXJlbnRseSBmb3IgdW5ib3VuZGVkIHZzLiBib3VuZGVkIHJpcHBsZXMuXG4gICAgLy8gVW5ib3VuZGVkIHJpcHBsZSBkaWFtZXRlciBpcyBjYWxjdWxhdGVkIHNtYWxsZXIgc2luY2UgdGhlIHN1cmZhY2UgaXMgZXhwZWN0ZWQgdG8gYWxyZWFkeSBiZSBwYWRkZWQgYXBwcm9wcmlhdGVseVxuICAgIC8vIHRvIGV4dGVuZCB0aGUgaGl0Ym94LCBhbmQgdGhlIHJpcHBsZSBpcyBleHBlY3RlZCB0byBtZWV0IHRoZSBlZGdlcyBvZiB0aGUgcGFkZGVkIGhpdGJveCAod2hpY2ggaXMgdHlwaWNhbGx5XG4gICAgLy8gc3F1YXJlKS4gQm91bmRlZCByaXBwbGVzLCBvbiB0aGUgb3RoZXIgaGFuZCwgYXJlIGZ1bGx5IGV4cGVjdGVkIHRvIGV4cGFuZCBiZXlvbmQgdGhlIHN1cmZhY2UncyBsb25nZXN0IGRpYW1ldGVyXG4gICAgLy8gKGNhbGN1bGF0ZWQgYmFzZWQgb24gdGhlIGRpYWdvbmFsIHBsdXMgYSBjb25zdGFudCBwYWRkaW5nKSwgYW5kIGFyZSBjbGlwcGVkIGF0IHRoZSBzdXJmYWNlJ3MgYm9yZGVyIHZpYVxuICAgIC8vIGBvdmVyZmxvdzogaGlkZGVuYC5cbiAgICBjb25zdCBnZXRCb3VuZGVkUmFkaXVzID0gKCkgPT4ge1xuICAgICAgY29uc3QgaHlwb3RlbnVzZSA9IE1hdGguc3FydChNYXRoLnBvdyh0aGlzLmZyYW1lXy53aWR0aCwgMikgKyBNYXRoLnBvdyh0aGlzLmZyYW1lXy5oZWlnaHQsIDIpKTtcbiAgICAgIHJldHVybiBoeXBvdGVudXNlICsgTURDUmlwcGxlRm91bmRhdGlvbi5udW1iZXJzLlBBRERJTkc7XG4gICAgfTtcblxuICAgIHRoaXMubWF4UmFkaXVzXyA9IHRoaXMuYWRhcHRlcl8uaXNVbmJvdW5kZWQoKSA/IG1heERpbSA6IGdldEJvdW5kZWRSYWRpdXMoKTtcblxuICAgIC8vIFJpcHBsZSBpcyBzaXplZCBhcyBhIGZyYWN0aW9uIG9mIHRoZSBsYXJnZXN0IGRpbWVuc2lvbiBvZiB0aGUgc3VyZmFjZSwgdGhlbiBzY2FsZXMgdXAgdXNpbmcgYSBDU1Mgc2NhbGUgdHJhbnNmb3JtXG4gICAgdGhpcy5pbml0aWFsU2l6ZV8gPSBtYXhEaW0gKiBNRENSaXBwbGVGb3VuZGF0aW9uLm51bWJlcnMuSU5JVElBTF9PUklHSU5fU0NBTEU7XG4gICAgdGhpcy5mZ1NjYWxlXyA9IHRoaXMubWF4UmFkaXVzXyAvIHRoaXMuaW5pdGlhbFNpemVfO1xuXG4gICAgdGhpcy51cGRhdGVMYXlvdXRDc3NWYXJzXygpO1xuICB9XG5cbiAgLyoqIEBwcml2YXRlICovXG4gIHVwZGF0ZUxheW91dENzc1ZhcnNfKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIFZBUl9GR19TSVpFLCBWQVJfTEVGVCwgVkFSX1RPUCwgVkFSX0ZHX1NDQUxFLFxuICAgIH0gPSBNRENSaXBwbGVGb3VuZGF0aW9uLnN0cmluZ3M7XG5cbiAgICB0aGlzLmFkYXB0ZXJfLnVwZGF0ZUNzc1ZhcmlhYmxlKFZBUl9GR19TSVpFLCBgJHt0aGlzLmluaXRpYWxTaXplX31weGApO1xuICAgIHRoaXMuYWRhcHRlcl8udXBkYXRlQ3NzVmFyaWFibGUoVkFSX0ZHX1NDQUxFLCB0aGlzLmZnU2NhbGVfKTtcblxuICAgIGlmICh0aGlzLmFkYXB0ZXJfLmlzVW5ib3VuZGVkKCkpIHtcbiAgICAgIHRoaXMudW5ib3VuZGVkQ29vcmRzXyA9IHtcbiAgICAgICAgbGVmdDogTWF0aC5yb3VuZCgodGhpcy5mcmFtZV8ud2lkdGggLyAyKSAtICh0aGlzLmluaXRpYWxTaXplXyAvIDIpKSxcbiAgICAgICAgdG9wOiBNYXRoLnJvdW5kKCh0aGlzLmZyYW1lXy5oZWlnaHQgLyAyKSAtICh0aGlzLmluaXRpYWxTaXplXyAvIDIpKSxcbiAgICAgIH07XG5cbiAgICAgIHRoaXMuYWRhcHRlcl8udXBkYXRlQ3NzVmFyaWFibGUoVkFSX0xFRlQsIGAke3RoaXMudW5ib3VuZGVkQ29vcmRzXy5sZWZ0fXB4YCk7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnVwZGF0ZUNzc1ZhcmlhYmxlKFZBUl9UT1AsIGAke3RoaXMudW5ib3VuZGVkQ29vcmRzXy50b3B9cHhgKTtcbiAgICB9XG4gIH1cblxuICAvKiogQHBhcmFtIHtib29sZWFufSB1bmJvdW5kZWQgKi9cbiAgc2V0VW5ib3VuZGVkKHVuYm91bmRlZCkge1xuICAgIGNvbnN0IHtVTkJPVU5ERUR9ID0gTURDUmlwcGxlRm91bmRhdGlvbi5jc3NDbGFzc2VzO1xuICAgIGlmICh1bmJvdW5kZWQpIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoVU5CT1VOREVEKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhVTkJPVU5ERUQpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBNRENSaXBwbGVGb3VuZGF0aW9uO1xuIiwiaW1wb3J0IE1EQ1JpcHBsZUZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL3JpcHBsZS9mb3VuZGF0aW9uLmpzJ1xuaW1wb3J0IHtzdXBwb3J0c0Nzc1ZhcmlhYmxlcywgZ2V0TWF0Y2hlc1Byb3BlcnR5LCBhcHBseVBhc3NpdmV9IGZyb20gJ0BtYXRlcmlhbC9yaXBwbGUvdXRpbCdcblxuZXhwb3J0IGNsYXNzIFJpcHBsZUJhc2UgZXh0ZW5kcyBNRENSaXBwbGVGb3VuZGF0aW9uIHtcblxuICBzdGF0aWMgZ2V0IE1BVENIRVMgKCkge1xuICAgIC8qIGdsb2JhbCBIVE1MRWxlbWVudCAqL1xuICAgIHJldHVybiBSaXBwbGVCYXNlLl9tYXRjaGVzIHx8XG4gICAgICAoIFJpcHBsZUJhc2UuX21hdGNoZXMgPSBnZXRNYXRjaGVzUHJvcGVydHkoSFRNTEVsZW1lbnQucHJvdG90eXBlKSlcbiAgfVxuXG4gIHN0YXRpYyBpc1N1cmZhY2VBY3RpdmUgKHJlZikge1xuICAgIHJldHVybiByZWZbUmlwcGxlQmFzZS5NQVRDSEVTXSgnOmFjdGl2ZScpXG4gIH1cblxuICBjb25zdHJ1Y3RvciAodm0sIG9wdGlvbnMpIHtcbiAgICBzdXBlcihPYmplY3QuYXNzaWduKHtcbiAgICAgIGJyb3dzZXJTdXBwb3J0c0Nzc1ZhcnM6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIHN1cHBvcnRzQ3NzVmFyaWFibGVzKHdpbmRvdylcbiAgICAgIH0sXG4gICAgICBpc1VuYm91bmRlZDogKCkgPT4ge1xuICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgIH0sXG4gICAgICBpc1N1cmZhY2VBY3RpdmU6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIHZtLiRlbFtSaXBwbGVCYXNlLk1BVENIRVNdKCc6YWN0aXZlJylcbiAgICAgIH0sXG4gICAgICBpc1N1cmZhY2VEaXNhYmxlZDogKCkgPT4ge1xuICAgICAgICByZXR1cm4gdm0uZGlzYWJsZWRcbiAgICAgIH0sXG4gICAgICBhZGRDbGFzcyAoY2xhc3NOYW1lKSB7XG4gICAgICAgIHZtLiRzZXQodm0uY2xhc3NlcywgY2xhc3NOYW1lLCB0cnVlKVxuICAgICAgfSxcbiAgICAgIHJlbW92ZUNsYXNzIChjbGFzc05hbWUpIHtcbiAgICAgICAgdm0uJGRlbGV0ZSh2bS5jbGFzc2VzLCBjbGFzc05hbWUpXG4gICAgICB9LFxuICAgICAgY29udGFpbnNFdmVudFRhcmdldDogKHRhcmdldCkgPT4gdm0uJGVsLmNvbnRhaW5zKHRhcmdldCksXG4gICAgICByZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKGV2dCwgaGFuZGxlcikgPT4ge1xuICAgICAgICB2bS4kZWwuYWRkRXZlbnRMaXN0ZW5lcihldnQsIGhhbmRsZXIpXG4gICAgICB9LFxuICAgICAgZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKGV2dCwgaGFuZGxlcikgPT4ge1xuICAgICAgICB2bS4kZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldnQsIGhhbmRsZXIpXG4gICAgICB9LFxuICAgICAgcmVnaXN0ZXJEb2N1bWVudEludGVyYWN0aW9uSGFuZGxlcjogKGV2dFR5cGUsIGhhbmRsZXIpID0+XG4gICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGV2dFR5cGUsIGhhbmRsZXIsIGFwcGx5UGFzc2l2ZSgpKSxcbiAgICAgIGRlcmVnaXN0ZXJEb2N1bWVudEludGVyYWN0aW9uSGFuZGxlcjogKGV2dFR5cGUsIGhhbmRsZXIpID0+XG4gICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2dFR5cGUsIGhhbmRsZXIsIGFwcGx5UGFzc2l2ZSgpKSxcbiAgICAgIHJlZ2lzdGVyUmVzaXplSGFuZGxlcjogKGhhbmRsZXIpID0+IHtcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBoYW5kbGVyKVxuICAgICAgfSxcbiAgICAgIGRlcmVnaXN0ZXJSZXNpemVIYW5kbGVyOiAoaGFuZGxlcikgPT4ge1xuICAgICAgICByZXR1cm4gd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGhhbmRsZXIpXG4gICAgICB9LFxuICAgICAgdXBkYXRlQ3NzVmFyaWFibGU6ICh2YXJOYW1lLCB2YWx1ZSkgPT4ge1xuICAgICAgICB2bS4kc2V0KHZtLnN0eWxlcywgdmFyTmFtZSwgdmFsdWUpXG4gICAgICB9LFxuICAgICAgY29tcHV0ZUJvdW5kaW5nUmVjdDogKCkgPT4ge1xuICAgICAgICByZXR1cm4gdm0uJGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG4gICAgICB9LFxuICAgICAgZ2V0V2luZG93UGFnZU9mZnNldDogKCkgPT4ge1xuICAgICAgICByZXR1cm4gKHt4OiB3aW5kb3cucGFnZVhPZmZzZXQsIHk6IHdpbmRvdy5wYWdlWU9mZnNldH0pXG4gICAgICB9LFxuICAgIH0sIG9wdGlvbnMpKVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBSaXBwbGVNaXhpbiA9IHtcbiAgZGF0YSAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNsYXNzZXM6IHt9LFxuICAgICAgc3R5bGVzOiB7fVxuICAgIH1cbiAgfSxcbiAgbW91bnRlZCAoKSB7XG4gICAgdGhpcy5yaXBwbGUgPSBuZXcgUmlwcGxlQmFzZSh0aGlzKVxuICAgIHRoaXMucmlwcGxlLmluaXQoKVxuICB9LFxuICBiZWZvcmVEZXN0cm95ICgpIHtcbiAgICB0aGlzLnJpcHBsZS5kZXN0cm95KClcbiAgfVxufSAgIiwiPHRlbXBsYXRlPlxuICA8Y3VzdG9tLWVsZW1lbnQgOnRhZz1cInRhZ1wiIGNsYXNzPVwibWRjLXJpcHBsZVwiXG4gICAgOmNsYXNzZXM9XCJjbGFzc2VzXCIgOnN0eWxlcz1cInN0eWxlc1wiPlxuICAgIDxzbG90IC8+XG4gIDwvY3VzdG9tLWVsZW1lbnQ+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHtDdXN0b21FbGVtZW50TWl4aW59IGZyb20gJy4uL2Jhc2UnXG5pbXBvcnQge1JpcHBsZU1peGlufSBmcm9tICcuL21kYy1yaXBwbGUtYmFzZSdcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnbWRjLXJpcHBsZScsXG4gIG1peGluczpbQ3VzdG9tRWxlbWVudE1peGluLCBSaXBwbGVNaXhpbl0sXG4gIHByb3BzOiB7XG4gICAgdGFnOiBTdHJpbmdcbiAgfSxcbn1cbjwvc2NyaXB0PlxuIiwiaW1wb3J0IHtCYXNlUGx1Z2lufSBmcm9tICcuLi9iYXNlJ1xuaW1wb3J0IG1kY1JpcHBsZSBmcm9tICcuL21kYy1yaXBwbGUudnVlJ1xuXG5leHBvcnQgKiBmcm9tICcuL21kYy1yaXBwbGUtYmFzZS5qcydcblxuZXhwb3J0IHtcbiAgbWRjUmlwcGxlXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJhc2VQbHVnaW4oe1xuICBtZGNSaXBwbGVcbn0pXG4iLCI8dGVtcGxhdGU+XG4gIDxjdXN0b20tYnV0dG9uIHJlZj1cInJvb3RcIlxuICAgIDpjbGFzcz1cImNsYXNzZXNcIiA6c3R5bGU9XCJzdHlsZXNcIiBcbiAgICA6aHJlZj1cImhyZWZcIiA6bGluaz1cImxpbmtcIiA6ZGlzYWJsZWQ9XCJkaXNhYmxlZFwiIFxuICAgIEBjbGljaz1cImRpc3BhdGNoRXZlbnRcIj5cbiAgICA8c2xvdCAvPlxuICA8L2N1c3RvbS1idXR0b24+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHtEaXNwYXRjaEV2ZW50TWl4aW4sIEN1c3RvbUJ1dHRvbk1peGlufSBmcm9tICcuLi9iYXNlJ1xuaW1wb3J0IHtSaXBwbGVNaXhpbn0gZnJvbSAnLi4vcmlwcGxlJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtYnV0dG9uLWJhc2UnLFxuICBtaXhpbnM6IFtEaXNwYXRjaEV2ZW50TWl4aW4sIEN1c3RvbUJ1dHRvbk1peGluLCBSaXBwbGVNaXhpbl0sXG4gIGRhdGEgKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjbGFzc2VzOiB7fSxcbiAgICAgIHN0eWxlczoge31cbiAgICB9XG4gIH1cbn1cbjwvc2NyaXB0PlxuIiwiPHNjcmlwdD5cbmltcG9ydCBtZGNCdXR0b25CYXNlIGZyb20gJy4vbWRjLWJ1dHRvbi1iYXNlLnZ1ZSc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy1idXR0b24nLFxuICBleHRlbmRzOiBtZGNCdXR0b25CYXNlLFxuICBwcm9wczoge1xuICAgIHJhaXNlZDogQm9vbGVhbixcbiAgICB1bmVsZXZhdGVkOiBCb29sZWFuLFxuICAgIHN0cm9rZWQ6IEJvb2xlYW4sXG4gICAgZGVuc2U6IEJvb2xlYW4sXG4gICAgYWNjZW50OiBCb29sZWFuLFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjbGFzc2VzOiB7XG4gICAgICAgICdtZGMtYnV0dG9uJzogdHJ1ZSxcbiAgICAgICAgJ21kYy1idXR0b24tLXJhaXNlZCc6IHRoaXMucmFpc2VkLFxuICAgICAgICAnbWRjLWJ1dHRvbi0tdW5lbGV2YXRlZCc6IHRoaXMudW5lbGV2YXRlZCxcbiAgICAgICAgJ21kYy1idXR0b24tLXN0cm9rZWQnOiB0aGlzLnN0cm9rZWQsXG4gICAgICAgICdtZGMtYnV0dG9uLS1kZW5zZSc6IHRoaXMuZGVuc2UsXG4gICAgICAgICdtZGMtYnV0dG9uLS1hY2NlbnQnOiB0aGlzLmFjY2VudCxcbiAgICAgIH0sXG4gICAgfTtcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICByYWlzZWQoKSB7XG4gICAgICB0aGlzLiRzZXQodGhpcy5jbGFzc2VzLCAnbWRjLWJ1dHRvbi0tcmFpc2VkJywgdGhpcy5yYWlzZWQpO1xuICAgIH0sXG4gICAgdW5lbGV2YXRlZCgpIHtcbiAgICAgIHRoaXMuJHNldCh0aGlzLmNsYXNzZXMsICdtZGMtYnV0dG9uLS11bmVsZXZhdGVkJywgdGhpcy51bmVsZXZhdGVkKTtcbiAgICB9LFxuICAgIHN0cm9rZWQoKSB7XG4gICAgICB0aGlzLiRzZXQodGhpcy5jbGFzc2VzLCAnbWRjLWJ1dHRvbi0tc3Ryb2tlZCcsIHRoaXMuc3Ryb2tlZCk7XG4gICAgfSxcbiAgICBkZW5zZSgpIHtcbiAgICAgIHRoaXMuJHNldCh0aGlzLmNsYXNzZXMsICdtZGMtYnV0dG9uLS1kZW5zZScsIHRoaXMuZGVuc2UpO1xuICAgIH0sXG4gICAgYWNjZW50KCkge1xuICAgICAgdGhpcy4kc2V0KHRoaXMuY2xhc3NlcywgJ21kYy1idXR0b24tLWFjY2VudCcsIHRoaXMuYWNjZW50KTtcbiAgICB9LFxuICB9LFxufTtcbjwvc2NyaXB0PlxuIiwiaW1wb3J0IHtCYXNlUGx1Z2lufSBmcm9tICcuLi9iYXNlJ1xuaW1wb3J0IG1kY0J1dHRvbiBmcm9tICcuL21kYy1idXR0b24udnVlJ1xuaW1wb3J0IG1kY0J1dHRvbkJhc2UgZnJvbSAnLi9tZGMtYnV0dG9uLWJhc2UudnVlJ1xuXG5leHBvcnQge21kY0J1dHRvbkJhc2UsIG1kY0J1dHRvbn1cblxuZXhwb3J0IGRlZmF1bHQgQmFzZVBsdWdpbih7XG4gIG1kY0J1dHRvblxufSlcbiIsIjx0ZW1wbGF0ZT5cclxuICA8ZGl2IGNsYXNzPVwibWRjLWNhcmRcIiA6Y2xhc3M9XCJ7J21kYy1jYXJkLS1zdHJva2VkJzogc3Ryb2tlZH1cIj5cclxuICAgIDxzbG90PlxyXG4gICAgPC9zbG90PlxyXG4gIDwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIG5hbWU6IFwibWRjLWNhcmRcIixcclxuICBwcm9wczoge1xyXG4gICAgc3Ryb2tlZDogQm9vbGVhblxyXG4gIH1cclxufTtcclxuPC9zY3JpcHQ+XHJcbiIsIjx0ZW1wbGF0ZT5cclxuICA8Y3VzdG9tLWxpbmsgXHJcbiAgICBjbGFzcz1cIm1kYy1jYXJkLXByaW1hcnktYWN0aW9uIG1kYy1jYXJkX19wcmltYXJ5LWFjdGlvblwiXHJcbiAgICA6Y2xhc3M9XCJjbGFzc2VzXCIgOnN0eWxlPVwic3R5bGVzXCIgXHJcbiAgICA6bGluaz1cImxpbmtcIiBcclxuICAgIEBjbGljaz1cImRpc3BhdGNoRXZlbnRcIj5cclxuICAgIDxzbG90IC8+XHJcbiAgPC9jdXN0b20tbGluaz5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmltcG9ydCB7RGlzcGF0Y2hFdmVudE1peGluLCBDdXN0b21MaW5rTWl4aW59IGZyb20gJy4uL2Jhc2UnXHJcbmltcG9ydCB7IFJpcHBsZU1peGluIH0gZnJvbSAnLi4vcmlwcGxlL2luZGV4JztcclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIG5hbWU6ICdtZGMtY2FyZC1wcmltYXJ5LWFjdGlvbicsXHJcbiAgbWl4aW5zOiBbRGlzcGF0Y2hFdmVudE1peGluLCBDdXN0b21MaW5rTWl4aW4sIFJpcHBsZU1peGluXSxcclxuICBkYXRhICgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGNsYXNzZXM6IHt9LFxyXG4gICAgICBzdHlsZXM6IHt9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8dGVtcGxhdGU+XHJcbiAgPHNlY3Rpb24gY2xhc3M9XCJtZGMtY2FyZC1tZWRpYSBtZGMtY2FyZF9fbWVkaWFcIiBcclxuICAgIDpjbGFzcz1cImNsYXNzZXNcIiA6c3R5bGU9XCJzdHlsZXNcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJtZGMtY2FyZF9fbWVkaWEtY29udGVudFwiIHYtaWY9XCIkc2xvdHMuZGVmYXVsdFwiPlxyXG4gICAgICA8c2xvdD5cclxuICAgICAgPC9zbG90PlxyXG4gICAgPC9kaXY+XHJcbiAgPC9zZWN0aW9uPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIG5hbWU6IFwibWRjLWNhcmQtbWVkaWFcIixcclxuICBwcm9wczoge1xyXG4gICAgc3JjOiBTdHJpbmcsXHJcbiAgICAnc3F1YXJlJzogQm9vbGVhblxyXG4gIH0sXHJcbiAgY29tcHV0ZWQ6IHtcclxuICAgIHN0eWxlcygpIHtcclxuICAgICAgdmFyIHN0eWxlcyA9IHtcclxuICAgICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGB1cmwoJHt0aGlzLnNyY30pYFxyXG4gICAgICB9O1xyXG5cclxuICAgICAgcmV0dXJuIHN0eWxlcztcclxuICAgIH0sIFxyXG4gICAgY2xhc3NlcygpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuc3F1YXJlID8gJ21kYy1jYXJkX19tZWRpYS0tc3F1YXJlJzogJ21kYy1jYXJkX19tZWRpYS0tMTYtOSdcclxuICAgIH1cclxuICB9XHJcbn1cclxuPC9zY3JpcHQ+XHJcbiIsIjx0ZW1wbGF0ZT5cbiAgPHNlY3Rpb24gY2xhc3M9XCJtZGMtY2FyZC1oZWFkZXIgbWRjLWNhcmRfX3ByaW1hcnlcIj5cbiAgICA8c2xvdD5cbiAgICAgIDxoMSBjbGFzcz1cIm1kYy1jYXJkX190aXRsZVwiXG4gICAgICAgIDpjbGFzcz1cInsnbWRjLWNhcmRfX3RpdGxlLS1sYXJnZSc6IGxhcmdlVGl0bGV9XCJcbiAgICAgICAgdi1pZj1cInRpdGxlXCJcbiAgICAgICAgPlxuICAgICAgICB7eyB0aXRsZSB9fVxuICAgICAgPC9oMT5cbiAgICAgIDxoMiBjbGFzcz1cIm1kYy1jYXJkX19zdWJ0aXRsZVwiXG4gICAgICAgIHYtaWY9XCJzdWJ0aXRsZVwiXG4gICAgICA+XG4gICAgICAge3sgc3VidGl0bGUgfX0gXG4gICAgICA8L2gyPlxuICAgIDwvc2xvdD5cbiAgPC9zZWN0aW9uPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy1jYXJkLWhlYWRlcicsXG4gIHByb3BzOiB7XG4gICAgJ3RpdGxlJzogU3RyaW5nLFxuICAgICdzdWJ0aXRsZSc6IFN0cmluZyxcbiAgICAnbGFyZ2UtdGl0bGUnOiB7IHR5cGU6IEJvb2xlYW4sIGRlZmF1bHQ6IHRydWUgfVxuICB9XG59XG48L3NjcmlwdD5cbiIsIjx0ZW1wbGF0ZT5cbiAgPGgxIGNsYXNzPVwibWRjLWNhcmQtdGl0bGUgbWRjLWNhcmRfX3RpdGxlXCJcbiAgICAgIDpjbGFzcz1cInsnbWRjLWNhcmRfX3RpdGxlLS1sYXJnZSc6IGxhcmdlfVwiPlxuICAgIDxzbG90Pjwvc2xvdD5cbiAgPC9oMT5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtY2FyZC10aXRsZScsXG4gIHByb3BzOiB7XG4gICAgJ2xhcmdlJzogQm9vbGVhblxuICB9XG59XG48L3NjcmlwdD5cbiIsIjx0ZW1wbGF0ZT5cbiAgPGgyIGNsYXNzPVwibWRjLWNhcmQtc3VidGl0bGUgbWRjLWNhcmRfX3N1YnRpdGxlXCI+XG4gICAgPHNsb3Q+XG4gICAgPC9zbG90PlxuICA8L2gyPlxuPC90ZW1wbGF0ZT5cblxuXG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtY2FyZC1zdWJ0aXRsZSdcbn1cbjwvc2NyaXB0PlxuIiwiPHRlbXBsYXRlPlxuICA8c2VjdGlvbiBjbGFzcz1cIm1kYy1jYXJkLXRleHQgbWRjLWNhcmRfX3N1cHBvcnRpbmctdGV4dFwiPlxuICAgIDxzbG90PlxuICAgIDwvc2xvdD5cbiAgPC9zZWN0aW9uPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy1jYXJkLXRleHQnXG59XG48L3NjcmlwdD5cbiIsIjx0ZW1wbGF0ZT5cclxuICA8c2VjdGlvbiBjbGFzcz1cIm1kYy1jYXJkLWFjdGlvbnMgbWRjLWNhcmRfX2FjdGlvbnNcIiBcclxuICAgICAgICAgIDpjbGFzcz1cImNsYXNzZXNcIj5cclxuICAgIDxzbG90PlxyXG4gICAgPC9zbG90PlxyXG4gIDwvc2VjdGlvbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgbmFtZTogJ21kYy1jYXJkLWFjdGlvbnMnLFxyXG4gIHByb3BzOiB7XHJcbiAgICBmdWxsQmxlZWQ6IEJvb2xlYW5cclxuICB9LFxyXG4gIGNvbXB1dGVkOiB7XHJcbiAgICBjbGFzc2VzICgpIHtcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICdtZGMtY2FyZF9fYWN0aW9ucy0tZnVsbC1ibGVlZCc6IHRoaXMuZnVsbEJsZWVkLFxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSxcclxufVxyXG48L3NjcmlwdD5cclxuIiwiPHRlbXBsYXRlPlxyXG4gIDxkaXYgY2xhc3M9XCJtZGMtY2FyZC1hY3Rpb24tYnV0dG9ucyBtZGMtY2FyZF9fYWN0aW9uLWJ1dHRvbnNcIj5cclxuICAgIDxzbG90PlxyXG4gICAgPC9zbG90PlxyXG4gIDwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIG5hbWU6IFwibWRjLWNhcmQtYWN0aW9uLWJ1dHRvbnNcIlxyXG59O1xyXG48L3NjcmlwdD5cclxuIiwiPHNjcmlwdD5cclxuaW1wb3J0IHttZGNCdXR0b25CYXNlfSBmcm9tICcuLi9idXR0b24nXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgbmFtZTogJ21kYy1jYXJkLWFjdGlvbi1idXR0b24nLFxyXG4gIGV4dGVuZHM6IG1kY0J1dHRvbkJhc2UsXHJcbiAgcHJvcHM6IHtcclxuICAgIGNvbXBhY3Q6IEJvb2xlYW4sXHJcbiAgICBhY2NlbnQ6IEJvb2xlYW5cclxuICB9LFxyXG4gIGRhdGEgKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgY2xhc3Nlczoge1xyXG4gICAgICAgICdtZGMtYnV0dG9uJzogdHJ1ZSxcclxuICAgICAgICAnbWRjLWNhcmRfX2FjdGlvbic6IHRydWUsXHJcbiAgICAgICAgJ21kYy1jYXJkLWFjdGlvbi1idXR0b24nOiB0cnVlLFxyXG4gICAgICAgICdtZGMtYnV0dG9uLS1jb21wYWN0JzogdGhpcy5jb21wYWN0LFxyXG4gICAgICAgICdtZGMtYnV0dG9uLS1hY2NlbnQnOiB0aGlzLmFjY2VudCxcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0sXHJcbiAgd2F0Y2g6IHtcclxuICAgIGNvbXBhY3QgKCkge1xyXG4gICAgICB0aGlzLiRzZXQodGhpcy5jbGFzc2VzLCAnbWRjLWJ1dHRvbi0tY29tcGFjdCcsIHRoaXMuY29tcGFjdCApXHJcbiAgICB9LFxyXG4gICAgYWNjZW50ICgpIHtcclxuICAgICAgdGhpcy4kc2V0KHRoaXMuY2xhc3NlcywgJ21kYy1idXR0b24tLWFjY2VudCcsIHRoaXMuYWNjZW50IClcclxuICAgIH0sXHJcbiAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8dGVtcGxhdGU+XHJcbiAgPGRpdiBjbGFzcz1cIm1kYy1jYXJkLWFjdGlvbi1pY29ucyBtZGMtY2FyZF9fYWN0aW9uLWljb25zXCI+XHJcbiAgICA8c2xvdD5cclxuICAgIDwvc2xvdD5cclxuICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBuYW1lOiBcIm1kYy1jYXJkLWFjdGlvbi1pY29uc1wiXHJcbn07XHJcbjwvc2NyaXB0PlxyXG4iLCI8dGVtcGxhdGU+XHJcbiAgPHNwYW4gOmNsYXNzPVwiY2xhc3Nlc1wiIDpzdHlsZT1cInN0eWxlc1wiIFxyXG4gICAgQGNsaWNrPVwiZGlzcGF0Y2hFdmVudFwiPlxyXG4gICAgPHNsb3Q+e3sgaWNvbiB9fTwvc2xvdD5cclxuICA8L3NwYW4+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5pbXBvcnQge0Rpc3BhdGNoRXZlbnRNaXhpbn0gZnJvbSAnLi4vYmFzZSdcclxuaW1wb3J0IHtSaXBwbGVCYXNlfSBmcm9tICcuLi9yaXBwbGUnXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgbmFtZTogJ21kYy1jYXJkLWFjdGlvbi1pY29uJyxcclxuICBtaXhpbnM6IFtEaXNwYXRjaEV2ZW50TWl4aW5dLFxyXG4gIHByb3BzOiB7XHJcbiAgICBpY29uOiBTdHJpbmdcclxuICB9LFxyXG4gIGRhdGEgKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgY2xhc3Nlczoge1xyXG4gICAgICAgICdtZGMtY2FyZC1hY3Rpb24taWNvbic6IHRydWUsIFxyXG4gICAgICAgICdtYXRlcmlhbC1pY29ucyc6ISF0aGlzLmljb24sXHJcbiAgICAgICAgJ21kYy1jYXJkX19hY3Rpb24nOiB0cnVlLFxyXG4gICAgICAgICdtZGMtY2FyZF9fYWN0aW9uLS1pY29uJzogdHJ1ZSxcclxuICAgICAgICAnbWRjLWljb24tdG9nZ2xlJzogdHJ1ZVxyXG4gICAgICB9LFxyXG4gICAgICBzdHlsZXM6IHt9XHJcbiAgICB9XHJcbiAgfSxcclxuICB3YXRjaDoge1xyXG4gICAgaWNvbiAoKSB7XHJcbiAgICAgIHRoaXMuJHNldCh0aGlzLmNsYXNzZXMsICdtYXRlcmlhbC1pY29ucycsICEhdGhpcy5pY29uKVxyXG4gICAgfVxyXG4gIH0sXHJcbiAgbW91bnRlZCAoKSB7XHJcbiAgICB0aGlzLnJpcHBsZSA9IG5ldyBSaXBwbGVCYXNlKHRoaXMse1xyXG4gICAgICBpc1VuYm91bmRlZDogKCkgPT4gdHJ1ZSxcclxuICAgIH0pXHJcbiAgICB0aGlzLnJpcHBsZS5pbml0KClcclxuICB9LFxyXG4gIGJlZm9yZURlc3Ryb3kgKCkge1xyXG4gICAgdGhpcy5yaXBwbGUuZGVzdHJveSgpXHJcbiAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCJpbXBvcnQge0Jhc2VQbHVnaW59IGZyb20gJy4uL2Jhc2UnXHJcbmltcG9ydCBtZGNDYXJkIGZyb20gJy4vbWRjLWNhcmQudnVlJ1xyXG5pbXBvcnQgbWRjQ2FyZFByaW1hcnlBY3Rpb24gZnJvbSAnLi9tZGMtY2FyZC1wcmltYXJ5LWFjdGlvbi52dWUnXHJcbmltcG9ydCBtZGNDYXJkTWVkaWEgZnJvbSAnLi9tZGMtY2FyZC1tZWRpYS52dWUnXHJcbmltcG9ydCBtZGNDYXJkSGVhZGVyIGZyb20gJy4vbWRjLWNhcmQtaGVhZGVyLnZ1ZSdcclxuaW1wb3J0IG1kY0NhcmRUaXRsZSBmcm9tICcuL21kYy1jYXJkLXRpdGxlLnZ1ZSdcclxuaW1wb3J0IG1kY0NhcmRTdWJ0aXRsZSBmcm9tICcuL21kYy1jYXJkLXN1YnRpdGxlLnZ1ZSdcclxuaW1wb3J0IG1kY0NhcmRUZXh0IGZyb20gJy4vbWRjLWNhcmQtdGV4dC52dWUnXHJcbmltcG9ydCBtZGNDYXJkQWN0aW9ucyBmcm9tICcuL21kYy1jYXJkLWFjdGlvbnMudnVlJ1xyXG5pbXBvcnQgbWRjQ2FyZEFjdGlvbkJ1dHRvbnMgZnJvbSAnLi9tZGMtY2FyZC1hY3Rpb24tYnV0dG9ucy52dWUnXHJcbmltcG9ydCBtZGNDYXJkQWN0aW9uQnV0dG9uIGZyb20gJy4vbWRjLWNhcmQtYWN0aW9uLWJ1dHRvbi52dWUnXHJcbmltcG9ydCBtZGNDYXJkQWN0aW9uSWNvbnMgZnJvbSAnLi9tZGMtY2FyZC1hY3Rpb24taWNvbnMudnVlJ1xyXG5pbXBvcnQgbWRjQ2FyZEFjdGlvbkljb24gZnJvbSAnLi9tZGMtY2FyZC1hY3Rpb24taWNvbi52dWUnXHJcblxyXG5leHBvcnQge1xyXG4gIG1kY0NhcmQsXHJcbiAgbWRjQ2FyZFByaW1hcnlBY3Rpb24sIFxyXG4gIG1kY0NhcmRNZWRpYSxcclxuICBtZGNDYXJkSGVhZGVyLFxyXG4gIG1kY0NhcmRUaXRsZSxcclxuICBtZGNDYXJkU3VidGl0bGUsXHJcbiAgbWRjQ2FyZFRleHQsXHJcbiAgbWRjQ2FyZEFjdGlvbnMsXHJcbiAgbWRjQ2FyZEFjdGlvbkJ1dHRvbnMsXHJcbiAgbWRjQ2FyZEFjdGlvbkJ1dHRvbixcclxuICBtZGNDYXJkQWN0aW9uSWNvbnMsXHJcbiAgbWRjQ2FyZEFjdGlvbkljb24gXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEJhc2VQbHVnaW4oe1xyXG4gIG1kY0NhcmQsIFxyXG4gIG1kY0NhcmRQcmltYXJ5QWN0aW9uLFxyXG4gIG1kY0NhcmRNZWRpYSxcclxuICBtZGNDYXJkSGVhZGVyLFxyXG4gIG1kY0NhcmRUaXRsZSxcclxuICBtZGNDYXJkU3VidGl0bGUsXHJcbiAgbWRjQ2FyZFRleHQsXHJcbiAgbWRjQ2FyZEFjdGlvbnMsXHJcbiAgbWRjQ2FyZEFjdGlvbkJ1dHRvbnMsXHJcbiAgbWRjQ2FyZEFjdGlvbkJ1dHRvbixcclxuICBtZGNDYXJkQWN0aW9uSWNvbnMsXHJcbiAgbWRjQ2FyZEFjdGlvbkljb25cclxufSlcclxuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCBNRENGb3VuZGF0aW9uIGZyb20gJy4vZm91bmRhdGlvbic7XG5cbi8qKlxuICogQHRlbXBsYXRlIEZcbiAqL1xuY2xhc3MgTURDQ29tcG9uZW50IHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7IUVsZW1lbnR9IHJvb3RcbiAgICogQHJldHVybiB7IU1EQ0NvbXBvbmVudH1cbiAgICovXG4gIHN0YXRpYyBhdHRhY2hUbyhyb290KSB7XG4gICAgLy8gU3ViY2xhc3NlcyB3aGljaCBleHRlbmQgTURDQmFzZSBzaG91bGQgcHJvdmlkZSBhbiBhdHRhY2hUbygpIG1ldGhvZCB0aGF0IHRha2VzIGEgcm9vdCBlbGVtZW50IGFuZFxuICAgIC8vIHJldHVybnMgYW4gaW5zdGFudGlhdGVkIGNvbXBvbmVudCB3aXRoIGl0cyByb290IHNldCB0byB0aGF0IGVsZW1lbnQuIEFsc28gbm90ZSB0aGF0IGluIHRoZSBjYXNlcyBvZlxuICAgIC8vIHN1YmNsYXNzZXMsIGFuIGV4cGxpY2l0IGZvdW5kYXRpb24gY2xhc3Mgd2lsbCBub3QgaGF2ZSB0byBiZSBwYXNzZWQgaW47IGl0IHdpbGwgc2ltcGx5IGJlIGluaXRpYWxpemVkXG4gICAgLy8gZnJvbSBnZXREZWZhdWx0Rm91bmRhdGlvbigpLlxuICAgIHJldHVybiBuZXcgTURDQ29tcG9uZW50KHJvb3QsIG5ldyBNRENGb3VuZGF0aW9uKCkpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7IUVsZW1lbnR9IHJvb3RcbiAgICogQHBhcmFtIHtGPX0gZm91bmRhdGlvblxuICAgKiBAcGFyYW0gey4uLj99IGFyZ3NcbiAgICovXG4gIGNvbnN0cnVjdG9yKHJvb3QsIGZvdW5kYXRpb24gPSB1bmRlZmluZWQsIC4uLmFyZ3MpIHtcbiAgICAvKiogQHByb3RlY3RlZCB7IUVsZW1lbnR9ICovXG4gICAgdGhpcy5yb290XyA9IHJvb3Q7XG4gICAgdGhpcy5pbml0aWFsaXplKC4uLmFyZ3MpO1xuICAgIC8vIE5vdGUgdGhhdCB3ZSBpbml0aWFsaXplIGZvdW5kYXRpb24gaGVyZSBhbmQgbm90IHdpdGhpbiB0aGUgY29uc3RydWN0b3IncyBkZWZhdWx0IHBhcmFtIHNvIHRoYXRcbiAgICAvLyB0aGlzLnJvb3RfIGlzIGRlZmluZWQgYW5kIGNhbiBiZSB1c2VkIHdpdGhpbiB0aGUgZm91bmRhdGlvbiBjbGFzcy5cbiAgICAvKiogQHByb3RlY3RlZCB7IUZ9ICovXG4gICAgdGhpcy5mb3VuZGF0aW9uXyA9IGZvdW5kYXRpb24gPT09IHVuZGVmaW5lZCA/IHRoaXMuZ2V0RGVmYXVsdEZvdW5kYXRpb24oKSA6IGZvdW5kYXRpb247XG4gICAgdGhpcy5mb3VuZGF0aW9uXy5pbml0KCk7XG4gICAgdGhpcy5pbml0aWFsU3luY1dpdGhET00oKTtcbiAgfVxuXG4gIGluaXRpYWxpemUoLyogLi4uYXJncyAqLykge1xuICAgIC8vIFN1YmNsYXNzZXMgY2FuIG92ZXJyaWRlIHRoaXMgdG8gZG8gYW55IGFkZGl0aW9uYWwgc2V0dXAgd29yayB0aGF0IHdvdWxkIGJlIGNvbnNpZGVyZWQgcGFydCBvZiBhXG4gICAgLy8gXCJjb25zdHJ1Y3RvclwiLiBFc3NlbnRpYWxseSwgaXQgaXMgYSBob29rIGludG8gdGhlIHBhcmVudCBjb25zdHJ1Y3RvciBiZWZvcmUgdGhlIGZvdW5kYXRpb24gaXNcbiAgICAvLyBpbml0aWFsaXplZC4gQW55IGFkZGl0aW9uYWwgYXJndW1lbnRzIGJlc2lkZXMgcm9vdCBhbmQgZm91bmRhdGlvbiB3aWxsIGJlIHBhc3NlZCBpbiBoZXJlLlxuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4geyFGfSBmb3VuZGF0aW9uXG4gICAqL1xuICBnZXREZWZhdWx0Rm91bmRhdGlvbigpIHtcbiAgICAvLyBTdWJjbGFzc2VzIG11c3Qgb3ZlcnJpZGUgdGhpcyBtZXRob2QgdG8gcmV0dXJuIGEgcHJvcGVybHkgY29uZmlndXJlZCBmb3VuZGF0aW9uIGNsYXNzIGZvciB0aGVcbiAgICAvLyBjb21wb25lbnQuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdTdWJjbGFzc2VzIG11c3Qgb3ZlcnJpZGUgZ2V0RGVmYXVsdEZvdW5kYXRpb24gdG8gcmV0dXJuIGEgcHJvcGVybHkgY29uZmlndXJlZCAnICtcbiAgICAgICdmb3VuZGF0aW9uIGNsYXNzJyk7XG4gIH1cblxuICBpbml0aWFsU3luY1dpdGhET00oKSB7XG4gICAgLy8gU3ViY2xhc3NlcyBzaG91bGQgb3ZlcnJpZGUgdGhpcyBtZXRob2QgaWYgdGhleSBuZWVkIHRvIHBlcmZvcm0gd29yayB0byBzeW5jaHJvbml6ZSB3aXRoIGEgaG9zdCBET01cbiAgICAvLyBvYmplY3QuIEFuIGV4YW1wbGUgb2YgdGhpcyB3b3VsZCBiZSBhIGZvcm0gY29udHJvbCB3cmFwcGVyIHRoYXQgbmVlZHMgdG8gc3luY2hyb25pemUgaXRzIGludGVybmFsIHN0YXRlXG4gICAgLy8gdG8gc29tZSBwcm9wZXJ0eSBvciBhdHRyaWJ1dGUgb2YgdGhlIGhvc3QgRE9NLiBQbGVhc2Ugbm90ZTogdGhpcyBpcyAqbm90KiB0aGUgcGxhY2UgdG8gcGVyZm9ybSBET01cbiAgICAvLyByZWFkcy93cml0ZXMgdGhhdCB3b3VsZCBjYXVzZSBsYXlvdXQgLyBwYWludCwgYXMgdGhpcyBpcyBjYWxsZWQgc3luY2hyb25vdXNseSBmcm9tIHdpdGhpbiB0aGUgY29uc3RydWN0b3IuXG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIC8vIFN1YmNsYXNzZXMgbWF5IGltcGxlbWVudCB0aGlzIG1ldGhvZCB0byByZWxlYXNlIGFueSByZXNvdXJjZXMgLyBkZXJlZ2lzdGVyIGFueSBsaXN0ZW5lcnMgdGhleSBoYXZlXG4gICAgLy8gYXR0YWNoZWQuIEFuIGV4YW1wbGUgb2YgdGhpcyBtaWdodCBiZSBkZXJlZ2lzdGVyaW5nIGEgcmVzaXplIGV2ZW50IGZyb20gdGhlIHdpbmRvdyBvYmplY3QuXG4gICAgdGhpcy5mb3VuZGF0aW9uXy5kZXN0cm95KCk7XG4gIH1cblxuICAvKipcbiAgICogV3JhcHBlciBtZXRob2QgdG8gYWRkIGFuIGV2ZW50IGxpc3RlbmVyIHRvIHRoZSBjb21wb25lbnQncyByb290IGVsZW1lbnQuIFRoaXMgaXMgbW9zdCB1c2VmdWwgd2hlblxuICAgKiBsaXN0ZW5pbmcgZm9yIGN1c3RvbSBldmVudHMuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldnRUeXBlXG4gICAqIEBwYXJhbSB7IUZ1bmN0aW9ufSBoYW5kbGVyXG4gICAqL1xuICBsaXN0ZW4oZXZ0VHlwZSwgaGFuZGxlcikge1xuICAgIHRoaXMucm9vdF8uYWRkRXZlbnRMaXN0ZW5lcihldnRUeXBlLCBoYW5kbGVyKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBXcmFwcGVyIG1ldGhvZCB0byByZW1vdmUgYW4gZXZlbnQgbGlzdGVuZXIgdG8gdGhlIGNvbXBvbmVudCdzIHJvb3QgZWxlbWVudC4gVGhpcyBpcyBtb3N0IHVzZWZ1bCB3aGVuXG4gICAqIHVubGlzdGVuaW5nIGZvciBjdXN0b20gZXZlbnRzLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXZ0VHlwZVxuICAgKiBAcGFyYW0geyFGdW5jdGlvbn0gaGFuZGxlclxuICAgKi9cbiAgdW5saXN0ZW4oZXZ0VHlwZSwgaGFuZGxlcikge1xuICAgIHRoaXMucm9vdF8ucmVtb3ZlRXZlbnRMaXN0ZW5lcihldnRUeXBlLCBoYW5kbGVyKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBGaXJlcyBhIGNyb3NzLWJyb3dzZXItY29tcGF0aWJsZSBjdXN0b20gZXZlbnQgZnJvbSB0aGUgY29tcG9uZW50IHJvb3Qgb2YgdGhlIGdpdmVuIHR5cGUsXG4gICAqIHdpdGggdGhlIGdpdmVuIGRhdGEuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldnRUeXBlXG4gICAqIEBwYXJhbSB7IU9iamVjdH0gZXZ0RGF0YVxuICAgKiBAcGFyYW0ge2Jvb2xlYW49fSBzaG91bGRCdWJibGVcbiAgICovXG4gIGVtaXQoZXZ0VHlwZSwgZXZ0RGF0YSwgc2hvdWxkQnViYmxlID0gZmFsc2UpIHtcbiAgICBsZXQgZXZ0O1xuICAgIGlmICh0eXBlb2YgQ3VzdG9tRXZlbnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGV2dCA9IG5ldyBDdXN0b21FdmVudChldnRUeXBlLCB7XG4gICAgICAgIGRldGFpbDogZXZ0RGF0YSxcbiAgICAgICAgYnViYmxlczogc2hvdWxkQnViYmxlLFxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGV2dCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdDdXN0b21FdmVudCcpO1xuICAgICAgZXZ0LmluaXRDdXN0b21FdmVudChldnRUeXBlLCBzaG91bGRCdWJibGUsIGZhbHNlLCBldnREYXRhKTtcbiAgICB9XG5cbiAgICB0aGlzLnJvb3RfLmRpc3BhdGNoRXZlbnQoZXZ0KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBNRENDb21wb25lbnQ7XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IE1EQ0NvbXBvbmVudCBmcm9tICdAbWF0ZXJpYWwvYmFzZS9jb21wb25lbnQnO1xuaW1wb3J0IE1EQ1JpcHBsZUFkYXB0ZXIgZnJvbSAnLi9hZGFwdGVyJztcbmltcG9ydCBNRENSaXBwbGVGb3VuZGF0aW9uIGZyb20gJy4vZm91bmRhdGlvbic7XG5pbXBvcnQgKiBhcyB1dGlsIGZyb20gJy4vdXRpbCc7XG5cbi8qKlxuICogQGV4dGVuZHMgTURDQ29tcG9uZW50PCFNRENSaXBwbGVGb3VuZGF0aW9uPlxuICovXG5jbGFzcyBNRENSaXBwbGUgZXh0ZW5kcyBNRENDb21wb25lbnQge1xuICAvKiogQHBhcmFtIHsuLi4/fSBhcmdzICovXG4gIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHtcbiAgICBzdXBlciguLi5hcmdzKTtcblxuICAgIC8qKiBAdHlwZSB7Ym9vbGVhbn0gKi9cbiAgICB0aGlzLmRpc2FibGVkID0gZmFsc2U7XG5cbiAgICAvKiogQHByaXZhdGUge2Jvb2xlYW59ICovXG4gICAgdGhpcy51bmJvdW5kZWRfO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7IUVsZW1lbnR9IHJvb3RcbiAgICogQHBhcmFtIHt7aXNVbmJvdW5kZWQ6IChib29sZWFufHVuZGVmaW5lZCl9PX0gb3B0aW9uc1xuICAgKiBAcmV0dXJuIHshTURDUmlwcGxlfVxuICAgKi9cbiAgc3RhdGljIGF0dGFjaFRvKHJvb3QsIHtpc1VuYm91bmRlZCA9IHVuZGVmaW5lZH0gPSB7fSkge1xuICAgIGNvbnN0IHJpcHBsZSA9IG5ldyBNRENSaXBwbGUocm9vdCk7XG4gICAgLy8gT25seSBvdmVycmlkZSB1bmJvdW5kZWQgYmVoYXZpb3IgaWYgb3B0aW9uIGlzIGV4cGxpY2l0bHkgc3BlY2lmaWVkXG4gICAgaWYgKGlzVW5ib3VuZGVkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJpcHBsZS51bmJvdW5kZWQgPSAvKiogQHR5cGUge2Jvb2xlYW59ICovIChpc1VuYm91bmRlZCk7XG4gICAgfVxuICAgIHJldHVybiByaXBwbGU7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHshUmlwcGxlQ2FwYWJsZVN1cmZhY2V9IGluc3RhbmNlXG4gICAqIEByZXR1cm4geyFNRENSaXBwbGVBZGFwdGVyfVxuICAgKi9cbiAgc3RhdGljIGNyZWF0ZUFkYXB0ZXIoaW5zdGFuY2UpIHtcbiAgICBjb25zdCBNQVRDSEVTID0gdXRpbC5nZXRNYXRjaGVzUHJvcGVydHkoSFRNTEVsZW1lbnQucHJvdG90eXBlKTtcblxuICAgIHJldHVybiB7XG4gICAgICBicm93c2VyU3VwcG9ydHNDc3NWYXJzOiAoKSA9PiB1dGlsLnN1cHBvcnRzQ3NzVmFyaWFibGVzKHdpbmRvdyksXG4gICAgICBpc1VuYm91bmRlZDogKCkgPT4gaW5zdGFuY2UudW5ib3VuZGVkLFxuICAgICAgaXNTdXJmYWNlQWN0aXZlOiAoKSA9PiBpbnN0YW5jZS5yb290X1tNQVRDSEVTXSgnOmFjdGl2ZScpLFxuICAgICAgaXNTdXJmYWNlRGlzYWJsZWQ6ICgpID0+IGluc3RhbmNlLmRpc2FibGVkLFxuICAgICAgYWRkQ2xhc3M6IChjbGFzc05hbWUpID0+IGluc3RhbmNlLnJvb3RfLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKSxcbiAgICAgIHJlbW92ZUNsYXNzOiAoY2xhc3NOYW1lKSA9PiBpbnN0YW5jZS5yb290Xy5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSksXG4gICAgICBjb250YWluc0V2ZW50VGFyZ2V0OiAodGFyZ2V0KSA9PiBpbnN0YW5jZS5yb290Xy5jb250YWlucyh0YXJnZXQpLFxuICAgICAgcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6IChldnRUeXBlLCBoYW5kbGVyKSA9PlxuICAgICAgICBpbnN0YW5jZS5yb290Xy5hZGRFdmVudExpc3RlbmVyKGV2dFR5cGUsIGhhbmRsZXIsIHV0aWwuYXBwbHlQYXNzaXZlKCkpLFxuICAgICAgZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKGV2dFR5cGUsIGhhbmRsZXIpID0+XG4gICAgICAgIGluc3RhbmNlLnJvb3RfLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZ0VHlwZSwgaGFuZGxlciwgdXRpbC5hcHBseVBhc3NpdmUoKSksXG4gICAgICByZWdpc3RlckRvY3VtZW50SW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0VHlwZSwgaGFuZGxlcikgPT5cbiAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoZXZ0VHlwZSwgaGFuZGxlciwgdXRpbC5hcHBseVBhc3NpdmUoKSksXG4gICAgICBkZXJlZ2lzdGVyRG9jdW1lbnRJbnRlcmFjdGlvbkhhbmRsZXI6IChldnRUeXBlLCBoYW5kbGVyKSA9PlxuICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldnRUeXBlLCBoYW5kbGVyLCB1dGlsLmFwcGx5UGFzc2l2ZSgpKSxcbiAgICAgIHJlZ2lzdGVyUmVzaXplSGFuZGxlcjogKGhhbmRsZXIpID0+IHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBoYW5kbGVyKSxcbiAgICAgIGRlcmVnaXN0ZXJSZXNpemVIYW5kbGVyOiAoaGFuZGxlcikgPT4gd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGhhbmRsZXIpLFxuICAgICAgdXBkYXRlQ3NzVmFyaWFibGU6ICh2YXJOYW1lLCB2YWx1ZSkgPT4gaW5zdGFuY2Uucm9vdF8uc3R5bGUuc2V0UHJvcGVydHkodmFyTmFtZSwgdmFsdWUpLFxuICAgICAgY29tcHV0ZUJvdW5kaW5nUmVjdDogKCkgPT4gaW5zdGFuY2Uucm9vdF8uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksXG4gICAgICBnZXRXaW5kb3dQYWdlT2Zmc2V0OiAoKSA9PiAoe3g6IHdpbmRvdy5wYWdlWE9mZnNldCwgeTogd2luZG93LnBhZ2VZT2Zmc2V0fSksXG4gICAgfTtcbiAgfVxuXG4gIC8qKiBAcmV0dXJuIHtib29sZWFufSAqL1xuICBnZXQgdW5ib3VuZGVkKCkge1xuICAgIHJldHVybiB0aGlzLnVuYm91bmRlZF87XG4gIH1cblxuICAvKiogQHBhcmFtIHtib29sZWFufSB1bmJvdW5kZWQgKi9cbiAgc2V0IHVuYm91bmRlZCh1bmJvdW5kZWQpIHtcbiAgICB0aGlzLnVuYm91bmRlZF8gPSBCb29sZWFuKHVuYm91bmRlZCk7XG4gICAgdGhpcy5zZXRVbmJvdW5kZWRfKCk7XG4gIH1cblxuICAvKipcbiAgICogQ2xvc3VyZSBDb21waWxlciB0aHJvd3MgYW4gYWNjZXNzIGNvbnRyb2wgZXJyb3Igd2hlbiBkaXJlY3RseSBhY2Nlc3NpbmcgYVxuICAgKiBwcm90ZWN0ZWQgb3IgcHJpdmF0ZSBwcm9wZXJ0eSBpbnNpZGUgYSBnZXR0ZXIvc2V0dGVyLCBsaWtlIHVuYm91bmRlZCBhYm92ZS5cbiAgICogQnkgYWNjZXNzaW5nIHRoZSBwcm90ZWN0ZWQgcHJvcGVydHkgaW5zaWRlIGEgbWV0aG9kLCB3ZSBzb2x2ZSB0aGF0IHByb2JsZW0uXG4gICAqIFRoYXQncyB3aHkgdGhpcyBmdW5jdGlvbiBleGlzdHMuXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBzZXRVbmJvdW5kZWRfKCkge1xuICAgIHRoaXMuZm91bmRhdGlvbl8uc2V0VW5ib3VuZGVkKHRoaXMudW5ib3VuZGVkXyk7XG4gIH1cblxuICBhY3RpdmF0ZSgpIHtcbiAgICB0aGlzLmZvdW5kYXRpb25fLmFjdGl2YXRlKCk7XG4gIH1cblxuICBkZWFjdGl2YXRlKCkge1xuICAgIHRoaXMuZm91bmRhdGlvbl8uZGVhY3RpdmF0ZSgpO1xuICB9XG5cbiAgbGF5b3V0KCkge1xuICAgIHRoaXMuZm91bmRhdGlvbl8ubGF5b3V0KCk7XG4gIH1cblxuICAvKiogQHJldHVybiB7IU1EQ1JpcHBsZUZvdW5kYXRpb259ICovXG4gIGdldERlZmF1bHRGb3VuZGF0aW9uKCkge1xuICAgIHJldHVybiBuZXcgTURDUmlwcGxlRm91bmRhdGlvbihNRENSaXBwbGUuY3JlYXRlQWRhcHRlcih0aGlzKSk7XG4gIH1cblxuICBpbml0aWFsU3luY1dpdGhET00oKSB7XG4gICAgdGhpcy51bmJvdW5kZWQgPSAnbWRjUmlwcGxlSXNVbmJvdW5kZWQnIGluIHRoaXMucm9vdF8uZGF0YXNldDtcbiAgfVxufVxuXG4vKipcbiAqIFNlZSBNYXRlcmlhbCBEZXNpZ24gc3BlYyBmb3IgbW9yZSBkZXRhaWxzIG9uIHdoZW4gdG8gdXNlIHJpcHBsZXMuXG4gKiBodHRwczovL21hdGVyaWFsLmlvL2d1aWRlbGluZXMvbW90aW9uL2Nob3Jlb2dyYXBoeS5odG1sI2Nob3Jlb2dyYXBoeS1jcmVhdGlvblxuICogQHJlY29yZFxuICovXG5jbGFzcyBSaXBwbGVDYXBhYmxlU3VyZmFjZSB7fVxuXG4vKiogQHByb3RlY3RlZCB7IUVsZW1lbnR9ICovXG5SaXBwbGVDYXBhYmxlU3VyZmFjZS5wcm90b3R5cGUucm9vdF87XG5cbi8qKlxuICogV2hldGhlciBvciBub3QgdGhlIHJpcHBsZSBibGVlZHMgb3V0IG9mIHRoZSBib3VuZHMgb2YgdGhlIGVsZW1lbnQuXG4gKiBAdHlwZSB7Ym9vbGVhbnx1bmRlZmluZWR9XG4gKi9cblJpcHBsZUNhcGFibGVTdXJmYWNlLnByb3RvdHlwZS51bmJvdW5kZWQ7XG5cbi8qKlxuICogV2hldGhlciBvciBub3QgdGhlIHJpcHBsZSBpcyBhdHRhY2hlZCB0byBhIGRpc2FibGVkIGNvbXBvbmVudC5cbiAqIEB0eXBlIHtib29sZWFufHVuZGVmaW5lZH1cbiAqL1xuUmlwcGxlQ2FwYWJsZVN1cmZhY2UucHJvdG90eXBlLmRpc2FibGVkO1xuXG5leHBvcnQge01EQ1JpcHBsZSwgTURDUmlwcGxlRm91bmRhdGlvbiwgUmlwcGxlQ2FwYWJsZVN1cmZhY2UsIHV0aWx9O1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG5pbXBvcnQge01EQ1JpcHBsZX0gZnJvbSAnQG1hdGVyaWFsL3JpcHBsZS9pbmRleCc7XG4vKiBlc2xpbnQtZW5hYmxlIG5vLXVudXNlZC12YXJzICovXG5cbi8qKlxuICogQHR5cGVkZWYgeyF7XG4gKiAgIGNoZWNrZWQ6IGJvb2xlYW4sXG4gKiAgIGluZGV0ZXJtaW5hdGU6IGJvb2xlYW4sXG4gKiAgIGRpc2FibGVkOiBib29sZWFuLFxuICogICB2YWx1ZTogP3N0cmluZ1xuICogfX1cbiAqL1xubGV0IE1EQ1NlbGVjdGlvbkNvbnRyb2xTdGF0ZTtcblxuLyoqXG4gKiBAcmVjb3JkXG4gKi9cbmNsYXNzIE1EQ1NlbGVjdGlvbkNvbnRyb2wge1xuICAvKiogQHJldHVybiB7P01EQ1JpcHBsZX0gKi9cbiAgZ2V0IHJpcHBsZSgpIHt9XG59XG5cbmV4cG9ydCB7TURDU2VsZWN0aW9uQ29udHJvbFN0YXRlLCBNRENTZWxlY3Rpb25Db250cm9sfTtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuaW1wb3J0IHtNRENTZWxlY3Rpb25Db250cm9sU3RhdGV9IGZyb20gJ0BtYXRlcmlhbC9zZWxlY3Rpb24tY29udHJvbC9pbmRleCc7XG5cbi8qIGVzbGludCBuby11bnVzZWQtdmFyczogWzIsIHtcImFyZ3NcIjogXCJub25lXCJ9XSAqL1xuXG4vKipcbiAqIEFkYXB0ZXIgZm9yIE1EQyBDaGVja2JveC4gUHJvdmlkZXMgYW4gaW50ZXJmYWNlIGZvciBtYW5hZ2luZ1xuICogLSBjbGFzc2VzXG4gKiAtIGRvbVxuICogLSBldmVudCBoYW5kbGVyc1xuICpcbiAqIEFkZGl0aW9uYWxseSwgcHJvdmlkZXMgdHlwZSBpbmZvcm1hdGlvbiBmb3IgdGhlIGFkYXB0ZXIgdG8gdGhlIENsb3N1cmVcbiAqIGNvbXBpbGVyLlxuICpcbiAqIEltcGxlbWVudCB0aGlzIGFkYXB0ZXIgZm9yIHlvdXIgZnJhbWV3b3JrIG9mIGNob2ljZSB0byBkZWxlZ2F0ZSB1cGRhdGVzIHRvXG4gKiB0aGUgY29tcG9uZW50IGluIHlvdXIgZnJhbWV3b3JrIG9mIGNob2ljZS4gU2VlIGFyY2hpdGVjdHVyZSBkb2N1bWVudGF0aW9uXG4gKiBmb3IgbW9yZSBkZXRhaWxzLlxuICogaHR0cHM6Ly9naXRodWIuY29tL21hdGVyaWFsLWNvbXBvbmVudHMvbWF0ZXJpYWwtY29tcG9uZW50cy13ZWIvYmxvYi9tYXN0ZXIvZG9jcy9jb2RlL2FyY2hpdGVjdHVyZS5tZFxuICpcbiAqIEByZWNvcmRcbiAqL1xuY2xhc3MgTURDQ2hlY2tib3hBZGFwdGVyIHtcbiAgLyoqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWUgKi9cbiAgYWRkQ2xhc3MoY2xhc3NOYW1lKSB7fVxuXG4gIC8qKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lICovXG4gIHJlbW92ZUNsYXNzKGNsYXNzTmFtZSkge31cblxuICAvKipcbiAgICogU2V0cyBhbiBhdHRyaWJ1dGUgd2l0aCBhIGdpdmVuIHZhbHVlIG9uIHRoZSBpbnB1dCBlbGVtZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gYXR0clxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAgICovXG4gIHNldE5hdGl2ZUNvbnRyb2xBdHRyKGF0dHIsIHZhbHVlKSB7fVxuXG4gIC8qKlxuICAgKiBSZW1vdmVzIGFuIGF0dHJpYnV0ZSBmcm9tIHRoZSBpbnB1dCBlbGVtZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gYXR0clxuICAgKi9cbiAgcmVtb3ZlTmF0aXZlQ29udHJvbEF0dHIoYXR0cikge31cblxuICAvKiogQHBhcmFtIHshRXZlbnRMaXN0ZW5lcn0gaGFuZGxlciAqL1xuICByZWdpc3RlckFuaW1hdGlvbkVuZEhhbmRsZXIoaGFuZGxlcikge31cblxuICAvKiogQHBhcmFtIHshRXZlbnRMaXN0ZW5lcn0gaGFuZGxlciAqL1xuICBkZXJlZ2lzdGVyQW5pbWF0aW9uRW5kSGFuZGxlcihoYW5kbGVyKSB7fVxuXG4gIC8qKiBAcGFyYW0geyFFdmVudExpc3RlbmVyfSBoYW5kbGVyICovXG4gIHJlZ2lzdGVyQ2hhbmdlSGFuZGxlcihoYW5kbGVyKSB7fVxuXG4gIC8qKiBAcGFyYW0geyFFdmVudExpc3RlbmVyfSBoYW5kbGVyICovXG4gIGRlcmVnaXN0ZXJDaGFuZ2VIYW5kbGVyKGhhbmRsZXIpIHt9XG5cbiAgLyoqIEByZXR1cm4geyFNRENTZWxlY3Rpb25Db250cm9sU3RhdGV9ICovXG4gIGdldE5hdGl2ZUNvbnRyb2woKSB7fVxuXG4gIGZvcmNlTGF5b3V0KCkge31cblxuICAvKiogQHJldHVybiB7Ym9vbGVhbn0gKi9cbiAgaXNBdHRhY2hlZFRvRE9NKCkge31cbn1cblxuZXhwb3J0IGRlZmF1bHQgTURDQ2hlY2tib3hBZGFwdGVyO1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qKiBAY29uc3Qge3N0cmluZ30gKi9cbmNvbnN0IFJPT1QgPSAnbWRjLWNoZWNrYm94JztcblxuLyoqIEBlbnVtIHtzdHJpbmd9ICovXG5jb25zdCBjc3NDbGFzc2VzID0ge1xuICBVUEdSQURFRDogJ21kYy1jaGVja2JveC0tdXBncmFkZWQnLFxuICBDSEVDS0VEOiAnbWRjLWNoZWNrYm94LS1jaGVja2VkJyxcbiAgSU5ERVRFUk1JTkFURTogJ21kYy1jaGVja2JveC0taW5kZXRlcm1pbmF0ZScsXG4gIERJU0FCTEVEOiAnbWRjLWNoZWNrYm94LS1kaXNhYmxlZCcsXG4gIEFOSU1fVU5DSEVDS0VEX0NIRUNLRUQ6ICdtZGMtY2hlY2tib3gtLWFuaW0tdW5jaGVja2VkLWNoZWNrZWQnLFxuICBBTklNX1VOQ0hFQ0tFRF9JTkRFVEVSTUlOQVRFOiAnbWRjLWNoZWNrYm94LS1hbmltLXVuY2hlY2tlZC1pbmRldGVybWluYXRlJyxcbiAgQU5JTV9DSEVDS0VEX1VOQ0hFQ0tFRDogJ21kYy1jaGVja2JveC0tYW5pbS1jaGVja2VkLXVuY2hlY2tlZCcsXG4gIEFOSU1fQ0hFQ0tFRF9JTkRFVEVSTUlOQVRFOiAnbWRjLWNoZWNrYm94LS1hbmltLWNoZWNrZWQtaW5kZXRlcm1pbmF0ZScsXG4gIEFOSU1fSU5ERVRFUk1JTkFURV9DSEVDS0VEOiAnbWRjLWNoZWNrYm94LS1hbmltLWluZGV0ZXJtaW5hdGUtY2hlY2tlZCcsXG4gIEFOSU1fSU5ERVRFUk1JTkFURV9VTkNIRUNLRUQ6ICdtZGMtY2hlY2tib3gtLWFuaW0taW5kZXRlcm1pbmF0ZS11bmNoZWNrZWQnLFxufTtcblxuLyoqIEBlbnVtIHtzdHJpbmd9ICovXG5jb25zdCBzdHJpbmdzID0ge1xuICBOQVRJVkVfQ09OVFJPTF9TRUxFQ1RPUjogYC4ke1JPT1R9X19uYXRpdmUtY29udHJvbGAsXG4gIFRSQU5TSVRJT05fU1RBVEVfSU5JVDogJ2luaXQnLFxuICBUUkFOU0lUSU9OX1NUQVRFX0NIRUNLRUQ6ICdjaGVja2VkJyxcbiAgVFJBTlNJVElPTl9TVEFURV9VTkNIRUNLRUQ6ICd1bmNoZWNrZWQnLFxuICBUUkFOU0lUSU9OX1NUQVRFX0lOREVURVJNSU5BVEU6ICdpbmRldGVybWluYXRlJyxcbiAgQVJJQV9DSEVDS0VEX0FUVFI6ICdhcmlhLWNoZWNrZWQnLFxuICBBUklBX0NIRUNLRURfSU5ERVRFUk1JTkFURV9WQUxVRTogJ21peGVkJyxcbn07XG5cbi8qKiBAZW51bSB7bnVtYmVyfSAqL1xuY29uc3QgbnVtYmVycyA9IHtcbiAgQU5JTV9FTkRfTEFUQ0hfTVM6IDI1MCxcbn07XG5cbmV4cG9ydCB7Y3NzQ2xhc3Nlcywgc3RyaW5ncywgbnVtYmVyc307XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IE1EQ0ZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL2Jhc2UvZm91bmRhdGlvbic7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuaW1wb3J0IHtNRENTZWxlY3Rpb25Db250cm9sU3RhdGV9IGZyb20gJ0BtYXRlcmlhbC9zZWxlY3Rpb24tY29udHJvbC9pbmRleCc7XG5pbXBvcnQgTURDQ2hlY2tib3hBZGFwdGVyIGZyb20gJy4vYWRhcHRlcic7XG4vKiBlc2xpbnQtZW5hYmxlIG5vLXVudXNlZC12YXJzICovXG5pbXBvcnQge2Nzc0NsYXNzZXMsIHN0cmluZ3MsIG51bWJlcnN9IGZyb20gJy4vY29uc3RhbnRzJztcblxuLyoqIEBjb25zdCB7IUFycmF5PHN0cmluZz59ICovXG5jb25zdCBDQl9QUk9UT19QUk9QUyA9IFsnY2hlY2tlZCcsICdpbmRldGVybWluYXRlJ107XG5cbi8qKlxuICogQGV4dGVuZHMge01EQ0ZvdW5kYXRpb248IU1EQ0NoZWNrYm94QWRhcHRlcj59XG4gKi9cbmNsYXNzIE1EQ0NoZWNrYm94Rm91bmRhdGlvbiBleHRlbmRzIE1EQ0ZvdW5kYXRpb24ge1xuICAvKiogQHJldHVybiBlbnVtIHtjc3NDbGFzc2VzfSAqL1xuICBzdGF0aWMgZ2V0IGNzc0NsYXNzZXMoKSB7XG4gICAgcmV0dXJuIGNzc0NsYXNzZXM7XG4gIH1cblxuICAvKiogQHJldHVybiBlbnVtIHtzdHJpbmdzfSAqL1xuICBzdGF0aWMgZ2V0IHN0cmluZ3MoKSB7XG4gICAgcmV0dXJuIHN0cmluZ3M7XG4gIH1cblxuICAvKiogQHJldHVybiBlbnVtIHtudW1iZXJzfSAqL1xuICBzdGF0aWMgZ2V0IG51bWJlcnMoKSB7XG4gICAgcmV0dXJuIG51bWJlcnM7XG4gIH1cblxuICAvKiogQHJldHVybiB7IU1EQ0NoZWNrYm94QWRhcHRlcn0gKi9cbiAgc3RhdGljIGdldCBkZWZhdWx0QWRhcHRlcigpIHtcbiAgICByZXR1cm4gLyoqIEB0eXBlIHshTURDQ2hlY2tib3hBZGFwdGVyfSAqLyAoe1xuICAgICAgYWRkQ2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICByZW1vdmVDbGFzczogKC8qIGNsYXNzTmFtZTogc3RyaW5nICovKSA9PiB7fSxcbiAgICAgIHNldE5hdGl2ZUNvbnRyb2xBdHRyOiAoKSA9PiB7fSxcbiAgICAgIHJlbW92ZU5hdGl2ZUNvbnRyb2xBdHRyOiAoKSA9PiB7fSxcbiAgICAgIHJlZ2lzdGVyQW5pbWF0aW9uRW5kSGFuZGxlcjogKC8qIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgZGVyZWdpc3RlckFuaW1hdGlvbkVuZEhhbmRsZXI6ICgvKiBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIHJlZ2lzdGVyQ2hhbmdlSGFuZGxlcjogKC8qIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgZGVyZWdpc3RlckNoYW5nZUhhbmRsZXI6ICgvKiBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIGdldE5hdGl2ZUNvbnRyb2w6ICgpID0+IC8qICFNRENTZWxlY3Rpb25Db250cm9sU3RhdGUgKi8ge30sXG4gICAgICBmb3JjZUxheW91dDogKCkgPT4ge30sXG4gICAgICBpc0F0dGFjaGVkVG9ET006ICgpID0+IC8qIGJvb2xlYW4gKi8ge30sXG4gICAgfSk7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihhZGFwdGVyKSB7XG4gICAgc3VwZXIoT2JqZWN0LmFzc2lnbihNRENDaGVja2JveEZvdW5kYXRpb24uZGVmYXVsdEFkYXB0ZXIsIGFkYXB0ZXIpKTtcblxuICAgIC8qKiBAcHJpdmF0ZSB7c3RyaW5nfSAqL1xuICAgIHRoaXMuY3VycmVudENoZWNrU3RhdGVfID0gc3RyaW5ncy5UUkFOU0lUSU9OX1NUQVRFX0lOSVQ7XG5cbiAgICAvKiogQHByaXZhdGUge3N0cmluZ30gKi9cbiAgICB0aGlzLmN1cnJlbnRBbmltYXRpb25DbGFzc18gPSAnJztcblxuICAgIC8qKiBAcHJpdmF0ZSB7bnVtYmVyfSAqL1xuICAgIHRoaXMuYW5pbUVuZExhdGNoVGltZXJfID0gMDtcblxuICAgIHRoaXMuYW5pbUVuZEhhbmRsZXJfID0gLyoqIEBwcml2YXRlIHshRXZlbnRMaXN0ZW5lcn0gKi8gKFxuICAgICAgKCkgPT4gdGhpcy5oYW5kbGVBbmltYXRpb25FbmQoKSk7XG5cbiAgICB0aGlzLmNoYW5nZUhhbmRsZXJfID0gLyoqIEBwcml2YXRlIHshRXZlbnRMaXN0ZW5lcn0gKi8gKFxuICAgICAgKCkgPT4gdGhpcy5oYW5kbGVDaGFuZ2UoKSk7XG4gIH1cblxuICBpbml0KCkge1xuICAgIHRoaXMuY3VycmVudENoZWNrU3RhdGVfID0gdGhpcy5kZXRlcm1pbmVDaGVja1N0YXRlXyh0aGlzLmdldE5hdGl2ZUNvbnRyb2xfKCkpO1xuICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoY3NzQ2xhc3Nlcy5VUEdSQURFRCk7XG4gICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlckNoYW5nZUhhbmRsZXIodGhpcy5jaGFuZ2VIYW5kbGVyXyk7XG4gICAgdGhpcy5pbnN0YWxsUHJvcGVydHlDaGFuZ2VIb29rc18oKTtcbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVyQ2hhbmdlSGFuZGxlcih0aGlzLmNoYW5nZUhhbmRsZXJfKTtcbiAgICB0aGlzLnVuaW5zdGFsbFByb3BlcnR5Q2hhbmdlSG9va3NfKCk7XG4gIH1cblxuICAvKiogQHJldHVybiB7Ym9vbGVhbn0gKi9cbiAgaXNDaGVja2VkKCkge1xuICAgIHJldHVybiB0aGlzLmdldE5hdGl2ZUNvbnRyb2xfKCkuY2hlY2tlZDtcbiAgfVxuXG4gIC8qKiBAcGFyYW0ge2Jvb2xlYW59IGNoZWNrZWQgKi9cbiAgc2V0Q2hlY2tlZChjaGVja2VkKSB7XG4gICAgdGhpcy5nZXROYXRpdmVDb250cm9sXygpLmNoZWNrZWQgPSBjaGVja2VkO1xuICB9XG5cbiAgLyoqIEByZXR1cm4ge2Jvb2xlYW59ICovXG4gIGlzSW5kZXRlcm1pbmF0ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXROYXRpdmVDb250cm9sXygpLmluZGV0ZXJtaW5hdGU7XG4gIH1cblxuICAvKiogQHBhcmFtIHtib29sZWFufSBpbmRldGVybWluYXRlICovXG4gIHNldEluZGV0ZXJtaW5hdGUoaW5kZXRlcm1pbmF0ZSkge1xuICAgIHRoaXMuZ2V0TmF0aXZlQ29udHJvbF8oKS5pbmRldGVybWluYXRlID0gaW5kZXRlcm1pbmF0ZTtcbiAgfVxuXG4gIC8qKiBAcmV0dXJuIHtib29sZWFufSAqL1xuICBpc0Rpc2FibGVkKCkge1xuICAgIHJldHVybiB0aGlzLmdldE5hdGl2ZUNvbnRyb2xfKCkuZGlzYWJsZWQ7XG4gIH1cblxuICAvKiogQHBhcmFtIHtib29sZWFufSBkaXNhYmxlZCAqL1xuICBzZXREaXNhYmxlZChkaXNhYmxlZCkge1xuICAgIHRoaXMuZ2V0TmF0aXZlQ29udHJvbF8oKS5kaXNhYmxlZCA9IGRpc2FibGVkO1xuICAgIGlmIChkaXNhYmxlZCkge1xuICAgICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyhjc3NDbGFzc2VzLkRJU0FCTEVEKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhjc3NDbGFzc2VzLkRJU0FCTEVEKTtcbiAgICB9XG4gIH1cblxuICAvKiogQHJldHVybiB7P3N0cmluZ30gKi9cbiAgZ2V0VmFsdWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0TmF0aXZlQ29udHJvbF8oKS52YWx1ZTtcbiAgfVxuXG4gIC8qKiBAcGFyYW0gez9zdHJpbmd9IHZhbHVlICovXG4gIHNldFZhbHVlKHZhbHVlKSB7XG4gICAgdGhpcy5nZXROYXRpdmVDb250cm9sXygpLnZhbHVlID0gdmFsdWU7XG4gIH1cblxuICAvKipcbiAgICogSGFuZGxlcyB0aGUgYW5pbWF0aW9uZW5kIGV2ZW50IGZvciB0aGUgY2hlY2tib3hcbiAgICovXG4gIGhhbmRsZUFuaW1hdGlvbkVuZCgpIHtcbiAgICBjbGVhclRpbWVvdXQodGhpcy5hbmltRW5kTGF0Y2hUaW1lcl8pO1xuICAgIHRoaXMuYW5pbUVuZExhdGNoVGltZXJfID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUNsYXNzKHRoaXMuY3VycmVudEFuaW1hdGlvbkNsYXNzXyk7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJBbmltYXRpb25FbmRIYW5kbGVyKHRoaXMuYW5pbUVuZEhhbmRsZXJfKTtcbiAgICB9LCBudW1iZXJzLkFOSU1fRU5EX0xBVENIX01TKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBIYW5kbGVzIHRoZSBjaGFuZ2UgZXZlbnQgZm9yIHRoZSBjaGVja2JveFxuICAgKi9cbiAgaGFuZGxlQ2hhbmdlKCkge1xuICAgIHRoaXMudHJhbnNpdGlvbkNoZWNrU3RhdGVfKCk7XG4gIH1cblxuICAvKiogQHByaXZhdGUgKi9cbiAgaW5zdGFsbFByb3BlcnR5Q2hhbmdlSG9va3NfKCkge1xuICAgIGNvbnN0IG5hdGl2ZUNiID0gdGhpcy5nZXROYXRpdmVDb250cm9sXygpO1xuICAgIGNvbnN0IGNiUHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YobmF0aXZlQ2IpO1xuXG4gICAgQ0JfUFJPVE9fUFJPUFMuZm9yRWFjaCgoY29udHJvbFN0YXRlKSA9PiB7XG4gICAgICBjb25zdCBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihjYlByb3RvLCBjb250cm9sU3RhdGUpO1xuICAgICAgLy8gV2UgaGF2ZSB0byBjaGVjayBmb3IgdGhpcyBkZXNjcmlwdG9yLCBzaW5jZSBzb21lIGJyb3dzZXJzIChTYWZhcmkpIGRvbid0IHN1cHBvcnQgaXRzIHJldHVybi5cbiAgICAgIC8vIFNlZTogaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTQ5NzM5XG4gICAgICBpZiAodmFsaWREZXNjcmlwdG9yKGRlc2MpKSB7XG4gICAgICAgIGNvbnN0IG5hdGl2ZUNiRGVzYyA9IC8qKiBAdHlwZSB7IU9iamVjdFByb3BlcnR5RGVzY3JpcHRvcn0gKi8gKHtcbiAgICAgICAgICBnZXQ6IGRlc2MuZ2V0LFxuICAgICAgICAgIHNldDogKHN0YXRlKSA9PiB7XG4gICAgICAgICAgICBkZXNjLnNldC5jYWxsKG5hdGl2ZUNiLCBzdGF0ZSk7XG4gICAgICAgICAgICB0aGlzLnRyYW5zaXRpb25DaGVja1N0YXRlXygpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgY29uZmlndXJhYmxlOiBkZXNjLmNvbmZpZ3VyYWJsZSxcbiAgICAgICAgICBlbnVtZXJhYmxlOiBkZXNjLmVudW1lcmFibGUsXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmF0aXZlQ2IsIGNvbnRyb2xTdGF0ZSwgbmF0aXZlQ2JEZXNjKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKiBAcHJpdmF0ZSAqL1xuICB1bmluc3RhbGxQcm9wZXJ0eUNoYW5nZUhvb2tzXygpIHtcbiAgICBjb25zdCBuYXRpdmVDYiA9IHRoaXMuZ2V0TmF0aXZlQ29udHJvbF8oKTtcbiAgICBjb25zdCBjYlByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG5hdGl2ZUNiKTtcblxuICAgIENCX1BST1RPX1BST1BTLmZvckVhY2goKGNvbnRyb2xTdGF0ZSkgPT4ge1xuICAgICAgY29uc3QgZGVzYyA9IC8qKiBAdHlwZSB7IU9iamVjdFByb3BlcnR5RGVzY3JpcHRvcn0gKi8gKFxuICAgICAgICBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGNiUHJvdG8sIGNvbnRyb2xTdGF0ZSkpO1xuICAgICAgaWYgKHZhbGlkRGVzY3JpcHRvcihkZXNjKSkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmF0aXZlQ2IsIGNvbnRyb2xTdGF0ZSwgZGVzYyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKiogQHByaXZhdGUgKi9cbiAgdHJhbnNpdGlvbkNoZWNrU3RhdGVfKCkge1xuICAgIGNvbnN0IG5hdGl2ZUNiID0gdGhpcy5hZGFwdGVyXy5nZXROYXRpdmVDb250cm9sKCk7XG4gICAgaWYgKCFuYXRpdmVDYikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBvbGRTdGF0ZSA9IHRoaXMuY3VycmVudENoZWNrU3RhdGVfO1xuICAgIGNvbnN0IG5ld1N0YXRlID0gdGhpcy5kZXRlcm1pbmVDaGVja1N0YXRlXyhuYXRpdmVDYik7XG4gICAgaWYgKG9sZFN0YXRlID09PSBuZXdTdGF0ZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIEVuc3VyZSBhcmlhLWNoZWNrZWQgaXMgc2V0IHRvIG1peGVkIGlmIGNoZWNrYm94IGlzIGluIGluZGV0ZXJtaW5hdGUgc3RhdGUuXG4gICAgaWYgKHRoaXMuaXNJbmRldGVybWluYXRlKCkpIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uc2V0TmF0aXZlQ29udHJvbEF0dHIoXG4gICAgICAgIHN0cmluZ3MuQVJJQV9DSEVDS0VEX0FUVFIsIHN0cmluZ3MuQVJJQV9DSEVDS0VEX0lOREVURVJNSU5BVEVfVkFMVUUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZU5hdGl2ZUNvbnRyb2xBdHRyKHN0cmluZ3MuQVJJQV9DSEVDS0VEX0FUVFIpO1xuICAgIH1cblxuICAgIC8vIENoZWNrIHRvIGVuc3VyZSB0aGF0IHRoZXJlIGlzbid0IGEgcHJldmlvdXNseSBleGlzdGluZyBhbmltYXRpb24gY2xhc3MsIGluIGNhc2UgZm9yIGV4YW1wbGVcbiAgICAvLyB0aGUgdXNlciBpbnRlcmFjdGVkIHdpdGggdGhlIGNoZWNrYm94IGJlZm9yZSB0aGUgYW5pbWF0aW9uIHdhcyBmaW5pc2hlZC5cbiAgICBpZiAodGhpcy5jdXJyZW50QW5pbWF0aW9uQ2xhc3NfLmxlbmd0aCA+IDApIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLmFuaW1FbmRMYXRjaFRpbWVyXyk7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmZvcmNlTGF5b3V0KCk7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUNsYXNzKHRoaXMuY3VycmVudEFuaW1hdGlvbkNsYXNzXyk7XG4gICAgfVxuXG4gICAgdGhpcy5jdXJyZW50QW5pbWF0aW9uQ2xhc3NfID0gdGhpcy5nZXRUcmFuc2l0aW9uQW5pbWF0aW9uQ2xhc3NfKG9sZFN0YXRlLCBuZXdTdGF0ZSk7XG4gICAgdGhpcy5jdXJyZW50Q2hlY2tTdGF0ZV8gPSBuZXdTdGF0ZTtcblxuICAgIC8vIENoZWNrIGZvciBwYXJlbnROb2RlIHNvIHRoYXQgYW5pbWF0aW9ucyBhcmUgb25seSBydW4gd2hlbiB0aGUgZWxlbWVudCBpcyBhdHRhY2hlZFxuICAgIC8vIHRvIHRoZSBET00uXG4gICAgaWYgKHRoaXMuYWRhcHRlcl8uaXNBdHRhY2hlZFRvRE9NKCkgJiYgdGhpcy5jdXJyZW50QW5pbWF0aW9uQ2xhc3NfLmxlbmd0aCA+IDApIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3ModGhpcy5jdXJyZW50QW5pbWF0aW9uQ2xhc3NfKTtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJBbmltYXRpb25FbmRIYW5kbGVyKHRoaXMuYW5pbUVuZEhhbmRsZXJfKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHshTURDU2VsZWN0aW9uQ29udHJvbFN0YXRlfSBuYXRpdmVDYlxuICAgKiBAcmV0dXJuIHtzdHJpbmd9XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBkZXRlcm1pbmVDaGVja1N0YXRlXyhuYXRpdmVDYikge1xuICAgIGNvbnN0IHtcbiAgICAgIFRSQU5TSVRJT05fU1RBVEVfSU5ERVRFUk1JTkFURSxcbiAgICAgIFRSQU5TSVRJT05fU1RBVEVfQ0hFQ0tFRCxcbiAgICAgIFRSQU5TSVRJT05fU1RBVEVfVU5DSEVDS0VELFxuICAgIH0gPSBzdHJpbmdzO1xuXG4gICAgaWYgKG5hdGl2ZUNiLmluZGV0ZXJtaW5hdGUpIHtcbiAgICAgIHJldHVybiBUUkFOU0lUSU9OX1NUQVRFX0lOREVURVJNSU5BVEU7XG4gICAgfVxuICAgIHJldHVybiBuYXRpdmVDYi5jaGVja2VkID8gVFJBTlNJVElPTl9TVEFURV9DSEVDS0VEIDogVFJBTlNJVElPTl9TVEFURV9VTkNIRUNLRUQ7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IG9sZFN0YXRlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuZXdTdGF0ZVxuICAgKiBAcmV0dXJuIHtzdHJpbmd9XG4gICAqL1xuICBnZXRUcmFuc2l0aW9uQW5pbWF0aW9uQ2xhc3NfKG9sZFN0YXRlLCBuZXdTdGF0ZSkge1xuICAgIGNvbnN0IHtcbiAgICAgIFRSQU5TSVRJT05fU1RBVEVfSU5JVCxcbiAgICAgIFRSQU5TSVRJT05fU1RBVEVfQ0hFQ0tFRCxcbiAgICAgIFRSQU5TSVRJT05fU1RBVEVfVU5DSEVDS0VELFxuICAgIH0gPSBzdHJpbmdzO1xuXG4gICAgY29uc3Qge1xuICAgICAgQU5JTV9VTkNIRUNLRURfQ0hFQ0tFRCxcbiAgICAgIEFOSU1fVU5DSEVDS0VEX0lOREVURVJNSU5BVEUsXG4gICAgICBBTklNX0NIRUNLRURfVU5DSEVDS0VELFxuICAgICAgQU5JTV9DSEVDS0VEX0lOREVURVJNSU5BVEUsXG4gICAgICBBTklNX0lOREVURVJNSU5BVEVfQ0hFQ0tFRCxcbiAgICAgIEFOSU1fSU5ERVRFUk1JTkFURV9VTkNIRUNLRUQsXG4gICAgfSA9IE1EQ0NoZWNrYm94Rm91bmRhdGlvbi5jc3NDbGFzc2VzO1xuXG4gICAgc3dpdGNoIChvbGRTdGF0ZSkge1xuICAgIGNhc2UgVFJBTlNJVElPTl9TVEFURV9JTklUOlxuICAgICAgaWYgKG5ld1N0YXRlID09PSBUUkFOU0lUSU9OX1NUQVRFX1VOQ0hFQ0tFRCkge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgICB9XG4gICAgLy8gZmFsbHRocm91Z2hcbiAgICBjYXNlIFRSQU5TSVRJT05fU1RBVEVfVU5DSEVDS0VEOlxuICAgICAgcmV0dXJuIG5ld1N0YXRlID09PSBUUkFOU0lUSU9OX1NUQVRFX0NIRUNLRUQgPyBBTklNX1VOQ0hFQ0tFRF9DSEVDS0VEIDogQU5JTV9VTkNIRUNLRURfSU5ERVRFUk1JTkFURTtcbiAgICBjYXNlIFRSQU5TSVRJT05fU1RBVEVfQ0hFQ0tFRDpcbiAgICAgIHJldHVybiBuZXdTdGF0ZSA9PT0gVFJBTlNJVElPTl9TVEFURV9VTkNIRUNLRUQgPyBBTklNX0NIRUNLRURfVU5DSEVDS0VEIDogQU5JTV9DSEVDS0VEX0lOREVURVJNSU5BVEU7XG4gICAgLy8gVFJBTlNJVElPTl9TVEFURV9JTkRFVEVSTUlOQVRFXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBuZXdTdGF0ZSA9PT0gVFJBTlNJVElPTl9TVEFURV9DSEVDS0VEID9cbiAgICAgICAgQU5JTV9JTkRFVEVSTUlOQVRFX0NIRUNLRUQgOiBBTklNX0lOREVURVJNSU5BVEVfVU5DSEVDS0VEO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHshTURDU2VsZWN0aW9uQ29udHJvbFN0YXRlfVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgZ2V0TmF0aXZlQ29udHJvbF8oKSB7XG4gICAgcmV0dXJuIHRoaXMuYWRhcHRlcl8uZ2V0TmF0aXZlQ29udHJvbCgpIHx8IHtcbiAgICAgIGNoZWNrZWQ6IGZhbHNlLFxuICAgICAgaW5kZXRlcm1pbmF0ZTogZmFsc2UsXG4gICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgICB2YWx1ZTogbnVsbCxcbiAgICB9O1xuICB9XG59XG5cbi8qKlxuICogQHBhcmFtIHtPYmplY3RQcm9wZXJ0eURlc2NyaXB0b3J8dW5kZWZpbmVkfSBpbnB1dFByb3BEZXNjXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5mdW5jdGlvbiB2YWxpZERlc2NyaXB0b3IoaW5wdXRQcm9wRGVzYykge1xuICByZXR1cm4gISFpbnB1dFByb3BEZXNjICYmIHR5cGVvZiBpbnB1dFByb3BEZXNjLnNldCA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuZXhwb3J0IGRlZmF1bHQgTURDQ2hlY2tib3hGb3VuZGF0aW9uO1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qIGVzbGludCBuby11bnVzZWQtdmFyczogWzIsIHtcImFyZ3NcIjogXCJub25lXCJ9XSAqL1xuXG4vKipcbiAqIEFkYXB0ZXIgZm9yIE1EQyBGb3JtIEZpZWxkLiBQcm92aWRlcyBhbiBpbnRlcmZhY2UgZm9yIG1hbmFnaW5nXG4gKiAtIGV2ZW50IGhhbmRsZXJzXG4gKiAtIHJpcHBsZSBhY3RpdmF0aW9uXG4gKlxuICogQWRkaXRpb25hbGx5LCBwcm92aWRlcyB0eXBlIGluZm9ybWF0aW9uIGZvciB0aGUgYWRhcHRlciB0byB0aGUgQ2xvc3VyZVxuICogY29tcGlsZXIuXG4gKlxuICogSW1wbGVtZW50IHRoaXMgYWRhcHRlciBmb3IgeW91ciBmcmFtZXdvcmsgb2YgY2hvaWNlIHRvIGRlbGVnYXRlIHVwZGF0ZXMgdG9cbiAqIHRoZSBjb21wb25lbnQgaW4geW91ciBmcmFtZXdvcmsgb2YgY2hvaWNlLiBTZWUgYXJjaGl0ZWN0dXJlIGRvY3VtZW50YXRpb25cbiAqIGZvciBtb3JlIGRldGFpbHMuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbWF0ZXJpYWwtY29tcG9uZW50cy9tYXRlcmlhbC1jb21wb25lbnRzLXdlYi9ibG9iL21hc3Rlci9kb2NzL2NvZGUvYXJjaGl0ZWN0dXJlLm1kXG4gKlxuICogQHJlY29yZFxuICovXG5jbGFzcyBNRENGb3JtRmllbGRBZGFwdGVyIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlXG4gICAqIEBwYXJhbSB7IUV2ZW50TGlzdGVuZXJ9IGhhbmRsZXJcbiAgICovXG4gIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKHR5cGUsIGhhbmRsZXIpIHt9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlXG4gICAqIEBwYXJhbSB7IUV2ZW50TGlzdGVuZXJ9IGhhbmRsZXJcbiAgICovXG4gIGRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIodHlwZSwgaGFuZGxlcikge31cblxuICBhY3RpdmF0ZUlucHV0UmlwcGxlKCkge31cblxuICBkZWFjdGl2YXRlSW5wdXRSaXBwbGUoKSB7fVxufVxuXG5leHBvcnQgZGVmYXVsdCBNRENGb3JtRmllbGRBZGFwdGVyO1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qKiBAZW51bSB7c3RyaW5nfSAqL1xuY29uc3QgY3NzQ2xhc3NlcyA9IHtcbiAgUk9PVDogJ21kYy1mb3JtLWZpZWxkJyxcbn07XG5cbi8qKiBAZW51bSB7c3RyaW5nfSAqL1xuY29uc3Qgc3RyaW5ncyA9IHtcbiAgTEFCRUxfU0VMRUNUT1I6ICcubWRjLWZvcm0tZmllbGQgPiBsYWJlbCcsXG59O1xuXG5leHBvcnQge2Nzc0NsYXNzZXMsIHN0cmluZ3N9O1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCBNRENGb3VuZGF0aW9uIGZyb20gJ0BtYXRlcmlhbC9iYXNlL2ZvdW5kYXRpb24nO1xuaW1wb3J0IE1EQ0Zvcm1GaWVsZEFkYXB0ZXIgZnJvbSAnLi9hZGFwdGVyJztcbmltcG9ydCB7Y3NzQ2xhc3Nlcywgc3RyaW5nc30gZnJvbSAnLi9jb25zdGFudHMnO1xuXG4vKipcbiAqIEBleHRlbmRzIHtNRENGb3VuZGF0aW9uPCFNRENGb3JtRmllbGRBZGFwdGVyPn1cbiAqL1xuY2xhc3MgTURDRm9ybUZpZWxkRm91bmRhdGlvbiBleHRlbmRzIE1EQ0ZvdW5kYXRpb24ge1xuICAvKiogQHJldHVybiBlbnVtIHtjc3NDbGFzc2VzfSAqL1xuICBzdGF0aWMgZ2V0IGNzc0NsYXNzZXMoKSB7XG4gICAgcmV0dXJuIGNzc0NsYXNzZXM7XG4gIH1cblxuICAvKiogQHJldHVybiBlbnVtIHtzdHJpbmdzfSAqL1xuICBzdGF0aWMgZ2V0IHN0cmluZ3MoKSB7XG4gICAgcmV0dXJuIHN0cmluZ3M7XG4gIH1cblxuICAvKiogQHJldHVybiB7IU1EQ0Zvcm1GaWVsZEFkYXB0ZXJ9ICovXG4gIHN0YXRpYyBnZXQgZGVmYXVsdEFkYXB0ZXIoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoLyogdHlwZTogc3RyaW5nLCBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6ICgvKiB0eXBlOiBzdHJpbmcsIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgYWN0aXZhdGVJbnB1dFJpcHBsZTogKCkgPT4ge30sXG4gICAgICBkZWFjdGl2YXRlSW5wdXRSaXBwbGU6ICgpID0+IHt9LFxuICAgIH07XG4gIH1cblxuICBjb25zdHJ1Y3RvcihhZGFwdGVyKSB7XG4gICAgc3VwZXIoT2JqZWN0LmFzc2lnbihNRENGb3JtRmllbGRGb3VuZGF0aW9uLmRlZmF1bHRBZGFwdGVyLCBhZGFwdGVyKSk7XG5cbiAgICAvKiogQHByaXZhdGUgeyFFdmVudExpc3RlbmVyfSAqL1xuICAgIHRoaXMuY2xpY2tIYW5kbGVyXyA9IC8qKiBAdHlwZSB7IUV2ZW50TGlzdGVuZXJ9ICovIChcbiAgICAgICgpID0+IHRoaXMuaGFuZGxlQ2xpY2tfKCkpO1xuICB9XG5cbiAgaW5pdCgpIHtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdjbGljaycsIHRoaXMuY2xpY2tIYW5kbGVyXyk7XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcignY2xpY2snLCB0aGlzLmNsaWNrSGFuZGxlcl8pO1xuICB9XG5cbiAgLyoqIEBwcml2YXRlICovXG4gIGhhbmRsZUNsaWNrXygpIHtcbiAgICB0aGlzLmFkYXB0ZXJfLmFjdGl2YXRlSW5wdXRSaXBwbGUoKTtcbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gdGhpcy5hZGFwdGVyXy5kZWFjdGl2YXRlSW5wdXRSaXBwbGUoKSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTURDRm9ybUZpZWxkRm91bmRhdGlvbjtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHt7XG4gKiAgIG5vUHJlZml4OiBzdHJpbmcsXG4gKiAgIHdlYmtpdFByZWZpeDogc3RyaW5nLFxuICogICBzdHlsZVByb3BlcnR5OiBzdHJpbmdcbiAqIH19XG4gKi9cbmxldCBWZW5kb3JQcm9wZXJ0eU1hcFR5cGU7XG5cbi8qKiBAY29uc3Qge09iamVjdDxzdHJpbmcsICFWZW5kb3JQcm9wZXJ0eU1hcFR5cGU+fSAqL1xuY29uc3QgZXZlbnRUeXBlTWFwID0ge1xuICAnYW5pbWF0aW9uc3RhcnQnOiB7XG4gICAgbm9QcmVmaXg6ICdhbmltYXRpb25zdGFydCcsXG4gICAgd2Via2l0UHJlZml4OiAnd2Via2l0QW5pbWF0aW9uU3RhcnQnLFxuICAgIHN0eWxlUHJvcGVydHk6ICdhbmltYXRpb24nLFxuICB9LFxuICAnYW5pbWF0aW9uZW5kJzoge1xuICAgIG5vUHJlZml4OiAnYW5pbWF0aW9uZW5kJyxcbiAgICB3ZWJraXRQcmVmaXg6ICd3ZWJraXRBbmltYXRpb25FbmQnLFxuICAgIHN0eWxlUHJvcGVydHk6ICdhbmltYXRpb24nLFxuICB9LFxuICAnYW5pbWF0aW9uaXRlcmF0aW9uJzoge1xuICAgIG5vUHJlZml4OiAnYW5pbWF0aW9uaXRlcmF0aW9uJyxcbiAgICB3ZWJraXRQcmVmaXg6ICd3ZWJraXRBbmltYXRpb25JdGVyYXRpb24nLFxuICAgIHN0eWxlUHJvcGVydHk6ICdhbmltYXRpb24nLFxuICB9LFxuICAndHJhbnNpdGlvbmVuZCc6IHtcbiAgICBub1ByZWZpeDogJ3RyYW5zaXRpb25lbmQnLFxuICAgIHdlYmtpdFByZWZpeDogJ3dlYmtpdFRyYW5zaXRpb25FbmQnLFxuICAgIHN0eWxlUHJvcGVydHk6ICd0cmFuc2l0aW9uJyxcbiAgfSxcbn07XG5cbi8qKiBAY29uc3Qge09iamVjdDxzdHJpbmcsICFWZW5kb3JQcm9wZXJ0eU1hcFR5cGU+fSAqL1xuY29uc3QgY3NzUHJvcGVydHlNYXAgPSB7XG4gICdhbmltYXRpb24nOiB7XG4gICAgbm9QcmVmaXg6ICdhbmltYXRpb24nLFxuICAgIHdlYmtpdFByZWZpeDogJy13ZWJraXQtYW5pbWF0aW9uJyxcbiAgfSxcbiAgJ3RyYW5zZm9ybSc6IHtcbiAgICBub1ByZWZpeDogJ3RyYW5zZm9ybScsXG4gICAgd2Via2l0UHJlZml4OiAnLXdlYmtpdC10cmFuc2Zvcm0nLFxuICB9LFxuICAndHJhbnNpdGlvbic6IHtcbiAgICBub1ByZWZpeDogJ3RyYW5zaXRpb24nLFxuICAgIHdlYmtpdFByZWZpeDogJy13ZWJraXQtdHJhbnNpdGlvbicsXG4gIH0sXG59O1xuXG4vKipcbiAqIEBwYXJhbSB7IU9iamVjdH0gd2luZG93T2JqXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBoYXNQcm9wZXJTaGFwZSh3aW5kb3dPYmopIHtcbiAgcmV0dXJuICh3aW5kb3dPYmpbJ2RvY3VtZW50J10gIT09IHVuZGVmaW5lZCAmJiB0eXBlb2Ygd2luZG93T2JqWydkb2N1bWVudCddWydjcmVhdGVFbGVtZW50J10gPT09ICdmdW5jdGlvbicpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBldmVudFR5cGVcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKi9cbmZ1bmN0aW9uIGV2ZW50Rm91bmRJbk1hcHMoZXZlbnRUeXBlKSB7XG4gIHJldHVybiAoZXZlbnRUeXBlIGluIGV2ZW50VHlwZU1hcCB8fCBldmVudFR5cGUgaW4gY3NzUHJvcGVydHlNYXApO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBldmVudFR5cGVcbiAqIEBwYXJhbSB7IU9iamVjdDxzdHJpbmcsICFWZW5kb3JQcm9wZXJ0eU1hcFR5cGU+fSBtYXBcbiAqIEBwYXJhbSB7IUVsZW1lbnR9IGVsXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGdldEphdmFTY3JpcHRFdmVudE5hbWUoZXZlbnRUeXBlLCBtYXAsIGVsKSB7XG4gIHJldHVybiBtYXBbZXZlbnRUeXBlXS5zdHlsZVByb3BlcnR5IGluIGVsLnN0eWxlID8gbWFwW2V2ZW50VHlwZV0ubm9QcmVmaXggOiBtYXBbZXZlbnRUeXBlXS53ZWJraXRQcmVmaXg7XG59XG5cbi8qKlxuICogSGVscGVyIGZ1bmN0aW9uIHRvIGRldGVybWluZSBicm93c2VyIHByZWZpeCBmb3IgQ1NTMyBhbmltYXRpb24gZXZlbnRzXG4gKiBhbmQgcHJvcGVydHkgbmFtZXMuXG4gKiBAcGFyYW0geyFPYmplY3R9IHdpbmRvd09ialxuICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50VHlwZVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBnZXRBbmltYXRpb25OYW1lKHdpbmRvd09iaiwgZXZlbnRUeXBlKSB7XG4gIGlmICghaGFzUHJvcGVyU2hhcGUod2luZG93T2JqKSB8fCAhZXZlbnRGb3VuZEluTWFwcyhldmVudFR5cGUpKSB7XG4gICAgcmV0dXJuIGV2ZW50VHlwZTtcbiAgfVxuXG4gIGNvbnN0IG1hcCA9IC8qKiBAdHlwZSB7IU9iamVjdDxzdHJpbmcsICFWZW5kb3JQcm9wZXJ0eU1hcFR5cGU+fSAqLyAoXG4gICAgZXZlbnRUeXBlIGluIGV2ZW50VHlwZU1hcCA/IGV2ZW50VHlwZU1hcCA6IGNzc1Byb3BlcnR5TWFwXG4gICk7XG4gIGNvbnN0IGVsID0gd2luZG93T2JqWydkb2N1bWVudCddWydjcmVhdGVFbGVtZW50J10oJ2RpdicpO1xuICBsZXQgZXZlbnROYW1lID0gJyc7XG5cbiAgaWYgKG1hcCA9PT0gZXZlbnRUeXBlTWFwKSB7XG4gICAgZXZlbnROYW1lID0gZ2V0SmF2YVNjcmlwdEV2ZW50TmFtZShldmVudFR5cGUsIG1hcCwgZWwpO1xuICB9IGVsc2Uge1xuICAgIGV2ZW50TmFtZSA9IG1hcFtldmVudFR5cGVdLm5vUHJlZml4IGluIGVsLnN0eWxlID8gbWFwW2V2ZW50VHlwZV0ubm9QcmVmaXggOiBtYXBbZXZlbnRUeXBlXS53ZWJraXRQcmVmaXg7XG4gIH1cblxuICByZXR1cm4gZXZlbnROYW1lO1xufVxuXG4vLyBQdWJsaWMgZnVuY3Rpb25zIHRvIGFjY2VzcyBnZXRBbmltYXRpb25OYW1lKCkgZm9yIEphdmFTY3JpcHQgZXZlbnRzIG9yIENTU1xuLy8gcHJvcGVydHkgbmFtZXMuXG5cbmNvbnN0IHRyYW5zZm9ybVN0eWxlUHJvcGVydGllcyA9IFsndHJhbnNmb3JtJywgJ1dlYmtpdFRyYW5zZm9ybScsICdNb3pUcmFuc2Zvcm0nLCAnT1RyYW5zZm9ybScsICdNU1RyYW5zZm9ybSddO1xuXG4vKipcbiAqIEBwYXJhbSB7IU9iamVjdH0gd2luZG93T2JqXG4gKiBAcGFyYW0ge3N0cmluZ30gZXZlbnRUeXBlXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGdldENvcnJlY3RFdmVudE5hbWUod2luZG93T2JqLCBldmVudFR5cGUpIHtcbiAgcmV0dXJuIGdldEFuaW1hdGlvbk5hbWUod2luZG93T2JqLCBldmVudFR5cGUpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7IU9iamVjdH0gd2luZG93T2JqXG4gKiBAcGFyYW0ge3N0cmluZ30gZXZlbnRUeXBlXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGdldENvcnJlY3RQcm9wZXJ0eU5hbWUod2luZG93T2JqLCBldmVudFR5cGUpIHtcbiAgcmV0dXJuIGdldEFuaW1hdGlvbk5hbWUod2luZG93T2JqLCBldmVudFR5cGUpO1xufVxuXG5leHBvcnQge3RyYW5zZm9ybVN0eWxlUHJvcGVydGllcywgZ2V0Q29ycmVjdEV2ZW50TmFtZSwgZ2V0Q29ycmVjdFByb3BlcnR5TmFtZX07XG4iLCI8dGVtcGxhdGU+XG4gIDxkaXYgOmNsYXNzPWZvcm1GaWVsZENsYXNzZXMgY2xhc3M9XCJtZGMtY2hlY2tib3gtd3JhcHBlclwiPlxuICAgIDxkaXYgcmVmPVwicm9vdFwiIGNsYXNzPVwibWRjLWNoZWNrYm94XCJcbiAgICA6Y2xhc3M9XCJjbGFzc2VzXCIgOnN0eWxlPVwic3R5bGVzXCI+XG4gICAgICA8aW5wdXQgcmVmPVwiY29udHJvbFwiIDppZD1cIl91aWRcIiB0eXBlPVwiY2hlY2tib3hcIiA6bmFtZT1cIm5hbWVcIlxuICAgICAgICBjbGFzcz1cIm1kYy1jaGVja2JveF9fbmF0aXZlLWNvbnRyb2xcIiA6dmFsdWU9XCJ2YWx1ZVwiXG4gICAgICAgIEBjaGFuZ2U9XCJvbkNoYW5nZVwiLz5cbiAgICAgIDxkaXYgY2xhc3M9XCJtZGMtY2hlY2tib3hfX2JhY2tncm91bmRcIj5cbiAgICAgICAgPHN2ZyBjbGFzcz1cIm1kYy1jaGVja2JveF9fY2hlY2ttYXJrXCJcbiAgICAgICAgICAgIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj5cbiAgICAgICAgICA8cGF0aCBjbGFzcz1cImNoZWNrYm94X19jaGVja21hcmstcGF0aFwiXG4gICAgICAgICAgICAgICAgZmlsbD1cIm5vbmVcIlxuICAgICAgICAgICAgICAgIHN0cm9rZT1cIndoaXRlXCJcbiAgICAgICAgICAgICAgICBkPVwiTTEuNzMsMTIuOTEgOC4xLDE5LjI4IDIyLjc5LDQuNTlcIi8+XG4gICAgICAgIDwvc3ZnPlxuICAgICAgICA8ZGl2IGNsYXNzPVwibWRjLWNoZWNrYm94X19taXhlZG1hcmtcIj48L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDxsYWJlbCByZWY9XCJsYWJlbFwiICA6Zm9yPVwiX3VpZFwiXG4gICAgPjxzbG90Pnt7bGFiZWx9fTwvc2xvdD48L2xhYmVsPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG4vKiBnbG9iYWwgSFRNTEVsZW1lbnQgKi9cbmltcG9ydCBNRENDaGVja2JveEZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL2NoZWNrYm94L2ZvdW5kYXRpb24nO1xuaW1wb3J0IE1EQ0Zvcm1GaWVsZEZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL2Zvcm0tZmllbGQvZm91bmRhdGlvbic7XG5pbXBvcnQgeyBnZXRDb3JyZWN0RXZlbnROYW1lIH0gZnJvbSAnQG1hdGVyaWFsL2FuaW1hdGlvbic7XG5pbXBvcnQgeyBEaXNwYXRjaEZvY3VzTWl4aW4gfSBmcm9tICcuLi9iYXNlJztcbmltcG9ydCB7IFJpcHBsZUJhc2UgfSBmcm9tICcuLi9yaXBwbGUnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtY2hlY2tib3gnLFxuICBtaXhpbnM6IFtEaXNwYXRjaEZvY3VzTWl4aW5dLFxuICBtb2RlbDoge1xuICAgIHByb3A6ICdjaGVja2VkJyxcbiAgICBldmVudDogJ2NoYW5nZScsXG4gIH0sXG4gIHByb3BzOiB7XG4gICAgY2hlY2tlZDogQm9vbGVhbixcbiAgICBpbmRldGVybWluYXRlOiBCb29sZWFuLFxuICAgIGRpc2FibGVkOiBCb29sZWFuLFxuICAgIGxhYmVsOiBTdHJpbmcsXG4gICAgJ2FsaWduLWVuZCc6IEJvb2xlYW4sXG4gICAgdmFsdWU6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQoKSB7XG4gICAgICAgIHJldHVybiAnb24nO1xuICAgICAgfSxcbiAgICB9LFxuICAgIG5hbWU6IFN0cmluZyxcbiAgfSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc3R5bGVzOiB7fSxcbiAgICAgIGNsYXNzZXM6IHt9LFxuICAgIH07XG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgaGFzTGFiZWwoKSB7XG4gICAgICByZXR1cm4gdGhpcy5sYWJlbCB8fCB0aGlzLiRzbG90cy5kZWZhdWx0O1xuICAgIH0sXG4gICAgZm9ybUZpZWxkQ2xhc3NlcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgICdtZGMtZm9ybS1maWVsZCc6IHRoaXMuaGFzTGFiZWwsXG4gICAgICAgICdtZGMtZm9ybS1maWVsZC0tYWxpZ24tZW5kJzogdGhpcy5oYXNMYWJlbCAmJiB0aGlzLmFsaWduRW5kLFxuICAgICAgfTtcbiAgICB9LFxuICB9LFxuICB3YXRjaDoge1xuICAgIGNoZWNrZWQodmFsdWUpIHtcbiAgICAgIHRoaXMuZm91bmRhdGlvbi5zZXRDaGVja2VkKHZhbHVlKTtcbiAgICB9LFxuICAgIGRpc2FibGVkKHZhbHVlKSB7XG4gICAgICB0aGlzLmZvdW5kYXRpb24uc2V0RGlzYWJsZWQodmFsdWUpO1xuICAgIH0sXG4gICAgaW5kZXRlcm1pbmF0ZSh2YWx1ZSkge1xuICAgICAgdGhpcy5mb3VuZGF0aW9uLnNldEluZGV0ZXJtaW5hdGUodmFsdWUpO1xuICAgIH0sXG4gIH0sXG4gIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5mb3VuZGF0aW9uID0gbmV3IE1EQ0NoZWNrYm94Rm91bmRhdGlvbih7XG4gICAgICBhZGRDbGFzczogY2xhc3NOYW1lID0+IHRoaXMuJHNldCh0aGlzLmNsYXNzZXMsIGNsYXNzTmFtZSwgdHJ1ZSksXG4gICAgICByZW1vdmVDbGFzczogY2xhc3NOYW1lID0+IHRoaXMuJGRlbGV0ZSh0aGlzLmNsYXNzZXMsIGNsYXNzTmFtZSksXG4gICAgICBzZXROYXRpdmVDb250cm9sQXR0cjogKGF0dHIsIHZhbHVlKSA9PiB7XG4gICAgICAgIHRoaXMuJHJlZnMuY29udHJvbC5zZXRBdHRyaWJ1dGUoYXR0ciwgdmFsdWUpO1xuICAgICAgfSxcbiAgICAgIHJlbW92ZU5hdGl2ZUNvbnRyb2xBdHRyOiBhdHRyID0+IHtcbiAgICAgICAgdGhpcy4kcmVmcy5jb250cm9sLnJlbW92ZUF0dHJpYnV0ZShhdHRyKTtcbiAgICAgIH0sXG4gICAgICByZWdpc3RlckFuaW1hdGlvbkVuZEhhbmRsZXI6IGhhbmRsZXIgPT5cbiAgICAgICAgdGhpcy4kcmVmcy5yb290LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgZ2V0Q29ycmVjdEV2ZW50TmFtZSh3aW5kb3csICdhbmltYXRpb25lbmQnKSxcbiAgICAgICAgICBoYW5kbGVyLFxuICAgICAgICApLFxuICAgICAgZGVyZWdpc3RlckFuaW1hdGlvbkVuZEhhbmRsZXI6IGhhbmRsZXIgPT5cbiAgICAgICAgdGhpcy4kcmVmcy5yb290LnJlbW92ZUV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgZ2V0Q29ycmVjdEV2ZW50TmFtZSh3aW5kb3csICdhbmltYXRpb25lbmQnKSxcbiAgICAgICAgICBoYW5kbGVyLFxuICAgICAgICApLFxuICAgICAgcmVnaXN0ZXJDaGFuZ2VIYW5kbGVyOiBoYW5kbGVyID0+XG4gICAgICAgIHRoaXMuJHJlZnMuY29udHJvbC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBoYW5kbGVyKSxcbiAgICAgIGRlcmVnaXN0ZXJDaGFuZ2VIYW5kbGVyOiBoYW5kbGVyID0+XG4gICAgICAgIHRoaXMuJHJlZnMuY29udHJvbC5yZW1vdmVFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBoYW5kbGVyKSxcbiAgICAgIGdldE5hdGl2ZUNvbnRyb2w6ICgpID0+IHRoaXMuJHJlZnMuY29udHJvbCxcbiAgICAgIGZvcmNlTGF5b3V0OiAoKSA9PiB0aGlzLiRyZWZzLnJvb3Qub2Zmc2V0V2lkdGgsXG4gICAgICBpc0F0dGFjaGVkVG9ET006ICgpID0+IEJvb2xlYW4odGhpcy4kZWwucGFyZW50Tm9kZSksXG4gICAgfSk7XG5cbiAgICB0aGlzLnJpcHBsZSA9IG5ldyBSaXBwbGVCYXNlKHRoaXMsIHtcbiAgICAgIGlzVW5ib3VuZGVkOiAoKSA9PiB0cnVlLFxuICAgICAgaXNTdXJmYWNlQWN0aXZlOiAoKSA9PiBSaXBwbGVCYXNlLmlzU3VyZmFjZUFjdGl2ZSh0aGlzLiRyZWZzLmNvbnRyb2wpLFxuICAgICAgcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6IChldnQsIGhhbmRsZXIpID0+IHtcbiAgICAgICAgdGhpcy4kcmVmcy5jb250cm9sLmFkZEV2ZW50TGlzdGVuZXIoZXZ0LCBoYW5kbGVyKTtcbiAgICAgIH0sXG4gICAgICBkZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0LCBoYW5kbGVyKSA9PiB7XG4gICAgICAgIHRoaXMuJHJlZnMuY29udHJvbC5hZGRFdmVudExpc3RlbmVyKGV2dCwgaGFuZGxlcik7XG4gICAgICB9LFxuICAgICAgY29tcHV0ZUJvdW5kaW5nUmVjdDogKCkgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy4kcmVmcy5yb290LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgfSxcbiAgICB9KTtcblxuICAgIHRoaXMuZm9ybUZpZWxkID0gbmV3IE1EQ0Zvcm1GaWVsZEZvdW5kYXRpb24oe1xuICAgICAgcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6ICh0eXBlLCBoYW5kbGVyKSA9PiB7XG4gICAgICAgIHRoaXMuJHJlZnMubGFiZWwuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCBoYW5kbGVyKTtcbiAgICAgIH0sXG4gICAgICBkZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAodHlwZSwgaGFuZGxlcikgPT4ge1xuICAgICAgICB0aGlzLiRyZWZzLmxhYmVsLnJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgaGFuZGxlcik7XG4gICAgICB9LFxuICAgICAgYWN0aXZhdGVJbnB1dFJpcHBsZTogKCkgPT4ge1xuICAgICAgICB0aGlzLnJpcHBsZSAmJiB0aGlzLnJpcHBsZS5hY3RpdmF0ZSgpO1xuICAgICAgfSxcbiAgICAgIGRlYWN0aXZhdGVJbnB1dFJpcHBsZTogKCkgPT4ge1xuICAgICAgICB0aGlzLnJpcHBsZSAmJiB0aGlzLnJpcHBsZS5kZWFjdGl2YXRlKCk7XG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgdGhpcy5mb3VuZGF0aW9uLmluaXQoKTtcbiAgICB0aGlzLnJpcHBsZS5pbml0KCk7XG4gICAgdGhpcy5mb3JtRmllbGQuaW5pdCgpO1xuICAgIHRoaXMuZm91bmRhdGlvbi5zZXRDaGVja2VkKHRoaXMuY2hlY2tlZCk7XG4gICAgdGhpcy5mb3VuZGF0aW9uLnNldERpc2FibGVkKHRoaXMuZGlzYWJsZWQpO1xuICAgIHRoaXMuZm91bmRhdGlvbi5zZXRJbmRldGVybWluYXRlKHRoaXMuaW5kZXRlcm1pbmF0ZSk7XG4gIH0sXG4gIGJlZm9yZURlc3Ryb3koKSB7XG4gICAgdGhpcy5mb3JtRmllbGQuZGVzdHJveSgpO1xuICAgIHRoaXMucmlwcGxlLmRlc3Ryb3koKTtcbiAgICB0aGlzLmZvdW5kYXRpb24uZGVzdHJveSgpO1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgb25DaGFuZ2UoKSB7XG4gICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6aW5kZXRlcm1pbmF0ZScsIHRoaXMuZm91bmRhdGlvbi5pc0luZGV0ZXJtaW5hdGUoKSk7XG4gICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCB0aGlzLmZvdW5kYXRpb24uaXNDaGVja2VkKCkpO1xuICAgIH0sXG4gIH0sXG59O1xuPC9zY3JpcHQ+XG4iLCJpbXBvcnQge0Jhc2VQbHVnaW59IGZyb20gJy4uL2Jhc2UnXG5pbXBvcnQgbWRjQ2hlY2tib3ggZnJvbSAnLi9tZGMtY2hlY2tib3gudnVlJ1xuXG5leHBvcnQge1xuICBtZGNDaGVja2JveFxufVxuXG5leHBvcnQgZGVmYXVsdCBCYXNlUGx1Z2luKHtcbiAgbWRjQ2hlY2tib3hcbn0pXG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyogZXNsaW50IG5vLXVudXNlZC12YXJzOiBbMiwge1wiYXJnc1wiOiBcIm5vbmVcIn1dICovXG5cbi8qKlxuICogQWRhcHRlciBmb3IgTURDIENoaXAuXG4gKlxuICogRGVmaW5lcyB0aGUgc2hhcGUgb2YgdGhlIGFkYXB0ZXIgZXhwZWN0ZWQgYnkgdGhlIGZvdW5kYXRpb24uIEltcGxlbWVudCB0aGlzXG4gKiBhZGFwdGVyIHRvIGludGVncmF0ZSB0aGUgQ2hpcCBpbnRvIHlvdXIgZnJhbWV3b3JrLiBTZWVcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRlcmlhbC1jb21wb25lbnRzL21hdGVyaWFsLWNvbXBvbmVudHMtd2ViL2Jsb2IvbWFzdGVyL2RvY3MvYXV0aG9yaW5nLWNvbXBvbmVudHMubWRcbiAqIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICpcbiAqIEByZWNvcmRcbiAqL1xuY2xhc3MgTURDQ2hpcEFkYXB0ZXIge1xuICAvKipcbiAgICogQWRkcyBhIGNsYXNzIHRvIHRoZSByb290IGVsZW1lbnQuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWVcbiAgICovXG4gIGFkZENsYXNzKGNsYXNzTmFtZSkge31cblxuICAvKipcbiAgICogUmVtb3ZlcyBhIGNsYXNzIGZyb20gdGhlIHJvb3QgZWxlbWVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGNsYXNzTmFtZVxuICAgKi9cbiAgcmVtb3ZlQ2xhc3MoY2xhc3NOYW1lKSB7fVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRydWUgaWYgdGhlIHJvb3QgZWxlbWVudCBjb250YWlucyB0aGUgZ2l2ZW4gY2xhc3MuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWVcbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICovXG4gIGhhc0NsYXNzKGNsYXNzTmFtZSkge31cblxuICAvKipcbiAgICogQWRkcyBhIGNsYXNzIHRvIHRoZSBsZWFkaW5nIGljb24gZWxlbWVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGNsYXNzTmFtZVxuICAgKi9cbiAgYWRkQ2xhc3NUb0xlYWRpbmdJY29uKGNsYXNzTmFtZSkge31cblxuICAvKipcbiAgICogUmVtb3ZlcyBhIGNsYXNzIGZyb20gdGhlIGxlYWRpbmcgaWNvbiBlbGVtZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG4gICAqL1xuICByZW1vdmVDbGFzc0Zyb21MZWFkaW5nSWNvbihjbGFzc05hbWUpIHt9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdHJ1ZSBpZiB0YXJnZXQgaGFzIGNsYXNzTmFtZSwgZmFsc2Ugb3RoZXJ3aXNlLlxuICAgKiBAcGFyYW0geyFFdmVudFRhcmdldH0gdGFyZ2V0XG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWVcbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICovXG4gIGV2ZW50VGFyZ2V0SGFzQ2xhc3ModGFyZ2V0LCBjbGFzc05hbWUpIHt9XG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVycyBhbiBldmVudCBsaXN0ZW5lciBvbiB0aGUgcm9vdCBlbGVtZW50IGZvciBhIGdpdmVuIGV2ZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXZ0VHlwZVxuICAgKiBAcGFyYW0ge2Z1bmN0aW9uKCFFdmVudCk6IHVuZGVmaW5lZH0gaGFuZGxlclxuICAgKi9cbiAgcmVnaXN0ZXJFdmVudEhhbmRsZXIoZXZ0VHlwZSwgaGFuZGxlcikge31cblxuICAvKipcbiAgICogRGVyZWdpc3RlcnMgYW4gZXZlbnQgbGlzdGVuZXIgb24gdGhlIHJvb3QgZWxlbWVudCBmb3IgYSBnaXZlbiBldmVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2dFR5cGVcbiAgICogQHBhcmFtIHtmdW5jdGlvbighRXZlbnQpOiB1bmRlZmluZWR9IGhhbmRsZXJcbiAgICovXG4gIGRlcmVnaXN0ZXJFdmVudEhhbmRsZXIoZXZ0VHlwZSwgaGFuZGxlcikge31cblxuICAvKipcbiAgICogUmVnaXN0ZXJzIGFuIGV2ZW50IGxpc3RlbmVyIG9uIHRoZSB0cmFpbGluZyBpY29uIGVsZW1lbnQgZm9yIGEgZ2l2ZW4gZXZlbnQuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldnRUeXBlXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb24oIUV2ZW50KTogdW5kZWZpbmVkfSBoYW5kbGVyXG4gICAqL1xuICByZWdpc3RlclRyYWlsaW5nSWNvbkludGVyYWN0aW9uSGFuZGxlcihldnRUeXBlLCBoYW5kbGVyKSB7fVxuXG4gIC8qKlxuICAgKiBEZXJlZ2lzdGVycyBhbiBldmVudCBsaXN0ZW5lciBvbiB0aGUgdHJhaWxpbmcgaWNvbiBlbGVtZW50IGZvciBhIGdpdmVuIGV2ZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXZ0VHlwZVxuICAgKiBAcGFyYW0ge2Z1bmN0aW9uKCFFdmVudCk6IHVuZGVmaW5lZH0gaGFuZGxlclxuICAgKi9cbiAgZGVyZWdpc3RlclRyYWlsaW5nSWNvbkludGVyYWN0aW9uSGFuZGxlcihldnRUeXBlLCBoYW5kbGVyKSB7fVxuXG4gIC8qKlxuICAgKiBFbWl0cyBhIGN1c3RvbSBcIk1EQ0NoaXA6aW50ZXJhY3Rpb25cIiBldmVudCBkZW5vdGluZyB0aGUgY2hpcCBoYXMgYmVlblxuICAgKiBpbnRlcmFjdGVkIHdpdGggKHR5cGljYWxseSBvbiBjbGljayBvciBrZXlkb3duKS5cbiAgICovXG4gIG5vdGlmeUludGVyYWN0aW9uKCkge31cblxuICAvKipcbiAgICogRW1pdHMgYSBjdXN0b20gXCJNRENDaGlwOnRyYWlsaW5nSWNvbkludGVyYWN0aW9uXCIgZXZlbnQgZGVub3RpbmcgdGhlIHRyYWlsaW5nIGljb24gaGFzIGJlZW5cbiAgICogaW50ZXJhY3RlZCB3aXRoICh0eXBpY2FsbHkgb24gY2xpY2sgb3Iga2V5ZG93bikuXG4gICAqL1xuICBub3RpZnlUcmFpbGluZ0ljb25JbnRlcmFjdGlvbigpIHt9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1EQ0NoaXBBZGFwdGVyO1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qKiBAZW51bSB7c3RyaW5nfSAqL1xuY29uc3Qgc3RyaW5ncyA9IHtcbiAgSU5URVJBQ1RJT05fRVZFTlQ6ICdNRENDaGlwOmludGVyYWN0aW9uJyxcbiAgTEVBRElOR19JQ09OX1NFTEVDVE9SOiAnLm1kYy1jaGlwX19pY29uLS1sZWFkaW5nJyxcbiAgVFJBSUxJTkdfSUNPTl9JTlRFUkFDVElPTl9FVkVOVDogJ01EQ0NoaXA6dHJhaWxpbmdJY29uSW50ZXJhY3Rpb24nLFxuICBUUkFJTElOR19JQ09OX1NFTEVDVE9SOiAnLm1kYy1jaGlwX19pY29uLS10cmFpbGluZycsXG59O1xuXG4vKiogQGVudW0ge3N0cmluZ30gKi9cbmNvbnN0IGNzc0NsYXNzZXMgPSB7XG4gIENIRUNLTUFSSzogJ21kYy1jaGlwX19jaGVja21hcmsnLFxuICBISURERU5fTEVBRElOR19JQ09OOiAnbWRjLWNoaXBfX2ljb24tLWhpZGRlbi1sZWFkaW5nJyxcbiAgTEVBRElOR19JQ09OOiAnbWRjLWNoaXBfX2ljb24tLWxlYWRpbmcnLFxuICBTRUxFQ1RFRDogJ21kYy1jaGlwLS1zZWxlY3RlZCcsXG59O1xuXG5leHBvcnQge3N0cmluZ3MsIGNzc0NsYXNzZXN9O1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCBNRENGb3VuZGF0aW9uIGZyb20gJ0BtYXRlcmlhbC9iYXNlL2ZvdW5kYXRpb24nO1xuaW1wb3J0IE1EQ0NoaXBBZGFwdGVyIGZyb20gJy4vYWRhcHRlcic7XG5pbXBvcnQge3N0cmluZ3MsIGNzc0NsYXNzZXN9IGZyb20gJy4vY29uc3RhbnRzJztcblxuXG4vKipcbiAqIEBleHRlbmRzIHtNRENGb3VuZGF0aW9uPCFNRENDaGlwQWRhcHRlcj59XG4gKiBAZmluYWxcbiAqL1xuY2xhc3MgTURDQ2hpcEZvdW5kYXRpb24gZXh0ZW5kcyBNRENGb3VuZGF0aW9uIHtcbiAgLyoqIEByZXR1cm4gZW51bSB7c3RyaW5nfSAqL1xuICBzdGF0aWMgZ2V0IHN0cmluZ3MoKSB7XG4gICAgcmV0dXJuIHN0cmluZ3M7XG4gIH1cblxuICAvKiogQHJldHVybiBlbnVtIHtzdHJpbmd9ICovXG4gIHN0YXRpYyBnZXQgY3NzQ2xhc3NlcygpIHtcbiAgICByZXR1cm4gY3NzQ2xhc3NlcztcbiAgfVxuXG4gIC8qKlxuICAgKiB7QHNlZSBNRENDaGlwQWRhcHRlcn0gZm9yIHR5cGluZyBpbmZvcm1hdGlvbiBvbiBwYXJhbWV0ZXJzIGFuZCByZXR1cm5cbiAgICogdHlwZXMuXG4gICAqIEByZXR1cm4geyFNRENDaGlwQWRhcHRlcn1cbiAgICovXG4gIHN0YXRpYyBnZXQgZGVmYXVsdEFkYXB0ZXIoKSB7XG4gICAgcmV0dXJuIC8qKiBAdHlwZSB7IU1EQ0NoaXBBZGFwdGVyfSAqLyAoe1xuICAgICAgYWRkQ2xhc3M6ICgpID0+IHt9LFxuICAgICAgcmVtb3ZlQ2xhc3M6ICgpID0+IHt9LFxuICAgICAgaGFzQ2xhc3M6ICgpID0+IHt9LFxuICAgICAgYWRkQ2xhc3NUb0xlYWRpbmdJY29uOiAoKSA9PiB7fSxcbiAgICAgIHJlbW92ZUNsYXNzRnJvbUxlYWRpbmdJY29uOiAoKSA9PiB7fSxcbiAgICAgIGV2ZW50VGFyZ2V0SGFzQ2xhc3M6ICgpID0+IHt9LFxuICAgICAgcmVnaXN0ZXJFdmVudEhhbmRsZXI6ICgpID0+IHt9LFxuICAgICAgZGVyZWdpc3RlckV2ZW50SGFuZGxlcjogKCkgPT4ge30sXG4gICAgICByZWdpc3RlclRyYWlsaW5nSWNvbkludGVyYWN0aW9uSGFuZGxlcjogKCkgPT4ge30sXG4gICAgICBkZXJlZ2lzdGVyVHJhaWxpbmdJY29uSW50ZXJhY3Rpb25IYW5kbGVyOiAoKSA9PiB7fSxcbiAgICAgIG5vdGlmeUludGVyYWN0aW9uOiAoKSA9PiB7fSxcbiAgICAgIG5vdGlmeVRyYWlsaW5nSWNvbkludGVyYWN0aW9uOiAoKSA9PiB7fSxcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0geyFNRENDaGlwQWRhcHRlcn0gYWRhcHRlclxuICAgKi9cbiAgY29uc3RydWN0b3IoYWRhcHRlcikge1xuICAgIHN1cGVyKE9iamVjdC5hc3NpZ24oTURDQ2hpcEZvdW5kYXRpb24uZGVmYXVsdEFkYXB0ZXIsIGFkYXB0ZXIpKTtcblxuICAgIC8qKiBAcHJpdmF0ZSB7ZnVuY3Rpb24oIUV2ZW50KTogdW5kZWZpbmVkfSAqL1xuICAgIHRoaXMuaW50ZXJhY3Rpb25IYW5kbGVyXyA9IChldnQpID0+IHRoaXMuaGFuZGxlSW50ZXJhY3Rpb25fKGV2dCk7XG4gICAgLyoqIEBwcml2YXRlIHtmdW5jdGlvbighRXZlbnQpOiB1bmRlZmluZWR9ICovXG4gICAgdGhpcy50cmFuc2l0aW9uRW5kSGFuZGxlcl8gPSAoZXZ0KSA9PiB0aGlzLmhhbmRsZVRyYW5zaXRpb25FbmRfKGV2dCk7XG4gICAgLyoqIEBwcml2YXRlIHtmdW5jdGlvbighRXZlbnQpOiB1bmRlZmluZWR9ICovXG4gICAgdGhpcy50cmFpbGluZ0ljb25JbnRlcmFjdGlvbkhhbmRsZXJfID0gKGV2dCkgPT4gdGhpcy5oYW5kbGVUcmFpbGluZ0ljb25JbnRlcmFjdGlvbl8oZXZ0KTtcbiAgfVxuXG4gIGluaXQoKSB7XG4gICAgWydjbGljaycsICdrZXlkb3duJ10uZm9yRWFjaCgoZXZ0VHlwZSkgPT4ge1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlckV2ZW50SGFuZGxlcihldnRUeXBlLCB0aGlzLmludGVyYWN0aW9uSGFuZGxlcl8pO1xuICAgIH0pO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJFdmVudEhhbmRsZXIoJ3RyYW5zaXRpb25lbmQnLCB0aGlzLnRyYW5zaXRpb25FbmRIYW5kbGVyXyk7XG4gICAgWydjbGljaycsICdrZXlkb3duJywgJ3RvdWNoc3RhcnQnLCAncG9pbnRlcmRvd24nLCAnbW91c2Vkb3duJ10uZm9yRWFjaCgoZXZ0VHlwZSkgPT4ge1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlclRyYWlsaW5nSWNvbkludGVyYWN0aW9uSGFuZGxlcihldnRUeXBlLCB0aGlzLnRyYWlsaW5nSWNvbkludGVyYWN0aW9uSGFuZGxlcl8pO1xuICAgIH0pO1xuICB9XG5cbiAgZGVzdHJveSgpIHtcbiAgICBbJ2NsaWNrJywgJ2tleWRvd24nXS5mb3JFYWNoKChldnRUeXBlKSA9PiB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJFdmVudEhhbmRsZXIoZXZ0VHlwZSwgdGhpcy5pbnRlcmFjdGlvbkhhbmRsZXJfKTtcbiAgICB9KTtcbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJFdmVudEhhbmRsZXIoJ3RyYW5zaXRpb25lbmQnLCB0aGlzLnRyYW5zaXRpb25FbmRIYW5kbGVyXyk7XG4gICAgWydjbGljaycsICdrZXlkb3duJywgJ3RvdWNoc3RhcnQnLCAncG9pbnRlcmRvd24nLCAnbW91c2Vkb3duJ10uZm9yRWFjaCgoZXZ0VHlwZSkgPT4ge1xuICAgICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVyVHJhaWxpbmdJY29uSW50ZXJhY3Rpb25IYW5kbGVyKGV2dFR5cGUsIHRoaXMudHJhaWxpbmdJY29uSW50ZXJhY3Rpb25IYW5kbGVyXyk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogVG9nZ2xlcyB0aGUgc2VsZWN0ZWQgY2xhc3Mgb24gdGhlIGNoaXAgZWxlbWVudC5cbiAgICovXG4gIHRvZ2dsZVNlbGVjdGVkKCkge1xuICAgIGlmICh0aGlzLmFkYXB0ZXJfLmhhc0NsYXNzKGNzc0NsYXNzZXMuU0VMRUNURUQpKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUNsYXNzKGNzc0NsYXNzZXMuU0VMRUNURUQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmFkZENsYXNzKGNzc0NsYXNzZXMuU0VMRUNURUQpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBIYW5kbGVzIGFuIGludGVyYWN0aW9uIGV2ZW50IG9uIHRoZSByb290IGVsZW1lbnQuXG4gICAqIEBwYXJhbSB7IUV2ZW50fSBldnRcbiAgICovXG4gIGhhbmRsZUludGVyYWN0aW9uXyhldnQpIHtcbiAgICBpZiAoZXZ0LnR5cGUgPT09ICdjbGljaycgfHwgZXZ0LmtleSA9PT0gJ0VudGVyJyB8fCBldnQua2V5Q29kZSA9PT0gMTMpIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8ubm90aWZ5SW50ZXJhY3Rpb24oKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogSGFuZGxlcyBhIHRyYW5zaXRpb24gZW5kIGV2ZW50IG9uIHRoZSByb290IGVsZW1lbnQuXG4gICAqIFRoaXMgaXMgYSBwcm94eSBmb3IgaGFuZGxpbmcgYSB0cmFuc2l0aW9uIGVuZCBldmVudCBvbiB0aGUgbGVhZGluZyBpY29uIG9yIGNoZWNrbWFyayxcbiAgICogc2luY2UgdGhlIHRyYW5zaXRpb24gZW5kIGV2ZW50IGJ1YmJsZXMuXG4gICAqIEBwYXJhbSB7IUV2ZW50fSBldnRcbiAgICovXG4gIGhhbmRsZVRyYW5zaXRpb25FbmRfKGV2dCkge1xuICAgIGlmIChldnQucHJvcGVydHlOYW1lICE9PSAnb3BhY2l0eScpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKHRoaXMuYWRhcHRlcl8uZXZlbnRUYXJnZXRIYXNDbGFzcygvKiogQHR5cGUgeyFFdmVudFRhcmdldH0gKi8gKGV2dC50YXJnZXQpLCBjc3NDbGFzc2VzLkxFQURJTkdfSUNPTikgJiZcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5oYXNDbGFzcyhjc3NDbGFzc2VzLlNFTEVDVEVEKSkge1xuICAgICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzc1RvTGVhZGluZ0ljb24oY3NzQ2xhc3Nlcy5ISURERU5fTEVBRElOR19JQ09OKTtcbiAgICB9IGVsc2UgaWYgKHRoaXMuYWRhcHRlcl8uZXZlbnRUYXJnZXRIYXNDbGFzcygvKiogQHR5cGUgeyFFdmVudFRhcmdldH0gKi8gKGV2dC50YXJnZXQpLCBjc3NDbGFzc2VzLkNIRUNLTUFSSykgJiZcbiAgICAgICAgICAgICAgICF0aGlzLmFkYXB0ZXJfLmhhc0NsYXNzKGNzc0NsYXNzZXMuU0VMRUNURUQpKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUNsYXNzRnJvbUxlYWRpbmdJY29uKGNzc0NsYXNzZXMuSElEREVOX0xFQURJTkdfSUNPTik7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZXMgYW4gaW50ZXJhY3Rpb24gZXZlbnQgb24gdGhlIHRyYWlsaW5nIGljb24gZWxlbWVudC4gVGhpcyBpcyB1c2VkIHRvXG4gICAqIHByZXZlbnQgdGhlIHJpcHBsZSBmcm9tIGFjdGl2YXRpbmcgb24gaW50ZXJhY3Rpb24gd2l0aCB0aGUgdHJhaWxpbmcgaWNvbi5cbiAgICogQHBhcmFtIHshRXZlbnR9IGV2dFxuICAgKi9cbiAgaGFuZGxlVHJhaWxpbmdJY29uSW50ZXJhY3Rpb25fKGV2dCkge1xuICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBpZiAoZXZ0LnR5cGUgPT09ICdjbGljaycgfHwgZXZ0LmtleSA9PT0gJ0VudGVyJyB8fCBldnQua2V5Q29kZSA9PT0gMTMpIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8ubm90aWZ5VHJhaWxpbmdJY29uSW50ZXJhY3Rpb24oKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTURDQ2hpcEZvdW5kYXRpb247XG4iLCI8dGVtcGxhdGU+XG48ZGl2IDpjbGFzcz1cImNsYXNzZXNcIiA6c3R5bGU9XCJzdHlsZXNcIiB0YWJpbmRleD1cIjBcIiA+XG4gIDxpIHJlZj1cImxlYWRpbmdJY29uXCIgY2xhc3M9XCJtZGMtY2hpcF9faWNvbiBtZGMtY2hpcF9faWNvbi0tbGVhZGluZ1wiIFxuICAgIDpjbGFzcz1cImxlYWRpbmdDbGFzc2VzXCIgdi1pZj1cImhhdmVsZWFkaW5nSWNvblwiXG4gID57e2xlYWRpbmdJY29ufX08L2k+XG4gIDxkaXYgY2xhc3M9XCJtZGMtY2hpcF9fY2hlY2ttYXJrXCIgdi1pZj1cImlzRmlsdGVyXCI+XG4gICAgPHN2ZyBjbGFzcz1cIm1kYy1jaGlwX19jaGVja21hcmstc3ZnXCIgdmlld0JveD1cIi0yIC0zIDMwIDMwXCI+XG4gICAgICA8cGF0aCBjbGFzcz1cIm1kYy1jaGlwX19jaGVja21hcmstcGF0aFwiIGZpbGw9XCJub25lXCIgc3Ryb2tlPVwiYmxhY2tcIlxuICAgICAgICAgICAgZD1cIk0xLjczLDEyLjkxIDguMSwxOS4yOCAyMi43OSw0LjU5XCIvPlxuICAgIDwvc3ZnPlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cIm1kYy1jaGlwX190ZXh0XCI+XG4gICAgPHNsb3Q+PC9zbG90PlxuICA8L2Rpdj5cbiAgPGkgcmVmPVwidHJhaWxpbmdJY29uXCIgY2xhc3M9XCJtZGMtY2hpcF9faWNvbiBtZGMtY2hpcF9faWNvbi0tdHJhaWxpbmdcIiB0YWJpbmRleD1cIjBcIiByb2xlPVwiYnV0dG9uXCIgXG4gICAgOmNsYXNzPVwidHJhaWxpbmdDbGFzc2VzXCIgdi1pZj1cImhhdmV0cmFpbGluZ0ljb25cIlxuICA+e3t0cmFpbGluZ0ljb259fTwvaT5cbjwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBNRENDaGlwRm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvY2hpcHMvY2hpcC9mb3VuZGF0aW9uJztcbmltcG9ydCB7IEN1c3RvbUxpbmtNaXhpbiwgRGlzcGF0Y2hFdmVudE1peGluLCBlbWl0Q3VzdG9tRXZlbnQgfSBmcm9tICcuLi9iYXNlJztcbmltcG9ydCB7IFJpcHBsZUJhc2UgfSBmcm9tICcuLi9yaXBwbGUnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtY2hpcCcsXG4gIG1peGluczogW0N1c3RvbUxpbmtNaXhpbiwgRGlzcGF0Y2hFdmVudE1peGluXSxcbiAgcHJvcHM6IHtcbiAgICBsZWFkaW5nSWNvbjogW1N0cmluZ10sXG4gICAgdHJhaWxpbmdJY29uOiBbU3RyaW5nXSxcbiAgICBsZWFkaW5nSWNvbkNsYXNzZXM6IFtPYmplY3RdLFxuICAgIHRyYWlsaW5nSWNvbkNsYXNzZXM6IFtPYmplY3RdLFxuICB9LFxuICBpbmplY3Q6IFsnbWRjQ2hpcFNldCddLFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjbGFzc2VzOiB7XG4gICAgICAgICdtZGMtY2hpcCc6IHRydWUsXG4gICAgICB9LFxuICAgICAgc3R5bGVzOiB7fSxcbiAgICB9O1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgdG9nZ2xlU2VsZWN0ZWQoKSB7XG4gICAgICB0aGlzLmZvdW5kYXRpb24udG9nZ2xlU2VsZWN0ZWQoKTtcbiAgICB9LFxuICB9LFxuICBtb3VudGVkKCkge1xuICAgIHRoaXMuZm91bmRhdGlvbiA9IG5ldyBNRENDaGlwRm91bmRhdGlvbih7XG4gICAgICBhZGRDbGFzczogY2xhc3NOYW1lID0+IHRoaXMuJHNldCh0aGlzLmNsYXNzZXMsIGNsYXNzTmFtZSwgdHJ1ZSksXG4gICAgICByZW1vdmVDbGFzczogY2xhc3NOYW1lID0+IHRoaXMuJGRlbGV0ZSh0aGlzLmNsYXNzZXMsIGNsYXNzTmFtZSksXG4gICAgICBoYXNDbGFzczogY2xhc3NOYW1lID0+IHRoaXMuJGVsLmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpLFxuICAgICAgYWRkQ2xhc3NUb0xlYWRpbmdJY29uOiBjbGFzc05hbWUgPT4ge1xuICAgICAgICBpZiAodGhpcy5oYXZlbGVhZGluZ0ljb24pIHtcbiAgICAgICAgICB0aGlzLiRyZWZzLmxlYWRpbmdJY29uLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHJlbW92ZUNsYXNzRnJvbUxlYWRpbmdJY29uOiBjbGFzc05hbWUgPT4ge1xuICAgICAgICBpZiAodGhpcy5oYXZlbGVhZGluZ0ljb24pIHtcbiAgICAgICAgICB0aGlzLiRyZWZzLmxlYWRpbmdJY29uLmNsYXNzTGlzdC5yZW1vdmUoY2xhc3NOYW1lKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGV2ZW50VGFyZ2V0SGFzQ2xhc3M6ICh0YXJnZXQsIGNsYXNzTmFtZSkgPT5cbiAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpLFxuICAgICAgcmVnaXN0ZXJFdmVudEhhbmRsZXI6IChldnRUeXBlLCBoYW5kbGVyKSA9PlxuICAgICAgICB0aGlzLiRlbC5hZGRFdmVudExpc3RlbmVyKGV2dFR5cGUsIGhhbmRsZXIpLFxuICAgICAgZGVyZWdpc3RlckV2ZW50SGFuZGxlcjogKGV2dFR5cGUsIGhhbmRsZXIpID0+XG4gICAgICAgIHRoaXMuJGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZ0VHlwZSwgaGFuZGxlciksXG4gICAgICBub3RpZnlJbnRlcmFjdGlvbjogKCkgPT4ge1xuICAgICAgICB0aGlzLmRpc3BhdGNoRXZlbnQoeyB0eXBlOiAnY2xpY2snIH0pO1xuICAgICAgICBlbWl0Q3VzdG9tRXZlbnQoXG4gICAgICAgICAgdGhpcy4kZWwsXG4gICAgICAgICAgTURDQ2hpcEZvdW5kYXRpb24uc3RyaW5ncy5JTlRFUkFDVElPTl9FVkVOVCxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBjaGlwOiB0aGlzLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgdHJ1ZSxcbiAgICAgICAgKTtcbiAgICAgIH0sXG4gICAgICBub3RpZnlUcmFpbGluZ0ljb25JbnRlcmFjdGlvbjogKCkgPT4ge1xuICAgICAgICB0aGlzLmRpc3BhdGNoRXZlbnQoeyB0eXBlOiAndHJhaWxpbmdJY29uQ2xpY2snIH0pO1xuICAgICAgICBlbWl0Q3VzdG9tRXZlbnQoXG4gICAgICAgICAgdGhpcy4kZWwsXG4gICAgICAgICAgTURDQ2hpcEZvdW5kYXRpb24uc3RyaW5ncy5UUkFJTElOR19JQ09OX0lOVEVSQUNUSU9OX0VWRU5ULFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGNoaXA6IHRoaXMsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB0cnVlLFxuICAgICAgICApO1xuICAgICAgfSxcblxuICAgICAgcmVnaXN0ZXJUcmFpbGluZ0ljb25JbnRlcmFjdGlvbkhhbmRsZXI6IChldnRUeXBlLCBoYW5kbGVyKSA9PiB7XG4gICAgICAgIGlmICh0aGlzLiRyZWZzLnRyYWlsaW5nSWNvbikge1xuICAgICAgICAgIHRoaXMuJHJlZnMudHJhaWxpbmdJY29uLmFkZEV2ZW50TGlzdGVuZXIoZXZ0VHlwZSwgaGFuZGxlcik7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBkZXJlZ2lzdGVyVHJhaWxpbmdJY29uSW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0VHlwZSwgaGFuZGxlcikgPT4ge1xuICAgICAgICBpZiAodGhpcy4kcmVmcy50cmFpbGluZ0ljb24pIHtcbiAgICAgICAgICB0aGlzLiRyZWZzLnRyYWlsaW5nSWNvbi5yZW1vdmVFdmVudExpc3RlbmVyKGV2dFR5cGUsIGhhbmRsZXIpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgdGhpcy5mb3VuZGF0aW9uLmluaXQoKTtcblxuICAgIHRoaXMucmlwcGxlID0gbmV3IFJpcHBsZUJhc2UodGhpcyk7XG4gICAgdGhpcy5yaXBwbGUuaW5pdCgpO1xuICB9LFxuICBjb21wdXRlZDoge1xuICAgIGlzRmlsdGVyKCkge1xuICAgICAgcmV0dXJuIHRoaXMubWRjQ2hpcFNldCAmJiB0aGlzLm1kY0NoaXBTZXQuZmlsdGVyO1xuICAgIH0sXG4gICAgaGF2ZWxlYWRpbmdJY29uKCkge1xuICAgICAgcmV0dXJuICEhdGhpcy5sZWFkaW5nSWNvbiB8fCB0aGlzLmxlYWRpbmdJY29uQ2xhc3NlcztcbiAgICB9LFxuICAgIGhhdmV0cmFpbGluZ0ljb24oKSB7XG4gICAgICByZXR1cm4gISF0aGlzLnRyYWlsaW5nSWNvbiB8fCB0aGlzLnRyYWlsaW5nSWNvbkNsYXNzZXM7XG4gICAgfSxcbiAgICBsZWFkaW5nQ2xhc3NlcygpIHtcbiAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKFxuICAgICAgICB7fSxcbiAgICAgICAge1xuICAgICAgICAgICdtYXRlcmlhbC1pY29ucyc6ICEhdGhpcy5sZWFkaW5nSWNvbixcbiAgICAgICAgfSxcbiAgICAgICAgdGhpcy5sZWFkaW5nSWNvbkNsYXNzZXMsXG4gICAgICApO1xuICAgIH0sXG4gICAgdHJhaWxpbmdDbGFzc2VzKCkge1xuICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oXG4gICAgICAgIHt9LFxuICAgICAgICB7XG4gICAgICAgICAgJ21hdGVyaWFsLWljb25zJzogISF0aGlzLnRyYWlsaW5nSWNvbixcbiAgICAgICAgfSxcbiAgICAgICAgdGhpcy50cmFpbGluZ0ljb25DbGFzc2VzLFxuICAgICAgKTtcbiAgICB9LFxuICB9LFxuICBiZWZvcmVEZXN0cm95KCkge1xuICAgIHRoaXMucmlwcGxlLmRlc3Ryb3koKTtcbiAgICB0aGlzLmZvdW5kYXRpb24uZGVzdHJveSgpO1xuICB9LFxufTtcbjwvc2NyaXB0PlxuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qIGVzbGludCBuby11bnVzZWQtdmFyczogWzIsIHtcImFyZ3NcIjogXCJub25lXCJ9XSAqL1xuXG4vKipcbiAqIEFkYXB0ZXIgZm9yIE1EQyBDaGlwIFNldC5cbiAqXG4gKiBEZWZpbmVzIHRoZSBzaGFwZSBvZiB0aGUgYWRhcHRlciBleHBlY3RlZCBieSB0aGUgZm91bmRhdGlvbi4gSW1wbGVtZW50IHRoaXNcbiAqIGFkYXB0ZXIgdG8gaW50ZWdyYXRlIHRoZSBDaGlwIFNldCBpbnRvIHlvdXIgZnJhbWV3b3JrLiBTZWVcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRlcmlhbC1jb21wb25lbnRzL21hdGVyaWFsLWNvbXBvbmVudHMtd2ViL2Jsb2IvbWFzdGVyL2RvY3MvYXV0aG9yaW5nLWNvbXBvbmVudHMubWRcbiAqIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICpcbiAqIEByZWNvcmRcbiAqL1xuY2xhc3MgTURDQ2hpcFNldEFkYXB0ZXIge1xuICAvKipcbiAgICogUmV0dXJucyB0cnVlIGlmIHRoZSByb290IGVsZW1lbnQgY29udGFpbnMgdGhlIGdpdmVuIGNsYXNzIG5hbWUuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWVcbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICovXG4gIGhhc0NsYXNzKGNsYXNzTmFtZSkge31cblxuICAvKipcbiAgICogUmVnaXN0ZXJzIGFuIGV2ZW50IGhhbmRsZXIgb24gdGhlIHJvb3QgZWxlbWVudCBmb3IgYSBnaXZlbiBldmVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2dFR5cGVcbiAgICogQHBhcmFtIHtmdW5jdGlvbighRXZlbnQpOiB1bmRlZmluZWR9IGhhbmRsZXJcbiAgICovXG4gIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKGV2dFR5cGUsIGhhbmRsZXIpIHt9XG5cbiAgLyoqXG4gICAqIERlcmVnaXN0ZXJzIGFuIGV2ZW50IGhhbmRsZXIgb24gdGhlIHJvb3QgZWxlbWVudCBmb3IgYSBnaXZlbiBldmVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2dFR5cGVcbiAgICogQHBhcmFtIHtmdW5jdGlvbighRXZlbnQpOiB1bmRlZmluZWR9IGhhbmRsZXJcbiAgICovXG4gIGRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoZXZ0VHlwZSwgaGFuZGxlcikge31cbn1cblxuZXhwb3J0IGRlZmF1bHQgTURDQ2hpcFNldEFkYXB0ZXI7XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IE1EQ0NvbXBvbmVudCBmcm9tICdAbWF0ZXJpYWwvYmFzZS9jb21wb25lbnQnO1xuaW1wb3J0IHtNRENSaXBwbGV9IGZyb20gJ0BtYXRlcmlhbC9yaXBwbGUvaW5kZXgnO1xuXG5pbXBvcnQgTURDQ2hpcEFkYXB0ZXIgZnJvbSAnLi9hZGFwdGVyJztcbmltcG9ydCBNRENDaGlwRm91bmRhdGlvbiBmcm9tICcuL2ZvdW5kYXRpb24nO1xuaW1wb3J0IHtzdHJpbmdzfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbi8qKlxuICogQGV4dGVuZHMge01EQ0NvbXBvbmVudDwhTURDQ2hpcEZvdW5kYXRpb24+fVxuICogQGZpbmFsXG4gKi9cbmNsYXNzIE1EQ0NoaXAgZXh0ZW5kcyBNRENDb21wb25lbnQge1xuICAvKipcbiAgICogQHBhcmFtIHsuLi4/fSBhcmdzXG4gICAqL1xuICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgc3VwZXIoLi4uYXJncyk7XG5cbiAgICAvKiogQHByaXZhdGUgez9FbGVtZW50fSAqL1xuICAgIHRoaXMubGVhZGluZ0ljb25fID0gdGhpcy5yb290Xy5xdWVyeVNlbGVjdG9yKHN0cmluZ3MuTEVBRElOR19JQ09OX1NFTEVDVE9SKTtcbiAgICAvKiogQHByaXZhdGUgeyFNRENSaXBwbGV9ICovXG4gICAgdGhpcy5yaXBwbGVfID0gbmV3IE1EQ1JpcHBsZSh0aGlzLnJvb3RfKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0geyFFbGVtZW50fSByb290XG4gICAqIEByZXR1cm4geyFNRENDaGlwfVxuICAgKi9cbiAgc3RhdGljIGF0dGFjaFRvKHJvb3QpIHtcbiAgICByZXR1cm4gbmV3IE1EQ0NoaXAocm9vdCk7XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIHRoaXMucmlwcGxlXy5kZXN0cm95KCk7XG4gICAgc3VwZXIuZGVzdHJveSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIFRvZ2dsZXMgc2VsZWN0ZWQgc3RhdGUgb2YgdGhlIGNoaXAuXG4gICAqL1xuICB0b2dnbGVTZWxlY3RlZCgpIHtcbiAgICB0aGlzLmZvdW5kYXRpb25fLnRvZ2dsZVNlbGVjdGVkKCk7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7IU1EQ0NoaXBGb3VuZGF0aW9ufVxuICAgKi9cbiAgZ2V0RGVmYXVsdEZvdW5kYXRpb24oKSB7XG4gICAgcmV0dXJuIG5ldyBNRENDaGlwRm91bmRhdGlvbigvKiogQHR5cGUgeyFNRENDaGlwQWRhcHRlcn0gKi8gKE9iamVjdC5hc3NpZ24oe1xuICAgICAgYWRkQ2xhc3M6IChjbGFzc05hbWUpID0+IHRoaXMucm9vdF8uY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpLFxuICAgICAgcmVtb3ZlQ2xhc3M6IChjbGFzc05hbWUpID0+IHRoaXMucm9vdF8uY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpLFxuICAgICAgaGFzQ2xhc3M6IChjbGFzc05hbWUpID0+IHRoaXMucm9vdF8uY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzTmFtZSksXG4gICAgICBhZGRDbGFzc1RvTGVhZGluZ0ljb246IChjbGFzc05hbWUpID0+IHtcbiAgICAgICAgaWYgKHRoaXMubGVhZGluZ0ljb25fKSB7XG4gICAgICAgICAgdGhpcy5sZWFkaW5nSWNvbl8uY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgcmVtb3ZlQ2xhc3NGcm9tTGVhZGluZ0ljb246IChjbGFzc05hbWUpID0+IHtcbiAgICAgICAgaWYgKHRoaXMubGVhZGluZ0ljb25fKSB7XG4gICAgICAgICAgdGhpcy5sZWFkaW5nSWNvbl8uY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgZXZlbnRUYXJnZXRIYXNDbGFzczogKHRhcmdldCwgY2xhc3NOYW1lKSA9PiB0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzTmFtZSksXG4gICAgICByZWdpc3RlckV2ZW50SGFuZGxlcjogKGV2dFR5cGUsIGhhbmRsZXIpID0+IHRoaXMucm9vdF8uYWRkRXZlbnRMaXN0ZW5lcihldnRUeXBlLCBoYW5kbGVyKSxcbiAgICAgIGRlcmVnaXN0ZXJFdmVudEhhbmRsZXI6IChldnRUeXBlLCBoYW5kbGVyKSA9PiB0aGlzLnJvb3RfLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZ0VHlwZSwgaGFuZGxlciksXG4gICAgICByZWdpc3RlclRyYWlsaW5nSWNvbkludGVyYWN0aW9uSGFuZGxlcjogKGV2dFR5cGUsIGhhbmRsZXIpID0+IHtcbiAgICAgICAgY29uc3QgdHJhaWxpbmdJY29uRWwgPSB0aGlzLnJvb3RfLnF1ZXJ5U2VsZWN0b3Ioc3RyaW5ncy5UUkFJTElOR19JQ09OX1NFTEVDVE9SKTtcbiAgICAgICAgaWYgKHRyYWlsaW5nSWNvbkVsKSB7XG4gICAgICAgICAgdHJhaWxpbmdJY29uRWwuYWRkRXZlbnRMaXN0ZW5lcihldnRUeXBlLCBoYW5kbGVyKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGRlcmVnaXN0ZXJUcmFpbGluZ0ljb25JbnRlcmFjdGlvbkhhbmRsZXI6IChldnRUeXBlLCBoYW5kbGVyKSA9PiB7XG4gICAgICAgIGNvbnN0IHRyYWlsaW5nSWNvbkVsID0gdGhpcy5yb290Xy5xdWVyeVNlbGVjdG9yKHN0cmluZ3MuVFJBSUxJTkdfSUNPTl9TRUxFQ1RPUik7XG4gICAgICAgIGlmICh0cmFpbGluZ0ljb25FbCkge1xuICAgICAgICAgIHRyYWlsaW5nSWNvbkVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZ0VHlwZSwgaGFuZGxlcik7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBub3RpZnlJbnRlcmFjdGlvbjogKCkgPT4gdGhpcy5lbWl0KHN0cmluZ3MuSU5URVJBQ1RJT05fRVZFTlQsIHtjaGlwOiB0aGlzfSwgdHJ1ZSAvKiBzaG91bGRCdWJibGUgKi8pLFxuICAgICAgbm90aWZ5VHJhaWxpbmdJY29uSW50ZXJhY3Rpb246ICgpID0+IHRoaXMuZW1pdChcbiAgICAgICAgc3RyaW5ncy5UUkFJTElOR19JQ09OX0lOVEVSQUNUSU9OX0VWRU5ULCB7Y2hpcDogdGhpc30sIHRydWUgLyogc2hvdWxkQnViYmxlICovKSxcbiAgICB9KSkpO1xuICB9XG5cbiAgLyoqIEByZXR1cm4geyFNRENSaXBwbGV9ICovXG4gIGdldCByaXBwbGUoKSB7XG4gICAgcmV0dXJuIHRoaXMucmlwcGxlXztcbiAgfVxufVxuXG5leHBvcnQge01EQ0NoaXAsIE1EQ0NoaXBGb3VuZGF0aW9ufTtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKiogQGVudW0ge3N0cmluZ30gKi9cbmNvbnN0IHN0cmluZ3MgPSB7XG4gIENISVBfU0VMRUNUT1I6ICcubWRjLWNoaXAnLFxufTtcblxuLyoqIEBlbnVtIHtzdHJpbmd9ICovXG5jb25zdCBjc3NDbGFzc2VzID0ge1xuICBDSE9JQ0U6ICdtZGMtY2hpcC1zZXQtLWNob2ljZScsXG4gIEZJTFRFUjogJ21kYy1jaGlwLXNldC0tZmlsdGVyJyxcbn07XG5cbmV4cG9ydCB7c3RyaW5ncywgY3NzQ2xhc3Nlc307XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IE1EQ0ZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL2Jhc2UvZm91bmRhdGlvbic7XG5pbXBvcnQgTURDQ2hpcFNldEFkYXB0ZXIgZnJvbSAnLi9hZGFwdGVyJztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuaW1wb3J0IHtNRENDaGlwLCBNRENDaGlwRm91bmRhdGlvbn0gZnJvbSAnLi4vY2hpcC9pbmRleCc7XG5pbXBvcnQge3N0cmluZ3MsIGNzc0NsYXNzZXN9IGZyb20gJy4vY29uc3RhbnRzJztcblxuLyoqXG4gKiBAZXh0ZW5kcyB7TURDRm91bmRhdGlvbjwhTURDQ2hpcFNldEFkYXB0ZXI+fVxuICogQGZpbmFsXG4gKi9cbmNsYXNzIE1EQ0NoaXBTZXRGb3VuZGF0aW9uIGV4dGVuZHMgTURDRm91bmRhdGlvbiB7XG4gIC8qKiBAcmV0dXJuIGVudW0ge3N0cmluZ30gKi9cbiAgc3RhdGljIGdldCBzdHJpbmdzKCkge1xuICAgIHJldHVybiBzdHJpbmdzO1xuICB9XG5cbiAgLyoqIEByZXR1cm4gZW51bSB7c3RyaW5nfSAqL1xuICBzdGF0aWMgZ2V0IGNzc0NsYXNzZXMoKSB7XG4gICAgcmV0dXJuIGNzc0NsYXNzZXM7XG4gIH1cblxuICAvKipcbiAgICoge0BzZWUgTURDQ2hpcFNldEFkYXB0ZXJ9IGZvciB0eXBpbmcgaW5mb3JtYXRpb24gb24gcGFyYW1ldGVycyBhbmQgcmV0dXJuXG4gICAqIHR5cGVzLlxuICAgKiBAcmV0dXJuIHshTURDQ2hpcFNldEFkYXB0ZXJ9XG4gICAqL1xuICBzdGF0aWMgZ2V0IGRlZmF1bHRBZGFwdGVyKCkge1xuICAgIHJldHVybiAvKiogQHR5cGUgeyFNRENDaGlwU2V0QWRhcHRlcn0gKi8gKHtcbiAgICAgIGhhc0NsYXNzOiAoKSA9PiB7fSxcbiAgICAgIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6ICgpID0+IHt9LFxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7IU1EQ0NoaXBTZXRBZGFwdGVyfSBhZGFwdGVyXG4gICAqL1xuICBjb25zdHJ1Y3RvcihhZGFwdGVyKSB7XG4gICAgc3VwZXIoT2JqZWN0LmFzc2lnbihNRENDaGlwU2V0Rm91bmRhdGlvbi5kZWZhdWx0QWRhcHRlciwgYWRhcHRlcikpO1xuXG4gICAgLyoqXG4gICAgICogVGhlIHNlbGVjdGVkIGNoaXBzIGluIHRoZSBzZXQuIE9ubHkgdXNlZCBmb3IgY2hvaWNlIGNoaXAgc2V0IG9yIGZpbHRlciBjaGlwIHNldC5cbiAgICAgKiBAcHJpdmF0ZSB7IUFycmF5PCFNRENDaGlwPn1cbiAgICAgKi9cbiAgICB0aGlzLnNlbGVjdGVkQ2hpcHNfID0gW107XG5cbiAgICAvKiogQHByaXZhdGUge2Z1bmN0aW9uKCFFdmVudCk6IHVuZGVmaW5lZH0gKi9cbiAgICB0aGlzLmNoaXBJbnRlcmFjdGlvbkhhbmRsZXJfID0gKGV2dCkgPT4gdGhpcy5oYW5kbGVDaGlwSW50ZXJhY3Rpb25fKGV2dCk7XG4gIH1cblxuICBpbml0KCkge1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoXG4gICAgICBNRENDaGlwRm91bmRhdGlvbi5zdHJpbmdzLklOVEVSQUNUSU9OX0VWRU5ULCB0aGlzLmNoaXBJbnRlcmFjdGlvbkhhbmRsZXJfKTtcbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKFxuICAgICAgTURDQ2hpcEZvdW5kYXRpb24uc3RyaW5ncy5JTlRFUkFDVElPTl9FVkVOVCwgdGhpcy5jaGlwSW50ZXJhY3Rpb25IYW5kbGVyXyk7XG4gIH1cblxuICAvKipcbiAgICogSGFuZGxlcyBhIGNoaXAgaW50ZXJhY3Rpb24gZXZlbnRcbiAgICogQHBhcmFtIHshT2JqZWN0fSBldnRcbiAgICogQHByaXZhdGVcbiAgICovXG4gIGhhbmRsZUNoaXBJbnRlcmFjdGlvbl8oZXZ0KSB7XG4gICAgY29uc3Qge2NoaXB9ID0gZXZ0LmRldGFpbDtcbiAgICBpZiAodGhpcy5hZGFwdGVyXy5oYXNDbGFzcyhjc3NDbGFzc2VzLkNIT0lDRSkpIHtcbiAgICAgIGlmICh0aGlzLnNlbGVjdGVkQ2hpcHNfLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICB0aGlzLnNlbGVjdGVkQ2hpcHNfWzBdID0gY2hpcDtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5zZWxlY3RlZENoaXBzX1swXSAhPT0gY2hpcCkge1xuICAgICAgICB0aGlzLnNlbGVjdGVkQ2hpcHNfWzBdLnRvZ2dsZVNlbGVjdGVkKCk7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRDaGlwc19bMF0gPSBjaGlwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zZWxlY3RlZENoaXBzXyA9IFtdO1xuICAgICAgfVxuICAgICAgY2hpcC50b2dnbGVTZWxlY3RlZCgpO1xuICAgIH0gZWxzZSBpZiAodGhpcy5hZGFwdGVyXy5oYXNDbGFzcyhjc3NDbGFzc2VzLkZJTFRFUikpIHtcbiAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5zZWxlY3RlZENoaXBzXy5pbmRleE9mKGNoaXApO1xuICAgICAgaWYgKGluZGV4ID49IDApIHtcbiAgICAgICAgdGhpcy5zZWxlY3RlZENoaXBzXy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zZWxlY3RlZENoaXBzXy5wdXNoKGNoaXApO1xuICAgICAgfVxuICAgICAgY2hpcC50b2dnbGVTZWxlY3RlZCgpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBNRENDaGlwU2V0Rm91bmRhdGlvbjtcbiIsIjx0ZW1wbGF0ZT5cbiAgPGRpdiA6Y2xhc3M9XCJjbGFzc2VzXCI+XG4gICAgPHNsb3Q+PC9zbG90PlxuICA8L2Rpdj4gIFxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBNRENDaGlwU2V0Rm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvY2hpcHMvY2hpcC1zZXQvZm91bmRhdGlvbic7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy1jaGlwLXNldCcsXG4gIHByb3BzOiB7XG4gICAgY2hvaWNlOiBbQm9vbGVhbl0sXG4gICAgZmlsdGVyOiBbQm9vbGVhbl0sXG4gIH0sXG4gIHByb3ZpZGUoKSB7XG4gICAgcmV0dXJuIHsgbWRjQ2hpcFNldDogdGhpcyB9O1xuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjbGFzc2VzOiB7XG4gICAgICAgICdtZGMtY2hpcC1zZXQnOiB0cnVlLFxuICAgICAgICAnbWRjLWNoaXAtc2V0LS1jaG9pY2UnOiB0aGlzLmNob2ljZSxcbiAgICAgICAgJ21kYy1jaGlwLXNldC0tZmlsdGVyJzogdGhpcy5maWx0ZXIsXG4gICAgICB9LFxuICAgIH07XG4gIH0sXG4gIG1ldGhvZHM6IHt9LFxuICBtb3VudGVkKCkge1xuICAgIHRoaXMuZm91bmRhdGlvbiA9IG5ldyBNRENDaGlwU2V0Rm91bmRhdGlvbih7XG4gICAgICBoYXNDbGFzczogY2xhc3NOYW1lID0+IHRoaXMuJGVsLmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpLFxuICAgICAgcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6IChldnRUeXBlLCBoYW5kbGVyKSA9PiB7XG4gICAgICAgIHRoaXMuJGVsLmFkZEV2ZW50TGlzdGVuZXIoZXZ0VHlwZSwgaGFuZGxlcik7XG4gICAgICB9LFxuICAgICAgZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKGV2dFR5cGUsIGhhbmRsZXIpID0+IHtcbiAgICAgICAgdGhpcy4kZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldnRUeXBlLCBoYW5kbGVyKTtcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICB0aGlzLmZvdW5kYXRpb24uaW5pdCgpO1xuICB9LFxuICBiZWZvcmVEZXN0cm95KCkge1xuICAgIHRoaXMuZm91bmRhdGlvbi5kZXN0cm95KCk7XG4gIH0sXG59O1xuPC9zY3JpcHQ+XG4iLCJpbXBvcnQge0Jhc2VQbHVnaW59IGZyb20gJy4uL2Jhc2UnXG5pbXBvcnQgbWRjQ2hpcCBmcm9tICcuL21kYy1jaGlwLnZ1ZSdcbmltcG9ydCBtZGNDaGlwU2V0IGZyb20gJy4vbWRjLWNoaXAtc2V0LnZ1ZSdcblxuZXhwb3J0IHsgXG4gIG1kY0NoaXAsIFxuICBtZGNDaGlwU2V0IFxufVxuXG5leHBvcnQgZGVmYXVsdCBCYXNlUGx1Z2luKHtcbiAgbWRjQ2hpcCwgXG4gIG1kY0NoaXBTZXQgXG59KVxuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCBNRENGb3VuZGF0aW9uIGZyb20gJy4vZm91bmRhdGlvbic7XG5pbXBvcnQgTURDQ29tcG9uZW50IGZyb20gJy4vY29tcG9uZW50JztcblxuZXhwb3J0IHtNRENGb3VuZGF0aW9uLCBNRENDb21wb25lbnR9O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuZXhwb3J0IGNvbnN0IGNzc0NsYXNzZXMgPSB7XG4gIFJPT1Q6ICdtZGMtZGlhbG9nJyxcbiAgT1BFTjogJ21kYy1kaWFsb2ctLW9wZW4nLFxuICBBTklNQVRJTkc6ICdtZGMtZGlhbG9nLS1hbmltYXRpbmcnLFxuICBCQUNLRFJPUDogJ21kYy1kaWFsb2dfX2JhY2tkcm9wJyxcbiAgU0NST0xMX0xPQ0s6ICdtZGMtZGlhbG9nLXNjcm9sbC1sb2NrJyxcbiAgQUNDRVBUX0JUTjogJ21kYy1kaWFsb2dfX2Zvb3Rlcl9fYnV0dG9uLS1hY2NlcHQnLFxuICBDQU5DRUxfQlROOiAnbWRjLWRpYWxvZ19fZm9vdGVyX19idXR0b24tLWNhbmNlbCcsXG59O1xuXG5leHBvcnQgY29uc3Qgc3RyaW5ncyA9IHtcbiAgT1BFTl9ESUFMT0dfU0VMRUNUT1I6ICcubWRjLWRpYWxvZy0tb3BlbicsXG4gIERJQUxPR19TVVJGQUNFX1NFTEVDVE9SOiAnLm1kYy1kaWFsb2dfX3N1cmZhY2UnLFxuICBBQ0NFUFRfU0VMRUNUT1I6ICcubWRjLWRpYWxvZ19fZm9vdGVyX19idXR0b24tLWFjY2VwdCcsXG4gIEFDQ0VQVF9FVkVOVDogJ01EQ0RpYWxvZzphY2NlcHQnLFxuICBDQU5DRUxfRVZFTlQ6ICdNRENEaWFsb2c6Y2FuY2VsJyxcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQge01EQ0ZvdW5kYXRpb259IGZyb20gJ0BtYXRlcmlhbC9iYXNlL2luZGV4JztcbmltcG9ydCB7Y3NzQ2xhc3Nlcywgc3RyaW5nc30gZnJvbSAnLi9jb25zdGFudHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNRENEaWFsb2dGb3VuZGF0aW9uIGV4dGVuZHMgTURDRm91bmRhdGlvbiB7XG4gIHN0YXRpYyBnZXQgY3NzQ2xhc3NlcygpIHtcbiAgICByZXR1cm4gY3NzQ2xhc3NlcztcbiAgfVxuXG4gIHN0YXRpYyBnZXQgc3RyaW5ncygpIHtcbiAgICByZXR1cm4gc3RyaW5ncztcbiAgfVxuXG4gIHN0YXRpYyBnZXQgZGVmYXVsdEFkYXB0ZXIoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFkZENsYXNzOiAoLyogY2xhc3NOYW1lOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgcmVtb3ZlQ2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICBhZGRCb2R5Q2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICByZW1vdmVCb2R5Q2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICBldmVudFRhcmdldEhhc0NsYXNzOiAoLyogdGFyZ2V0OiBFdmVudFRhcmdldCwgY2xhc3NOYW1lOiBzdHJpbmcgKi8pID0+IC8qIGJvb2xlYW4gKi8gZmFsc2UsXG4gICAgICByZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKC8qIGV2dDogc3RyaW5nLCBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6ICgvKiBldnQ6IHN0cmluZywgaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICByZWdpc3RlclN1cmZhY2VJbnRlcmFjdGlvbkhhbmRsZXI6ICgvKiBldnQ6IHN0cmluZywgaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBkZXJlZ2lzdGVyU3VyZmFjZUludGVyYWN0aW9uSGFuZGxlcjogKC8qIGV2dDogc3RyaW5nLCBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIHJlZ2lzdGVyRG9jdW1lbnRLZXlkb3duSGFuZGxlcjogKC8qIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgZGVyZWdpc3RlckRvY3VtZW50S2V5ZG93bkhhbmRsZXI6ICgvKiBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIHJlZ2lzdGVyVHJhbnNpdGlvbkVuZEhhbmRsZXI6ICgvKiBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJUcmFuc2l0aW9uRW5kSGFuZGxlcjogKC8qIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgbm90aWZ5QWNjZXB0OiAoKSA9PiB7fSxcbiAgICAgIG5vdGlmeUNhbmNlbDogKCkgPT4ge30sXG4gICAgICB0cmFwRm9jdXNPblN1cmZhY2U6ICgpID0+IHt9LFxuICAgICAgdW50cmFwRm9jdXNPblN1cmZhY2U6ICgpID0+IHt9LFxuICAgICAgaXNEaWFsb2c6ICgvKiBlbDogRWxlbWVudCAqLykgPT4gLyogYm9vbGVhbiAqLyBmYWxzZSxcbiAgICAgIGxheW91dEZvb3RlclJpcHBsZXM6ICgpID0+IHt9LFxuICAgIH07XG4gIH1cblxuICBjb25zdHJ1Y3RvcihhZGFwdGVyKSB7XG4gICAgc3VwZXIoT2JqZWN0LmFzc2lnbihNRENEaWFsb2dGb3VuZGF0aW9uLmRlZmF1bHRBZGFwdGVyLCBhZGFwdGVyKSk7XG4gICAgdGhpcy5pc09wZW5fID0gZmFsc2U7XG4gICAgdGhpcy5jb21wb25lbnRDbGlja0hhbmRsZXJfID0gKGV2dCkgPT4ge1xuICAgICAgaWYgKHRoaXMuYWRhcHRlcl8uZXZlbnRUYXJnZXRIYXNDbGFzcyhldnQudGFyZ2V0LCBjc3NDbGFzc2VzLkJBQ0tEUk9QKSkge1xuICAgICAgICB0aGlzLmNhbmNlbCh0cnVlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHRoaXMuZGlhbG9nQ2xpY2tIYW5kbGVyXyA9IChldnQpID0+IHRoaXMuaGFuZGxlRGlhbG9nQ2xpY2tfKGV2dCk7XG4gICAgdGhpcy5kb2N1bWVudEtleWRvd25IYW5kbGVyXyA9IChldnQpID0+IHtcbiAgICAgIGlmIChldnQua2V5ICYmIGV2dC5rZXkgPT09ICdFc2NhcGUnIHx8IGV2dC5rZXlDb2RlID09PSAyNykge1xuICAgICAgICB0aGlzLmNhbmNlbCh0cnVlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHRoaXMudHJhbnNpdGlvbkVuZEhhbmRsZXJfID0gKGV2dCkgPT4gdGhpcy5oYW5kbGVUcmFuc2l0aW9uRW5kXyhldnQpO1xuICB9O1xuXG4gIGRlc3Ryb3koKSB7XG4gICAgLy8gRW5zdXJlIHRoYXQgZGlhbG9nIGlzIGNsZWFuZWQgdXAgd2hlbiBkZXN0cm95ZWRcbiAgICBpZiAodGhpcy5pc09wZW5fKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJTdXJmYWNlSW50ZXJhY3Rpb25IYW5kbGVyKCdjbGljaycsIHRoaXMuZGlhbG9nQ2xpY2tIYW5kbGVyXyk7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJEb2N1bWVudEtleWRvd25IYW5kbGVyKHRoaXMuZG9jdW1lbnRLZXlkb3duSGFuZGxlcl8pO1xuICAgICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdjbGljaycsIHRoaXMuY29tcG9uZW50Q2xpY2tIYW5kbGVyXyk7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnVudHJhcEZvY3VzT25TdXJmYWNlKCk7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJUcmFuc2l0aW9uRW5kSGFuZGxlcih0aGlzLnRyYW5zaXRpb25FbmRIYW5kbGVyXyk7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUNsYXNzKE1EQ0RpYWxvZ0ZvdW5kYXRpb24uY3NzQ2xhc3Nlcy5BTklNQVRJTkcpO1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhNRENEaWFsb2dGb3VuZGF0aW9uLmNzc0NsYXNzZXMuT1BFTik7XG4gICAgICB0aGlzLmVuYWJsZVNjcm9sbF8oKTtcbiAgICB9XG4gIH1cblxuICBvcGVuKCkge1xuICAgIHRoaXMuaXNPcGVuXyA9IHRydWU7XG4gICAgdGhpcy5kaXNhYmxlU2Nyb2xsXygpO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJEb2N1bWVudEtleWRvd25IYW5kbGVyKHRoaXMuZG9jdW1lbnRLZXlkb3duSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJTdXJmYWNlSW50ZXJhY3Rpb25IYW5kbGVyKCdjbGljaycsIHRoaXMuZGlhbG9nQ2xpY2tIYW5kbGVyXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcignY2xpY2snLCB0aGlzLmNvbXBvbmVudENsaWNrSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJUcmFuc2l0aW9uRW5kSGFuZGxlcih0aGlzLnRyYW5zaXRpb25FbmRIYW5kbGVyXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyhNRENEaWFsb2dGb3VuZGF0aW9uLmNzc0NsYXNzZXMuQU5JTUFUSU5HKTtcbiAgICB0aGlzLmFkYXB0ZXJfLmFkZENsYXNzKE1EQ0RpYWxvZ0ZvdW5kYXRpb24uY3NzQ2xhc3Nlcy5PUEVOKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuaXNPcGVuXyA9IGZhbHNlO1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlclN1cmZhY2VJbnRlcmFjdGlvbkhhbmRsZXIoJ2NsaWNrJywgdGhpcy5kaWFsb2dDbGlja0hhbmRsZXJfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJEb2N1bWVudEtleWRvd25IYW5kbGVyKHRoaXMuZG9jdW1lbnRLZXlkb3duSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcignY2xpY2snLCB0aGlzLmNvbXBvbmVudENsaWNrSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8udW50cmFwRm9jdXNPblN1cmZhY2UoKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVyVHJhbnNpdGlvbkVuZEhhbmRsZXIodGhpcy50cmFuc2l0aW9uRW5kSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoTURDRGlhbG9nRm91bmRhdGlvbi5jc3NDbGFzc2VzLkFOSU1BVElORyk7XG4gICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhNRENEaWFsb2dGb3VuZGF0aW9uLmNzc0NsYXNzZXMuT1BFTik7XG4gIH1cblxuICBpc09wZW4oKSB7XG4gICAgcmV0dXJuIHRoaXMuaXNPcGVuXztcbiAgfVxuXG4gIGFjY2VwdChzaG91bGROb3RpZnkpIHtcbiAgICBpZiAoc2hvdWxkTm90aWZ5KSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLm5vdGlmeUFjY2VwdCgpO1xuICAgIH1cblxuICAgIHRoaXMuY2xvc2UoKTtcbiAgfVxuXG4gIGNhbmNlbChzaG91bGROb3RpZnkpIHtcbiAgICBpZiAoc2hvdWxkTm90aWZ5KSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLm5vdGlmeUNhbmNlbCgpO1xuICAgIH1cblxuICAgIHRoaXMuY2xvc2UoKTtcbiAgfVxuXG4gIGhhbmRsZURpYWxvZ0NsaWNrXyhldnQpIHtcbiAgICBjb25zdCB7dGFyZ2V0fSA9IGV2dDtcbiAgICBpZiAodGhpcy5hZGFwdGVyXy5ldmVudFRhcmdldEhhc0NsYXNzKHRhcmdldCwgY3NzQ2xhc3Nlcy5BQ0NFUFRfQlROKSkge1xuICAgICAgdGhpcy5hY2NlcHQodHJ1ZSk7XG4gICAgfSBlbHNlIGlmICh0aGlzLmFkYXB0ZXJfLmV2ZW50VGFyZ2V0SGFzQ2xhc3ModGFyZ2V0LCBjc3NDbGFzc2VzLkNBTkNFTF9CVE4pKSB7XG4gICAgICB0aGlzLmNhbmNlbCh0cnVlKTtcbiAgICB9XG4gIH1cblxuICBoYW5kbGVUcmFuc2l0aW9uRW5kXyhldnQpIHtcbiAgICBpZiAodGhpcy5hZGFwdGVyXy5pc0RpYWxvZyhldnQudGFyZ2V0KSkge1xuICAgICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVyVHJhbnNpdGlvbkVuZEhhbmRsZXIodGhpcy50cmFuc2l0aW9uRW5kSGFuZGxlcl8pO1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhNRENEaWFsb2dGb3VuZGF0aW9uLmNzc0NsYXNzZXMuQU5JTUFUSU5HKTtcbiAgICAgIGlmICh0aGlzLmlzT3Blbl8pIHtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy50cmFwRm9jdXNPblN1cmZhY2UoKTtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5sYXlvdXRGb290ZXJSaXBwbGVzKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmVuYWJsZVNjcm9sbF8oKTtcbiAgICAgIH07XG4gICAgfTtcbiAgfTtcblxuICBkaXNhYmxlU2Nyb2xsXygpIHtcbiAgICB0aGlzLmFkYXB0ZXJfLmFkZEJvZHlDbGFzcyhjc3NDbGFzc2VzLlNDUk9MTF9MT0NLKTtcbiAgfVxuXG4gIGVuYWJsZVNjcm9sbF8oKSB7XG4gICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVCb2R5Q2xhc3MoY3NzQ2xhc3Nlcy5TQ1JPTExfTE9DSyk7XG4gIH1cbn1cbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZWwsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgdmFyIGVsZW1lbnREb2N1bWVudCA9IGVsLm93bmVyRG9jdW1lbnQgfHwgZWw7XG4gIHZhciBiYXNpY1RhYmJhYmxlcyA9IFtdO1xuICB2YXIgb3JkZXJlZFRhYmJhYmxlcyA9IFtdO1xuXG4gIC8vIEEgbm9kZSBpcyBcImF2YWlsYWJsZVwiIGlmXG4gIC8vIC0gaXQncyBjb21wdXRlZCBzdHlsZVxuICB2YXIgaXNVbmF2YWlsYWJsZSA9IGNyZWF0ZUlzVW5hdmFpbGFibGUoZWxlbWVudERvY3VtZW50KTtcblxuICB2YXIgY2FuZGlkYXRlU2VsZWN0b3JzID0gW1xuICAgICdpbnB1dCcsXG4gICAgJ3NlbGVjdCcsXG4gICAgJ2FbaHJlZl0nLFxuICAgICd0ZXh0YXJlYScsXG4gICAgJ2J1dHRvbicsXG4gICAgJ1t0YWJpbmRleF0nLFxuICBdO1xuXG4gIHZhciBjYW5kaWRhdGVzID0gZWwucXVlcnlTZWxlY3RvckFsbChjYW5kaWRhdGVTZWxlY3RvcnMuam9pbignLCcpKTtcblxuICBpZiAob3B0aW9ucy5pbmNsdWRlQ29udGFpbmVyKSB7XG4gICAgdmFyIG1hdGNoZXMgPSBFbGVtZW50LnByb3RvdHlwZS5tYXRjaGVzIHx8IEVsZW1lbnQucHJvdG90eXBlLm1zTWF0Y2hlc1NlbGVjdG9yIHx8IEVsZW1lbnQucHJvdG90eXBlLndlYmtpdE1hdGNoZXNTZWxlY3RvcjtcblxuICAgIGlmIChcbiAgICAgIGNhbmRpZGF0ZVNlbGVjdG9ycy5zb21lKGZ1bmN0aW9uKGNhbmRpZGF0ZVNlbGVjdG9yKSB7XG4gICAgICAgIHJldHVybiBtYXRjaGVzLmNhbGwoZWwsIGNhbmRpZGF0ZVNlbGVjdG9yKTtcbiAgICAgIH0pXG4gICAgKSB7XG4gICAgICBjYW5kaWRhdGVzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmFwcGx5KGNhbmRpZGF0ZXMpO1xuICAgICAgY2FuZGlkYXRlcy51bnNoaWZ0KGVsKTtcbiAgICB9XG4gIH1cblxuICB2YXIgY2FuZGlkYXRlLCBjYW5kaWRhdGVJbmRleDtcbiAgZm9yICh2YXIgaSA9IDAsIGwgPSBjYW5kaWRhdGVzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGNhbmRpZGF0ZSA9IGNhbmRpZGF0ZXNbaV07XG4gICAgY2FuZGlkYXRlSW5kZXggPSBwYXJzZUludChjYW5kaWRhdGUuZ2V0QXR0cmlidXRlKCd0YWJpbmRleCcpLCAxMCkgfHwgY2FuZGlkYXRlLnRhYkluZGV4O1xuXG4gICAgaWYgKFxuICAgICAgY2FuZGlkYXRlSW5kZXggPCAwXG4gICAgICB8fCAoY2FuZGlkYXRlLnRhZ05hbWUgPT09ICdJTlBVVCcgJiYgY2FuZGlkYXRlLnR5cGUgPT09ICdoaWRkZW4nKVxuICAgICAgfHwgY2FuZGlkYXRlLmRpc2FibGVkXG4gICAgICB8fCBpc1VuYXZhaWxhYmxlKGNhbmRpZGF0ZSwgZWxlbWVudERvY3VtZW50KVxuICAgICkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKGNhbmRpZGF0ZUluZGV4ID09PSAwKSB7XG4gICAgICBiYXNpY1RhYmJhYmxlcy5wdXNoKGNhbmRpZGF0ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG9yZGVyZWRUYWJiYWJsZXMucHVzaCh7XG4gICAgICAgIGluZGV4OiBpLFxuICAgICAgICB0YWJJbmRleDogY2FuZGlkYXRlSW5kZXgsXG4gICAgICAgIG5vZGU6IGNhbmRpZGF0ZSxcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHZhciB0YWJiYWJsZU5vZGVzID0gb3JkZXJlZFRhYmJhYmxlc1xuICAgIC5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgIHJldHVybiBhLnRhYkluZGV4ID09PSBiLnRhYkluZGV4ID8gYS5pbmRleCAtIGIuaW5kZXggOiBhLnRhYkluZGV4IC0gYi50YWJJbmRleDtcbiAgICB9KVxuICAgIC5tYXAoZnVuY3Rpb24oYSkge1xuICAgICAgcmV0dXJuIGEubm9kZVxuICAgIH0pO1xuXG4gIEFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KHRhYmJhYmxlTm9kZXMsIGJhc2ljVGFiYmFibGVzKTtcblxuICByZXR1cm4gdGFiYmFibGVOb2Rlcztcbn1cblxuZnVuY3Rpb24gY3JlYXRlSXNVbmF2YWlsYWJsZShlbGVtZW50RG9jdW1lbnQpIHtcbiAgLy8gTm9kZSBjYWNoZSBtdXN0IGJlIHJlZnJlc2hlZCBvbiBldmVyeSBjaGVjaywgaW4gY2FzZVxuICAvLyB0aGUgY29udGVudCBvZiB0aGUgZWxlbWVudCBoYXMgY2hhbmdlZFxuICB2YXIgaXNPZmZDYWNoZSA9IFtdO1xuXG4gIC8vIFwib2ZmXCIgbWVhbnMgYGRpc3BsYXk6IG5vbmU7YCwgYXMgb3Bwb3NlZCB0byBcImhpZGRlblwiLFxuICAvLyB3aGljaCBtZWFucyBgdmlzaWJpbGl0eTogaGlkZGVuO2AuIGdldENvbXB1dGVkU3R5bGVcbiAgLy8gYWNjdXJhdGVseSByZWZsZWN0cyB2aXNpYmxpdHkgaW4gY29udGV4dCBidXQgbm90XG4gIC8vIFwib2ZmXCIgc3RhdGUsIHNvIHdlIG5lZWQgdG8gcmVjdXJzaXZlbHkgY2hlY2sgcGFyZW50cy5cblxuICBmdW5jdGlvbiBpc09mZihub2RlLCBub2RlQ29tcHV0ZWRTdHlsZSkge1xuICAgIGlmIChub2RlID09PSBlbGVtZW50RG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KSByZXR1cm4gZmFsc2U7XG5cbiAgICAvLyBGaW5kIHRoZSBjYWNoZWQgbm9kZSAoQXJyYXkucHJvdG90eXBlLmZpbmQgbm90IGF2YWlsYWJsZSBpbiBJRTkpXG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IGlzT2ZmQ2FjaGUubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChpc09mZkNhY2hlW2ldWzBdID09PSBub2RlKSByZXR1cm4gaXNPZmZDYWNoZVtpXVsxXTtcbiAgICB9XG5cbiAgICBub2RlQ29tcHV0ZWRTdHlsZSA9IG5vZGVDb21wdXRlZFN0eWxlIHx8IGVsZW1lbnREb2N1bWVudC5kZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlKG5vZGUpO1xuXG4gICAgdmFyIHJlc3VsdCA9IGZhbHNlO1xuXG4gICAgaWYgKG5vZGVDb21wdXRlZFN0eWxlLmRpc3BsYXkgPT09ICdub25lJykge1xuICAgICAgcmVzdWx0ID0gdHJ1ZTtcbiAgICB9IGVsc2UgaWYgKG5vZGUucGFyZW50Tm9kZSkge1xuICAgICAgcmVzdWx0ID0gaXNPZmYobm9kZS5wYXJlbnROb2RlKTtcbiAgICB9XG5cbiAgICBpc09mZkNhY2hlLnB1c2goW25vZGUsIHJlc3VsdF0pO1xuXG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiBpc1VuYXZhaWxhYmxlKG5vZGUpIHtcbiAgICBpZiAobm9kZSA9PT0gZWxlbWVudERvY3VtZW50LmRvY3VtZW50RWxlbWVudCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgdmFyIGNvbXB1dGVkU3R5bGUgPSBlbGVtZW50RG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZShub2RlKTtcblxuICAgIGlmIChpc09mZihub2RlLCBjb21wdXRlZFN0eWxlKSkgcmV0dXJuIHRydWU7XG5cbiAgICByZXR1cm4gY29tcHV0ZWRTdHlsZS52aXNpYmlsaXR5ID09PSAnaGlkZGVuJztcbiAgfVxufVxuIiwidmFyIHRhYmJhYmxlID0gcmVxdWlyZSgndGFiYmFibGUnKTtcblxudmFyIGxpc3RlbmluZ0ZvY3VzVHJhcCA9IG51bGw7XG5cbmZ1bmN0aW9uIGZvY3VzVHJhcChlbGVtZW50LCB1c2VyT3B0aW9ucykge1xuICB2YXIgdGFiYmFibGVOb2RlcyA9IFtdO1xuICB2YXIgZmlyc3RUYWJiYWJsZU5vZGUgPSBudWxsO1xuICB2YXIgbGFzdFRhYmJhYmxlTm9kZSA9IG51bGw7XG4gIHZhciBub2RlRm9jdXNlZEJlZm9yZUFjdGl2YXRpb24gPSBudWxsO1xuICB2YXIgYWN0aXZlID0gZmFsc2U7XG4gIHZhciBwYXVzZWQgPSBmYWxzZTtcbiAgdmFyIHRhYkV2ZW50ID0gbnVsbDtcblxuICB2YXIgY29udGFpbmVyID0gKHR5cGVvZiBlbGVtZW50ID09PSAnc3RyaW5nJylcbiAgICA/IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZWxlbWVudClcbiAgICA6IGVsZW1lbnQ7XG5cbiAgdmFyIGNvbmZpZyA9IHVzZXJPcHRpb25zIHx8IHt9O1xuICBjb25maWcucmV0dXJuRm9jdXNPbkRlYWN0aXZhdGUgPSAodXNlck9wdGlvbnMgJiYgdXNlck9wdGlvbnMucmV0dXJuRm9jdXNPbkRlYWN0aXZhdGUgIT09IHVuZGVmaW5lZClcbiAgICA/IHVzZXJPcHRpb25zLnJldHVybkZvY3VzT25EZWFjdGl2YXRlXG4gICAgOiB0cnVlO1xuICBjb25maWcuZXNjYXBlRGVhY3RpdmF0ZXMgPSAodXNlck9wdGlvbnMgJiYgdXNlck9wdGlvbnMuZXNjYXBlRGVhY3RpdmF0ZXMgIT09IHVuZGVmaW5lZClcbiAgICA/IHVzZXJPcHRpb25zLmVzY2FwZURlYWN0aXZhdGVzXG4gICAgOiB0cnVlO1xuXG4gIHZhciB0cmFwID0ge1xuICAgIGFjdGl2YXRlOiBhY3RpdmF0ZSxcbiAgICBkZWFjdGl2YXRlOiBkZWFjdGl2YXRlLFxuICAgIHBhdXNlOiBwYXVzZSxcbiAgICB1bnBhdXNlOiB1bnBhdXNlLFxuICB9O1xuXG4gIHJldHVybiB0cmFwO1xuXG4gIGZ1bmN0aW9uIGFjdGl2YXRlKGFjdGl2YXRlT3B0aW9ucykge1xuICAgIGlmIChhY3RpdmUpIHJldHVybjtcblxuICAgIHZhciBkZWZhdWx0ZWRBY3RpdmF0ZU9wdGlvbnMgPSB7XG4gICAgICBvbkFjdGl2YXRlOiAoYWN0aXZhdGVPcHRpb25zICYmIGFjdGl2YXRlT3B0aW9ucy5vbkFjdGl2YXRlICE9PSB1bmRlZmluZWQpXG4gICAgICAgID8gYWN0aXZhdGVPcHRpb25zLm9uQWN0aXZhdGVcbiAgICAgICAgOiBjb25maWcub25BY3RpdmF0ZSxcbiAgICB9O1xuXG4gICAgYWN0aXZlID0gdHJ1ZTtcbiAgICBwYXVzZWQgPSBmYWxzZTtcbiAgICBub2RlRm9jdXNlZEJlZm9yZUFjdGl2YXRpb24gPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuXG4gICAgaWYgKGRlZmF1bHRlZEFjdGl2YXRlT3B0aW9ucy5vbkFjdGl2YXRlKSB7XG4gICAgICBkZWZhdWx0ZWRBY3RpdmF0ZU9wdGlvbnMub25BY3RpdmF0ZSgpO1xuICAgIH1cblxuICAgIGFkZExpc3RlbmVycygpO1xuICAgIHJldHVybiB0cmFwO1xuICB9XG5cbiAgZnVuY3Rpb24gZGVhY3RpdmF0ZShkZWFjdGl2YXRlT3B0aW9ucykge1xuICAgIGlmICghYWN0aXZlKSByZXR1cm47XG5cbiAgICB2YXIgZGVmYXVsdGVkRGVhY3RpdmF0ZU9wdGlvbnMgPSB7XG4gICAgICByZXR1cm5Gb2N1czogKGRlYWN0aXZhdGVPcHRpb25zICYmIGRlYWN0aXZhdGVPcHRpb25zLnJldHVybkZvY3VzICE9PSB1bmRlZmluZWQpXG4gICAgICAgID8gZGVhY3RpdmF0ZU9wdGlvbnMucmV0dXJuRm9jdXNcbiAgICAgICAgOiBjb25maWcucmV0dXJuRm9jdXNPbkRlYWN0aXZhdGUsXG4gICAgICBvbkRlYWN0aXZhdGU6IChkZWFjdGl2YXRlT3B0aW9ucyAmJiBkZWFjdGl2YXRlT3B0aW9ucy5vbkRlYWN0aXZhdGUgIT09IHVuZGVmaW5lZClcbiAgICAgICAgPyBkZWFjdGl2YXRlT3B0aW9ucy5vbkRlYWN0aXZhdGVcbiAgICAgICAgOiBjb25maWcub25EZWFjdGl2YXRlLFxuICAgIH07XG5cbiAgICByZW1vdmVMaXN0ZW5lcnMoKTtcblxuICAgIGlmIChkZWZhdWx0ZWREZWFjdGl2YXRlT3B0aW9ucy5vbkRlYWN0aXZhdGUpIHtcbiAgICAgIGRlZmF1bHRlZERlYWN0aXZhdGVPcHRpb25zLm9uRGVhY3RpdmF0ZSgpO1xuICAgIH1cblxuICAgIGlmIChkZWZhdWx0ZWREZWFjdGl2YXRlT3B0aW9ucy5yZXR1cm5Gb2N1cykge1xuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRyeUZvY3VzKG5vZGVGb2N1c2VkQmVmb3JlQWN0aXZhdGlvbik7XG4gICAgICB9LCAwKTtcbiAgICB9XG5cbiAgICBhY3RpdmUgPSBmYWxzZTtcbiAgICBwYXVzZWQgPSBmYWxzZTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhdXNlKCkge1xuICAgIGlmIChwYXVzZWQgfHwgIWFjdGl2ZSkgcmV0dXJuO1xuICAgIHBhdXNlZCA9IHRydWU7XG4gICAgcmVtb3ZlTGlzdGVuZXJzKCk7XG4gIH1cblxuICBmdW5jdGlvbiB1bnBhdXNlKCkge1xuICAgIGlmICghcGF1c2VkIHx8ICFhY3RpdmUpIHJldHVybjtcbiAgICBwYXVzZWQgPSBmYWxzZTtcbiAgICBhZGRMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFkZExpc3RlbmVycygpIHtcbiAgICBpZiAoIWFjdGl2ZSkgcmV0dXJuO1xuXG4gICAgLy8gVGhlcmUgY2FuIGJlIG9ubHkgb25lIGxpc3RlbmluZyBmb2N1cyB0cmFwIGF0IGEgdGltZVxuICAgIGlmIChsaXN0ZW5pbmdGb2N1c1RyYXApIHtcbiAgICAgIGxpc3RlbmluZ0ZvY3VzVHJhcC5wYXVzZSgpO1xuICAgIH1cbiAgICBsaXN0ZW5pbmdGb2N1c1RyYXAgPSB0cmFwO1xuXG4gICAgdXBkYXRlVGFiYmFibGVOb2RlcygpO1xuICAgIHRyeUZvY3VzKGZpcnN0Rm9jdXNOb2RlKCkpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgY2hlY2tGb2N1cywgdHJ1ZSk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjaGVja0NsaWNrLCB0cnVlKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBjaGVja1BvaW50ZXJEb3duLCB0cnVlKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgY2hlY2tQb2ludGVyRG93biwgdHJ1ZSk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGNoZWNrS2V5LCB0cnVlKTtcblxuICAgIHJldHVybiB0cmFwO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVtb3ZlTGlzdGVuZXJzKCkge1xuICAgIGlmICghYWN0aXZlIHx8IGxpc3RlbmluZ0ZvY3VzVHJhcCAhPT0gdHJhcCkgcmV0dXJuO1xuXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignZm9jdXMnLCBjaGVja0ZvY3VzLCB0cnVlKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGNoZWNrQ2xpY2ssIHRydWUpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGNoZWNrUG9pbnRlckRvd24sIHRydWUpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBjaGVja1BvaW50ZXJEb3duLCB0cnVlKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgY2hlY2tLZXksIHRydWUpO1xuXG4gICAgbGlzdGVuaW5nRm9jdXNUcmFwID0gbnVsbDtcblxuICAgIHJldHVybiB0cmFwO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0Tm9kZUZvck9wdGlvbihvcHRpb25OYW1lKSB7XG4gICAgdmFyIG9wdGlvblZhbHVlID0gY29uZmlnW29wdGlvbk5hbWVdO1xuICAgIHZhciBub2RlID0gb3B0aW9uVmFsdWU7XG4gICAgaWYgKCFvcHRpb25WYWx1ZSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGlmICh0eXBlb2Ygb3B0aW9uVmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICBub2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihvcHRpb25WYWx1ZSk7XG4gICAgICBpZiAoIW5vZGUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdgJyArIG9wdGlvbk5hbWUgKyAnYCByZWZlcnMgdG8gbm8ga25vd24gbm9kZScpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAodHlwZW9mIG9wdGlvblZhbHVlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBub2RlID0gb3B0aW9uVmFsdWUoKTtcbiAgICAgIGlmICghbm9kZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2AnICsgb3B0aW9uTmFtZSArICdgIGRpZCBub3QgcmV0dXJuIGEgbm9kZScpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbm9kZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZpcnN0Rm9jdXNOb2RlKCkge1xuICAgIHZhciBub2RlO1xuICAgIGlmIChnZXROb2RlRm9yT3B0aW9uKCdpbml0aWFsRm9jdXMnKSAhPT0gbnVsbCkge1xuICAgICAgbm9kZSA9IGdldE5vZGVGb3JPcHRpb24oJ2luaXRpYWxGb2N1cycpO1xuICAgIH0gZWxzZSBpZiAoY29udGFpbmVyLmNvbnRhaW5zKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpKSB7XG4gICAgICBub2RlID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcbiAgICB9IGVsc2Uge1xuICAgICAgbm9kZSA9IHRhYmJhYmxlTm9kZXNbMF0gfHwgZ2V0Tm9kZUZvck9wdGlvbignZmFsbGJhY2tGb2N1cycpO1xuICAgIH1cblxuICAgIGlmICghbm9kZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgY2FuXFwndCBoYXZlIGEgZm9jdXMtdHJhcCB3aXRob3V0IGF0IGxlYXN0IG9uZSBmb2N1c2FibGUgZWxlbWVudCcpO1xuICAgIH1cblxuICAgIHJldHVybiBub2RlO1xuICB9XG5cbiAgLy8gVGhpcyBuZWVkcyB0byBiZSBkb25lIG9uIG1vdXNlZG93biBhbmQgdG91Y2hzdGFydCBpbnN0ZWFkIG9mIGNsaWNrXG4gIC8vIHNvIHRoYXQgaXQgcHJlY2VkZXMgdGhlIGZvY3VzIGV2ZW50XG4gIGZ1bmN0aW9uIGNoZWNrUG9pbnRlckRvd24oZSkge1xuICAgIGlmIChjb25maWcuY2xpY2tPdXRzaWRlRGVhY3RpdmF0ZXMgJiYgIWNvbnRhaW5lci5jb250YWlucyhlLnRhcmdldCkpIHtcbiAgICAgIGRlYWN0aXZhdGUoeyByZXR1cm5Gb2N1czogZmFsc2UgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY2hlY2tDbGljayhlKSB7XG4gICAgaWYgKGNvbmZpZy5jbGlja091dHNpZGVEZWFjdGl2YXRlcykgcmV0dXJuO1xuICAgIGlmIChjb250YWluZXIuY29udGFpbnMoZS50YXJnZXQpKSByZXR1cm47XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gIH1cblxuICBmdW5jdGlvbiBjaGVja0ZvY3VzKGUpIHtcbiAgICBpZiAoY29udGFpbmVyLmNvbnRhaW5zKGUudGFyZ2V0KSkgcmV0dXJuO1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgIC8vIENoZWNraW5nIGZvciBhIGJsdXIgbWV0aG9kIGhlcmUgcmVzb2x2ZXMgYSBGaXJlZm94IGlzc3VlICgjMTUpXG4gICAgaWYgKHR5cGVvZiBlLnRhcmdldC5ibHVyID09PSAnZnVuY3Rpb24nKSBlLnRhcmdldC5ibHVyKCk7XG5cbiAgICBpZiAodGFiRXZlbnQpIHtcbiAgICAgIHJlYWRqdXN0Rm9jdXModGFiRXZlbnQpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGNoZWNrS2V5KGUpIHtcbiAgICBpZiAoZS5rZXkgPT09ICdUYWInIHx8IGUua2V5Q29kZSA9PT0gOSkge1xuICAgICAgaGFuZGxlVGFiKGUpO1xuICAgIH1cblxuICAgIGlmIChjb25maWcuZXNjYXBlRGVhY3RpdmF0ZXMgIT09IGZhbHNlICYmIGlzRXNjYXBlRXZlbnQoZSkpIHtcbiAgICAgIGRlYWN0aXZhdGUoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVUYWIoZSkge1xuICAgIHVwZGF0ZVRhYmJhYmxlTm9kZXMoKTtcblxuICAgIGlmIChlLnRhcmdldC5oYXNBdHRyaWJ1dGUoJ3RhYmluZGV4JykgJiYgTnVtYmVyKGUudGFyZ2V0LmdldEF0dHJpYnV0ZSgndGFiaW5kZXgnKSkgPCAwKSB7XG4gICAgICByZXR1cm4gdGFiRXZlbnQgPSBlO1xuICAgIH1cblxuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB2YXIgY3VycmVudEZvY3VzSW5kZXggPSB0YWJiYWJsZU5vZGVzLmluZGV4T2YoZS50YXJnZXQpO1xuXG4gICAgaWYgKGUuc2hpZnRLZXkpIHtcbiAgICAgIGlmIChlLnRhcmdldCA9PT0gZmlyc3RUYWJiYWJsZU5vZGUgfHwgdGFiYmFibGVOb2Rlcy5pbmRleE9mKGUudGFyZ2V0KSA9PT0gLTEpIHtcbiAgICAgICAgcmV0dXJuIHRyeUZvY3VzKGxhc3RUYWJiYWJsZU5vZGUpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRyeUZvY3VzKHRhYmJhYmxlTm9kZXNbY3VycmVudEZvY3VzSW5kZXggLSAxXSk7XG4gICAgfVxuXG4gICAgaWYgKGUudGFyZ2V0ID09PSBsYXN0VGFiYmFibGVOb2RlKSByZXR1cm4gdHJ5Rm9jdXMoZmlyc3RUYWJiYWJsZU5vZGUpO1xuXG4gICAgdHJ5Rm9jdXModGFiYmFibGVOb2Rlc1tjdXJyZW50Rm9jdXNJbmRleCArIDFdKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZVRhYmJhYmxlTm9kZXMoKSB7XG4gICAgdGFiYmFibGVOb2RlcyA9IHRhYmJhYmxlKGNvbnRhaW5lcik7XG4gICAgZmlyc3RUYWJiYWJsZU5vZGUgPSB0YWJiYWJsZU5vZGVzWzBdO1xuICAgIGxhc3RUYWJiYWJsZU5vZGUgPSB0YWJiYWJsZU5vZGVzW3RhYmJhYmxlTm9kZXMubGVuZ3RoIC0gMV07XG4gIH1cblxuICBmdW5jdGlvbiByZWFkanVzdEZvY3VzKGUpIHtcbiAgICBpZiAoZS5zaGlmdEtleSkgcmV0dXJuIHRyeUZvY3VzKGxhc3RUYWJiYWJsZU5vZGUpO1xuXG4gICAgdHJ5Rm9jdXMoZmlyc3RUYWJiYWJsZU5vZGUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGlzRXNjYXBlRXZlbnQoZSkge1xuICByZXR1cm4gZS5rZXkgPT09ICdFc2NhcGUnIHx8IGUua2V5ID09PSAnRXNjJyB8fCBlLmtleUNvZGUgPT09IDI3O1xufVxuXG5mdW5jdGlvbiB0cnlGb2N1cyhub2RlKSB7XG4gIGlmICghbm9kZSB8fCAhbm9kZS5mb2N1cykgcmV0dXJuO1xuICBpZiAobm9kZSA9PT0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkgIHJldHVybjtcblxuICBub2RlLmZvY3VzKCk7XG4gIGlmIChub2RlLnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2lucHV0Jykge1xuICAgIG5vZGUuc2VsZWN0KCk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmb2N1c1RyYXA7XG4iLCIvKipcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlRm9jdXNUcmFwIGZyb20gJ2ZvY3VzLXRyYXAnO1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRm9jdXNUcmFwSW5zdGFuY2Uoc3VyZmFjZUVsLCBhY2NlcHRCdXR0b25FbCwgZm9jdXNUcmFwRmFjdG9yeSA9IGNyZWF0ZUZvY3VzVHJhcCkge1xuICByZXR1cm4gZm9jdXNUcmFwRmFjdG9yeShzdXJmYWNlRWwsIHtcbiAgICBpbml0aWFsRm9jdXM6IGFjY2VwdEJ1dHRvbkVsLFxuICAgIGNsaWNrT3V0c2lkZURlYWN0aXZhdGVzOiB0cnVlLFxuICB9KTtcbn1cbiIsIjx0ZW1wbGF0ZT5cbiAgPGFzaWRlIGNsYXNzPVwibWRjLWRpYWxvZ1wiIHJlZj1cInJvb3RcIiA6Y2xhc3M9XCJjbGFzc2VzXCIgOnN0eWxlPVwic3R5bGVzXCJcbiAgICByb2xlPVwiYWxlcnRkaWFsb2dcIlxuICAgIDphcmlhLWxhYmVsbGVkYnk9XCInbGFiZWwnICsgX3VpZFwiXG4gICAgOmFyaWEtZGVzY3JpYmVkYnk9XCInZGVzYycgKyBfdWlkXCJcbiAgPlxuICAgIDxkaXYgIHJlZj1cInN1cmZhY2VcIiBjbGFzcz1cIm1kYy1kaWFsb2dfX3N1cmZhY2VcIiA6Y2xhc3M9XCJzdXJmYWNlQ2xhc3Nlc1wiPlxuICAgICAgPGhlYWRlciBjbGFzcz1cIm1kYy1kaWFsb2dfX2hlYWRlclwiPlxuICAgICAgICA8aDIgOmlkPVwiJ2xhYmVsJyArIF91aWRcIiBjbGFzcz1cIm1kYy1kaWFsb2dfX2hlYWRlcl9fdGl0bGVcIj5cbiAgICAgICAgICB7eyB0aXRsZSB9fVxuICAgICAgICA8L2gyPlxuICAgICAgPC9oZWFkZXI+XG4gICAgICA8c2VjdGlvbiA6aWQ9XCInZGVzYycgKyBfdWlkXCJcbiAgICAgICAgY2xhc3M9XCJtZGMtZGlhbG9nX19ib2R5XCIgOmNsYXNzPVwiYm9keUNsYXNzZXNcIj5cbiAgICAgICAgPHNsb3QgLz5cbiAgICAgIDwvc2VjdGlvbj5cbiAgICAgIDxmb290ZXIgY2xhc3M9XCJtZGMtZGlhbG9nX19mb290ZXJcIj5cbiAgICAgICAgPG1kY0J1dHRvbiByZWY9XCJjYW5jZWxcIiB2LWlmPVwiY2FuY2VsXCJcbiAgICAgICAgICBjbGFzcz1cIm1kYy1kaWFsb2dfX2Zvb3Rlcl9fYnV0dG9uIG1kYy1kaWFsb2dfX2Zvb3Rlcl9fYnV0dG9uLS1jYW5jZWxcIlxuICAgICAgICAgIDpjbGFzcz1cInsnbWRjLWRpYWxvZ19fYWN0aW9uJzphY2NlbnR9XCJcbiAgICAgICAgICBAY2xpY2s9XCJvbkNhbmNlbFwiXG4gICAgICAgICAgPnt7IGNhbmNlbCB9fTwvbWRjQnV0dG9uPlxuICAgICAgICA8bWRjQnV0dG9uICByZWY9XCJhY2NlcHRcIlxuICAgICAgICAgIGNsYXNzPVwibWRjLWRpYWxvZ19fZm9vdGVyX19idXR0b24gbWRjLWRpYWxvZ19fZm9vdGVyX19idXR0b24tLWFjY2VwdFwiXG4gICAgICAgICAgOmNsYXNzPVwieydtZGMtZGlhbG9nX19hY3Rpb24nOmFjY2VudH1cIlxuICAgICAgICAgIDpkaXNhYmxlZD1cImFjY2VwdERpc2FibGVkXCJcbiAgICAgICAgICBAY2xpY2s9XCJvbkFjY2VwdFwiXG4gICAgICAgID57eyBhY2NlcHQgfX08L21kY0J1dHRvbj5cbiAgICAgIDwvZm9vdGVyPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJtZGMtZGlhbG9nX19iYWNrZHJvcFwiPjwvZGl2PlxuICA8L2FzaWRlPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBNRENEaWFsb2dGb3VuZGF0aW9uIGZyb20gJ0BtYXRlcmlhbC9kaWFsb2cvZm91bmRhdGlvbic7XG5pbXBvcnQgeyBjcmVhdGVGb2N1c1RyYXBJbnN0YW5jZSB9IGZyb20gJ0BtYXRlcmlhbC9kaWFsb2cvdXRpbCc7XG5pbXBvcnQgeyBtZGNCdXR0b24gfSBmcm9tICcuLi9idXR0b24nO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtZGlhbG9nJyxcbiAgcHJvcHM6IHtcbiAgICB0aXRsZTogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH0sXG4gICAgYWNjZXB0OiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJ09rJyB9LFxuICAgIGFjY2VwdERpc2FibGVkOiBCb29sZWFuLFxuICAgIGNhbmNlbDogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICdDYW5jZWwnIH0sXG4gICAgYWNjZW50OiBCb29sZWFuLFxuICAgIHNjcm9sbGFibGU6IEJvb2xlYW4sXG4gIH0sXG4gIGNvbXBvbmVudHM6IHtcbiAgICBtZGNCdXR0b246IG1kY0J1dHRvbixcbiAgfSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgY2xhc3Nlczoge1xuICAgICAgICAnbWRjLXRoZW1lLS1kYXJrJzogdGhpcy5kYXJrLFxuICAgICAgfSxcbiAgICAgIHN0eWxlczoge30sXG4gICAgICBzdXJmYWNlQ2xhc3Nlczoge30sXG4gICAgICBib2R5Q2xhc3Nlczoge1xuICAgICAgICAnbWRjLWRpYWxvZ19fYm9keS0tc2Nyb2xsYWJsZSc6IHRoaXMuc2Nyb2xsYWJsZSxcbiAgICAgIH0sXG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZCgpIHtcbiAgICB0aGlzLmZvY3VzVHJhcCA9IGNyZWF0ZUZvY3VzVHJhcEluc3RhbmNlKFxuICAgICAgdGhpcy4kcmVmcy5zdXJmYWNlLFxuICAgICAgdGhpcy4kcmVmcy5hY2NlcHQsXG4gICAgKTtcblxuICAgIHRoaXMuZm91bmRhdGlvbiA9IG5ldyBNRENEaWFsb2dGb3VuZGF0aW9uKHtcbiAgICAgIGFkZENsYXNzOiBjbGFzc05hbWUgPT4gdGhpcy4kc2V0KHRoaXMuY2xhc3NlcywgY2xhc3NOYW1lLCB0cnVlKSxcbiAgICAgIHJlbW92ZUNsYXNzOiBjbGFzc05hbWUgPT4gdGhpcy4kZGVsZXRlKHRoaXMuY2xhc3NlcywgY2xhc3NOYW1lKSxcbiAgICAgIGFkZEJvZHlDbGFzczogY2xhc3NOYW1lID0+IGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpLFxuICAgICAgcmVtb3ZlQm9keUNsYXNzOiBjbGFzc05hbWUgPT4gZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSksXG4gICAgICBldmVudFRhcmdldEhhc0NsYXNzOiAodGFyZ2V0LCBjbGFzc05hbWUpID0+XG4gICAgICAgIHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKSxcbiAgICAgIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0LCBoYW5kbGVyKSA9PlxuICAgICAgICB0aGlzLiRyZWZzLnJvb3QuYWRkRXZlbnRMaXN0ZW5lcihldnQsIGhhbmRsZXIpLFxuICAgICAgZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKGV2dCwgaGFuZGxlcikgPT5cbiAgICAgICAgdGhpcy4kcmVmcy5yb290LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZ0LCBoYW5kbGVyKSxcbiAgICAgIHJlZ2lzdGVyU3VyZmFjZUludGVyYWN0aW9uSGFuZGxlcjogKC8qZXZ0LCBoYW5kbGVyKi8pID0+IHtcbiAgICAgICAgLy8gVk1BX0hBQ0s6IGhhbmRsZSBidXR0b24gY2xpY2tzIG91cnNlbHZlc1xuICAgICAgICAvLyB0aGlzLiRyZWZzLnN1cmZhY2UuYWRkRXZlbnRMaXN0ZW5lcihldnQsIGhhbmRsZXIpXG4gICAgICB9LFxuICAgICAgZGVyZWdpc3RlclN1cmZhY2VJbnRlcmFjdGlvbkhhbmRsZXI6ICgvKmV2dCwgaGFuZGxlciovKSA9PiB7XG4gICAgICAgIC8vIFZNQV9IQUNLOiBoYW5kbGUgYnV0dG9uIGNsaWNrcyBvdXJzZWx2ZXNcbiAgICAgICAgLy8gdGhpcy4kcmVmcy5zdXJmYWNlLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZ0LCBoYW5kbGVyKVxuICAgICAgfSxcbiAgICAgIHJlZ2lzdGVyRG9jdW1lbnRLZXlkb3duSGFuZGxlcjogaGFuZGxlciA9PlxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgaGFuZGxlciksXG4gICAgICBkZXJlZ2lzdGVyRG9jdW1lbnRLZXlkb3duSGFuZGxlcjogaGFuZGxlciA9PlxuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgaGFuZGxlciksXG4gICAgICByZWdpc3RlclRyYW5zaXRpb25FbmRIYW5kbGVyOiBoYW5kbGVyID0+XG4gICAgICAgIHRoaXMuJHJlZnMuc3VyZmFjZS5hZGRFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgaGFuZGxlciksXG4gICAgICBkZXJlZ2lzdGVyVHJhbnNpdGlvbkVuZEhhbmRsZXI6IGhhbmRsZXIgPT5cbiAgICAgICAgdGhpcy4kcmVmcy5zdXJmYWNlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBoYW5kbGVyKSxcbiAgICAgIG5vdGlmeUFjY2VwdDogKCkgPT4gdGhpcy4kZW1pdCgnYWNjZXB0JyksXG4gICAgICBub3RpZnlDYW5jZWw6ICgpID0+IHRoaXMuJGVtaXQoJ2NhbmNlbCcpLFxuICAgICAgdHJhcEZvY3VzT25TdXJmYWNlOiAoKSA9PiB0aGlzLmZvY3VzVHJhcC5hY3RpdmF0ZSgpLFxuICAgICAgdW50cmFwRm9jdXNPblN1cmZhY2U6ICgpID0+IHRoaXMuZm9jdXNUcmFwLmRlYWN0aXZhdGUoKSxcbiAgICAgIGlzRGlhbG9nOiBlbCA9PiB0aGlzLiRyZWZzLnN1cmZhY2UgPT09IGVsLFxuICAgICAgbGF5b3V0Rm9vdGVyUmlwcGxlczogKCkgPT4ge1xuICAgICAgICB0aGlzLiRyZWZzLmFjY2VwdC5yaXBwbGUubGF5b3V0KCk7XG4gICAgICAgIHRoaXMuY2FuY2VsICYmIHRoaXMuJHJlZnMuY2FuY2VsLnJpcHBsZS5sYXlvdXQoKTtcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICB0aGlzLmZvdW5kYXRpb24uaW5pdCgpO1xuICB9LFxuICBiZWZvcmVEZXN0cm95KCkge1xuICAgIHRoaXMuZm91bmRhdGlvbi5kZXN0cm95KCk7XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBvbkNhbmNlbCgpIHtcbiAgICAgIHRoaXMuZm91bmRhdGlvbi5jYW5jZWwodHJ1ZSk7XG4gICAgfSxcbiAgICBvbkFjY2VwdCgpIHtcbiAgICAgIGlmICh0aGlzLiRsaXN0ZW5lcnNbJ3ZhbGlkYXRlJ10pIHtcbiAgICAgICAgdGhpcy4kZW1pdCgndmFsaWRhdGUnLCB7XG4gICAgICAgICAgYWNjZXB0OiAobm90aWZ5ID0gdHJ1ZSkgPT4gdGhpcy5mb3VuZGF0aW9uLmFjY2VwdChub3RpZnkpLFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZm91bmRhdGlvbi5hY2NlcHQodHJ1ZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBzaG93KCkge1xuICAgICAgdGhpcy5mb3VuZGF0aW9uLm9wZW4oKTtcbiAgICB9LFxuICAgIGNsb3NlKCkge1xuICAgICAgdGhpcy5mb3VuZGF0aW9uLmNsb3NlKCk7XG4gICAgfSxcbiAgfSxcbn07XG48L3NjcmlwdD5cbiIsImltcG9ydCB7QmFzZVBsdWdpbn0gZnJvbSAnLi4vYmFzZSdcbmltcG9ydCBtZGNEaWFsb2cgZnJvbSAnLi9tZGMtZGlhbG9nLnZ1ZSdcblxuZXhwb3J0IHtcbiAgbWRjRGlhbG9nXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJhc2VQbHVnaW4oe1xuICBtZGNEaWFsb2dcbn0pXG4iLCI8dGVtcGxhdGU+XG4gIDxuYXYgY2xhc3M9XCJtZGMtcGVybWFuZW50LWRyYXdlciBtZGMtZHJhd2VyLS1wZXJtYW5lbnQgbWRjLXR5cG9ncmFwaHlcIj5cbiAgICA8bmF2IGNsYXNzPVwibWRjLWRyYXdlcl9fY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzcz1cIm1kYy1kcmF3ZXJfX3Rvb2xiYXItc3BhY2VyXCIgXG4gICAgICAgIHYtaWY9XCJ0b29sYmFyU3BhY2VyXCI+PC9kaXY+XG4gICAgICA8c2xvdCAvPlxuICAgIDwvbmF2PlxuICA8L25hdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtcGVybWFuZW50LWRyYXdlcicsXG4gIHByb3BzOiB7XG4gICAgJ3Rvb2xiYXItc3BhY2VyJzogQm9vbGVhbixcbiAgfVxufVxuPC9zY3JpcHQ+XG4iLCIvKipcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5leHBvcnQgY29uc3QgRk9DVVNBQkxFX0VMRU1FTlRTID1cbiAgJ2FbaHJlZl0sIGFyZWFbaHJlZl0sIGlucHV0Om5vdChbZGlzYWJsZWRdKSwgc2VsZWN0Om5vdChbZGlzYWJsZWRdKSwgdGV4dGFyZWE6bm90KFtkaXNhYmxlZF0pLCAnICtcbiAgJ2J1dHRvbjpub3QoW2Rpc2FibGVkXSksIGlmcmFtZSwgb2JqZWN0LCBlbWJlZCwgW3RhYmluZGV4XSwgW2NvbnRlbnRlZGl0YWJsZV0nO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHtNRENGb3VuZGF0aW9ufSBmcm9tICdAbWF0ZXJpYWwvYmFzZS9pbmRleCc7XG5cbmV4cG9ydCBjbGFzcyBNRENTbGlkYWJsZURyYXdlckZvdW5kYXRpb24gZXh0ZW5kcyBNRENGb3VuZGF0aW9uIHtcbiAgc3RhdGljIGdldCBkZWZhdWx0QWRhcHRlcigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgYWRkQ2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICByZW1vdmVDbGFzczogKC8qIGNsYXNzTmFtZTogc3RyaW5nICovKSA9PiB7fSxcbiAgICAgIGhhc0NsYXNzOiAoLyogY2xhc3NOYW1lOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgaGFzTmVjZXNzYXJ5RG9tOiAoKSA9PiAvKiBib29sZWFuICovIGZhbHNlLFxuICAgICAgcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6ICgvKiBldnQ6IHN0cmluZywgaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBkZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoLyogZXZ0OiBzdHJpbmcsIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgcmVnaXN0ZXJEcmF3ZXJJbnRlcmFjdGlvbkhhbmRsZXI6ICgvKiBldnQ6IHN0cmluZywgaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBkZXJlZ2lzdGVyRHJhd2VySW50ZXJhY3Rpb25IYW5kbGVyOiAoLyogZXZ0OiBzdHJpbmcsIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgcmVnaXN0ZXJUcmFuc2l0aW9uRW5kSGFuZGxlcjogKC8qIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgZGVyZWdpc3RlclRyYW5zaXRpb25FbmRIYW5kbGVyOiAoLyogaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICByZWdpc3RlckRvY3VtZW50S2V5ZG93bkhhbmRsZXI6ICgvKiBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJEb2N1bWVudEtleWRvd25IYW5kbGVyOiAoLyogaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBzZXRUcmFuc2xhdGVYOiAoLyogdmFsdWU6IG51bWJlciB8IG51bGwgKi8pID0+IHt9LFxuICAgICAgZ2V0Rm9jdXNhYmxlRWxlbWVudHM6ICgpID0+IC8qIE5vZGVMaXN0ICovIHt9LFxuICAgICAgc2F2ZUVsZW1lbnRUYWJTdGF0ZTogKC8qIGVsOiBFbGVtZW50ICovKSA9PiB7fSxcbiAgICAgIHJlc3RvcmVFbGVtZW50VGFiU3RhdGU6ICgvKiBlbDogRWxlbWVudCAqLykgPT4ge30sXG4gICAgICBtYWtlRWxlbWVudFVudGFiYmFibGU6ICgvKiBlbDogRWxlbWVudCAqLykgPT4ge30sXG4gICAgICBub3RpZnlPcGVuOiAoKSA9PiB7fSxcbiAgICAgIG5vdGlmeUNsb3NlOiAoKSA9PiB7fSxcbiAgICAgIGlzUnRsOiAoKSA9PiAvKiBib29sZWFuICovIGZhbHNlLFxuICAgICAgZ2V0RHJhd2VyV2lkdGg6ICgpID0+IC8qIG51bWJlciAqLyAwLFxuICAgIH07XG4gIH1cblxuICBjb25zdHJ1Y3RvcihhZGFwdGVyLCByb290Q3NzQ2xhc3MsIGFuaW1hdGluZ0Nzc0NsYXNzLCBvcGVuQ3NzQ2xhc3MpIHtcbiAgICBzdXBlcihPYmplY3QuYXNzaWduKE1EQ1NsaWRhYmxlRHJhd2VyRm91bmRhdGlvbi5kZWZhdWx0QWRhcHRlciwgYWRhcHRlcikpO1xuXG4gICAgdGhpcy5yb290Q3NzQ2xhc3NfID0gcm9vdENzc0NsYXNzO1xuICAgIHRoaXMuYW5pbWF0aW5nQ3NzQ2xhc3NfID0gYW5pbWF0aW5nQ3NzQ2xhc3M7XG4gICAgdGhpcy5vcGVuQ3NzQ2xhc3NfID0gb3BlbkNzc0NsYXNzO1xuXG4gICAgdGhpcy50cmFuc2l0aW9uRW5kSGFuZGxlcl8gPSAoZXZ0KSA9PiB0aGlzLmhhbmRsZVRyYW5zaXRpb25FbmRfKGV2dCk7XG5cbiAgICB0aGlzLmluZXJ0XyA9IGZhbHNlO1xuXG4gICAgdGhpcy5jb21wb25lbnRUb3VjaFN0YXJ0SGFuZGxlcl8gPSAoZXZ0KSA9PiB0aGlzLmhhbmRsZVRvdWNoU3RhcnRfKGV2dCk7XG4gICAgdGhpcy5jb21wb25lbnRUb3VjaE1vdmVIYW5kbGVyXyA9IChldnQpID0+IHRoaXMuaGFuZGxlVG91Y2hNb3ZlXyhldnQpO1xuICAgIHRoaXMuY29tcG9uZW50VG91Y2hFbmRIYW5kbGVyXyA9IChldnQpID0+IHRoaXMuaGFuZGxlVG91Y2hFbmRfKGV2dCk7XG4gICAgdGhpcy5kb2N1bWVudEtleWRvd25IYW5kbGVyXyA9IChldnQpID0+IHtcbiAgICAgIGlmIChldnQua2V5ICYmIGV2dC5rZXkgPT09ICdFc2NhcGUnIHx8IGV2dC5rZXlDb2RlID09PSAyNykge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIGluaXQoKSB7XG4gICAgY29uc3QgUk9PVCA9IHRoaXMucm9vdENzc0NsYXNzXztcbiAgICBjb25zdCBPUEVOID0gdGhpcy5vcGVuQ3NzQ2xhc3NfO1xuXG4gICAgaWYgKCF0aGlzLmFkYXB0ZXJfLmhhc0NsYXNzKFJPT1QpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7Uk9PVH0gY2xhc3MgcmVxdWlyZWQgaW4gcm9vdCBlbGVtZW50LmApO1xuICAgIH1cblxuICAgIGlmICghdGhpcy5hZGFwdGVyXy5oYXNOZWNlc3NhcnlEb20oKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBSZXF1aXJlZCBET00gbm9kZXMgbWlzc2luZyBpbiAke1JPT1R9IGNvbXBvbmVudC5gKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5hZGFwdGVyXy5oYXNDbGFzcyhPUEVOKSkge1xuICAgICAgdGhpcy5pc09wZW5fID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5kZXRhYmluYXRlXygpO1xuICAgICAgdGhpcy5pc09wZW5fID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlckRyYXdlckludGVyYWN0aW9uSGFuZGxlcigndG91Y2hzdGFydCcsIHRoaXMuY29tcG9uZW50VG91Y2hTdGFydEhhbmRsZXJfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCd0b3VjaG1vdmUnLCB0aGlzLmNvbXBvbmVudFRvdWNoTW92ZUhhbmRsZXJfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCd0b3VjaGVuZCcsIHRoaXMuY29tcG9uZW50VG91Y2hFbmRIYW5kbGVyXyk7XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlckRyYXdlckludGVyYWN0aW9uSGFuZGxlcigndG91Y2hzdGFydCcsIHRoaXMuY29tcG9uZW50VG91Y2hTdGFydEhhbmRsZXJfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ3RvdWNobW92ZScsIHRoaXMuY29tcG9uZW50VG91Y2hNb3ZlSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcigndG91Y2hlbmQnLCB0aGlzLmNvbXBvbmVudFRvdWNoRW5kSGFuZGxlcl8pO1xuICAgIC8vIERlcmVnaXN0ZXIgdGhlIGRvY3VtZW50IGtleWRvd24gaGFuZGxlciBqdXN0IGluIGNhc2UgdGhlIGNvbXBvbmVudCBpcyBkZXN0cm95ZWQgd2hpbGUgdGhlIG1lbnUgaXMgb3Blbi5cbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJEb2N1bWVudEtleWRvd25IYW5kbGVyKHRoaXMuZG9jdW1lbnRLZXlkb3duSGFuZGxlcl8pO1xuICB9XG5cbiAgb3BlbigpIHtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVyVHJhbnNpdGlvbkVuZEhhbmRsZXIodGhpcy50cmFuc2l0aW9uRW5kSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJEb2N1bWVudEtleWRvd25IYW5kbGVyKHRoaXMuZG9jdW1lbnRLZXlkb3duSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3ModGhpcy5hbmltYXRpbmdDc3NDbGFzc18pO1xuICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3ModGhpcy5vcGVuQ3NzQ2xhc3NfKTtcbiAgICB0aGlzLnJldGFiaW5hdGVfKCk7XG4gICAgLy8gRGVib3VuY2UgbXVsdGlwbGUgY2FsbHNcbiAgICBpZiAoIXRoaXMuaXNPcGVuXykge1xuICAgICAgdGhpcy5hZGFwdGVyXy5ub3RpZnlPcGVuKCk7XG4gICAgfVxuICAgIHRoaXMuaXNPcGVuXyA9IHRydWU7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJEb2N1bWVudEtleWRvd25IYW5kbGVyKHRoaXMuZG9jdW1lbnRLZXlkb3duSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJUcmFuc2l0aW9uRW5kSGFuZGxlcih0aGlzLnRyYW5zaXRpb25FbmRIYW5kbGVyXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyh0aGlzLmFuaW1hdGluZ0Nzc0NsYXNzXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyh0aGlzLm9wZW5Dc3NDbGFzc18pO1xuICAgIHRoaXMuZGV0YWJpbmF0ZV8oKTtcbiAgICAvLyBEZWJvdW5jZSBtdWx0aXBsZSBjYWxsc1xuICAgIGlmICh0aGlzLmlzT3Blbl8pIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8ubm90aWZ5Q2xvc2UoKTtcbiAgICB9XG4gICAgdGhpcy5pc09wZW5fID0gZmFsc2U7XG4gIH1cblxuICBpc09wZW4oKSB7XG4gICAgcmV0dXJuIHRoaXMuaXNPcGVuXztcbiAgfVxuXG4gIC8qKlxuICAgKiAgUmVuZGVyIGFsbCBjaGlsZHJlbiBvZiB0aGUgZHJhd2VyIGluZXJ0IHdoZW4gaXQncyBjbG9zZWQuXG4gICAqL1xuICBkZXRhYmluYXRlXygpIHtcbiAgICBpZiAodGhpcy5pbmVydF8pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBlbGVtZW50cyA9IHRoaXMuYWRhcHRlcl8uZ2V0Rm9jdXNhYmxlRWxlbWVudHMoKTtcbiAgICBpZiAoZWxlbWVudHMpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZWxlbWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5zYXZlRWxlbWVudFRhYlN0YXRlKGVsZW1lbnRzW2ldKTtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5tYWtlRWxlbWVudFVudGFiYmFibGUoZWxlbWVudHNbaV0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuaW5lcnRfID0gdHJ1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiAgTWFrZSBhbGwgY2hpbGRyZW4gb2YgdGhlIGRyYXdlciB0YWJiYWJsZSBhZ2FpbiB3aGVuIGl0J3Mgb3Blbi5cbiAgICovXG4gIHJldGFiaW5hdGVfKCkge1xuICAgIGlmICghdGhpcy5pbmVydF8pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBlbGVtZW50cyA9IHRoaXMuYWRhcHRlcl8uZ2V0Rm9jdXNhYmxlRWxlbWVudHMoKTtcbiAgICBpZiAoZWxlbWVudHMpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZWxlbWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5yZXN0b3JlRWxlbWVudFRhYlN0YXRlKGVsZW1lbnRzW2ldKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLmluZXJ0XyA9IGZhbHNlO1xuICB9XG5cbiAgaGFuZGxlVG91Y2hTdGFydF8oZXZ0KSB7XG4gICAgaWYgKCF0aGlzLmFkYXB0ZXJfLmhhc0NsYXNzKHRoaXMub3BlbkNzc0NsYXNzXykpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGV2dC5wb2ludGVyVHlwZSAmJiBldnQucG9pbnRlclR5cGUgIT09ICd0b3VjaCcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLmRpcmVjdGlvbl8gPSB0aGlzLmFkYXB0ZXJfLmlzUnRsKCkgPyAtMSA6IDE7XG4gICAgdGhpcy5kcmF3ZXJXaWR0aF8gPSB0aGlzLmFkYXB0ZXJfLmdldERyYXdlcldpZHRoKCk7XG4gICAgdGhpcy5zdGFydFhfID0gZXZ0LnRvdWNoZXMgPyBldnQudG91Y2hlc1swXS5wYWdlWCA6IGV2dC5wYWdlWDtcbiAgICB0aGlzLmN1cnJlbnRYXyA9IHRoaXMuc3RhcnRYXztcblxuICAgIHRoaXMudXBkYXRlUmFmXyA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnVwZGF0ZURyYXdlcl8uYmluZCh0aGlzKSk7XG4gIH1cblxuICBoYW5kbGVUb3VjaE1vdmVfKGV2dCkge1xuICAgIGlmIChldnQucG9pbnRlclR5cGUgJiYgZXZ0LnBvaW50ZXJUeXBlICE9PSAndG91Y2gnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5jdXJyZW50WF8gPSBldnQudG91Y2hlcyA/IGV2dC50b3VjaGVzWzBdLnBhZ2VYIDogZXZ0LnBhZ2VYO1xuICB9XG5cbiAgaGFuZGxlVG91Y2hFbmRfKGV2dCkge1xuICAgIGlmIChldnQucG9pbnRlclR5cGUgJiYgZXZ0LnBvaW50ZXJUeXBlICE9PSAndG91Y2gnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5wcmVwYXJlRm9yVG91Y2hFbmRfKCk7XG5cbiAgICAvLyBEaWQgdGhlIHVzZXIgY2xvc2UgdGhlIGRyYXdlciBieSBtb3JlIHRoYW4gNTAlP1xuICAgIGlmIChNYXRoLmFicyh0aGlzLm5ld1Bvc2l0aW9uXyAvIHRoaXMuZHJhd2VyV2lkdGhfKSA+PSAwLjUpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gVHJpZ2dlcmluZyBhbiBvcGVuIGhlcmUgbWVhbnMgd2UnbGwgZ2V0IGEgbmljZSBhbmltYXRpb24gYmFjayB0byB0aGUgZnVsbHkgb3BlbiBzdGF0ZS5cbiAgICAgIHRoaXMub3BlbigpO1xuICAgIH1cbiAgfVxuXG4gIHByZXBhcmVGb3JUb3VjaEVuZF8oKSB7XG4gICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy51cGRhdGVSYWZfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnNldFRyYW5zbGF0ZVgobnVsbCk7XG4gIH1cblxuICB1cGRhdGVEcmF3ZXJfKCkge1xuICAgIHRoaXMudXBkYXRlUmFmXyA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnVwZGF0ZURyYXdlcl8uYmluZCh0aGlzKSk7XG4gICAgdGhpcy5hZGFwdGVyXy5zZXRUcmFuc2xhdGVYKHRoaXMubmV3UG9zaXRpb25fKTtcbiAgfVxuXG4gIGdldCBuZXdQb3NpdGlvbl8oKSB7XG4gICAgbGV0IG5ld1BvcyA9IG51bGw7XG5cbiAgICBpZiAodGhpcy5kaXJlY3Rpb25fID09PSAxKSB7XG4gICAgICBuZXdQb3MgPSBNYXRoLm1pbigwLCB0aGlzLmN1cnJlbnRYXyAtIHRoaXMuc3RhcnRYXyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG5ld1BvcyA9IE1hdGgubWF4KDAsIHRoaXMuY3VycmVudFhfIC0gdGhpcy5zdGFydFhfKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3UG9zO1xuICB9XG5cbiAgaXNSb290VHJhbnNpdGlvbmluZ0V2ZW50VGFyZ2V0XygpIHtcbiAgICAvLyBDbGFzc2VzIGV4dGVuZGluZyBNRENTbGlkYWJsZURyYXdlckZvdW5kYXRpb24gc2hvdWxkIGltcGxlbWVudCB0aGlzIG1ldGhvZCB0byByZXR1cm4gdHJ1ZSBvciBmYWxzZVxuICAgIC8vIGlmIHRoZSBldmVudCB0YXJnZXQgaXMgdGhlIHJvb3QgZXZlbnQgdGFyZ2V0IGN1cnJlbnRseSB0cmFuc2l0aW9uaW5nLlxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGhhbmRsZVRyYW5zaXRpb25FbmRfKGV2dCkge1xuICAgIGlmICh0aGlzLmlzUm9vdFRyYW5zaXRpb25pbmdFdmVudFRhcmdldF8oZXZ0LnRhcmdldCkpIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3ModGhpcy5hbmltYXRpbmdDc3NDbGFzc18pO1xuICAgICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVyVHJhbnNpdGlvbkVuZEhhbmRsZXIodGhpcy50cmFuc2l0aW9uRW5kSGFuZGxlcl8pO1xuICAgIH1cbiAgfTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmV4cG9ydCB7Rk9DVVNBQkxFX0VMRU1FTlRTfSBmcm9tICcuL2NvbnN0YW50cyc7XG5leHBvcnQge01EQ1NsaWRhYmxlRHJhd2VyRm91bmRhdGlvbn0gZnJvbSAnLi9mb3VuZGF0aW9uJztcbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7Rk9DVVNBQkxFX0VMRU1FTlRTfSBmcm9tICcuLi9zbGlkYWJsZS9pbmRleCc7XG5cbmV4cG9ydCBjb25zdCBjc3NDbGFzc2VzID0ge1xuICBST09UOiAnbWRjLWRyYXdlci0tcGVyc2lzdGVudCcsXG4gIE9QRU46ICdtZGMtZHJhd2VyLS1vcGVuJyxcbiAgQU5JTUFUSU5HOiAnbWRjLWRyYXdlci0tYW5pbWF0aW5nJyxcbn07XG5cbmV4cG9ydCBjb25zdCBzdHJpbmdzID0ge1xuICBEUkFXRVJfU0VMRUNUT1I6ICcubWRjLWRyYXdlci0tcGVyc2lzdGVudCAubWRjLWRyYXdlcl9fZHJhd2VyJyxcbiAgRk9DVVNBQkxFX0VMRU1FTlRTLFxuICBPUEVOX0VWRU5UOiAnTURDUGVyc2lzdGVudERyYXdlcjpvcGVuJyxcbiAgQ0xPU0VfRVZFTlQ6ICdNRENQZXJzaXN0ZW50RHJhd2VyOmNsb3NlJyxcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQge01EQ1NsaWRhYmxlRHJhd2VyRm91bmRhdGlvbn0gZnJvbSAnLi4vc2xpZGFibGUvaW5kZXgnO1xuaW1wb3J0IHtjc3NDbGFzc2VzLCBzdHJpbmdzfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1EQ1BlcnNpc3RlbnREcmF3ZXJGb3VuZGF0aW9uIGV4dGVuZHMgTURDU2xpZGFibGVEcmF3ZXJGb3VuZGF0aW9uIHtcbiAgc3RhdGljIGdldCBjc3NDbGFzc2VzKCkge1xuICAgIHJldHVybiBjc3NDbGFzc2VzO1xuICB9XG5cbiAgc3RhdGljIGdldCBzdHJpbmdzKCkge1xuICAgIHJldHVybiBzdHJpbmdzO1xuICB9XG5cbiAgc3RhdGljIGdldCBkZWZhdWx0QWRhcHRlcigpIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihNRENTbGlkYWJsZURyYXdlckZvdW5kYXRpb24uZGVmYXVsdEFkYXB0ZXIsIHtcbiAgICAgIGlzRHJhd2VyOiAoKSA9PiBmYWxzZSxcbiAgICB9KTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKGFkYXB0ZXIpIHtcbiAgICBzdXBlcihcbiAgICAgIE9iamVjdC5hc3NpZ24oTURDUGVyc2lzdGVudERyYXdlckZvdW5kYXRpb24uZGVmYXVsdEFkYXB0ZXIsIGFkYXB0ZXIpLFxuICAgICAgTURDUGVyc2lzdGVudERyYXdlckZvdW5kYXRpb24uY3NzQ2xhc3Nlcy5ST09ULFxuICAgICAgTURDUGVyc2lzdGVudERyYXdlckZvdW5kYXRpb24uY3NzQ2xhc3Nlcy5BTklNQVRJTkcsXG4gICAgICBNRENQZXJzaXN0ZW50RHJhd2VyRm91bmRhdGlvbi5jc3NDbGFzc2VzLk9QRU4pO1xuICB9XG5cbiAgaXNSb290VHJhbnNpdGlvbmluZ0V2ZW50VGFyZ2V0XyhlbCkge1xuICAgIHJldHVybiB0aGlzLmFkYXB0ZXJfLmlzRHJhd2VyKGVsKTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuY29uc3QgVEFCX0RBVEEgPSAnZGF0YS1tZGMtdGFiaW5kZXgnO1xuY29uc3QgVEFCX0RBVEFfSEFORExFRCA9ICdkYXRhLW1kYy10YWJpbmRleC1oYW5kbGVkJztcblxubGV0IHN0b3JlZFRyYW5zZm9ybVByb3BlcnR5TmFtZV87XG5sZXQgc3VwcG9ydHNQYXNzaXZlXztcblxuLy8gUmVtYXAgdG91Y2ggZXZlbnRzIHRvIHBvaW50ZXIgZXZlbnRzLCBpZiB0aGUgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgdG91Y2ggZXZlbnRzLlxuZXhwb3J0IGZ1bmN0aW9uIHJlbWFwRXZlbnQoZXZlbnROYW1lLCBnbG9iYWxPYmogPSB3aW5kb3cpIHtcbiAgaWYgKCEoJ29udG91Y2hzdGFydCcgaW4gZ2xvYmFsT2JqLmRvY3VtZW50KSkge1xuICAgIHN3aXRjaCAoZXZlbnROYW1lKSB7XG4gICAgY2FzZSAndG91Y2hzdGFydCc6XG4gICAgICByZXR1cm4gJ3BvaW50ZXJkb3duJztcbiAgICBjYXNlICd0b3VjaG1vdmUnOlxuICAgICAgcmV0dXJuICdwb2ludGVybW92ZSc7XG4gICAgY2FzZSAndG91Y2hlbmQnOlxuICAgICAgcmV0dXJuICdwb2ludGVydXAnO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gZXZlbnROYW1lO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBldmVudE5hbWU7XG59XG5cbi8vIENob29zZSB0aGUgY29ycmVjdCB0cmFuc2Zvcm0gcHJvcGVydHkgdG8gdXNlIG9uIHRoZSBjdXJyZW50IGJyb3dzZXIuXG5leHBvcnQgZnVuY3Rpb24gZ2V0VHJhbnNmb3JtUHJvcGVydHlOYW1lKGdsb2JhbE9iaiA9IHdpbmRvdywgZm9yY2VSZWZyZXNoID0gZmFsc2UpIHtcbiAgaWYgKHN0b3JlZFRyYW5zZm9ybVByb3BlcnR5TmFtZV8gPT09IHVuZGVmaW5lZCB8fCBmb3JjZVJlZnJlc2gpIHtcbiAgICBjb25zdCBlbCA9IGdsb2JhbE9iai5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb25zdCB0cmFuc2Zvcm1Qcm9wZXJ0eU5hbWUgPSAoJ3RyYW5zZm9ybScgaW4gZWwuc3R5bGUgPyAndHJhbnNmb3JtJyA6ICctd2Via2l0LXRyYW5zZm9ybScpO1xuICAgIHN0b3JlZFRyYW5zZm9ybVByb3BlcnR5TmFtZV8gPSB0cmFuc2Zvcm1Qcm9wZXJ0eU5hbWU7XG4gIH1cblxuICByZXR1cm4gc3RvcmVkVHJhbnNmb3JtUHJvcGVydHlOYW1lXztcbn1cblxuLy8gRGV0ZXJtaW5lIHdoZXRoZXIgdGhlIGN1cnJlbnQgYnJvd3NlciBzdXBwb3J0cyBDU1MgcHJvcGVydGllcy5cbmV4cG9ydCBmdW5jdGlvbiBzdXBwb3J0c0Nzc0N1c3RvbVByb3BlcnRpZXMoZ2xvYmFsT2JqID0gd2luZG93KSB7XG4gIGlmICgnQ1NTJyBpbiBnbG9iYWxPYmopIHtcbiAgICByZXR1cm4gZ2xvYmFsT2JqLkNTUy5zdXBwb3J0cygnKC0tY29sb3I6IHJlZCknKTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbi8vIERldGVybWluZSB3aGV0aGVyIHRoZSBjdXJyZW50IGJyb3dzZXIgc3VwcG9ydHMgcGFzc2l2ZSBldmVudCBsaXN0ZW5lcnMsIGFuZCBpZiBzbywgdXNlIHRoZW0uXG5leHBvcnQgZnVuY3Rpb24gYXBwbHlQYXNzaXZlKGdsb2JhbE9iaiA9IHdpbmRvdywgZm9yY2VSZWZyZXNoID0gZmFsc2UpIHtcbiAgaWYgKHN1cHBvcnRzUGFzc2l2ZV8gPT09IHVuZGVmaW5lZCB8fCBmb3JjZVJlZnJlc2gpIHtcbiAgICBsZXQgaXNTdXBwb3J0ZWQgPSBmYWxzZTtcbiAgICB0cnkge1xuICAgICAgZ2xvYmFsT2JqLmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Rlc3QnLCBudWxsLCB7Z2V0IHBhc3NpdmUoKSB7XG4gICAgICAgIGlzU3VwcG9ydGVkID0gdHJ1ZTtcbiAgICAgIH19KTtcbiAgICB9IGNhdGNoIChlKSB7IH1cblxuICAgIHN1cHBvcnRzUGFzc2l2ZV8gPSBpc1N1cHBvcnRlZDtcbiAgfVxuXG4gIHJldHVybiBzdXBwb3J0c1Bhc3NpdmVfID8ge3Bhc3NpdmU6IHRydWV9IDogZmFsc2U7XG59XG5cbi8vIFNhdmUgdGhlIHRhYiBzdGF0ZSBmb3IgYW4gZWxlbWVudC5cbmV4cG9ydCBmdW5jdGlvbiBzYXZlRWxlbWVudFRhYlN0YXRlKGVsKSB7XG4gIGlmIChlbC5oYXNBdHRyaWJ1dGUoJ3RhYmluZGV4JykpIHtcbiAgICBlbC5zZXRBdHRyaWJ1dGUoVEFCX0RBVEEsIGVsLmdldEF0dHJpYnV0ZSgndGFiaW5kZXgnKSk7XG4gIH1cbiAgZWwuc2V0QXR0cmlidXRlKFRBQl9EQVRBX0hBTkRMRUQsIHRydWUpO1xufVxuXG4vLyBSZXN0b3JlIHRoZSB0YWIgc3RhdGUgZm9yIGFuIGVsZW1lbnQsIGlmIGl0IHdhcyBzYXZlZC5cbmV4cG9ydCBmdW5jdGlvbiByZXN0b3JlRWxlbWVudFRhYlN0YXRlKGVsKSB7XG4gIC8vIE9ubHkgbW9kaWZ5IGVsZW1lbnRzIHdlJ3ZlIGFscmVhZHkgaGFuZGxlZCwgaW4gY2FzZSBhbnl0aGluZyB3YXMgZHluYW1pY2FsbHkgYWRkZWQgc2luY2Ugd2Ugc2F2ZWQgc3RhdGUuXG4gIGlmIChlbC5oYXNBdHRyaWJ1dGUoVEFCX0RBVEFfSEFORExFRCkpIHtcbiAgICBpZiAoZWwuaGFzQXR0cmlidXRlKFRBQl9EQVRBKSkge1xuICAgICAgZWwuc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsIGVsLmdldEF0dHJpYnV0ZShUQUJfREFUQSkpO1xuICAgICAgZWwucmVtb3ZlQXR0cmlidXRlKFRBQl9EQVRBKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZWwucmVtb3ZlQXR0cmlidXRlKCd0YWJpbmRleCcpO1xuICAgIH1cbiAgICBlbC5yZW1vdmVBdHRyaWJ1dGUoVEFCX0RBVEFfSEFORExFRCk7XG4gIH1cbn1cbiIsIjx0ZW1wbGF0ZT5cbiAgPGFzaWRlIGNsYXNzPVwibWRjLXBlcnNpc3RlbnQtZHJhd2VyIG1kYy1kcmF3ZXItLXBlcnNpc3RlbnQgbWRjLXR5cG9ncmFwaHlcIiA6Y2xhc3M9XCJjbGFzc2VzXCI+XG4gICAgPG5hdiByZWY9XCJkcmF3ZXJcIiBjbGFzcz1cIm1kYy1kcmF3ZXJfX2RyYXdlclwiPlxuICAgICAgPGRpdiBjbGFzcz1cIm1kYy1kcmF3ZXJfX3Rvb2xiYXItc3BhY2VyXCIgXG4gICAgICAgIHYtaWY9XCJ0b29sYmFyU3BhY2VyXCI+PC9kaXY+XG4gICAgICA8c2xvdCAvPlxuICAgIDwvbmF2PlxuICA8L2FzaWRlPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBNRENQZXJzaXN0ZW50RHJhd2VyRm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvZHJhd2VyL3BlcnNpc3RlbnQvZm91bmRhdGlvbidcbmltcG9ydCAqIGFzIHV0aWwgZnJvbSAnQG1hdGVyaWFsL2RyYXdlci91dGlsJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtcGVyc2lzdGVudC1kcmF3ZXInLFxuICBtb2RlbDoge1xuICAgIHByb3A6ICdvcGVuJyxcbiAgICBldmVudDogJ2NoYW5nZSdcbiAgfSxcbiAgcHJvcHM6IHtcbiAgICAndG9vbGJhci1zcGFjZXInOiBCb29sZWFuLFxuICAgICdvcGVuJzpCb29sZWFuXG4gIH0sXG4gIGRhdGEgKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjbGFzc2VzOiB7fSxcbiAgICB9XG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgb3BlbigpIHtcbiAgICAgIHRoaXMuX3JlZnJlc2goKVxuICAgIH1cbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIF9yZWZyZXNoKCkge1xuICAgICAgaWYgKHRoaXMub3Blbikge1xuICAgICAgICB0aGlzLmZvdW5kYXRpb24gJiYgdGhpcy5mb3VuZGF0aW9uLm9wZW4oKSAgICAgICAgICBcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICB0aGlzLmZvdW5kYXRpb24gJiYgdGhpcy5mb3VuZGF0aW9uLmNsb3NlKCkgICAgICAgICAgXG4gICAgICB9XG4gICAgfVxuICB9LFxuICBtb3VudGVkICgpIHtcbiAgICBjb25zdCB7Rk9DVVNBQkxFX0VMRU1FTlRTfSA9IE1EQ1BlcnNpc3RlbnREcmF3ZXJGb3VuZGF0aW9uLnN0cmluZ3NcblxuICAgIHRoaXMuZm91bmRhdGlvbiA9IG5ldyBNRENQZXJzaXN0ZW50RHJhd2VyRm91bmRhdGlvbih7XG4gICAgICBhZGRDbGFzczogKGNsYXNzTmFtZSkgPT4ge1xuICAgICAgICB0aGlzLiRzZXQodGhpcy5jbGFzc2VzLCBjbGFzc05hbWUsIHRydWUpXG4gICAgICB9LFxuICAgICAgcmVtb3ZlQ2xhc3M6IChjbGFzc05hbWUpID0+IHtcbiAgICAgICAgdGhpcy4kZGVsZXRlKHRoaXMuY2xhc3NlcywgY2xhc3NOYW1lKVxuICAgICAgfSxcbiAgICAgIGhhc0NsYXNzOiAoY2xhc3NOYW1lKSA9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLiRlbC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKVxuICAgICAgfSxcbiAgICAgIGhhc05lY2Vzc2FyeURvbTogKCkgPT4ge1xuICAgICAgICByZXR1cm4gISF0aGlzLiRyZWZzLmRyYXdlclxuICAgICAgfSxcbiAgICAgIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0LCBoYW5kbGVyKSA9PiB7XG4gICAgICAgIHRoaXMuJGVsLmFkZEV2ZW50TGlzdGVuZXIodXRpbC5yZW1hcEV2ZW50KGV2dCksIGhhbmRsZXIsIHV0aWwuYXBwbHlQYXNzaXZlKCkpXG4gICAgICB9LFxuICAgICAgZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKGV2dCwgaGFuZGxlcikgPT4ge1xuICAgICAgICB0aGlzLiRlbC5yZW1vdmVFdmVudExpc3RlbmVyKHV0aWwucmVtYXBFdmVudChldnQpLCBoYW5kbGVyLCB1dGlsLmFwcGx5UGFzc2l2ZSgpKVxuICAgICAgfSxcbiAgICAgIHJlZ2lzdGVyRHJhd2VySW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0LCBoYW5kbGVyKSA9PiB7XG4gICAgICAgIHRoaXMuJHJlZnMuZHJhd2VyLmFkZEV2ZW50TGlzdGVuZXIodXRpbC5yZW1hcEV2ZW50KGV2dCksIGhhbmRsZXIpXG4gICAgICB9LFxuICAgICAgZGVyZWdpc3RlckRyYXdlckludGVyYWN0aW9uSGFuZGxlcjogKGV2dCwgaGFuZGxlcikgPT4ge1xuICAgICAgICB0aGlzLiRyZWZzLmRyYXdlci5yZW1vdmVFdmVudExpc3RlbmVyKHV0aWwucmVtYXBFdmVudChldnQpLCBoYW5kbGVyKVxuICAgICAgfSxcbiAgICAgIHJlZ2lzdGVyVHJhbnNpdGlvbkVuZEhhbmRsZXI6IChoYW5kbGVyKSA9PiB7XG4gICAgICAgIHRoaXMuJHJlZnMuZHJhd2VyLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBoYW5kbGVyKVxuICAgICAgfSxcbiAgICAgIGRlcmVnaXN0ZXJUcmFuc2l0aW9uRW5kSGFuZGxlcjogKGhhbmRsZXIpID0+IHtcbiAgICAgICAgdGhpcy4kcmVmcy5kcmF3ZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIGhhbmRsZXIpXG4gICAgICB9LFxuICAgICAgcmVnaXN0ZXJEb2N1bWVudEtleWRvd25IYW5kbGVyOiAoaGFuZGxlcikgPT4ge1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgaGFuZGxlcilcbiAgICAgIH0sXG4gICAgICBkZXJlZ2lzdGVyRG9jdW1lbnRLZXlkb3duSGFuZGxlcjogKGhhbmRsZXIpID0+IHtcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGhhbmRsZXIpXG4gICAgICB9LFxuICAgICAgZ2V0RHJhd2VyV2lkdGg6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuJHJlZnMuZHJhd2VyLm9mZnNldFdpZHRoXG4gICAgICB9LFxuICAgICAgc2V0VHJhbnNsYXRlWDogKHZhbHVlKSA9PiB7XG4gICAgICAgIHRoaXMuJHJlZnMuZHJhd2VyLnN0eWxlLnNldFByb3BlcnR5KFxuICAgICAgICAgIHV0aWwuZ2V0VHJhbnNmb3JtUHJvcGVydHlOYW1lKCksXG4gICAgICAgICAgdmFsdWUgPT09IG51bGwgPyBudWxsIDogYHRyYW5zbGF0ZVgoJHt2YWx1ZX1weClgXG4gICAgICAgIClcbiAgICAgIH0sXG4gICAgICBnZXRGb2N1c2FibGVFbGVtZW50czogKCkgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy4kcmVmcy5kcmF3ZXIucXVlcnlTZWxlY3RvckFsbChGT0NVU0FCTEVfRUxFTUVOVFMpXG4gICAgICB9LFxuICAgICAgc2F2ZUVsZW1lbnRUYWJTdGF0ZTogKGVsKSA9PiB7XG4gICAgICAgIHV0aWwuc2F2ZUVsZW1lbnRUYWJTdGF0ZShlbClcbiAgICAgIH0sXG4gICAgICByZXN0b3JlRWxlbWVudFRhYlN0YXRlOiAoZWwpID0+IHtcbiAgICAgICAgdXRpbC5yZXN0b3JlRWxlbWVudFRhYlN0YXRlKGVsKVxuICAgICAgfSxcbiAgICAgIG1ha2VFbGVtZW50VW50YWJiYWJsZTogKGVsKSA9PiB7XG4gICAgICAgIGVsLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAtMSlcbiAgICAgIH0sXG4gICAgICBub3RpZnlPcGVuOiAoKSA9PiB7XG4gICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsdHJ1ZSlcbiAgICAgICAgdGhpcy4kZW1pdCgnb3BlbicpXG4gICAgICB9LFxuICAgICAgbm90aWZ5Q2xvc2U6ICgpID0+IHtcbiAgICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJyxmYWxzZSlcbiAgICAgICAgdGhpcy4kZW1pdCgnY2xvc2UnKVxuICAgICAgfSxcbiAgICAgIGlzUnRsOiAoKSA9PiB7XG4gICAgICAgIC8qIGdsb2JhbCBnZXRDb21wdXRlZFN0eWxlICovXG4gICAgICAgIHJldHVybiBnZXRDb21wdXRlZFN0eWxlKHRoaXMuJGVsKS5nZXRQcm9wZXJ0eVZhbHVlKCdkaXJlY3Rpb24nKSA9PT0gJ3J0bCdcbiAgICAgIH0sXG4gICAgICBpc0RyYXdlcjogKGVsKSA9PiB7XG4gICAgICAgIHJldHVybiBlbCA9PT0gdGhpcy4kcmVmcy5kcmF3ZXJcbiAgICAgIH1cbiAgICB9KVxuICAgIHRoaXMuZm91bmRhdGlvbiAmJiB0aGlzLmZvdW5kYXRpb24uaW5pdCgpICBcbiAgICB0aGlzLl9yZWZyZXNoKClcbiAgfSxcbiAgYmVmb3JlRGVzdHJveSAoKSB7XG4gICAgdGhpcy5mb3VuZGF0aW9uICYmIHRoaXMuZm91bmRhdGlvbi5kZXN0cm95KClcbiAgICB0aGlzLmZvdW5kYXRpb24gPSBudWxsXG4gIH1cbn1cbjwvc2NyaXB0PlxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHtGT0NVU0FCTEVfRUxFTUVOVFN9IGZyb20gJy4uL3NsaWRhYmxlL2luZGV4JztcblxuZXhwb3J0IGNvbnN0IGNzc0NsYXNzZXMgPSB7XG4gIFJPT1Q6ICdtZGMtZHJhd2VyLS10ZW1wb3JhcnknLFxuICBPUEVOOiAnbWRjLWRyYXdlci0tb3BlbicsXG4gIEFOSU1BVElORzogJ21kYy1kcmF3ZXItLWFuaW1hdGluZycsXG4gIFNDUk9MTF9MT0NLOiAnbWRjLWRyYXdlci1zY3JvbGwtbG9jaycsXG59O1xuXG5leHBvcnQgY29uc3Qgc3RyaW5ncyA9IHtcbiAgRFJBV0VSX1NFTEVDVE9SOiAnLm1kYy1kcmF3ZXItLXRlbXBvcmFyeSAubWRjLWRyYXdlcl9fZHJhd2VyJyxcbiAgT1BBQ0lUWV9WQVJfTkFNRTogJy0tbWRjLXRlbXBvcmFyeS1kcmF3ZXItb3BhY2l0eScsXG4gIEZPQ1VTQUJMRV9FTEVNRU5UUyxcbiAgT1BFTl9FVkVOVDogJ01EQ1RlbXBvcmFyeURyYXdlcjpvcGVuJyxcbiAgQ0xPU0VfRVZFTlQ6ICdNRENUZW1wb3JhcnlEcmF3ZXI6Y2xvc2UnLFxufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7TURDU2xpZGFibGVEcmF3ZXJGb3VuZGF0aW9ufSBmcm9tICcuLi9zbGlkYWJsZS9pbmRleCc7XG5pbXBvcnQge2Nzc0NsYXNzZXMsIHN0cmluZ3N9IGZyb20gJy4vY29uc3RhbnRzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTURDVGVtcG9yYXJ5RHJhd2VyRm91bmRhdGlvbiBleHRlbmRzIE1EQ1NsaWRhYmxlRHJhd2VyRm91bmRhdGlvbiB7XG4gIHN0YXRpYyBnZXQgY3NzQ2xhc3NlcygpIHtcbiAgICByZXR1cm4gY3NzQ2xhc3NlcztcbiAgfVxuXG4gIHN0YXRpYyBnZXQgc3RyaW5ncygpIHtcbiAgICByZXR1cm4gc3RyaW5ncztcbiAgfVxuXG4gIHN0YXRpYyBnZXQgZGVmYXVsdEFkYXB0ZXIoKSB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oTURDU2xpZGFibGVEcmF3ZXJGb3VuZGF0aW9uLmRlZmF1bHRBZGFwdGVyLCB7XG4gICAgICBhZGRCb2R5Q2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICByZW1vdmVCb2R5Q2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICBpc0RyYXdlcjogKCkgPT4gZmFsc2UsXG4gICAgICB1cGRhdGVDc3NWYXJpYWJsZTogKC8qIHZhbHVlOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgZXZlbnRUYXJnZXRIYXNDbGFzczogKC8qIHRhcmdldDogRXZlbnRUYXJnZXQsIGNsYXNzTmFtZTogc3RyaW5nICovKSA9PiAvKiBib29sZWFuICovIGZhbHNlLFxuICAgIH0pO1xuICB9XG5cbiAgY29uc3RydWN0b3IoYWRhcHRlcikge1xuICAgIHN1cGVyKFxuICAgICAgT2JqZWN0LmFzc2lnbihNRENUZW1wb3JhcnlEcmF3ZXJGb3VuZGF0aW9uLmRlZmF1bHRBZGFwdGVyLCBhZGFwdGVyKSxcbiAgICAgIE1EQ1RlbXBvcmFyeURyYXdlckZvdW5kYXRpb24uY3NzQ2xhc3Nlcy5ST09ULFxuICAgICAgTURDVGVtcG9yYXJ5RHJhd2VyRm91bmRhdGlvbi5jc3NDbGFzc2VzLkFOSU1BVElORyxcbiAgICAgIE1EQ1RlbXBvcmFyeURyYXdlckZvdW5kYXRpb24uY3NzQ2xhc3Nlcy5PUEVOKTtcblxuICAgIHRoaXMuY29tcG9uZW50Q2xpY2tIYW5kbGVyXyA9IChldnQpID0+IHtcbiAgICAgIGlmICh0aGlzLmFkYXB0ZXJfLmV2ZW50VGFyZ2V0SGFzQ2xhc3MoZXZ0LnRhcmdldCwgY3NzQ2xhc3Nlcy5ST09UKSkge1xuICAgICAgICB0aGlzLmNsb3NlKHRydWUpO1xuICAgICAgfVxuICAgIH07XG4gIH1cblxuICBpbml0KCkge1xuICAgIHN1cGVyLmluaXQoKTtcblxuICAgIC8vIE1ha2UgYnJvd3NlciBhd2FyZSBvZiBjdXN0b20gcHJvcGVydHkgYmVpbmcgdXNlZCBpbiB0aGlzIGVsZW1lbnQuXG4gICAgLy8gV29ya2Fyb3VuZCBmb3IgY2VydGFpbiB0eXBlcyBvZiBoYXJkLXRvLXJlcHJvZHVjZSBoZWlzZW5idWdzLlxuICAgIHRoaXMuYWRhcHRlcl8udXBkYXRlQ3NzVmFyaWFibGUoMCk7XG4gICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcignY2xpY2snLCB0aGlzLmNvbXBvbmVudENsaWNrSGFuZGxlcl8pO1xuICB9XG5cbiAgZGVzdHJveSgpIHtcbiAgICBzdXBlci5kZXN0cm95KCk7XG5cbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ2NsaWNrJywgdGhpcy5jb21wb25lbnRDbGlja0hhbmRsZXJfKTtcbiAgICB0aGlzLmVuYWJsZVNjcm9sbF8oKTtcbiAgfVxuXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5kaXNhYmxlU2Nyb2xsXygpO1xuICAgIC8vIE1ha2Ugc3VyZSBjdXN0b20gcHJvcGVydHkgdmFsdWVzIGFyZSBjbGVhcmVkIGJlZm9yZSBzdGFydGluZy5cbiAgICB0aGlzLmFkYXB0ZXJfLnVwZGF0ZUNzc1ZhcmlhYmxlKCcnKTtcblxuICAgIHN1cGVyLm9wZW4oKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIC8vIE1ha2Ugc3VyZSBjdXN0b20gcHJvcGVydHkgdmFsdWVzIGFyZSBjbGVhcmVkIGJlZm9yZSBtYWtpbmcgYW55IGNoYW5nZXMuXG4gICAgdGhpcy5hZGFwdGVyXy51cGRhdGVDc3NWYXJpYWJsZSgnJyk7XG5cbiAgICBzdXBlci5jbG9zZSgpO1xuICB9XG5cbiAgcHJlcGFyZUZvclRvdWNoRW5kXygpIHtcbiAgICBzdXBlci5wcmVwYXJlRm9yVG91Y2hFbmRfKCk7XG5cbiAgICB0aGlzLmFkYXB0ZXJfLnVwZGF0ZUNzc1ZhcmlhYmxlKCcnKTtcbiAgfVxuXG4gIHVwZGF0ZURyYXdlcl8oKSB7XG4gICAgc3VwZXIudXBkYXRlRHJhd2VyXygpO1xuXG4gICAgY29uc3QgbmV3T3BhY2l0eSA9IE1hdGgubWF4KDAsIDEgKyB0aGlzLmRpcmVjdGlvbl8gKiAodGhpcy5uZXdQb3NpdGlvbl8gLyB0aGlzLmRyYXdlcldpZHRoXykpO1xuICAgIHRoaXMuYWRhcHRlcl8udXBkYXRlQ3NzVmFyaWFibGUobmV3T3BhY2l0eSk7XG4gIH1cblxuICBpc1Jvb3RUcmFuc2l0aW9uaW5nRXZlbnRUYXJnZXRfKGVsKSB7XG4gICAgcmV0dXJuIHRoaXMuYWRhcHRlcl8uaXNEcmF3ZXIoZWwpO1xuICB9XG5cbiAgaGFuZGxlVHJhbnNpdGlvbkVuZF8oZXZ0KSB7XG4gICAgc3VwZXIuaGFuZGxlVHJhbnNpdGlvbkVuZF8oZXZ0KTtcbiAgICBpZiAoIXRoaXMuaXNPcGVuXykge1xuICAgICAgdGhpcy5lbmFibGVTY3JvbGxfKCk7XG4gICAgfVxuICB9O1xuXG4gIGRpc2FibGVTY3JvbGxfKCkge1xuICAgIHRoaXMuYWRhcHRlcl8uYWRkQm9keUNsYXNzKGNzc0NsYXNzZXMuU0NST0xMX0xPQ0spO1xuICB9XG5cbiAgZW5hYmxlU2Nyb2xsXygpIHtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUJvZHlDbGFzcyhjc3NDbGFzc2VzLlNDUk9MTF9MT0NLKTtcbiAgfVxufVxuIiwiPHRlbXBsYXRlPlxuICA8YXNpZGUgY2xhc3M9XCJtZGMtdGVtcG9yYXJ5LWRyYXdlciBtZGMtZHJhd2VyLS10ZW1wb3JhcnkgbWRjLXR5cG9ncmFwaHlcIiA6Y2xhc3M9XCJjbGFzc2VzXCI+XG4gICAgPG5hdiByZWY9XCJkcmF3ZXJcIiBjbGFzcz1cIm1kYy1kcmF3ZXJfX2RyYXdlclwiPlxuICAgICAgPGRpdiBjbGFzcz1cIm1kYy1kcmF3ZXJfX3Rvb2xiYXItc3BhY2VyXCIgdi1pZj1cInRvb2xiYXJTcGFjZXJcIj48L2Rpdj5cbiAgICAgIDxzbG90IC8+XG4gICAgPC9uYXY+XG4gIDwvYXNpZGU+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IE1EQ1RlbXBvcmFyeURyYXdlckZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL2RyYXdlci90ZW1wb3JhcnkvZm91bmRhdGlvbidcbmltcG9ydCAqIGFzIHV0aWwgZnJvbSAnQG1hdGVyaWFsL2RyYXdlci91dGlsJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtdGVtcG9yYXJ5LWRyYXdlcicsXG4gIG1vZGVsOiB7XG4gICAgcHJvcDogJ29wZW4nLFxuICAgIGV2ZW50OiAnY2hhbmdlJ1xuICB9LFxuICBwcm9wczoge1xuICAgICdvcGVuJzogQm9vbGVhbixcbiAgICAndG9vbGJhci1zcGFjZXInOiBCb29sZWFuLFxuICB9LFxuICBkYXRhICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgY2xhc3Nlczoge30sXG4gICAgfVxuICB9LFxuICB3YXRjaDoge1xuICAgIG9wZW4oKSB7XG4gICAgICB0aGlzLl9yZWZyZXNoKClcbiAgICB9XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBfcmVmcmVzaCgpIHtcbiAgICAgIGlmICh0aGlzLm9wZW4pIHtcbiAgICAgICAgdGhpcy5mb3VuZGF0aW9uICYmIHRoaXMuZm91bmRhdGlvbi5vcGVuKCkgICAgICAgICAgXG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgdGhpcy5mb3VuZGF0aW9uICYmIHRoaXMuZm91bmRhdGlvbi5jbG9zZSgpICAgICAgICAgIFxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgbW91bnRlZCAoKSB7XG4gICAgY29uc3Qge0ZPQ1VTQUJMRV9FTEVNRU5UUywgT1BBQ0lUWV9WQVJfTkFNRX0gPSBcbiAgICAgIE1EQ1RlbXBvcmFyeURyYXdlckZvdW5kYXRpb24uc3RyaW5nc1xuICAgIFxuICAgIHRoaXMuZm91bmRhdGlvbiA9IG5ldyBNRENUZW1wb3JhcnlEcmF3ZXJGb3VuZGF0aW9uKHtcbiAgICAgIGFkZENsYXNzOiAoY2xhc3NOYW1lKSA9PiB7XG4gICAgICAgIHRoaXMuJHNldCh0aGlzLmNsYXNzZXMsIGNsYXNzTmFtZSwgdHJ1ZSlcbiAgICAgIH0sXG4gICAgICByZW1vdmVDbGFzczogKGNsYXNzTmFtZSkgPT4ge1xuICAgICAgICB0aGlzLiRkZWxldGUodGhpcy5jbGFzc2VzLCBjbGFzc05hbWUpXG4gICAgICB9LFxuICAgICAgaGFzQ2xhc3M6IChjbGFzc05hbWUpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuJGVsLmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpXG4gICAgICB9LFxuICAgICAgYWRkQm9keUNsYXNzOiAoY2xhc3NOYW1lKSA9PiBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKSxcbiAgICAgIHJlbW92ZUJvZHlDbGFzczogKGNsYXNzTmFtZSkgPT4gZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSksXG4gICAgICBldmVudFRhcmdldEhhc0NsYXNzOiAodGFyZ2V0LCBjbGFzc05hbWUpID0+IHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKSxcbiAgICAgIGhhc05lY2Vzc2FyeURvbTogKCkgPT4ge1xuICAgICAgICByZXR1cm4gISF0aGlzLiRyZWZzLmRyYXdlclxuICAgICAgfSxcbiAgICAgIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0LCBoYW5kbGVyKSA9PiB7XG4gICAgICAgIHRoaXMuJGVsLmFkZEV2ZW50TGlzdGVuZXIodXRpbC5yZW1hcEV2ZW50KGV2dCksIGhhbmRsZXIsIHV0aWwuYXBwbHlQYXNzaXZlKCkpXG4gICAgICB9LFxuICAgICAgZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKGV2dCwgaGFuZGxlcikgPT4ge1xuICAgICAgICB0aGlzLiRlbC5yZW1vdmVFdmVudExpc3RlbmVyKHV0aWwucmVtYXBFdmVudChldnQpLCBoYW5kbGVyLCB1dGlsLmFwcGx5UGFzc2l2ZSgpKVxuICAgICAgfSxcbiAgICAgIHJlZ2lzdGVyRHJhd2VySW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0LCBoYW5kbGVyKSA9PiB7XG4gICAgICAgIHRoaXMuJHJlZnMuZHJhd2VyLmFkZEV2ZW50TGlzdGVuZXIodXRpbC5yZW1hcEV2ZW50KGV2dCksIGhhbmRsZXIpXG4gICAgICB9LFxuICAgICAgZGVyZWdpc3RlckRyYXdlckludGVyYWN0aW9uSGFuZGxlcjogKGV2dCwgaGFuZGxlcikgPT4ge1xuICAgICAgICB0aGlzLiRyZWZzLmRyYXdlci5yZW1vdmVFdmVudExpc3RlbmVyKHV0aWwucmVtYXBFdmVudChldnQpLCBoYW5kbGVyKVxuICAgICAgfSxcbiAgICAgIHJlZ2lzdGVyVHJhbnNpdGlvbkVuZEhhbmRsZXI6IChoYW5kbGVyKSA9PiB7XG4gICAgICAgIHRoaXMuJHJlZnMuZHJhd2VyLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBoYW5kbGVyKVxuICAgICAgfSxcbiAgICAgIGRlcmVnaXN0ZXJUcmFuc2l0aW9uRW5kSGFuZGxlcjogKGhhbmRsZXIpID0+IHtcbiAgICAgICAgdGhpcy4kcmVmcy5kcmF3ZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIGhhbmRsZXIpXG4gICAgICB9LFxuICAgICAgcmVnaXN0ZXJEb2N1bWVudEtleWRvd25IYW5kbGVyOiAoaGFuZGxlcikgPT4ge1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgaGFuZGxlcilcbiAgICAgIH0sXG4gICAgICBkZXJlZ2lzdGVyRG9jdW1lbnRLZXlkb3duSGFuZGxlcjogKGhhbmRsZXIpID0+IHtcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGhhbmRsZXIpXG4gICAgICB9LFxuICAgICAgZ2V0RHJhd2VyV2lkdGg6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuJHJlZnMuZHJhd2VyLm9mZnNldFdpZHRoXG4gICAgICB9LFxuICAgICAgc2V0VHJhbnNsYXRlWDogKHZhbHVlKSA9PiB7XG4gICAgICAgIHRoaXMuJHJlZnMuZHJhd2VyLnN0eWxlLnNldFByb3BlcnR5KFxuICAgICAgICAgIHV0aWwuZ2V0VHJhbnNmb3JtUHJvcGVydHlOYW1lKCksXG4gICAgICAgICAgdmFsdWUgPT09IG51bGwgPyBudWxsIDogYHRyYW5zbGF0ZVgoJHt2YWx1ZX1weClgXG4gICAgICAgIClcbiAgICAgIH0sXG4gICAgICB1cGRhdGVDc3NWYXJpYWJsZTogKHZhbHVlKSA9PiB7XG4gICAgICAgIGlmICh1dGlsLnN1cHBvcnRzQ3NzQ3VzdG9tUHJvcGVydGllcygpKSB7XG4gICAgICAgICAgdGhpcy4kZWwuc3R5bGUuc2V0UHJvcGVydHkoT1BBQ0lUWV9WQVJfTkFNRSwgdmFsdWUpXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBnZXRGb2N1c2FibGVFbGVtZW50czogKCkgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy4kcmVmcy5kcmF3ZXIucXVlcnlTZWxlY3RvckFsbChGT0NVU0FCTEVfRUxFTUVOVFMpXG4gICAgICB9LFxuICAgICAgc2F2ZUVsZW1lbnRUYWJTdGF0ZTogKGVsKSA9PiB7XG4gICAgICAgIHV0aWwuc2F2ZUVsZW1lbnRUYWJTdGF0ZShlbClcbiAgICAgIH0sXG4gICAgICByZXN0b3JlRWxlbWVudFRhYlN0YXRlOiAoZWwpID0+IHtcbiAgICAgICAgdXRpbC5yZXN0b3JlRWxlbWVudFRhYlN0YXRlKGVsKVxuICAgICAgfSxcbiAgICAgIG1ha2VFbGVtZW50VW50YWJiYWJsZTogKGVsKSA9PiB7XG4gICAgICAgIGVsLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAtMSlcbiAgICAgIH0sXG4gICAgICBub3RpZnlPcGVuOiAoKSA9PiB7XG4gICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsdHJ1ZSlcbiAgICAgICAgdGhpcy4kZW1pdCgnb3BlbicpXG4gICAgICB9LFxuICAgICAgbm90aWZ5Q2xvc2U6ICgpID0+IHtcbiAgICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJyxmYWxzZSlcbiAgICAgICAgdGhpcy4kZW1pdCgnY2xvc2UnKVxuICAgICAgfSxcbiAgICAgIGlzUnRsOiAoKSA9PiB7XG4gICAgICAgIC8qIGdsb2JhbCBnZXRDb21wdXRlZFN0eWxlICovXG4gICAgICAgIHJldHVybiBnZXRDb21wdXRlZFN0eWxlKHRoaXMuJGVsKS5nZXRQcm9wZXJ0eVZhbHVlKCdkaXJlY3Rpb24nKSA9PT0gJ3J0bCdcbiAgICAgIH0sXG4gICAgICBpc0RyYXdlcjogKGVsKSA9PiBlbCA9PT0gdGhpcy4kcmVmcy5kcmF3ZXIsXG4gICAgfSlcbiAgICB0aGlzLmZvdW5kYXRpb24gJiYgdGhpcy5mb3VuZGF0aW9uLmluaXQoKSAgXG4gICAgdGhpcy5fcmVmcmVzaCgpXG4gIH0sXG4gIGJlZm9yZURlc3Ryb3kgKCkge1xuICAgIHRoaXMuZm91bmRhdGlvbiAmJiB0aGlzLmZvdW5kYXRpb24uZGVzdHJveSgpXG4gICAgdGhpcy5mb3VuZGF0aW9uID0gbnVsbFxuICB9XG59XG48L3NjcmlwdD5cbiIsIjx0ZW1wbGF0ZT5cclxuICA8Y29tcG9uZW50ICByZWY9XCJkcmF3ZXJcIiBjbGFzcz1cIm1kYy1kcmF3ZXJcIlxyXG4gICAgICA6aXM9XCJ0eXBlXCIgdi1tb2RlbD1cIm9wZW5fXCJcclxuICAgICAgOnRvb2xiYXItc3BhY2VyPVwidG9vbGJhclNwYWNlclwiXHJcbiAgICAgIEBjaGFuZ2U9XCIkcm9vdC4kZW1pdCgnbWRjOmxheW91dCcpXCIgXHJcbiAgICAgIEBvcGVuPVwiJGVtaXQoJ29wZW4nKVwiIFxyXG4gICAgICBAY2xvc2U9XCIkZW1pdCgnY2xvc2UnKVwiID5cclxuICAgIDxzbG90IC8+XHJcbiAgPC9jb21wb25lbnQ+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5pbXBvcnQgbWRjUGVybWFuZW50RHJhd2VyIGZyb20gJy4vbWRjLXBlcm1hbmVudC1kcmF3ZXIudnVlJ1xyXG5pbXBvcnQgbWRjUGVyc2lzdGVudERyYXdlciBmcm9tICcuL21kYy1wZXJzaXN0ZW50LWRyYXdlci52dWUnXHJcbmltcG9ydCBtZGNUZW1wb3JhcnlEcmF3ZXIgZnJvbSAnLi9tZGMtdGVtcG9yYXJ5LWRyYXdlci52dWUnXHJcblxyXG5jb25zdCBtZWRpYSA9IG5ldyBjbGFzcyB7XHJcbiAgZ2V0IHNtYWxsICgpIHtcclxuICAgIHJldHVybiB0aGlzLl9zbWFsbCB8fCAodGhpcy5fc21hbGwgPVxyXG4gICAgICB3aW5kb3cubWF0Y2hNZWRpYSgnKG1heC13aWR0aDogODM5cHgpJykpXHJcbiAgfVxyXG5cclxuICBnZXQgbGFyZ2UgKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2xhcmdlIHx8ICh0aGlzLl9sYXJnZSA9XHJcbiAgICAgIHdpbmRvdy5tYXRjaE1lZGlhKCcobWluLXdpZHRoOiAxMjAwcHgpJykpXHJcbiAgfVxyXG59KClcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBuYW1lOiAnbWRjLWRyYXdlcicsXHJcbiAgcHJvcHM6IHtcclxuICAgIHBlcm1hbmVudDogQm9vbGVhbixcclxuICAgIHBlcnNpc3RlbnQ6IEJvb2xlYW4sXHJcbiAgICB0ZW1wb3Jhcnk6IEJvb2xlYW4sXHJcbiAgICBkcmF3ZXJUeXBlOiB7XHJcbiAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgdmFsaWRhdG9yOiAodmFsKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHZhbCBpbiBbJ3RlbXBvcmFyeScsICdwZXJzaXN0ZW50JywgJ3Blcm1hbmVudCddXHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICB0b29sYmFyU3BhY2VyOiBCb29sZWFuLFxyXG4gICAgdG9nZ2xlT246IFN0cmluZyxcclxuICAgIHRvZ2dsZU9uU291cmNlOiB7dHlwZTogT2JqZWN0LCByZXF1aXJlZDogZmFsc2V9LFxyXG4gICAgb3Blbk9uOiBTdHJpbmcsXHJcbiAgICBvcGVuT25Tb3VyY2U6IHt0eXBlOiBPYmplY3QsIHJlcXVpcmVkOiBmYWxzZX0sXHJcbiAgICBjbG9zZU9uOiBTdHJpbmcsXHJcbiAgICBjbG9zZU9uU291cmNlOiB7dHlwZTogT2JqZWN0LCByZXF1aXJlZDogZmFsc2V9LFxyXG4gIH0sXHJcbiAgcHJvdmlkZSAoKSB7XHJcbiAgICByZXR1cm4geyBtZGNEcmF3ZXI6IHRoaXMgfVxyXG4gIH0sXHJcbiAgZGF0YSAoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBzbWFsbDogZmFsc2UsXHJcbiAgICAgIGxhcmdlOiBmYWxzZSxcclxuICAgICAgb3Blbl86IGZhbHNlLFxyXG4gICAgfVxyXG4gIH0sXHJcbiAgY29tcG9uZW50czoge1xyXG4gICAgJ21kYy1wZXJtYW5lbnQtZHJhd2VyJzogbWRjUGVybWFuZW50RHJhd2VyLFxyXG4gICAgJ21kYy1wZXJzaXN0ZW50LWRyYXdlcic6IG1kY1BlcnNpc3RlbnREcmF3ZXIsXHJcbiAgICAnbWRjLXRlbXBvcmFyeS1kcmF3ZXInOiBtZGNUZW1wb3JhcnlEcmF3ZXJcclxuICB9LFxyXG4gIGNvbXB1dGVkOiB7XHJcbiAgICB0eXBlICgpIHtcclxuICAgICAgaWYgKHRoaXMucGVybWFuZW50KSB7XHJcbiAgICAgICAgcmV0dXJuICdtZGMtcGVybWFuZW50LWRyYXdlcidcclxuICAgICAgfSBlbHNlIGlmICh0aGlzLnBlcnNpc3RlbnQpIHtcclxuICAgICAgICByZXR1cm4gJ21kYy1wZXJzaXN0ZW50LWRyYXdlcidcclxuICAgICAgfSBlbHNlIGlmICh0aGlzLnRlbXBvcmFyeSkge1xyXG4gICAgICAgIHJldHVybiAnbWRjLXRlbXBvcmFyeS1kcmF3ZXInXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgc3dpdGNoICh0aGlzLmRyYXdlclR5cGUpIHtcclxuICAgICAgICAgIGNhc2UgJ3Blcm1hbmVudCc6XHJcbiAgICAgICAgICAgIHJldHVybiAnbWRjLXBlcm1hbmVudC1kcmF3ZXInO1xyXG4gICAgICAgICAgY2FzZSAncGVyc2lzdGVudCc6XHJcbiAgICAgICAgICAgIHJldHVybiAnbWRjLXBlcnNpc3RlbnQtZHJhd2VyJztcclxuICAgICAgICAgIGNhc2UgJ3RlbXBvcmFyeSc6XHJcbiAgICAgICAgICAgIHJldHVybiAnbWRjLXRlbXBvcmFyeS1kcmF3ZXInO1xyXG4gICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc21hbGwgPyAnbWRjLXRlbXBvcmFyeS1kcmF3ZXInIDogJ21kYy1wZXJzaXN0ZW50LWRyYXdlcidcclxuICAgICAgICB9XHJcbiAgICAgIH0gIFxyXG4gICAgfSxcclxuICAgIGlzUGVybWFuZW50ICgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMucGVybWFuZW50IHx8IHRoaXMudHlwZSA9PT0gJ21kYy1wZXJtYW5lbnQtZHJhd2VyJ1xyXG4gICAgfSxcclxuICAgIGlzUGVyc2lzdGVudCAoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLnBlcnNpc3RlbnQgfHwgdGhpcy50eXBlID09PSAnbWRjLXBlcnNpc3RlbnQtZHJhd2VyJ1xyXG4gICAgfSxcclxuICAgIGlzVGVtcG9yYXJ5ICgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMudGVtcG9yYXJ5IHx8IHRoaXMudHlwZSA9PT0gJ21kYy10ZW1wb3JhcnktZHJhd2VyJ1xyXG4gICAgfSxcclxuICAgIGlzUmVzcG9uc2l2ZSAoKSB7XHJcbiAgICAgIHJldHVybiAhKHRoaXMucGVybWFuZW50IHx8IHRoaXMucGVyc2lzdGVudCB8fCB0aGlzLnRlbXBvcmFyeSB8fCB0aGlzLmRyYXdlclR5cGUpXHJcbiAgICB9XHJcbiAgfSxcclxuICBtZXRob2RzOiB7XHJcbiAgICBvcGVuICgpIHtcclxuICAgICAgdGhpcy5vcGVuXyA9IHRydWVcclxuICAgIH0sXHJcbiAgICBjbG9zZSAoKSB7XHJcbiAgICAgIHRoaXMuaXNQZXJtYW5lbnQgfHwgKHRoaXMub3Blbl8gPSBmYWxzZSlcclxuICAgIH0sXHJcbiAgICB0b2dnbGUgKCkge1xyXG4gICAgICB0aGlzLmlzUGVybWFuZW50IHx8ICh0aGlzLmlzT3BlbigpID8gdGhpcy5jbG9zZSgpIDogdGhpcy5vcGVuKCkpXHJcbiAgICB9LFxyXG4gICAgaXNPcGVuICgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuaXNQZXJtYW5lbnR8fCAoIHRoaXMub3Blbl8gKVxyXG4gICAgfSxcclxuICAgIHJlZnJlc2hNZWRpYSAoKSB7XHJcbiAgICAgIHRoaXMuc21hbGwgPSBtZWRpYS5zbWFsbC5tYXRjaGVzXHJcbiAgICAgIHRoaXMubGFyZ2UgPSBtZWRpYS5sYXJnZS5tYXRjaGVzXHJcbiAgICAgIGlmICh0aGlzLmlzUmVzcG9uc2l2ZSkge1xyXG4gICAgICAgIGlmICh0aGlzLmxhcmdlKSB7XHJcbiAgICAgICAgICB0aGlzLm9wZW4oKVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgIHRoaXMuY2xvc2UoKVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0sXHJcbiAgY3JlYXRlZCAoKSB7XHJcbiAgICBpZiAod2luZG93ICYmIHdpbmRvdy5tYXRjaE1lZGlhKSB7XHJcbiAgICAgIHRoaXMuc21hbGwgPSBtZWRpYS5zbWFsbC5tYXRjaGVzXHJcbiAgICAgIHRoaXMubGFyZ2UgPSBtZWRpYS5sYXJnZS5tYXRjaGVzXHJcbiAgICB9XHJcbiAgfSxcclxuICBtb3VudGVkICgpIHtcclxuICAgIGlmICh0aGlzLnRvZ2dsZU9uKSB7XHJcbiAgICAgIGxldCBzb3VyY2UgPSB0aGlzLnRvZ2dsZU9uU291cmNlIHx8IHRoaXMuJHJvb3RcclxuICAgICAgc291cmNlLiRvbih0aGlzLnRvZ2dsZU9uLCAoKSA9PiB0aGlzLnRvZ2dsZSgpKVxyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMub3Blbk9uKSB7XHJcbiAgICAgIGxldCBzb3VyY2UgPSB0aGlzLm9wZW5PblNvdXJjZSB8fCB0aGlzLiRyb290XHJcbiAgICAgIHNvdXJjZS4kb24odGhpcy5vcGVuT24sICgpID0+IHRoaXMub3BlbigpKVxyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuY2xvc2VPbikge1xyXG4gICAgICBsZXQgc291cmNlID0gdGhpcy5jbG9zZU9uU291cmNlIHx8IHRoaXMuJHJvb3RcclxuICAgICAgc291cmNlLiRvbih0aGlzLmNsb3NlT24sICgpID0+IHRoaXMuY2xvc2UoKSlcclxuICAgIH1cclxuICAgIG1lZGlhLnNtYWxsLmFkZExpc3RlbmVyKHRoaXMucmVmcmVzaE1lZGlhKVxyXG4gICAgbWVkaWEubGFyZ2UuYWRkTGlzdGVuZXIodGhpcy5yZWZyZXNoTWVkaWEpXHJcbiAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB0aGlzLnJlZnJlc2hNZWRpYSgpKVxyXG4gIH0sXHJcbiAgYmVmb3JlRGVzdHJveSAoKSB7XHJcbiAgICBtZWRpYS5zbWFsbC5yZW1vdmVMaXN0ZW5lcih0aGlzLnJlZnJlc2hNZWRpYSlcclxuICAgIG1lZGlhLmxhcmdlLnJlbW92ZUxpc3RlbmVyKHRoaXMucmVmcmVzaE1lZGlhKVxyXG4gIH1cclxufVxyXG48L3NjcmlwdD5cclxuIiwiPHRlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwibWRjLWRyYXdlci1sYXlvdXRcIj5cbiAgICAgIDxzbG90IC8+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy1kcmF3ZXItbGF5b3V0Jyxcbn1cbjwvc2NyaXB0PlxuIiwiPHRlbXBsYXRlPlxuICA8aGVhZGVyIGNsYXNzPVwibWRjLWRyYXdlci1oZWFkZXIgbWRjLWRyYXdlcl9faGVhZGVyXCIgdi1pZj1cInNob3dcIj5cbiAgICA8ZGl2IGNsYXNzPVwibWRjLWRyYXdlcl9faGVhZGVyLWNvbnRlbnRcIj5cbiAgICAgIDxzbG90IC8+XG4gICAgPC9kaXY+XG4gIDwvaGVhZGVyPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy1kcmF3ZXItaGVhZGVyJyxcbiAgcHJvcHM6IHtcbiAgICAncGVybWFuZW50JzogQm9vbGVhbixcbiAgICAncGVyc2lzdGVudCc6IEJvb2xlYW4sXG4gICAgJ3RlbXBvcmFyeSc6IEJvb2xlYW5cbiAgfSxcbiAgaW5qZWN0OiBbJ21kY0RyYXdlciddLFxuICBjb21wdXRlZDoge1xuICAgIHNob3cgKCkge1xuICAgICAgaWYgKHRoaXMudGVtcG9yYXJ5IHx8IHRoaXMucGVyc2lzdGVudCB8fCB0aGlzLnBlcm1hbmVudCkge1xuICAgICAgICByZXR1cm4gKHRoaXMudGVtcG9yYXJ5ICYmIHRoaXMubWRjRHJhd2VyLmlzVGVtcG9yYXJ5KSB8fFxuICAgICAgICAgICh0aGlzLnBlcnNpc3RlbnQgJiYgdGhpcy5tZGNEcmF3ZXIuaXNQZXJzaXN0ZW50KSB8fFxuICAgICAgICAgICAgKHRoaXMucGVybWFuZW50ICYmIHRoaXMubWRjRHJhd2VyLmlzUGVybWFuZW50KVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbjwvc2NyaXB0PlxuIiwiPHRlbXBsYXRlPlxuICA8bmF2IGNsYXNzPVwibWRjLWRyYXdlci1saXN0IG1kYy1saXN0XCIgOmNsYXNzPVwiY2xhc3Nlc1wiPlxuICAgIDxzbG90Pjwvc2xvdD5cbiAgPC9uYXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnbWRjLWRyYXdlci1saXN0JyxcbiAgcHJvcHM6IHtcbiAgICAnZGVuc2UnOiBCb29sZWFuLFxuICB9LFxuICBkYXRhICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgY2xhc3Nlczoge1xuICAgICAgICAnbWRjLWxpc3QtLWRlbnNlJzogdGhpcy5kZW5zZVxuICAgICAgfVxuICAgIH1cbiAgfVxuICBcbn1cbjwvc2NyaXB0PiIsIjx0ZW1wbGF0ZT5cclxuICA8Y3VzdG9tLWxpbmsgOmxpbms9XCJsaW5rXCIgXHJcbiAgICBjbGFzcz1cIm1kYy1kcmF3ZXItaXRlbSBtZGMtbGlzdC1pdGVtXCIgXHJcbiAgICA6Y2xhc3M9XCJbY2xhc3NlcywgaXRlbUNsYXNzZXNdXCIgOnN0eWxlPVwic3R5bGVzXCJcclxuICAgIEBjbGljaz1cIm9uQ2xpY2tcIj5cclxuICAgIDxzcGFuIGNsYXNzPVwibWRjLWxpc3QtaXRlbV9fZ3JhcGhpY1wiIHYtaWY9XCJoYXNTdGFydERldGFpbFwiPlxyXG4gICAgICA8c2xvdCBuYW1lPVwic3RhcnQtZGV0YWlsXCI+XHJcbiAgICAgICAgPGkgY2xhc3M9XCJtYXRlcmlhbC1pY29uc1wiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPnt7c3RhcnRJY29ufX08L2k+XHJcbiAgICAgIDwvc2xvdD5cclxuICAgIDwvc3Bhbj5cclxuICAgIDxzbG90Pjwvc2xvdD5cclxuICA8L2N1c3RvbS1saW5rPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuaW1wb3J0IHtEaXNwYXRjaEV2ZW50TWl4aW4sIEN1c3RvbUxpbmtNaXhpbn0gZnJvbSAnLi4vYmFzZSdcclxuaW1wb3J0IHtSaXBwbGVCYXNlfSBmcm9tICcuLi9yaXBwbGUnXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgbmFtZTogJ21kYy1kcmF3ZXItaXRlbScsXHJcbiAgaW5qZWN0OiBbJ21kY0RyYXdlciddLFxyXG4gIG1peGluczogW0Rpc3BhdGNoRXZlbnRNaXhpbiwgQ3VzdG9tTGlua01peGluXSxcclxuICBwcm9wczoge1xyXG4gICAgc3RhcnRJY29uOiBTdHJpbmcsXHJcbiAgICB0ZW1wb3JhcnlDbG9zZTogeyBcclxuICAgICAgdHlwZTogQm9vbGVhbiwgXHJcbiAgICAgIGRlZmF1bHQ6IHRydWVcclxuICAgIH0sXHJcbiAgICBhY3RpdmF0ZWQ6IEJvb2xlYW4sXHJcbiAgICBleGFjdEFjdGl2ZUNsYXNzOiB7IFxyXG4gICAgICB0eXBlOiBTdHJpbmcsIFxyXG4gICAgICBkZWZhdWx0OiAnbWRjLWxpc3QtaXRlbS0tYWN0aXZhdGVkJyBcclxuICAgIH1cclxuICB9LFxyXG4gIGRhdGEgKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgY2xhc3Nlczoge30sXHJcbiAgICAgIHN0eWxlczoge31cclxuICAgIH1cclxuICB9LFxyXG4gIGNvbXB1dGVkOiB7XHJcbiAgICBpdGVtQ2xhc3NlcyAoKSB7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgJ21kYy1saXN0LWl0ZW0tLWFjdGl2YXRlZCc6IHRoaXMuYWN0aXZhdGVkXHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBoYXNTdGFydERldGFpbCAoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLnN0YXJ0SWNvbiB8fCB0aGlzLiRzbG90c1snc3RhcnQtZGV0YWlsJ11cclxuICAgIH1cclxuICB9LFxyXG4gIG1ldGhvZHM6IHtcclxuICAgIG9uQ2xpY2sgKGV2dCkge1xyXG4gICAgICB0aGlzLm1kY0RyYXdlci5pc1RlbXBvcmFyeSAmJiB0aGlzLnRlbXBvcmFyeUNsb3NlIFxyXG4gICAgICAgICYmIHRoaXMubWRjRHJhd2VyLmNsb3NlKClcclxuICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KGV2dClcclxuICAgIH1cclxuICB9LFxyXG4gIG1vdW50ZWQgKCkge1xyXG4gICAgdGhpcy5yaXBwbGUgPSBuZXcgUmlwcGxlQmFzZSh0aGlzKVxyXG4gICAgdGhpcy5yaXBwbGUuaW5pdCgpXHJcbiAgfSxcclxuICBiZWZvcmVEZXN0cm95ICgpIHtcclxuICAgIHRoaXMucmlwcGxlICYmIHRoaXMucmlwcGxlLmRlc3Ryb3koKVxyXG4gICAgdGhpcy5yaXBwbGUgPSBudWxsXHJcbiAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8dGVtcGxhdGU+XG4gIDxociBjbGFzcz1cIm1kYy1saXN0LWRpdmlkZXJcIj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtZHJhd2VyLWRpdmlkZXInLFxufVxuPC9zY3JpcHQ+XG4iLCJpbXBvcnQge0Jhc2VQbHVnaW59IGZyb20gJy4uL2Jhc2UnXG5pbXBvcnQgbWRjRHJhd2VyIGZyb20gJy4vbWRjLWRyYXdlci52dWUnXG5pbXBvcnQgbWRjRHJhd2VyTGF5b3V0IGZyb20gJy4vbWRjLWRyYXdlci1sYXlvdXQudnVlJ1xuaW1wb3J0IG1kY0RyYXdlckhlYWRlciBmcm9tICcuL21kYy1kcmF3ZXItaGVhZGVyLnZ1ZSdcbmltcG9ydCBtZGNEcmF3ZXJMaXN0IGZyb20gJy4vbWRjLWRyYXdlci1saXN0LnZ1ZSdcbmltcG9ydCBtZGNEcmF3ZXJJdGVtIGZyb20gJy4vbWRjLWRyYXdlci1pdGVtLnZ1ZSdcbmltcG9ydCBtZGNEcmF3ZXJEaXZpZGVyIGZyb20gJy4vbWRjLWRyYXdlci1kaXZpZGVyLnZ1ZSdcblxuZXhwb3J0IHtcbiAgbWRjRHJhd2VyLFxuICBtZGNEcmF3ZXJMYXlvdXQsXG4gIG1kY0RyYXdlckhlYWRlcixcbiAgbWRjRHJhd2VyTGlzdCxcbiAgbWRjRHJhd2VySXRlbSxcbiAgbWRjRHJhd2VyRGl2aWRlclxufVxuXG5leHBvcnQgZGVmYXVsdCBCYXNlUGx1Z2luKHtcbiAgbWRjRHJhd2VyLFxuICBtZGNEcmF3ZXJMYXlvdXQsXG4gIG1kY0RyYXdlckhlYWRlcixcbiAgbWRjRHJhd2VyTGlzdCxcbiAgbWRjRHJhd2VySXRlbSxcbiAgbWRjRHJhd2VyRGl2aWRlclxufSkiLCI8dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJtZGMtZWxldmF0aW9uXCI+PC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnbWRjLWVsZXZhdGlvbicsXG4gIHByb3BzOiB7XG4gIH1cbn1cbjwvc2NyaXB0PlxuIiwiaW1wb3J0IHtCYXNlUGx1Z2lufSBmcm9tICcuLi9iYXNlJ1xuaW1wb3J0IG1kY0VsZXZhdGlvbiBmcm9tICcuL21kYy1lbGV2YXRpb24udnVlJ1xuXG5leHBvcnQge1xuICBtZGNFbGV2YXRpb25cbn1cblxuZXhwb3J0IGRlZmF1bHQgQmFzZVBsdWdpbih7XG4gIG1kY0VsZXZhdGlvblxufSlcbiIsIjx0ZW1wbGF0ZT5cbiAgPGN1c3RvbS1idXR0b24gY2xhc3M9XCJtZGMtZmFiXCIgXG4gICAgOmNsYXNzPVwiY2xhc3Nlc1wiIDpzdHlsZT1cInN0eWxlc1wiXG4gICAgOmhyZWY9XCJocmVmXCIgOmxpbms9XCJsaW5rXCIgXG4gICAgQGNsaWNrPVwiZGlzcGF0Y2hFdmVudFwiID5cbiAgICA8c3BhbiBjbGFzcz1cIm1kYy1mYWJfX2ljb25cIj5cbiAgICAgIDxzbG90Pnt7IGljb24gfX08L3Nsb3Q+XG4gICAgPC9zcGFuPlxuICA8L2N1c3RvbS1idXR0b24+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHtEaXNwYXRjaEV2ZW50TWl4aW4sIEN1c3RvbUJ1dHRvbk1peGlufSBmcm9tICcuLi9iYXNlJ1xuaW1wb3J0IHtSaXBwbGVNaXhpbn0gZnJvbSAnLi4vcmlwcGxlJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtZmFiJyxcbiAgbWl4aW5zOiBbRGlzcGF0Y2hFdmVudE1peGluLCBDdXN0b21CdXR0b25NaXhpbiwgUmlwcGxlTWl4aW5dLFxuICBwcm9wczoge1xuICAgIGljb246IFN0cmluZyxcbiAgICBtaW5pOiBCb29sZWFuLFxuICAgIGFic29sdXRlOiBCb29sZWFuLFxuICAgIGZpeGVkOiBCb29sZWFuXG4gIH0sXG4gIGRhdGEgKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjbGFzc2VzOiB7XG4gICAgICAgICdtYXRlcmlhbC1pY29ucyc6IHRoaXMuaWNvbixcbiAgICAgICAgJ21kYy1mYWItLW1pbmknOiB0aGlzLm1pbmksXG4gICAgICAgICdtZGMtZmFiLS1hYnNvbHV0ZSc6IHRoaXMuYWJzb2x1dGUsXG4gICAgICAgICdtZGMtZmFiLS1maXhlZCc6IHRoaXMuZml4ZWRcbiAgICAgIH0sXG4gICAgICBzdHlsZXM6IHt9XG4gICAgfVxuICB9LFxuICB3YXRjaDoge1xuICAgIGljb24gKCkge1xuICAgICAgdGhpcy4kc2V0KHRoaXMuY2xhc3NlcywgJ21hdGVyaWFsLWljb25zJywgdGhpcy5pY29uIClcbiAgICB9LFxuICAgIG1pbmkgKCkge1xuICAgICAgdGhpcy4kc2V0KHRoaXMuY2xhc3NlcywgJ21kYy1mYWItLW1pbmknLCB0aGlzLm1pbmkgKVxuICAgIH1cbiAgfVxufVxuPC9zY3JpcHQ+XG4iLCJpbXBvcnQge0Jhc2VQbHVnaW59IGZyb20gJy4uL2Jhc2UnXG5pbXBvcnQgbWRjRkFCIGZyb20gJy4vbWRjLWZhYi52dWUnXG5cbmV4cG9ydCB7XG4gIG1kY0ZBQlxufVxuXG5leHBvcnQgZGVmYXVsdCBCYXNlUGx1Z2luKHtcbiAgbWRjRkFCXG59KVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmV4cG9ydCBjb25zdCBzdHJpbmdzID0ge1xuICBUSUxFU19TRUxFQ1RPUjogJy5tZGMtZ3JpZC1saXN0X190aWxlcycsXG4gIFRJTEVfU0VMRUNUT1I6ICcubWRjLWdyaWQtdGlsZScsXG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHtNRENGb3VuZGF0aW9ufSBmcm9tICdAbWF0ZXJpYWwvYmFzZS9pbmRleCc7XG5pbXBvcnQge3N0cmluZ3N9IGZyb20gJy4vY29uc3RhbnRzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTURDR3JpZExpc3RGb3VuZGF0aW9uIGV4dGVuZHMgTURDRm91bmRhdGlvbiB7XG4gIHN0YXRpYyBnZXQgc3RyaW5ncygpIHtcbiAgICByZXR1cm4gc3RyaW5ncztcbiAgfVxuXG4gIHN0YXRpYyBnZXQgZGVmYXVsdEFkYXB0ZXIoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGdldE9mZnNldFdpZHRoOiAoKSA9PiAvKiBudW1iZXIgKi8gMCxcbiAgICAgIGdldE51bWJlck9mVGlsZXM6ICgpID0+IC8qIG51bWJlciAqLyAwLFxuICAgICAgZ2V0T2Zmc2V0V2lkdGhGb3JUaWxlQXRJbmRleDogKC8qIGluZGV4OiBudW1iZXIgKi8pID0+IC8qIG51bWJlciAqLyAwLFxuICAgICAgc2V0U3R5bGVGb3JUaWxlc0VsZW1lbnQ6ICgvKiBwcm9wZXJ0eTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nICovKSA9PiB7fSxcbiAgICAgIHJlZ2lzdGVyUmVzaXplSGFuZGxlcjogKC8qIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgZGVyZWdpc3RlclJlc2l6ZUhhbmRsZXI6ICgvKiBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICB9O1xuICB9XG4gIGNvbnN0cnVjdG9yKGFkYXB0ZXIpIHtcbiAgICBzdXBlcihPYmplY3QuYXNzaWduKE1EQ0dyaWRMaXN0Rm91bmRhdGlvbi5kZWZhdWx0QWRhcHRlciwgYWRhcHRlcikpO1xuICAgIHRoaXMucmVzaXplSGFuZGxlcl8gPSAoKSA9PiB0aGlzLmFsaWduQ2VudGVyKCk7XG4gICAgdGhpcy5yZXNpemVGcmFtZV8gPSAwO1xuICB9XG4gIGluaXQoKSB7XG4gICAgdGhpcy5hbGlnbkNlbnRlcigpO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJSZXNpemVIYW5kbGVyKHRoaXMucmVzaXplSGFuZGxlcl8pO1xuICB9XG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVyUmVzaXplSGFuZGxlcih0aGlzLnJlc2l6ZUhhbmRsZXJfKTtcbiAgfVxuICBhbGlnbkNlbnRlcigpIHtcbiAgICBpZiAodGhpcy5yZXNpemVGcmFtZV8gIT09IDApIHtcbiAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMucmVzaXplRnJhbWVfKTtcbiAgICB9XG4gICAgdGhpcy5yZXNpemVGcmFtZV8gPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgdGhpcy5hbGlnbkNlbnRlcl8oKTtcbiAgICAgIHRoaXMucmVzaXplRnJhbWVfID0gMDtcbiAgICB9KTtcbiAgfVxuICBhbGlnbkNlbnRlcl8oKSB7XG4gICAgaWYgKHRoaXMuYWRhcHRlcl8uZ2V0TnVtYmVyT2ZUaWxlcygpID09IDApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgZ3JpZFdpZHRoID0gdGhpcy5hZGFwdGVyXy5nZXRPZmZzZXRXaWR0aCgpO1xuICAgIGNvbnN0IGl0ZW1XaWR0aCA9IHRoaXMuYWRhcHRlcl8uZ2V0T2Zmc2V0V2lkdGhGb3JUaWxlQXRJbmRleCgwKTtcbiAgICBjb25zdCB0aWxlc1dpZHRoID0gaXRlbVdpZHRoICogTWF0aC5mbG9vcihncmlkV2lkdGggLyBpdGVtV2lkdGgpO1xuICAgIHRoaXMuYWRhcHRlcl8uc2V0U3R5bGVGb3JUaWxlc0VsZW1lbnQoJ3dpZHRoJywgYCR7dGlsZXNXaWR0aH1weGApO1xuICB9XG59XG4iLCI8dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJtZGMtZ3JpZC1saXN0XCI+XG4gICAgPHVsIGNsYXNzPVwibWRjLWdyaWQtbGlzdF9fdGlsZXNcIiA6Y2xhc3M9XCJjbGFzc2VzXCIgOnN0eWxlPXN0eWxlcz5cbiAgICAgICAgPHNsb3Q+PC9zbG90PlxuICAgIDwvdWw+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBNRENHcmlkTGlzdEZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL2dyaWQtbGlzdC9mb3VuZGF0aW9uJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtZ3JpZC1saXN0JyxcbiAgcHJvcHM6IHtcbiAgICAnd2lkdGgnOiBbU3RyaW5nLCBOdW1iZXJdLFxuICAgICdyYXRpbyc6IFN0cmluZyxcbiAgICAnbmFycm93LWd1dHRlcic6IEJvb2xlYW4sXG4gICAgJ2hlYWRlci1jYXB0aW9uJzogQm9vbGVhbixcbiAgICAnaWNvbi1hbGlnbi1zdGFydCc6IEJvb2xlYW4sXG4gICAgJ2ljb24tYWxpZ24tZW5kJzogQm9vbGVhbixcbiAgICAnd2l0aC1zdXBwb3J0LXRleHQnOiBCb29sZWFuLFxuICAgICdpbnRlcmFjdGl2ZSc6IEJvb2xlYW5cbiAgfSxcbiAgcHJvdmlkZSAoKSB7XG4gICAgcmV0dXJuIHsgbWRjR3JpZDogdGhpcyB9XG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgY2xhc3NlcyAoKSB7XG4gICAgICBsZXQgY2xhc3NlcyA9IHt9XG5cbiAgICAgIGNsYXNzZXNbJ21kYy1ncmlkLWxpc3QtLXRpbGUtZ3V0dGVyLTEnXSA9IHRoaXMubmFycm93R3V0dGVyXG4gICAgICBjbGFzc2VzWydtZGMtZ3JpZC1saXN0LS1oZWFkZXItY2FwdGlvbiddID0gdGhpcy5oZWFkZXJDYXB0aW9uXG4gICAgICBjbGFzc2VzW2BtZGMtZ3JpZC1saXN0LS10aWxlLWFzcGVjdC0ke3RoaXMucmF0aW99YF0gPSB0aGlzLnJhdGlvXG4gICAgICBjbGFzc2VzWydtZGMtZ3JpZC1saXN0LS13aXRoLWljb24tYWxpZ24tc3RhcnQnXSA9IHRoaXMuaWNvbkFsaWduU3RhcnRcbiAgICAgIGNsYXNzZXNbJ21kYy1ncmlkLWxpc3QtLXdpdGgtaWNvbi1hbGlnbi1lbmQnXSA9IHRoaXMuaWNvbkFsaWduRW5kXG4gICAgICBjbGFzc2VzWydtZGMtZ3JpZC1saXN0LS10d29saW5lLWNhcHRpb24nXSA9IHRoaXMud2l0aFN1cHBvcnRUZXh0XG4gICAgICBjbGFzc2VzWydtZGMtZ3JpZC1saXN0LS1ub24taW50ZXJhY3RpdmUnXSA9ICF0aGlzLmludGVyYWN0aXZlXG5cbiAgICAgIHJldHVybiBjbGFzc2VzXG4gICAgfSxcbiAgICBzdHlsZXMgKCkge1xuICAgICAgdmFyIGRlZmF1bHRXaWR0aCA9IDIwMFxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgJy0tbWRjLWdyaWQtbGlzdC10aWxlLXdpZHRoJzogYCR7dGhpcy53aWR0aCB8fCBkZWZhdWx0V2lkdGh9cHhgXG4gICAgICB9XG4gICAgfVxuICB9LFxuICBtb3VudGVkICgpIHtcbiAgICB0aGlzLmZvdW5kYXRpb24gPSBuZXcgTURDR3JpZExpc3RGb3VuZGF0aW9uKHtcbiAgICAgIGdldE9mZnNldFdpZHRoOiAoKSA9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLiRlbC5vZmZzZXRXaWR0aFxuICAgICAgfSxcbiAgICAgIGdldE51bWJlck9mVGlsZXM6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoXG4gICAgICAgICAgTURDR3JpZExpc3RGb3VuZGF0aW9uLnN0cmluZ3MuVElMRV9TRUxFQ1RPUikubGVuZ3RoXG4gICAgICB9LFxuICAgICAgZ2V0T2Zmc2V0V2lkdGhGb3JUaWxlQXRJbmRleDogKGluZGV4KSA9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLiRlbC5xdWVyeVNlbGVjdG9yQWxsKFxuICAgICAgICAgIE1EQ0dyaWRMaXN0Rm91bmRhdGlvbi5zdHJpbmdzLlRJTEVfU0VMRUNUT1IpW2luZGV4XS5vZmZzZXRXaWR0aFxuICAgICAgfSxcbiAgICAgIHNldFN0eWxlRm9yVGlsZXNFbGVtZW50OiAocHJvcGVydHksIHZhbHVlKSA9PiB7XG4gICAgICAgIHRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgICAgTURDR3JpZExpc3RGb3VuZGF0aW9uLnN0cmluZ3MuVElMRVNfU0VMRUNUT1IpLnN0eWxlW3Byb3BlcnR5XSA9IHZhbHVlXG4gICAgICB9LFxuICAgICAgcmVnaXN0ZXJSZXNpemVIYW5kbGVyOiAoaGFuZGxlcikgPT4ge1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaGFuZGxlcilcbiAgICAgIH0sXG4gICAgICBkZXJlZ2lzdGVyUmVzaXplSGFuZGxlcjogKGhhbmRsZXIpID0+IHtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGhhbmRsZXIpXG4gICAgICB9XG4gICAgfSlcbiAgICB0aGlzLmZvdW5kYXRpb24uaW5pdCgpXG4gIH0sXG4gIGJlZm9yZURlc3Ryb3kgKCkge1xuICAgIHRoaXMuZm91bmRhdGlvbi5kZXN0cm95KClcbiAgfVxufVxuPC9zY3JpcHQ+XG4iLCI8dGVtcGxhdGU+XG4gIDxsaSBjbGFzcz1cIm1kYy1ncmlkLXRpbGVcIiBAY2xpY2s9XCJvbkNsaWNrXCJcbiAgICA6Y2xhc3M9XCJbY2xhc3NlcywgaXRlbUNsYXNzZXNdXCIgOnN0eWxlPVwic3R5bGVzXCJcbiAgICA6dGFiaW5kZXg9XCJpc0ludGVyYWN0aXZlID8gJzAnIDogdW5kZWZpbmVkXCJcbiAgICB2LW9uPVwiaXNJbnRlcmFjdGl2ZSA/ICRsaXN0ZW5lcnMgOiB7fVwiPlxuICAgIDxkaXYgY2xhc3M9XCJtZGMtZ3JpZC10aWxlX19wcmltYXJ5XCIgdi1pZj1cImNvdmVyXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwibWRjLWdyaWQtdGlsZV9fcHJpbWFyeS1jb250ZW50XCJcbiAgICAgICAgOnN0eWxlPVwieyBiYWNrZ3JvdW5kSW1hZ2U6ICd1cmwoJyArIHNyYyArICcpJyB9XCI+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwibWRjLWdyaWQtdGlsZV9fcHJpbWFyeVwiIHYtZWxzZT5cbiAgICAgICAgPGltZyBjbGFzcz1cIm1kYy1ncmlkLXRpbGVfX3ByaW1hcnktY29udGVudFwiIDpzcmM9XCJzcmNcIiAvPlxuICAgIDwvZGl2PlxuICAgIDxzcGFuIGNsYXNzPVwibWRjLWdyaWQtdGlsZV9fc2Vjb25kYXJ5XCIgdi1pZj1cInRpdGxlIHx8IHN1cHBvcnRUZXh0XCI+XG4gICAgICA8aSBjbGFzcz1cIm1kYy1ncmlkLXRpbGVfX2ljb24gbWF0ZXJpYWwtaWNvbnNcIiB2LWlmPVwiaWNvblwiPnt7IGljb24gfX08L2k+XG4gICAgICA8c3BhbiBjbGFzcz1cIm1kYy1ncmlkLXRpbGVfX3RpdGxlXCIgdi1pZj1cInRpdGxlXCI+e3sgdGl0bGUgfX08L3NwYW4+XG4gICAgICA8c3BhbiBjbGFzcz1cIm1kYy1ncmlkLXRpbGVfX3N1cHBvcnQtdGV4dFwiIHYtaWY9XCJzdXBwb3J0VGV4dFwiPnt7IHN1cHBvcnRUZXh0IH19PC9zcGFuPlxuICAgIDwvc3Bhbj5cbiAgPC9saT5cbjwvdGVtcGxhdGU+XG5cblxuPHNjcmlwdD5cbmltcG9ydCB7RGlzcGF0Y2hFdmVudE1peGlufSBmcm9tICcuLi9iYXNlJ1xuaW1wb3J0IHtSaXBwbGVCYXNlfSBmcm9tICcuLi9yaXBwbGUnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy1ncmlkLXRpbGUnLFxuICBpbmplY3Q6IFsnbWRjR3JpZCddLFxuICBtaXhpbnM6IFtEaXNwYXRjaEV2ZW50TWl4aW5dLFxuICBwcm9wczoge1xuICAgICdzcmMnOiBTdHJpbmcsXG4gICAgJ2NvdmVyJzogQm9vbGVhbixcbiAgICAnaWNvbic6IFN0cmluZyxcbiAgICAndGl0bGUnOiBTdHJpbmcsXG4gICAgJ3N1cHBvcnQtdGV4dCc6IFN0cmluZyxcbiAgICAnc2VsZWN0ZWQnOiBCb29sZWFuLFxuICAgICdhY3RpdmF0ZWQnOiBCb29sZWFuXG4gIH0sXG4gIGRhdGEgKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjbGFzc2VzOiB7fSxcbiAgICAgIHN0eWxlczoge31cbiAgICB9XG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgaXRlbUNsYXNzZXMgKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgJ21kYy1ncmlkLXRpbGUtLXNlbGVjdGVkJzogdGhpcy5zZWxlY3RlZCxcbiAgICAgICAgJ21kYy1ncmlkLXRpbGUtLWFjdGl2YXRlZCc6IHRoaXMuYWN0aXZhdGVkXG4gICAgICB9XG4gICAgfSxcbiAgICBpc0ludGVyYWN0aXZlICgpIHtcbiAgICAgIHJldHVybiB0aGlzLm1kY0dyaWQgJiYgdGhpcy5tZGNHcmlkLmludGVyYWN0aXZlXG4gICAgfSxcbiAgICBoYXNTdGFydERldGFpbCAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5zdGFydEljb24gfHwgdGhpcy4kc2xvdHNbJ3N0YXJ0LWRldGFpbCddXG4gICAgfSxcbiAgICBoYXNFbmREZXRhaWwgKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZW5kSWNvbiB8fCB0aGlzLiRzbG90c1snZW5kLWRldGFpbCddXG4gICAgfVxuICB9LFxuICB3YXRjaDoge1xuICAgIGlzSW50ZXJhY3RpdmUgKHZhbHVlKSB7XG4gICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgdGhpcy5hZGRSaXBwbGUoKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5yZW1vdmVSaXBwbGUoKVxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIG9uQ2xpY2sgKGV2dCkge1xuICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KGV2dClcbiAgICB9LFxuICAgIGFkZFJpcHBsZSAoKSB7XG4gICAgICBpZiAoIXRoaXMucmlwcGxlKSB7XG4gICAgICAgIGxldCByaXBwbGUgPSBuZXcgUmlwcGxlQmFzZSh0aGlzKVxuICAgICAgICByaXBwbGUuaW5pdCgpXG4gICAgICAgIHRoaXMucmlwcGxlID0gcmlwcGxlXG4gICAgICB9XG4gICAgfSxcbiAgICByZW1vdmVSaXBwbGUgKCkge1xuICAgICAgaWYgKHRoaXMucmlwcGxlKSB7XG4gICAgICAgIGxldCByaXBwbGUgPSB0aGlzLnJpcHBsZVxuICAgICAgICB0aGlzLnJpcHBsZSA9IG51bGxcbiAgICAgICAgcmlwcGxlLmRlc3Ryb3koKVxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgbW91bnRlZCAoKSB7XG4gICAgdGhpcy5pc0ludGVyYWN0aXZlICYmIHRoaXMuYWRkUmlwcGxlKClcbiAgfSxcbiAgYmVmb3JlRGVzdHJveSAoKSB7XG4gICAgdGhpcy5yZW1vdmVSaXBwbGUoKVxuICB9XG59XG48L3NjcmlwdD5cbiIsImltcG9ydCB7QmFzZVBsdWdpbn0gZnJvbSAnLi4vYmFzZSdcbmltcG9ydCBtZGNHcmlkTGlzdCBmcm9tICcuL21kYy1ncmlkLWxpc3QudnVlJ1xuaW1wb3J0IG1kY0dyaWRUaWxlIGZyb20gJy4vbWRjLWdyaWQtdGlsZS52dWUnXG5cbmV4cG9ydCB7XG4gIG1kY0dyaWRMaXN0LFxuICBtZGNHcmlkVGlsZVxufVxuXG5leHBvcnQgZGVmYXVsdCBCYXNlUGx1Z2luKHtcbiAgbWRjR3JpZExpc3QsXG4gIG1kY0dyaWRUaWxlXG59KVxuIiwiPHRlbXBsYXRlPlxuICA8c3BhbiBjbGFzcz1cIm1kYy1pY29uIG1kYy1pY29uLS1tYXRlcmlhbFwiIDpjbGFzcz1cInsnbWF0ZXJpYWwtaWNvbnMnOiEhaWNvbn1cIj5cbiAgICA8c2xvdD57eyBpY29uIH19PC9zbG90PlxuICA8L3NwYW4+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnbWRjLWljb24nLFxuICBwcm9wczoge1xuICAgIGljb246IFN0cmluZ1xuICB9XG59XG48L3NjcmlwdD5cbiIsImltcG9ydCB7QmFzZVBsdWdpbn0gZnJvbSAnLi4vYmFzZSdcclxuaW1wb3J0IG1kY0ljb24gZnJvbSAnLi9tZGMtaWNvbi52dWUnXHJcblxyXG5leHBvcnQge1xyXG4gIG1kY0ljb25cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQmFzZVBsdWdpbih7XHJcbiAgbWRjSWNvblxyXG59KVxyXG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyogZXNsaW50IG5vLXVudXNlZC12YXJzOiBbMiwge1wiYXJnc1wiOiBcIm5vbmVcIn1dICovXG5cbi8qKlxuICogQWRhcHRlciBmb3IgTURDIEljb24gVG9nZ2xlLiBQcm92aWRlcyBhbiBpbnRlcmZhY2UgZm9yIG1hbmFnaW5nXG4gKiAtIGNsYXNzZXNcbiAqIC0gZG9tXG4gKiAtIGlubmVyIHRleHRcbiAqIC0gZXZlbnQgaGFuZGxlcnNcbiAqIC0gZXZlbnQgZGlzcGF0Y2hcbiAqXG4gKiBBZGRpdGlvbmFsbHksIHByb3ZpZGVzIHR5cGUgaW5mb3JtYXRpb24gZm9yIHRoZSBhZGFwdGVyIHRvIHRoZSBDbG9zdXJlXG4gKiBjb21waWxlci5cbiAqXG4gKiBJbXBsZW1lbnQgdGhpcyBhZGFwdGVyIGZvciB5b3VyIGZyYW1ld29yayBvZiBjaG9pY2UgdG8gZGVsZWdhdGUgdXBkYXRlcyB0b1xuICogdGhlIGNvbXBvbmVudCBpbiB5b3VyIGZyYW1ld29yayBvZiBjaG9pY2UuIFNlZSBhcmNoaXRlY3R1cmUgZG9jdW1lbnRhdGlvblxuICogZm9yIG1vcmUgZGV0YWlscy5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRlcmlhbC1jb21wb25lbnRzL21hdGVyaWFsLWNvbXBvbmVudHMtd2ViL2Jsb2IvbWFzdGVyL2RvY3MvY29kZS9hcmNoaXRlY3R1cmUubWRcbiAqXG4gKiBAcmVjb3JkXG4gKi9cblxuY2xhc3MgTURDSWNvblRvZ2dsZUFkYXB0ZXIge1xuICAvKiogQHBhcmFtIHtzdHJpbmd9IGNsYXNzTmFtZSAqL1xuICBhZGRDbGFzcyhjbGFzc05hbWUpIHt9XG5cbiAgLyoqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWUgKi9cbiAgcmVtb3ZlQ2xhc3MoY2xhc3NOYW1lKSB7fVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICAgKiBAcGFyYW0geyFFdmVudExpc3RlbmVyfSBoYW5kbGVyXG4gICAqL1xuICByZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcih0eXBlLCBoYW5kbGVyKSB7fVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICAgKiBAcGFyYW0geyFFdmVudExpc3RlbmVyfSBoYW5kbGVyXG4gICAqL1xuICBkZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKHR5cGUsIGhhbmRsZXIpIHt9XG5cbiAgLyoqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0ICovXG4gIHNldFRleHQodGV4dCkge31cblxuICAvKiogQHJldHVybiB7bnVtYmVyfSAqL1xuICBnZXRUYWJJbmRleCgpIHt9XG5cbiAgLyoqIEBwYXJhbSB7bnVtYmVyfSB0YWJJbmRleCAqL1xuICBzZXRUYWJJbmRleCh0YWJJbmRleCkge31cblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAgICogQHJldHVybiB7c3RyaW5nfVxuICAgKi9cbiAgZ2V0QXR0cihuYW1lKSB7fVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAgICovXG4gIHNldEF0dHIobmFtZSwgdmFsdWUpIHt9XG5cbiAgLyoqIEBwYXJhbSB7c3RyaW5nfSBuYW1lICovXG4gIHJtQXR0cihuYW1lKSB7fVxuXG4gIC8qKiBAcGFyYW0geyFJY29uVG9nZ2xlRXZlbnR9IGV2dERhdGEgKi9cbiAgbm90aWZ5Q2hhbmdlKGV2dERhdGEpIHt9XG59XG5cbi8qKlxuICogQHR5cGVkZWYgeyF7XG4gKiAgIGlzT246IGJvb2xlYW4sXG4gKiB9fVxuICovXG5sZXQgSWNvblRvZ2dsZUV2ZW50O1xuXG5leHBvcnQge01EQ0ljb25Ub2dnbGVBZGFwdGVyLCBJY29uVG9nZ2xlRXZlbnR9O1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qKiBAZW51bSB7c3RyaW5nfSAqL1xuY29uc3QgY3NzQ2xhc3NlcyA9IHtcbiAgUk9PVDogJ21kYy1pY29uLXRvZ2dsZScsXG4gIERJU0FCTEVEOiAnbWRjLWljb24tdG9nZ2xlLS1kaXNhYmxlZCcsXG59O1xuXG4vKiogQGVudW0ge3N0cmluZ30gKi9cbmNvbnN0IHN0cmluZ3MgPSB7XG4gIERBVEFfVE9HR0xFX09OOiAnZGF0YS10b2dnbGUtb24nLFxuICBEQVRBX1RPR0dMRV9PRkY6ICdkYXRhLXRvZ2dsZS1vZmYnLFxuICBBUklBX1BSRVNTRUQ6ICdhcmlhLXByZXNzZWQnLFxuICBBUklBX0RJU0FCTEVEOiAnYXJpYS1kaXNhYmxlZCcsXG4gIEFSSUFfTEFCRUw6ICdhcmlhLWxhYmVsJyxcbiAgQ0hBTkdFX0VWRU5UOiAnTURDSWNvblRvZ2dsZTpjaGFuZ2UnLFxufTtcblxuZXhwb3J0IHtjc3NDbGFzc2VzLCBzdHJpbmdzfTtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgTURDRm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvYmFzZS9mb3VuZGF0aW9uJztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG5pbXBvcnQge01EQ0ljb25Ub2dnbGVBZGFwdGVyLCBJY29uVG9nZ2xlRXZlbnR9IGZyb20gJy4vYWRhcHRlcic7XG5pbXBvcnQge2Nzc0NsYXNzZXMsIHN0cmluZ3N9IGZyb20gJy4vY29uc3RhbnRzJztcblxuLyoqXG4gKiBAZXh0ZW5kcyB7TURDRm91bmRhdGlvbjwhTURDSWNvblRvZ2dsZUFkYXB0ZXI+fVxuICovXG5jbGFzcyBNRENJY29uVG9nZ2xlRm91bmRhdGlvbiBleHRlbmRzIE1EQ0ZvdW5kYXRpb24ge1xuICBzdGF0aWMgZ2V0IGNzc0NsYXNzZXMoKSB7XG4gICAgcmV0dXJuIGNzc0NsYXNzZXM7XG4gIH1cblxuICBzdGF0aWMgZ2V0IHN0cmluZ3MoKSB7XG4gICAgcmV0dXJuIHN0cmluZ3M7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGRlZmF1bHRBZGFwdGVyKCkge1xuICAgIHJldHVybiB7XG4gICAgICBhZGRDbGFzczogKC8qIGNsYXNzTmFtZTogc3RyaW5nICovKSA9PiB7fSxcbiAgICAgIHJlbW92ZUNsYXNzOiAoLyogY2xhc3NOYW1lOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6ICgvKiB0eXBlOiBzdHJpbmcsIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKC8qIHR5cGU6IHN0cmluZywgaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBzZXRUZXh0OiAoLyogdGV4dDogc3RyaW5nICovKSA9PiB7fSxcbiAgICAgIGdldFRhYkluZGV4OiAoKSA9PiAvKiBudW1iZXIgKi8gMCxcbiAgICAgIHNldFRhYkluZGV4OiAoLyogdGFiSW5kZXg6IG51bWJlciAqLykgPT4ge30sXG4gICAgICBnZXRBdHRyOiAoLyogbmFtZTogc3RyaW5nICovKSA9PiAvKiBzdHJpbmcgKi8gJycsXG4gICAgICBzZXRBdHRyOiAoLyogbmFtZTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nICovKSA9PiB7fSxcbiAgICAgIHJtQXR0cjogKC8qIG5hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICBub3RpZnlDaGFuZ2U6ICgvKiBldnREYXRhOiBJY29uVG9nZ2xlRXZlbnQgKi8pID0+IHt9LFxuICAgIH07XG4gIH1cblxuICBjb25zdHJ1Y3RvcihhZGFwdGVyKSB7XG4gICAgc3VwZXIoT2JqZWN0LmFzc2lnbihNRENJY29uVG9nZ2xlRm91bmRhdGlvbi5kZWZhdWx0QWRhcHRlciwgYWRhcHRlcikpO1xuXG4gICAgLyoqIEBwcml2YXRlIHtib29sZWFufSAqL1xuICAgIHRoaXMub25fID0gZmFsc2U7XG5cbiAgICAvKiogQHByaXZhdGUge2Jvb2xlYW59ICovXG4gICAgdGhpcy5kaXNhYmxlZF8gPSBmYWxzZTtcblxuICAgIC8qKiBAcHJpdmF0ZSB7bnVtYmVyfSAqL1xuICAgIHRoaXMuc2F2ZWRUYWJJbmRleF8gPSAtMTtcblxuICAgIC8qKiBAcHJpdmF0ZSB7P0ljb25Ub2dnbGVTdGF0ZX0gKi9cbiAgICB0aGlzLnRvZ2dsZU9uRGF0YV8gPSBudWxsO1xuXG4gICAgLyoqIEBwcml2YXRlIHs/SWNvblRvZ2dsZVN0YXRlfSAqL1xuICAgIHRoaXMudG9nZ2xlT2ZmRGF0YV8gPSBudWxsO1xuXG4gICAgdGhpcy5jbGlja0hhbmRsZXJfID0gLyoqIEBwcml2YXRlIHshRXZlbnRMaXN0ZW5lcn0gKi8gKFxuICAgICAgKCkgPT4gdGhpcy50b2dnbGVGcm9tRXZ0XygpKTtcblxuICAgIC8qKiBAcHJpdmF0ZSB7Ym9vbGVhbn0gKi9cbiAgICB0aGlzLmlzSGFuZGxpbmdLZXlkb3duXyA9IGZhbHNlO1xuXG4gICAgdGhpcy5rZXlkb3duSGFuZGxlcl8gPSAvKiogQHByaXZhdGUgeyFFdmVudExpc3RlbmVyfSAqLyAoKC8qKiBAdHlwZSB7IUtleWJvYXJkS2V5fSAqLyBldnQpID0+IHtcbiAgICAgIGlmIChpc1NwYWNlKGV2dCkpIHtcbiAgICAgICAgdGhpcy5pc0hhbmRsaW5nS2V5ZG93bl8gPSB0cnVlO1xuICAgICAgICByZXR1cm4gZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB0aGlzLmtleXVwSGFuZGxlcl8gPSAvKiogQHByaXZhdGUgeyFFdmVudExpc3RlbmVyfSAqLyAoKC8qKiBAdHlwZSB7IUtleWJvYXJkS2V5fSAqLyBldnQpID0+IHtcbiAgICAgIGlmIChpc1NwYWNlKGV2dCkpIHtcbiAgICAgICAgdGhpcy5pc0hhbmRsaW5nS2V5ZG93bl8gPSBmYWxzZTtcbiAgICAgICAgdGhpcy50b2dnbGVGcm9tRXZ0XygpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgaW5pdCgpIHtcbiAgICB0aGlzLnJlZnJlc2hUb2dnbGVEYXRhKCk7XG4gICAgdGhpcy5zYXZlZFRhYkluZGV4XyA9IHRoaXMuYWRhcHRlcl8uZ2V0VGFiSW5kZXgoKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdjbGljaycsIHRoaXMuY2xpY2tIYW5kbGVyXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcigna2V5ZG93bicsIHRoaXMua2V5ZG93bkhhbmRsZXJfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdrZXl1cCcsIHRoaXMua2V5dXBIYW5kbGVyXyk7XG4gIH1cblxuICByZWZyZXNoVG9nZ2xlRGF0YSgpIHtcbiAgICBjb25zdCB7REFUQV9UT0dHTEVfT04sIERBVEFfVE9HR0xFX09GRn0gPSBNRENJY29uVG9nZ2xlRm91bmRhdGlvbi5zdHJpbmdzO1xuICAgIHRoaXMudG9nZ2xlT25EYXRhXyA9IHRoaXMucGFyc2VKc29uRGF0YUF0dHJfKERBVEFfVE9HR0xFX09OKTtcbiAgICB0aGlzLnRvZ2dsZU9mZkRhdGFfID0gdGhpcy5wYXJzZUpzb25EYXRhQXR0cl8oREFUQV9UT0dHTEVfT0ZGKTtcbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdjbGljaycsIHRoaXMuY2xpY2tIYW5kbGVyXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdrZXlkb3duJywgdGhpcy5rZXlkb3duSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcigna2V5dXAnLCB0aGlzLmtleXVwSGFuZGxlcl8pO1xuICB9XG5cbiAgLyoqIEBwcml2YXRlICovXG4gIHRvZ2dsZUZyb21FdnRfKCkge1xuICAgIHRoaXMudG9nZ2xlKCk7XG4gICAgY29uc3Qge29uXzogaXNPbn0gPSB0aGlzO1xuICAgIHRoaXMuYWRhcHRlcl8ubm90aWZ5Q2hhbmdlKC8qKiBAdHlwZSB7IUljb25Ub2dnbGVFdmVudH0gKi8gKHtpc09ufSkpO1xuICB9XG5cbiAgLyoqIEByZXR1cm4ge2Jvb2xlYW59ICovXG4gIGlzT24oKSB7XG4gICAgcmV0dXJuIHRoaXMub25fO1xuICB9XG5cbiAgLyoqIEBwYXJhbSB7Ym9vbGVhbj19IGlzT24gKi9cbiAgdG9nZ2xlKGlzT24gPSAhdGhpcy5vbl8pIHtcbiAgICB0aGlzLm9uXyA9IGlzT247XG5cbiAgICBjb25zdCB7QVJJQV9MQUJFTCwgQVJJQV9QUkVTU0VEfSA9IE1EQ0ljb25Ub2dnbGVGb3VuZGF0aW9uLnN0cmluZ3M7XG5cbiAgICBpZiAodGhpcy5vbl8pIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uc2V0QXR0cihBUklBX1BSRVNTRUQsICd0cnVlJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uc2V0QXR0cihBUklBX1BSRVNTRUQsICdmYWxzZScpO1xuICAgIH1cblxuICAgIGNvbnN0IHtjc3NDbGFzczogY2xhc3NUb1JlbW92ZX0gPVxuICAgICAgICB0aGlzLm9uXyA/IHRoaXMudG9nZ2xlT2ZmRGF0YV8gOiB0aGlzLnRvZ2dsZU9uRGF0YV87XG5cbiAgICBpZiAoY2xhc3NUb1JlbW92ZSkge1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhjbGFzc1RvUmVtb3ZlKTtcbiAgICB9XG5cbiAgICBjb25zdCB7Y29udGVudCwgbGFiZWwsIGNzc0NsYXNzfSA9IHRoaXMub25fID8gdGhpcy50b2dnbGVPbkRhdGFfIDogdGhpcy50b2dnbGVPZmZEYXRhXztcblxuICAgIGlmIChjc3NDbGFzcykge1xuICAgICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyhjc3NDbGFzcyk7XG4gICAgfVxuICAgIGlmIChjb250ZW50KSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnNldFRleHQoY29udGVudCk7XG4gICAgfVxuICAgIGlmIChsYWJlbCkge1xuICAgICAgdGhpcy5hZGFwdGVyXy5zZXRBdHRyKEFSSUFfTEFCRUwsIGxhYmVsKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFBdHRyXG4gICAqIEByZXR1cm4geyFJY29uVG9nZ2xlU3RhdGV9XG4gICAqL1xuICBwYXJzZUpzb25EYXRhQXR0cl8oZGF0YUF0dHIpIHtcbiAgICBjb25zdCB2YWwgPSB0aGlzLmFkYXB0ZXJfLmdldEF0dHIoZGF0YUF0dHIpO1xuICAgIGlmICghdmFsKSB7XG4gICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIHJldHVybiAvKiogQHR5cGUgeyFJY29uVG9nZ2xlU3RhdGV9ICovIChKU09OLnBhcnNlKHZhbCkpO1xuICB9XG5cbiAgLyoqIEByZXR1cm4ge2Jvb2xlYW59ICovXG4gIGlzRGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZGlzYWJsZWRfO1xuICB9XG5cbiAgLyoqIEBwYXJhbSB7Ym9vbGVhbn0gaXNEaXNhYmxlZCAqL1xuICBzZXREaXNhYmxlZChpc0Rpc2FibGVkKSB7XG4gICAgdGhpcy5kaXNhYmxlZF8gPSBpc0Rpc2FibGVkO1xuXG4gICAgY29uc3Qge0RJU0FCTEVEfSA9IE1EQ0ljb25Ub2dnbGVGb3VuZGF0aW9uLmNzc0NsYXNzZXM7XG4gICAgY29uc3Qge0FSSUFfRElTQUJMRUR9ID0gTURDSWNvblRvZ2dsZUZvdW5kYXRpb24uc3RyaW5ncztcblxuICAgIGlmICh0aGlzLmRpc2FibGVkXykge1xuICAgICAgdGhpcy5zYXZlZFRhYkluZGV4XyA9IHRoaXMuYWRhcHRlcl8uZ2V0VGFiSW5kZXgoKTtcbiAgICAgIHRoaXMuYWRhcHRlcl8uc2V0VGFiSW5kZXgoLTEpO1xuICAgICAgdGhpcy5hZGFwdGVyXy5zZXRBdHRyKEFSSUFfRElTQUJMRUQsICd0cnVlJyk7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmFkZENsYXNzKERJU0FCTEVEKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hZGFwdGVyXy5zZXRUYWJJbmRleCh0aGlzLnNhdmVkVGFiSW5kZXhfKTtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucm1BdHRyKEFSSUFfRElTQUJMRUQpO1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhESVNBQkxFRCk7XG4gICAgfVxuICB9XG5cbiAgLyoqIEByZXR1cm4ge2Jvb2xlYW59ICovXG4gIGlzS2V5Ym9hcmRBY3RpdmF0ZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaXNIYW5kbGluZ0tleWRvd25fO1xuICB9XG59XG5cbi8qKlxuICogQHR5cGVkZWYgeyF7XG4gKiAgIGtleTogc3RyaW5nLFxuICogICBrZXlDb2RlOiBudW1iZXJcbiAqIH19XG4gKi9cbmxldCBLZXlib2FyZEtleTtcblxuLyoqXG4gKiBAcGFyYW0geyFLZXlib2FyZEtleX0ga2V5Ym9hcmRLZXlcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKi9cbmZ1bmN0aW9uIGlzU3BhY2Uoa2V5Ym9hcmRLZXkpIHtcbiAgcmV0dXJuIGtleWJvYXJkS2V5LmtleSA9PT0gJ1NwYWNlJyB8fCBrZXlib2FyZEtleS5rZXlDb2RlID09PSAzMjtcbn1cblxuXG4vKiogQHJlY29yZCAqL1xuY2xhc3MgSWNvblRvZ2dsZVN0YXRlIHt9XG5cbi8qKlxuICogVGhlIGFyaWEtbGFiZWwgdmFsdWUgb2YgdGhlIGljb24gdG9nZ2xlLCBvciB1bmRlZmluZWQgaWYgdGhlcmUgaXMgbm8gYXJpYS1sYWJlbC5cbiAqIEBleHBvcnQge3N0cmluZ3x1bmRlZmluZWR9XG4gKi9cbkljb25Ub2dnbGVTdGF0ZS5wcm90b3R5cGUubGFiZWw7XG5cbi8qKlxuICogVGhlIHRleHQgZm9yIHRoZSBpY29uIHRvZ2dsZSwgb3IgdW5kZWZpbmVkIGlmIHRoZXJlIGlzIG5vIHRleHQuXG4gKiBAZXhwb3J0IHtzdHJpbmd8dW5kZWZpbmVkfVxuICovXG5JY29uVG9nZ2xlU3RhdGUucHJvdG90eXBlLmNvbnRlbnQ7XG5cbi8qKlxuICogVGhlIENTUyBjbGFzcyB0byBhZGQgdG8gdGhlIGljb24gdG9nZ2xlLCBvciB1bmRlZmluZWQgaWYgdGhlcmUgaXMgbm8gQ1NTIGNsYXNzLlxuICogQGV4cG9ydCB7c3RyaW5nfHVuZGVmaW5lZH1cbiAqL1xuSWNvblRvZ2dsZVN0YXRlLnByb3RvdHlwZS5jc3NDbGFzcztcblxuZXhwb3J0IGRlZmF1bHQgTURDSWNvblRvZ2dsZUZvdW5kYXRpb247XG4iLCI8dGVtcGxhdGU+XG4gIDxzcGFuIGNsYXNzPVwibWRjLWljb24tdG9nZ2xlXCIgcm9sZT1cImJ1dHRvblwiIGFyaWEtcHJlc3NlZD1cImZhbHNlXCJcbiAgICA6Y2xhc3M9XCJjbGFzc2VzXCIgOnN0eWxlPVwic3R5bGVzXCJcbiAgICA6dGFiaW5kZXg9XCJ0YWJJbmRleFwiXG4gICAgOmRhdGEtdG9nZ2xlLW9uPVwidG9nZ2xlT25EYXRhXCJcbiAgICA6ZGF0YS10b2dnbGUtb2ZmPVwidG9nZ2xlT2ZmRGF0YVwiPlxuICAgIDxpIDpjbGFzcz1cImljb25DbGFzc2VzXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+e3t0ZXh0fX08L2k+XG4gIDwvc3Bhbj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgTURDSWNvblRvZ2dsZUZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL2ljb24tdG9nZ2xlL2ZvdW5kYXRpb24nXG5pbXBvcnQge1JpcHBsZUJhc2V9IGZyb20gJy4uL3JpcHBsZSdcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnbWRjLWljb24tdG9nZ2xlJyxcbiAgcHJvcHM6IHtcbiAgICB0b2dnbGVPbjogW1N0cmluZywgT2JqZWN0XSxcbiAgICB0b2dnbGVPZmY6IFtTdHJpbmcsIE9iamVjdF0sXG4gICAgdmFsdWU6IEJvb2xlYW4sXG4gICAgZGlzYWJsZWQ6IEJvb2xlYW4sXG4gICAgYWNjZW50OiBCb29sZWFuXG4gIH0sXG4gIGRhdGEgKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjbGFzc2VzOiB7XG4gICAgICAgICdtZGMtaWNvbi10b2dnbGUtLWFjY2VudCc6IHRoaXMuYWNjZW50XG4gICAgICB9LFxuICAgICAgc3R5bGVzOiB7fSxcbiAgICAgIGljb25DbGFzc2VzOiB7fSxcbiAgICAgIHRhYkluZGV4OiAwLFxuICAgICAgdGV4dDogJycsXG4gICAgfVxuICB9LFxuICB3YXRjaDoge1xuICAgIHZhbHVlICh2YWx1ZSkge1xuICAgICAgdGhpcy5mb3VuZGF0aW9uICYmIHRoaXMuZm91bmRhdGlvbi50b2dnbGUodmFsdWUpXG4gICAgfSxcbiAgICBkaXNhYmxlZCAoZGlzYWJsZWQpIHtcbiAgICAgIHRoaXMuZm91bmRhdGlvbiAmJiB0aGlzLmZvdW5kYXRpb24uc2V0RGlzYWJsZWQoZGlzYWJsZWQpXG4gICAgfSxcbiAgICB0b2dnbGVPbkRhdGEgKCkge1xuICAgICB0aGlzLmZvdW5kYXRpb24gJiYgdGhpcy5mb3VuZGF0aW9uLnJlZnJlc2hUb2dnbGVEYXRhKClcbiAgICB9LFxuICAgIHRvZ2dsZU9mZkRhdGEgKCkge1xuICAgIHRoaXMuZm91bmRhdGlvbiAmJiB0aGlzLmZvdW5kYXRpb24ucmVmcmVzaFRvZ2dsZURhdGEoKVxuICAgIH0sXG4gICAgYWNjZW50ICh2YWx1ZSkge1xuICAgICAgdGhpcy4kc2V0KHRoaXMuY2xhc3NlcywgJ21kYy1pY29uLXRvZ2dsZS0tc2Vjb25kYXJ5JywgdmFsdWUpXG4gICAgfSxcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICB0b2dnbGVPbkRhdGEgKCkge1xuICAgICAgbGV0IHRvZ2dsZSA9IHRoaXMudG9nZ2xlT25cbiAgICAgIHJldHVybiB0b2dnbGUgJiYgSlNPTi5zdHJpbmdpZnkoKHR5cGVvZiB0b2dnbGUgPT09ICdzdHJpbmcnKSA/IHsgXG4gICAgICAgIGNvbnRlbnQ6IHRvZ2dsZSwgXG4gICAgICAgIGNzc0NsYXNzOiAnbWF0ZXJpYWwtaWNvbnMnIFxuICAgICAgfSA6IHtcbiAgICAgICAgY29udGVudDogdG9nZ2xlLmljb24gfHwgdG9nZ2xlLmNvbnRlbnQsXG4gICAgICAgIGxhYmVsOiB0b2dnbGUubGFiZWwsXG4gICAgICAgIGNzc0NsYXNzOiB0b2dnbGUuaWNvbiA/ICdtYXRlcmlhbC1pY29ucycgOiB0b2dnbGUuY3NzQ2xhc3NcbiAgICAgIH0pXG4gICAgfSAsXG4gICAgdG9nZ2xlT2ZmRGF0YSAoKSB7XG4gICAgICBsZXQgdG9nZ2xlID0gdGhpcy50b2dnbGVPZmZcbiAgICAgIHJldHVybiB0b2dnbGUgJiYgSlNPTi5zdHJpbmdpZnkoKHR5cGVvZiB0b2dnbGUgPT09ICdzdHJpbmcnKSA/IHsgXG4gICAgICAgIGNvbnRlbnQ6IHRvZ2dsZSwgXG4gICAgICAgIGNzc0NsYXNzOiAnbWF0ZXJpYWwtaWNvbnMnIFxuICAgICAgfSA6IHtcbiAgICAgICAgY29udGVudDogdG9nZ2xlLmljb24gfHwgdG9nZ2xlLmNvbnRlbnQsXG4gICAgICAgIGxhYmVsOiB0b2dnbGUubGFiZWwsXG4gICAgICAgIGNzc0NsYXNzOiB0b2dnbGUuaWNvbiA/ICdtYXRlcmlhbC1pY29ucycgOiB0b2dnbGUuY3NzQ2xhc3NcbiAgICAgIH0pXG4gICAgfSxcbiAgfSxcbiAgbW91bnRlZCAoKSB7XG4gICAgdGhpcy5mb3VuZGF0aW9uID0gbmV3IE1EQ0ljb25Ub2dnbGVGb3VuZGF0aW9uKHtcbiAgICAgIGFkZENsYXNzOiAoY2xhc3NOYW1lKSA9PiB0aGlzLiRzZXQodGhpcy5pY29uQ2xhc3NlcywgY2xhc3NOYW1lLCB0cnVlKSxcbiAgICAgIHJlbW92ZUNsYXNzOiAoY2xhc3NOYW1lKSA9PiB0aGlzLiRkZWxldGUodGhpcy5pY29uQ2xhc3NlcywgY2xhc3NOYW1lKSxcbiAgICAgIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0LCBoYW5kbGVyKSA9PlxuICAgICAgICB0aGlzLiRlbC5hZGRFdmVudExpc3RlbmVyKGV2dCwgaGFuZGxlciksXG4gICAgICBkZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0LCBoYW5kbGVyKSA9PlxuICAgICAgICB0aGlzLiRlbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2dCwgaGFuZGxlciksXG4gICAgICBzZXRUZXh0OiAodGV4dCkgPT4geyB0aGlzLnRleHQgPSB0ZXh0IH0sXG4gICAgICBnZXRUYWJJbmRleDogKCkgPT4gdGhpcy50YWJJbmRleCxcbiAgICAgIHNldFRhYkluZGV4OiAodGFiSW5kZXgpID0+IHsgdGhpcy50YWJJbmRleCA9IHRhYkluZGV4IH0sXG4gICAgICBnZXRBdHRyOiAobmFtZSwgdmFsdWUpID0+IHRoaXMuJGVsLmdldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSksXG4gICAgICBzZXRBdHRyOiAobmFtZSwgdmFsdWUpID0+IHsgdGhpcy4kZWwuc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKSB9LFxuICAgICAgcm1BdHRyOiAobmFtZSkgPT4geyB0aGlzLiRlbC5yZW1vdmVBdHRyaWJ1dGUobmFtZSkgfSxcbiAgICAgIG5vdGlmeUNoYW5nZTogKGV2dERhdGEpID0+IHsgdGhpcy4kZW1pdCgnaW5wdXQnLCBldnREYXRhLmlzT24pIH1cbiAgICB9KVxuICAgIHRoaXMuZm91bmRhdGlvbi5pbml0KClcbiAgICB0aGlzLmZvdW5kYXRpb24udG9nZ2xlKHRoaXMudmFsdWUpXG4gICAgdGhpcy5mb3VuZGF0aW9uLnNldERpc2FibGVkKHRoaXMuZGlzYWJsZWQpXG5cbiAgICB0aGlzLnJpcHBsZSA9IG5ldyBSaXBwbGVCYXNlKHRoaXMsIHtcbiAgICAgIGlzVW5ib3VuZGVkOiAoKSA9PiB0cnVlLFxuICAgICAgaXNTdXJmYWNlQWN0aXZlOiAoKSA9PiB0aGlzLmZvdW5kYXRpb24uaXNLZXlib2FyZEFjdGl2YXRlZCgpLFxuICAgIH0pXG4gICAgdGhpcy5yaXBwbGUuaW5pdCgpXG4gIH0sXG4gIGJlZm9yZURlc3Ryb3kgKCkge1xuICAgIHRoaXMuZm91bmRhdGlvbi5kZXN0cm95KClcbiAgICB0aGlzLnJpcHBsZS5kZXN0cm95KClcbiAgfVxufVxuPC9zY3JpcHQ+XG4iLCJpbXBvcnQge0Jhc2VQbHVnaW59IGZyb20gJy4uL2Jhc2UnXG5pbXBvcnQgbWRjSUNvblRvZ2dsZSBmcm9tICcuL21kYy1pY29uLXRvZ2dsZS52dWUnXG5cbmV4cG9ydCB7XG4gIG1kY0lDb25Ub2dnbGVcbn1cblxuZXhwb3J0IGRlZmF1bHQgQmFzZVBsdWdpbih7XG4gIG1kY0lDb25Ub2dnbGVcbn0pXG4iLCI8dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJtZGMtbGF5b3V0LWFwcFwiPlxuXG4gICAgPGRpdiBjbGFzcz1cIm1kYy1sYXlvdXQtYXBwLS10b29sYmFyLXdyYXBwZXJcIj5cbiAgICAgIDxzbG90IG5hbWU9XCJ0b29sYmFyXCIgLz5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJtZGMtbGF5b3V0LWFwcC0tbWFpbi1jb250YWluZXJcIj5cblxuICAgICAgPGRpdiBjbGFzcz1cIm1kYy1sYXlvdXQtYXBwLS1kcmF3ZXItd3JhcHBlclwiPlxuICAgICAgICA8c2xvdCBuYW1lPVwiZHJhd2VyXCIgLz5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2IGNsYXNzPVwibWRjLWxheW91dC1hcHAtLWNvbnRlbnQtd3JhcHBlclwiPlxuICAgICAgICA8c2xvdCAvPlxuICAgICAgPC9kaXY+XG5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnbWRjLWxheW91dC1hcHAnLFxufVxuPC9zY3JpcHQ+IiwiaW1wb3J0IHtCYXNlUGx1Z2lufSBmcm9tICcuLi9iYXNlJ1xuaW1wb3J0IG1kY0xheW91dEFwcCBmcm9tICcuL21kYy1sYXlvdXQtYXBwLnZ1ZSdcblxuZXhwb3J0IHtcbiAgbWRjTGF5b3V0QXBwXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJhc2VQbHVnaW4oe1xuICBtZGNMYXlvdXRBcHBcbn0pXG4iLCI8dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJtZGMtbGF5b3V0LWdyaWRcIiA6Y2xhc3M9Y2xhc3Nlcz5cbiAgICA8ZGl2IGNsYXNzPVwibWRjLWxheW91dC1ncmlkX19pbm5lclwiPlxuICAgICAgPHNsb3Q+PC9zbG90PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cblxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy1sYXlvdXQtZ3JpZCcsXG4gIHByb3BzOiB7XG4gICAgJ2ZpeGVkLWNvbHVtbi13aWR0aCc6IEJvb2xlYW5cbiAgfSxcbiAgZGF0YSAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNsYXNzZXM6IHtcbiAgICAgICAgJ21kYy1sYXlvdXQtZ3JpZC0tZml4ZWQtY29sdW1uLXdpZHRoJzogdGhpcy5maXhlZENvbHVtbldpZHRoXG4gICAgICB9XG4gICAgfVxuICB9XG59XG48L3NjcmlwdD5cbiIsIjx0ZW1wbGF0ZT5cbiAgPGRpdiBjbGFzcz1cIm1kYy1sYXlvdXQtY2VsbCBtZGMtbGF5b3V0LWdyaWRfX2NlbGxcIiA6Y2xhc3M9XCJjbGFzc2VzXCI+XG4gICAgPHNsb3Q+PC9zbG90PlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5jb25zdCBzcGFuT3B0aW9ucyA9IHtcbiAgdHlwZTogW1N0cmluZywgTnVtYmVyXSxcbiAgZGVmYXVsdDogbnVsbCxcbiAgdmFsaWRhdG9yOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICB2YXIgbnVtID0gTnVtYmVyKHZhbHVlKVxuICAgIHJldHVybiBpc0Zpbml0ZShudW0pICYmIChudW0gPD0gMTIpICYmIChudW0gPiAwKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy1sYXlvdXQtY2VsbCcsXG4gIHByb3BzOiB7XG4gICAgc3Bhbjogc3Bhbk9wdGlvbnMsXG4gICAgb3JkZXI6IHNwYW5PcHRpb25zLFxuICAgIHBob25lOiBzcGFuT3B0aW9ucyxcbiAgICB0YWJsZXQ6IHNwYW5PcHRpb25zLFxuICAgIGRlc2t0b3A6IHNwYW5PcHRpb25zLFxuICAgIGFsaWduOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gWyd0b3AnLCAnYm90dG9tJywgJ21pZGRsZSddLmluZGV4T2YodmFsdWUpICE9PSAtMVxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBjbGFzc2VzICgpIHtcbiAgICAgIGxldCBjbGFzc2VzID0gW11cblxuICAgICAgaWYgKHRoaXMuc3Bhbikge1xuICAgICAgICBjbGFzc2VzLnB1c2goYG1kYy1sYXlvdXQtZ3JpZF9fY2VsbC0tc3Bhbi0ke3RoaXMuc3Bhbn1gKVxuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5vcmRlcikge1xuICAgICAgICBjbGFzc2VzLnB1c2goYG1kYy1sYXlvdXQtZ3JpZF9fY2VsbC0tb3JkZXItJHt0aGlzLm9yZGVyfWApXG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLnBob25lKSB7XG4gICAgICAgIGNsYXNzZXMucHVzaChgbWRjLWxheW91dC1ncmlkX19jZWxsLS1zcGFuLSR7dGhpcy5waG9uZX0tcGhvbmVgKVxuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy50YWJsZXQpIHtcbiAgICAgICAgY2xhc3Nlcy5wdXNoKGBtZGMtbGF5b3V0LWdyaWRfX2NlbGwtLXNwYW4tJHt0aGlzLnRhYmxldH0tdGFibGV0YClcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuZGVza3RvcCkge1xuICAgICAgICBjbGFzc2VzLnB1c2goYG1kYy1sYXlvdXQtZ3JpZF9fY2VsbC0tc3Bhbi0ke3RoaXMuZGVza3RvcH0tZGVza3RvcGApXG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLmFsaWduKSB7XG4gICAgICAgIGNsYXNzZXMucHVzaChgbWRjLWxheW91dC1ncmlkX19jZWxsLS1hbGlnbi0ke3RoaXMuYWxpZ259YClcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNsYXNzZXNcbiAgICB9XG4gIH1cbn1cbjwvc2NyaXB0PlxuIiwiPHRlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwibWRjLWxheW91dC1pbm5lci1ncmlkIG1kYy1sYXlvdXQtZ3JpZF9faW5uZXJcIj5cbiAgICA8c2xvdD48L3Nsb3Q+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy1sYXlvdXQtaW5uZXItZ3JpZCcsXG59XG48L3NjcmlwdD5cbiIsImltcG9ydCB7QmFzZVBsdWdpbn0gZnJvbSAnLi4vYmFzZSdcbmltcG9ydCBtZGNMYXlvdXRHcmlkIGZyb20gJy4vbWRjLWxheW91dC1ncmlkLnZ1ZSdcbmltcG9ydCBtZGNMYXlvdXRDZWxsIGZyb20gJy4vbWRjLWxheW91dC1jZWxsLnZ1ZSdcbmltcG9ydCBtZGNMYXlvdXRJbm5lckdyaWQgZnJvbSAnLi9tZGMtbGF5b3V0LWlubmVyLWdyaWQudnVlJ1xuXG5leHBvcnQge1xuICBtZGNMYXlvdXRHcmlkLFxuICBtZGNMYXlvdXRDZWxsLFxuICBtZGNMYXlvdXRJbm5lckdyaWRcbn1cblxuZXhwb3J0IGRlZmF1bHQgQmFzZVBsdWdpbih7XG4gIG1kY0xheW91dEdyaWQsXG4gIG1kY0xheW91dENlbGwsXG4gIG1kY0xheW91dElubmVyR3JpZFxufSlcbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmV4cG9ydCBjb25zdCBjc3NDbGFzc2VzID0ge1xuICBDTE9TRURfQ0xBU1M6ICdtZGMtbGluZWFyLXByb2dyZXNzLS1jbG9zZWQnLFxuICBJTkRFVEVSTUlOQVRFX0NMQVNTOiAnbWRjLWxpbmVhci1wcm9ncmVzcy0taW5kZXRlcm1pbmF0ZScsXG4gIFJFVkVSU0VEX0NMQVNTOiAnbWRjLWxpbmVhci1wcm9ncmVzcy0tcmV2ZXJzZWQnLFxufTtcblxuZXhwb3J0IGNvbnN0IHN0cmluZ3MgPSB7XG4gIFBSSU1BUllfQkFSX1NFTEVDVE9SOiAnLm1kYy1saW5lYXItcHJvZ3Jlc3NfX3ByaW1hcnktYmFyJyxcbiAgQlVGRkVSX1NFTEVDVE9SOiAnLm1kYy1saW5lYXItcHJvZ3Jlc3NfX2J1ZmZlcicsXG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHtNRENGb3VuZGF0aW9ufSBmcm9tICdAbWF0ZXJpYWwvYmFzZS9pbmRleCc7XG5pbXBvcnQge3RyYW5zZm9ybVN0eWxlUHJvcGVydGllc30gZnJvbSAnQG1hdGVyaWFsL2FuaW1hdGlvbi9pbmRleCc7XG5cbmltcG9ydCB7Y3NzQ2xhc3Nlcywgc3RyaW5nc30gZnJvbSAnLi9jb25zdGFudHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNRENMaW5lYXJQcm9ncmVzc0ZvdW5kYXRpb24gZXh0ZW5kcyBNRENGb3VuZGF0aW9uIHtcbiAgc3RhdGljIGdldCBjc3NDbGFzc2VzKCkge1xuICAgIHJldHVybiBjc3NDbGFzc2VzO1xuICB9XG5cbiAgc3RhdGljIGdldCBzdHJpbmdzKCkge1xuICAgIHJldHVybiBzdHJpbmdzO1xuICB9XG5cbiAgc3RhdGljIGdldCBkZWZhdWx0QWRhcHRlcigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgYWRkQ2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICBnZXRQcmltYXJ5QmFyOiAoKSA9PiAvKiBlbDogRWxlbWVudCAqLyB7fSxcbiAgICAgIGdldEJ1ZmZlcjogKCkgPT4gLyogZWw6IEVsZW1lbnQgKi8ge30sXG4gICAgICBoYXNDbGFzczogKC8qIGNsYXNzTmFtZTogc3RyaW5nICovKSA9PiBmYWxzZSxcbiAgICAgIHJlbW92ZUNsYXNzOiAoLyogY2xhc3NOYW1lOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgc2V0U3R5bGU6ICgvKiBlbDogRWxlbWVudCwgc3R5bGVQcm9wZXJ0eTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nICovKSA9PiB7fSxcbiAgICB9O1xuICB9XG5cbiAgY29uc3RydWN0b3IoYWRhcHRlcikge1xuICAgIHN1cGVyKE9iamVjdC5hc3NpZ24oTURDTGluZWFyUHJvZ3Jlc3NGb3VuZGF0aW9uLmRlZmF1bHRBZGFwdGVyLCBhZGFwdGVyKSk7XG4gIH1cblxuICBpbml0KCkge1xuICAgIHRoaXMuZGV0ZXJtaW5hdGVfID0gIXRoaXMuYWRhcHRlcl8uaGFzQ2xhc3MoY3NzQ2xhc3Nlcy5JTkRFVEVSTUlOQVRFX0NMQVNTKTtcbiAgICB0aGlzLnJldmVyc2VfID0gdGhpcy5hZGFwdGVyXy5oYXNDbGFzcyhjc3NDbGFzc2VzLlJFVkVSU0VEX0NMQVNTKTtcbiAgICB0aGlzLnByb2dyZXNzXyA9IDA7XG4gIH1cblxuICBzZXREZXRlcm1pbmF0ZShpc0RldGVybWluYXRlKSB7XG4gICAgdGhpcy5kZXRlcm1pbmF0ZV8gPSBpc0RldGVybWluYXRlO1xuICAgIGlmICh0aGlzLmRldGVybWluYXRlXykge1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhjc3NDbGFzc2VzLklOREVURVJNSU5BVEVfQ0xBU1MpO1xuICAgICAgdGhpcy5zZXRTY2FsZV8odGhpcy5hZGFwdGVyXy5nZXRQcmltYXJ5QmFyKCksIHRoaXMucHJvZ3Jlc3NfKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyhjc3NDbGFzc2VzLklOREVURVJNSU5BVEVfQ0xBU1MpO1xuICAgICAgdGhpcy5zZXRTY2FsZV8odGhpcy5hZGFwdGVyXy5nZXRQcmltYXJ5QmFyKCksIDEpO1xuICAgICAgdGhpcy5zZXRTY2FsZV8odGhpcy5hZGFwdGVyXy5nZXRCdWZmZXIoKSwgMSk7XG4gICAgfVxuICB9XG5cbiAgc2V0UHJvZ3Jlc3ModmFsdWUpIHtcbiAgICB0aGlzLnByb2dyZXNzXyA9IHZhbHVlO1xuICAgIGlmICh0aGlzLmRldGVybWluYXRlXykge1xuICAgICAgdGhpcy5zZXRTY2FsZV8odGhpcy5hZGFwdGVyXy5nZXRQcmltYXJ5QmFyKCksIHZhbHVlKTtcbiAgICB9XG4gIH1cblxuICBzZXRCdWZmZXIodmFsdWUpIHtcbiAgICBpZiAodGhpcy5kZXRlcm1pbmF0ZV8pIHtcbiAgICAgIHRoaXMuc2V0U2NhbGVfKHRoaXMuYWRhcHRlcl8uZ2V0QnVmZmVyKCksIHZhbHVlKTtcbiAgICB9XG4gIH1cblxuICBzZXRSZXZlcnNlKGlzUmV2ZXJzZWQpIHtcbiAgICB0aGlzLnJldmVyc2VfID0gaXNSZXZlcnNlZDtcbiAgICBpZiAodGhpcy5yZXZlcnNlXykge1xuICAgICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyhjc3NDbGFzc2VzLlJFVkVSU0VEX0NMQVNTKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhjc3NDbGFzc2VzLlJFVkVSU0VEX0NMQVNTKTtcbiAgICB9XG4gIH1cblxuICBvcGVuKCkge1xuICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoY3NzQ2xhc3Nlcy5DTE9TRURfQ0xBU1MpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyhjc3NDbGFzc2VzLkNMT1NFRF9DTEFTUyk7XG4gIH1cblxuICBzZXRTY2FsZV8oZWwsIHNjYWxlVmFsdWUpIHtcbiAgICBjb25zdCB2YWx1ZSA9ICdzY2FsZVgoJyArIHNjYWxlVmFsdWUgKyAnKSc7XG4gICAgdHJhbnNmb3JtU3R5bGVQcm9wZXJ0aWVzLmZvckVhY2goKHRyYW5zZm9ybVN0eWxlUHJvcGVydHkpID0+IHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uc2V0U3R5bGUoZWwsIHRyYW5zZm9ybVN0eWxlUHJvcGVydHksIHZhbHVlKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiPHRlbXBsYXRlPlxuICA8ZGl2IHJvbGU9XCJwcm9ncmVzc2JhclwiIGNsYXNzPVwibWRjLWxpbmVhci1wcm9ncmVzc1wiIFxuICAgIDpjbGFzcz1cImNsYXNzZXNcIiA6c3R5bGU9XCJzdHlsZXNcIj5cbiAgICA8ZGl2IGNsYXNzPVwibWRjLWxpbmVhci1wcm9ncmVzc19fYnVmZmVyaW5nLWRvdHNcIj48L2Rpdj5cbiAgICA8ZGl2IHJlZj1cImJ1ZmZlclwiIGNsYXNzPVwibWRjLWxpbmVhci1wcm9ncmVzc19fYnVmZmVyXCI+PC9kaXY+XG4gICAgPGRpdiByZWY9XCJwcmltYXJ5XCIgY2xhc3M9XCJtZGMtbGluZWFyLXByb2dyZXNzX19iYXIgbWRjLWxpbmVhci1wcm9ncmVzc19fcHJpbWFyeS1iYXJcIj5cbiAgICAgIDxzcGFuIGNsYXNzPVwibWRjLWxpbmVhci1wcm9ncmVzc19fYmFyLWlubmVyXCI+PC9zcGFuPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJtZGMtbGluZWFyLXByb2dyZXNzX19iYXIgbWRjLWxpbmVhci1wcm9ncmVzc19fc2Vjb25kYXJ5LWJhclwiPlxuICAgICAgPHNwYW4gY2xhc3M9XCJtZGMtbGluZWFyLXByb2dyZXNzX19iYXItaW5uZXJcIj48L3NwYW4+XG4gICAgPC9kaXY+XG4gIDwvZGl2PiAgXG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IE1EQ0xpbmVhclByb2dyZXNzRm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvbGluZWFyLXByb2dyZXNzL2ZvdW5kYXRpb24nXG5cbmNvbnN0IFByb2dyZXNzUHJvcFR5cGUgPSB7XG4gIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sXG4gIHZhbGlkYXRvciAodmFsdWUpIHtcbiAgICByZXR1cm4gTnVtYmVyKHZhbHVlKSA+PSAwICYmIE51bWJlcih2YWx1ZSkgPD0gMVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy1saW5lYXItcHJvZ3Jlc3MnLFxuICBwcm9wczoge1xuICAgICdvcGVuJzogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiB0cnVlIH0sXG4gICAgJ2luZGV0ZXJtaW5hdGUnOiBCb29sZWFuLFxuICAgICdyZXZlcnNlJzogQm9vbGVhbixcbiAgICAnYWNjZW50JzogQm9vbGVhbixcbiAgICAncHJvZ3Jlc3MnOiBQcm9ncmVzc1Byb3BUeXBlLFxuICAgICdidWZmZXInOiBQcm9ncmVzc1Byb3BUeXBlXG4gIH0sXG4gIGRhdGEgKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjbGFzc2VzOiB7J21kYy1saW5lYXItcHJvZ3Jlc3MtLWFjY2VudCc6IHRoaXMuYWNjZW50fSxcbiAgICAgIHN0eWxlczoge31cbiAgICB9XG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgb3BlbiAoKSB7XG4gICAgICBpZiAodGhpcy5vcGVuKSB7XG4gICAgICAgIHRoaXMuZm91bmRhdGlvbi5vcGVuKClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZm91bmRhdGlvbi5jbG9zZSgpXG4gICAgICB9XG4gICAgfSxcbiAgICBwcm9ncmVzcyAoKSB7XG4gICAgICB0aGlzLmZvdW5kYXRpb24uc2V0UHJvZ3Jlc3MoTnVtYmVyKHRoaXMucHJvZ3Jlc3MpKVxuICAgIH0sXG4gICAgYnVmZmVyICgpIHtcbiAgICAgIHRoaXMuZm91bmRhdGlvbi5zZXRCdWZmZXIoTnVtYmVyKHRoaXMuYnVmZmVyKSlcbiAgICB9LFxuICAgIGluZGV0ZXJtaW5hdGUgKCkge1xuICAgICAgdGhpcy5mb3VuZGF0aW9uLnNldERldGVybWluYXRlKCF0aGlzLmluZGV0ZXJtaW5hdGUpXG4gICAgfSxcbiAgICByZXZlcnNlICgpIHtcbiAgICAgIHRoaXMuZm91bmRhdGlvbi5zZXRSZXZlcnNlKHRoaXMucmV2ZXJzZSlcbiAgICB9XG4gIH0sXG4gIG1vdW50ZWQgKCkge1xuICAgIHRoaXMuZm91bmRhdGlvbiA9IG5ldyBNRENMaW5lYXJQcm9ncmVzc0ZvdW5kYXRpb24oe1xuICAgICAgYWRkQ2xhc3M6IChjbGFzc05hbWUpID0+IHtcbiAgICAgICAgdGhpcy4kc2V0KHRoaXMuY2xhc3NlcywgY2xhc3NOYW1lLCB0cnVlKVxuICAgICAgfSxcbiAgICAgIGdldFByaW1hcnlCYXI6ICgpID0+IC8qIGVsOiBFbGVtZW50ICovIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuJHJlZnMucHJpbWFyeVxuICAgICAgfSxcbiAgICAgIGdldEJ1ZmZlcjogKCkgPT4gLyogZWw6IEVsZW1lbnQgKi8ge1xuICAgICAgICByZXR1cm4gdGhpcy4kcmVmcy5idWZmZXJcbiAgICAgIH0sXG4gICAgICBoYXNDbGFzczogKGNsYXNzTmFtZSkgPT4ge1xuICAgICAgICB0aGlzLiRlbC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKVxuICAgICAgfSxcbiAgICAgIHJlbW92ZUNsYXNzOiAoY2xhc3NOYW1lKSA9PiB7XG4gICAgICAgIHRoaXMuJGRlbGV0ZSh0aGlzLmNsYXNzZXMsIGNsYXNzTmFtZSlcbiAgICAgIH0sXG4gICAgICBzZXRTdHlsZTogKGVsLCBzdHlsZVByb3BlcnR5LCB2YWx1ZSkgPT4ge1xuICAgICAgICBlbC5zdHlsZVtzdHlsZVByb3BlcnR5XSA9IHZhbHVlXG4gICAgICB9XG4gICAgfSlcbiAgICB0aGlzLmZvdW5kYXRpb24uaW5pdCgpXG5cbiAgICB0aGlzLmZvdW5kYXRpb24uc2V0UmV2ZXJzZSh0aGlzLnJldmVyc2UpXG4gICAgdGhpcy5mb3VuZGF0aW9uLnNldFByb2dyZXNzKE51bWJlcih0aGlzLnByb2dyZXNzKSlcbiAgICB0aGlzLmZvdW5kYXRpb24uc2V0QnVmZmVyKE51bWJlcih0aGlzLmJ1ZmZlcikpXG4gICAgdGhpcy5mb3VuZGF0aW9uLnNldERldGVybWluYXRlKCF0aGlzLmluZGV0ZXJtaW5hdGUpXG4gICAgaWYgKHRoaXMub3Blbikge1xuICAgICAgdGhpcy5mb3VuZGF0aW9uLm9wZW4oKVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmZvdW5kYXRpb24uY2xvc2UoKVxuICAgIH1cbiAgfSxcbiAgYmVmb3JlRGVzdHJveSAoKSB7XG4gICAgdGhpcy5mb3VuZGF0aW9uLmRlc3Ryb3koKVxuICB9XG59XG48L3NjcmlwdD5cbiIsImltcG9ydCB7QmFzZVBsdWdpbn0gZnJvbSAnLi4vYmFzZSdcbmltcG9ydCBtZGNMaW5lYXJQcm9ncmVzcyBmcm9tICcuL21kYy1saW5lYXItcHJvZ3Jlc3MudnVlJ1xuXG5leHBvcnQge1xuICBtZGNMaW5lYXJQcm9ncmVzc1xufVxuXG5leHBvcnQgZGVmYXVsdCBCYXNlUGx1Z2luKHtcbiAgbWRjTGluZWFyUHJvZ3Jlc3Ncbn0pIiwiPHRlbXBsYXRlPlxuICA8dWwgY2xhc3M9XCJtZGMtbGlzdFwiIDpjbGFzcz1cImNsYXNzZXNcIj5cbiAgICA8c2xvdD48L3Nsb3Q+XG4gIDwvdWw+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnbWRjLWxpc3QnLFxuICBwcm9wczoge1xuICAgIGRlbnNlOiBCb29sZWFuLFxuICAgIGF2YXRhckxpc3Q6IEJvb2xlYW4sXG4gICAgdHdvTGluZTogQm9vbGVhbixcbiAgICBib3JkZXJlZDogQm9vbGVhbixcbiAgICBpbnRlcmFjdGl2ZTogQm9vbGVhblxuICB9LFxuICBwcm92aWRlICgpIHtcbiAgICByZXR1cm4geyBtZGNMaXN0OiB0aGlzIH1cbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBjbGFzc2VzICgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgICdtZGMtbGlzdC0tZGVuc2UnOiB0aGlzLmRlbnNlLFxuICAgICAgICAnbWRjLWxpc3QtLWF2YXRhci1saXN0JzogdGhpcy5hdmF0YXJMaXN0LFxuICAgICAgICAnbWRjLWxpc3QtLXR3by1saW5lJzogdGhpcy50d29MaW5lLFxuICAgICAgICAnbWRjLWxpc3QtLWJvcmRlcmVkJzogdGhpcy5ib3JkZXJlZCxcbiAgICAgICAgJ21kYy1saXN0LS1ub24taW50ZXJhY3RpdmUnOiAhdGhpcy5pbnRlcmFjdGl2ZVxuICAgICAgfSAgICAgIFxuICAgIH1cbiAgfVxufVxuPC9zY3JpcHQ+XG4iLCI8dGVtcGxhdGU+XG4gIDxsaSBjbGFzcz1cIm1kYy1saXN0LWl0ZW1cIlxuICAgIDpjbGFzcz1cIltjbGFzc2VzLCBpdGVtQ2xhc3Nlc11cIiA6c3R5bGU9XCJzdHlsZXNcIiAgIFxuICAgIDp0YWJpbmRleD1cImlzSW50ZXJhY3RpdmUgPyAnMCcgOiB1bmRlZmluZWRcIlxuICAgIHYtb249XCJpc0ludGVyYWN0aXZlID8gJGxpc3RlbmVycyA6IHt9XCI+XG5cbiAgICA8c3BhbiBjbGFzcz1cIm1kYy1saXN0LWl0ZW1fX2dyYXBoaWNcIiB2LWlmPVwiaGFzU3RhcnREZXRhaWxcIj5cbiAgICAgIDxzbG90IG5hbWU9XCJzdGFydC1kZXRhaWxcIj48L3Nsb3Q+XG4gICAgPC9zcGFuPlxuXG4gICAgPHNwYW4gY2xhc3M9XCJtZGMtbGlzdC1pdGVtX190ZXh0XCIgdi1pZj1cImhhc1NlY29uZGFyeVwiPlxuICAgICAgPHNsb3Q+PC9zbG90PlxuICAgICAgPHNwYW4gY2xhc3M9XCJtZGMtbGlzdC1pdGVtX19zZWNvbmRhcnktdGV4dFwiPlxuICAgICAgICA8c2xvdCBuYW1lPVwic2Vjb25kYXJ5XCI+PC9zbG90PlxuICAgICAgPC9zcGFuPlxuICAgIDwvc3Bhbj5cbiAgICA8c2xvdCB2LWVsc2U+PC9zbG90PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJtZGMtbGlzdC1pdGVtX19tZXRhXCIgdi1pZj1cImhhc0VuZERldGFpbFwiPlxuICAgICAgPHNsb3QgbmFtZT1cImVuZC1kZXRhaWxcIj48L3Nsb3Q+XG4gICAgPC9zcGFuPlxuXG4gIDwvbGk+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHtSaXBwbGVCYXNlfSBmcm9tICcuLi9yaXBwbGUnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy1saXN0LWl0ZW0nLFxuICBpbmplY3Q6IFsnbWRjTGlzdCddLFxuICBwcm9wczoge1xuICAgIHNlbGVjdGVkOiBCb29sZWFuLFxuICAgIGFjdGl2YXRlZDogQm9vbGVhblxuICB9LFxuICBkYXRhICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgY2xhc3Nlczoge30sXG4gICAgICBzdHlsZXM6IHt9XG4gICAgfSBcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBpdGVtQ2xhc3NlcyAoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAnbWRjLWxpc3QtaXRlbS0tc2VsZWN0ZWQnOiB0aGlzLnNlbGVjdGVkLFxuICAgICAgICAnbWRjLWxpc3QtaXRlbS0tYWN0aXZhdGVkJzogdGhpcy5hY3RpdmF0ZWRcbiAgICAgIH1cbiAgICB9LFxuICAgIGlzSW50ZXJhY3RpdmUgKCkge1xuICAgICAgcmV0dXJuIHRoaXMubWRjTGlzdCAmJiB0aGlzLm1kY0xpc3QuaW50ZXJhY3RpdmVcbiAgICB9LFxuICAgIGhhc1NlY29uZGFyeSAoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kc2xvdHNbJ3NlY29uZGFyeSddICYmIChcbiAgICAgICAgdGhpcy5tZGNMaXN0ICYmIHRoaXMubWRjTGlzdC50d29MaW5lXG4gICAgICApIFxuICAgIH0sXG4gICAgaGFzRW5kRGV0YWlsICgpIHtcbiAgICAgIHJldHVybiAhIXRoaXMuJHNsb3RzWydlbmQtZGV0YWlsJ11cbiAgICB9LFxuICAgIGhhc1N0YXJ0RGV0YWlsICgpIHtcbiAgICAgIHJldHVybiAhIXRoaXMuJHNsb3RzWydzdGFydC1kZXRhaWwnXVxuICAgIH1cbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBpc0ludGVyYWN0aXZlICh2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICB0aGlzLmFkZFJpcHBsZSgpIFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMucmVtb3ZlUmlwcGxlKClcbiAgICAgICAgfVxuICAgIH1cbiAgfSxcbiAgbW91bnRlZCAoKSB7XG4gICAgdGhpcy5pc0ludGVyYWN0aXZlICYmIHRoaXMuYWRkUmlwcGxlKClcbiAgfSxcbiAgYmVmb3JlRGVzdHJveSAoKSB7XG4gICAgdGhpcy5yZW1vdmVSaXBwbGUoKVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgYWRkUmlwcGxlICgpIHtcbiAgICAgIGlmICghdGhpcy5yaXBwbGUpIHtcbiAgICAgICAgbGV0IHJpcHBsZSA9IG5ldyBSaXBwbGVCYXNlKHRoaXMpXG4gICAgICAgIHJpcHBsZS5pbml0KClcbiAgICAgICAgdGhpcy5yaXBwbGUgPSByaXBwbGUgICAgICAgICAgICAgICAgIFxuICAgICAgfSBcbiAgICB9LFxuICAgIHJlbW92ZVJpcHBsZSAoKSB7XG4gICAgICBpZiAodGhpcy5yaXBwbGUpIHtcbiAgICAgICAgbGV0IHJpcHBsZSA9IHRoaXMucmlwcGxlXG4gICAgICAgIHRoaXMucmlwcGxlID0gbnVsbCBcbiAgICAgICAgcmlwcGxlLmRlc3Ryb3koKVxuICAgICAgfSAgICAgICAgICAgICAgICBcbiAgICB9XG4gIH1cbiAgXG59XG48L3NjcmlwdD5cbiAgIiwiPHRlbXBsYXRlPlxuICA8bGkgcm9sZT1cInNlcGFyYXRvclwiIGNsYXNzPVwibWRjLWxpc3QtZGl2aWRlclwiIFxuICA6Y2xhc3M9XCJjbGFzc2VzXCI+PC9saT5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtbGlzdC1kaXZpZGVyJyxcbiAgcHJvcHM6IHtcbiAgICBpbnNldDogQm9vbGVhbixcbiAgICBwYWRkZWQ6IEJvb2xlYW5cbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBjbGFzc2VzICgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgICdtZGMtbGlzdC1kaXZpZGVyLS1pbnNldCc6IHRoaXMuaW5zZXQsXG4gICAgICAgICdtZGMtbGlzdC1kaXZpZGVyLS1wYWRkZWQnOiB0aGlzLnBhZGRlZFxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuPC9zY3JpcHQ+XG4iLCI8dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJtZGMtbGlzdC1ncm91cFwiPjxzbG90Pjwvc2xvdD48L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtbGlzdC1ncm91cCcsXG59XG48L3NjcmlwdD5cbiIsIjx0ZW1wbGF0ZT5cbiAgPGgzIGNsYXNzPVwibWRjLWxpc3QtZ3JvdXAtaGVhZGVyIG1kYy1saXN0LWdyb3VwX19zdWJoZWFkZXJcIj48c2xvdD48L3Nsb3Q+PC9oMz5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtbGlzdC1ncm91cC1oZWFkZXInLFxufVxuPC9zY3JpcHQ+XG4iLCI8dGVtcGxhdGU+XG4gIDxociBjbGFzcz1cIm1kYy1saXN0LWdyb3VwLWRpdmlkZXIgbWRjLWxpc3QtZGl2aWRlclwiPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy1saXN0LWdyb3VwLWRpdmlkZXInLFxufVxuPC9zY3JpcHQ+XG4iLCJpbXBvcnQge0Jhc2VQbHVnaW59IGZyb20gJy4uL2Jhc2UnXG5pbXBvcnQgbWRjTGlzdCBmcm9tICcuL21kYy1saXN0LnZ1ZSdcbmltcG9ydCBtZGNMaXN0SXRlbSBmcm9tICcuL21kYy1saXN0LWl0ZW0udnVlJ1xuaW1wb3J0IG1kY0xpc3REaXZpZGVyIGZyb20gJy4vbWRjLWxpc3QtZGl2aWRlci52dWUnXG5pbXBvcnQgbWRjTGlzdEdyb3VwIGZyb20gJy4vbWRjLWxpc3QtZ3JvdXAudnVlJ1xuaW1wb3J0IG1kY0xpc3RHcm91cEhlYWRlciBmcm9tICcuL21kYy1saXN0LWdyb3VwLWhlYWRlci52dWUnXG5pbXBvcnQgbWRjTGlzdEdyb3VwRGl2aWRlciBmcm9tICcuL21kYy1saXN0LWdyb3VwLWRpdmlkZXIudnVlJ1xuXG5leHBvcnQge1xuICBtZGNMaXN0LFxuICBtZGNMaXN0SXRlbSxcbiAgbWRjTGlzdERpdmlkZXIsXG4gIG1kY0xpc3RHcm91cCxcbiAgbWRjTGlzdEdyb3VwSGVhZGVyLFxuICBtZGNMaXN0R3JvdXBEaXZpZGVyXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJhc2VQbHVnaW4oe1xuICBtZGNMaXN0LFxuICBtZGNMaXN0SXRlbSxcbiAgbWRjTGlzdERpdmlkZXIsXG4gIG1kY0xpc3RHcm91cCxcbiAgbWRjTGlzdEdyb3VwSGVhZGVyLFxuICBtZGNMaXN0R3JvdXBEaXZpZGVyXG59KVxuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qIGVzbGludCBuby11bnVzZWQtdmFyczogWzIsIHtcImFyZ3NcIjogXCJub25lXCJ9XSAqL1xuXG4vKipcbiAqIEFkYXB0ZXIgZm9yIE1EQyBNZW51LiBQcm92aWRlcyBhbiBpbnRlcmZhY2UgZm9yIG1hbmFnaW5nXG4gKiAtIGNsYXNzZXNcbiAqIC0gZG9tXG4gKiAtIGZvY3VzXG4gKiAtIHBvc2l0aW9uXG4gKiAtIGRpbWVuc2lvbnNcbiAqIC0gZXZlbnQgaGFuZGxlcnNcbiAqXG4gKiBBZGRpdGlvbmFsbHksIHByb3ZpZGVzIHR5cGUgaW5mb3JtYXRpb24gZm9yIHRoZSBhZGFwdGVyIHRvIHRoZSBDbG9zdXJlXG4gKiBjb21waWxlci5cbiAqXG4gKiBJbXBsZW1lbnQgdGhpcyBhZGFwdGVyIGZvciB5b3VyIGZyYW1ld29yayBvZiBjaG9pY2UgdG8gZGVsZWdhdGUgdXBkYXRlcyB0b1xuICogdGhlIGNvbXBvbmVudCBpbiB5b3VyIGZyYW1ld29yayBvZiBjaG9pY2UuIFNlZSBhcmNoaXRlY3R1cmUgZG9jdW1lbnRhdGlvblxuICogZm9yIG1vcmUgZGV0YWlscy5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRlcmlhbC1jb21wb25lbnRzL21hdGVyaWFsLWNvbXBvbmVudHMtd2ViL2Jsb2IvbWFzdGVyL2RvY3MvY29kZS9hcmNoaXRlY3R1cmUubWRcbiAqXG4gKiBAcmVjb3JkXG4gKi9cbmNsYXNzIE1EQ01lbnVBZGFwdGVyIHtcbiAgLyoqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWUgKi9cbiAgYWRkQ2xhc3MoY2xhc3NOYW1lKSB7fVxuXG4gIC8qKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lICovXG4gIHJlbW92ZUNsYXNzKGNsYXNzTmFtZSkge31cblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNsYXNzTmFtZVxuICAgKiBAcmV0dXJuIHtib29sZWFufVxuICAgKi9cbiAgaGFzQ2xhc3MoY2xhc3NOYW1lKSB7fVxuXG4gIC8qKiBAcmV0dXJuIHtib29sZWFufSAqL1xuICBoYXNOZWNlc3NhcnlEb20oKSB7fVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0V2ZW50VGFyZ2V0fSB0YXJnZXRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGF0dHJpYnV0ZU5hbWVcbiAgICogQHJldHVybiB7c3RyaW5nfVxuICAgKi9cbiAgZ2V0QXR0cmlidXRlRm9yRXZlbnRUYXJnZXQodGFyZ2V0LCBhdHRyaWJ1dGVOYW1lKSB7fVxuXG4gIC8qKiBAcmV0dXJuIHt7IHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyIH19ICovXG4gIGdldElubmVyRGltZW5zaW9ucygpIHt9XG5cbiAgLyoqIEByZXR1cm4ge2Jvb2xlYW59ICovXG4gIGhhc0FuY2hvcigpIHt9XG5cbiAgLyoqIEByZXR1cm4ge3t3aWR0aDogbnVtYmVyLCBoZWlnaHQ6IG51bWJlciwgdG9wOiBudW1iZXIsIHJpZ2h0OiBudW1iZXIsIGJvdHRvbTogbnVtYmVyLCBsZWZ0OiBudW1iZXJ9fSAqL1xuICBnZXRBbmNob3JEaW1lbnNpb25zKCkge31cblxuICAvKiogQHJldHVybiB7eyB3aWR0aDogbnVtYmVyLCBoZWlnaHQ6IG51bWJlciB9fSAqL1xuICBnZXRXaW5kb3dEaW1lbnNpb25zKCkge31cblxuICAvKiogQHJldHVybiB7bnVtYmVyfSAqL1xuICBnZXROdW1iZXJPZkl0ZW1zKCkge31cblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcbiAgICogQHBhcmFtIHtmdW5jdGlvbighRXZlbnQpfSBoYW5kbGVyXG4gICAqL1xuICByZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcih0eXBlLCBoYW5kbGVyKSB7fVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICAgKiBAcGFyYW0ge2Z1bmN0aW9uKCFFdmVudCl9IGhhbmRsZXJcbiAgICovXG4gIGRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIodHlwZSwgaGFuZGxlcikge31cblxuICAvKiogQHBhcmFtIHtmdW5jdGlvbighRXZlbnQpfSBoYW5kbGVyICovXG4gIHJlZ2lzdGVyQm9keUNsaWNrSGFuZGxlcihoYW5kbGVyKSB7fVxuXG4gIC8qKiBAcGFyYW0ge2Z1bmN0aW9uKCFFdmVudCl9IGhhbmRsZXIgKi9cbiAgZGVyZWdpc3RlckJvZHlDbGlja0hhbmRsZXIoaGFuZGxlcikge31cblxuICAvKipcbiAgICogQHBhcmFtIHtFdmVudFRhcmdldH0gdGFyZ2V0XG4gICAqIEByZXR1cm4ge251bWJlcn1cbiAgICovXG4gIGdldEluZGV4Rm9yRXZlbnRUYXJnZXQodGFyZ2V0KSB7fVxuXG4gIC8qKiBAcGFyYW0ge3tpbmRleDogbnVtYmVyfX0gZXZ0RGF0YSAqL1xuICBub3RpZnlTZWxlY3RlZChldnREYXRhKSB7fVxuXG4gIG5vdGlmeUNhbmNlbCgpIHt9XG5cbiAgc2F2ZUZvY3VzKCkge31cblxuICByZXN0b3JlRm9jdXMoKSB7fVxuXG4gIC8qKiBAcmV0dXJuIHtib29sZWFufSAqL1xuICBpc0ZvY3VzZWQoKSB7fVxuXG4gIGZvY3VzKCkge31cblxuICAvKiogQHJldHVybiB7bnVtYmVyfSAqL1xuICBnZXRGb2N1c2VkSXRlbUluZGV4KCkgLyogbnVtYmVyICovIHt9XG5cbiAgLyoqIEBwYXJhbSB7bnVtYmVyfSBpbmRleCAqL1xuICBmb2N1c0l0ZW1BdEluZGV4KGluZGV4KSB7fVxuXG4gIC8qKiBAcmV0dXJuIHtib29sZWFufSAqL1xuICBpc1J0bCgpIHt9XG5cbiAgLyoqIEBwYXJhbSB7c3RyaW5nfSBvcmlnaW4gKi9cbiAgc2V0VHJhbnNmb3JtT3JpZ2luKG9yaWdpbikge31cblxuICAvKiogQHBhcmFtIHt7XG4gICogICB0b3A6IChzdHJpbmd8dW5kZWZpbmVkKSxcbiAgKiAgIHJpZ2h0OiAoc3RyaW5nfHVuZGVmaW5lZCksXG4gICogICBib3R0b206IChzdHJpbmd8dW5kZWZpbmVkKSxcbiAgKiAgIGxlZnQ6IChzdHJpbmd8dW5kZWZpbmVkKVxuICAqIH19IHBvc2l0aW9uICovXG4gIHNldFBvc2l0aW9uKHBvc2l0aW9uKSB7fVxuXG4gIC8qKiBAcGFyYW0ge3N0cmluZ30gaGVpZ2h0ICovXG4gIHNldE1heEhlaWdodChoZWlnaHQpIHt9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleFxuICAgKiBAcGFyYW0ge3N0cmluZ30gYXR0clxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAgICovXG4gIHNldEF0dHJGb3JPcHRpb25BdEluZGV4KGluZGV4LCBhdHRyLCB2YWx1ZSkge31cblxuICAvKipcbiAgICogQHBhcmFtIHtudW1iZXJ9IGluZGV4XG4gICAqIEBwYXJhbSB7c3RyaW5nfSBhdHRyXG4gICAqL1xuICBybUF0dHJGb3JPcHRpb25BdEluZGV4KGluZGV4LCBhdHRyKSB7fVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge251bWJlcn0gaW5kZXhcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNsYXNzTmFtZVxuICAgKi9cbiAgYWRkQ2xhc3NGb3JPcHRpb25BdEluZGV4KGluZGV4LCBjbGFzc05hbWUpIHt9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleFxuICAgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG4gICAqL1xuICBybUNsYXNzRm9yT3B0aW9uQXRJbmRleChpbmRleCwgY2xhc3NOYW1lKSB7fVxufVxuXG5leHBvcnQge01EQ01lbnVBZGFwdGVyfTtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKiogQGVudW0ge3N0cmluZ30gKi9cbmNvbnN0IGNzc0NsYXNzZXMgPSB7XG4gIFJPT1Q6ICdtZGMtbWVudScsXG4gIE9QRU46ICdtZGMtbWVudS0tb3BlbicsXG4gIEFOSU1BVElOR19PUEVOOiAnbWRjLW1lbnUtLWFuaW1hdGluZy1vcGVuJyxcbiAgQU5JTUFUSU5HX0NMT1NFRDogJ21kYy1tZW51LS1hbmltYXRpbmctY2xvc2VkJyxcbiAgU0VMRUNURURfTElTVF9JVEVNOiAnbWRjLWxpc3QtaXRlbS0tc2VsZWN0ZWQnLFxufTtcblxuLyoqIEBlbnVtIHtzdHJpbmd9ICovXG5jb25zdCBzdHJpbmdzID0ge1xuICBJVEVNU19TRUxFQ1RPUjogJy5tZGMtbWVudV9faXRlbXMnLFxuICBTRUxFQ1RFRF9FVkVOVDogJ01EQ01lbnU6c2VsZWN0ZWQnLFxuICBDQU5DRUxfRVZFTlQ6ICdNRENNZW51OmNhbmNlbCcsXG4gIEFSSUFfRElTQUJMRURfQVRUUjogJ2FyaWEtZGlzYWJsZWQnLFxufTtcblxuLyoqIEBlbnVtIHtudW1iZXJ9ICovXG5jb25zdCBudW1iZXJzID0ge1xuICAvLyBBbW91bnQgb2YgdGltZSB0byB3YWl0IGJlZm9yZSB0cmlnZ2VyaW5nIGEgc2VsZWN0ZWQgZXZlbnQgb24gdGhlIG1lbnUuIE5vdGUgdGhhdCB0aGlzIHRpbWVcbiAgLy8gd2lsbCBtb3N0IGxpa2VseSBiZSBidW1wZWQgdXAgb25jZSBpbnRlcmFjdGl2ZSBsaXN0cyBhcmUgc3VwcG9ydGVkIHRvIGFsbG93IGZvciB0aGUgcmlwcGxlIHRvXG4gIC8vIGFuaW1hdGUgYmVmb3JlIGNsb3NpbmcgdGhlIG1lbnVcbiAgU0VMRUNURURfVFJJR0dFUl9ERUxBWTogNTAsXG4gIC8vIFRvdGFsIGR1cmF0aW9uIG9mIG1lbnUgb3BlbiBhbmltYXRpb24uXG4gIFRSQU5TSVRJT05fT1BFTl9EVVJBVElPTjogMTIwLFxuICAvLyBUb3RhbCBkdXJhdGlvbiBvZiBtZW51IGNsb3NlIGFuaW1hdGlvbi5cbiAgVFJBTlNJVElPTl9DTE9TRV9EVVJBVElPTjogNzUsXG4gIC8vIE1hcmdpbiBsZWZ0IHRvIHRoZSBlZGdlIG9mIHRoZSB2aWV3cG9ydCB3aGVuIG1lbnUgaXMgYXQgbWF4aW11bSBwb3NzaWJsZSBoZWlnaHQuXG4gIE1BUkdJTl9UT19FREdFOiAzMixcbiAgLy8gUmF0aW8gb2YgYW5jaG9yIHdpZHRoIHRvIG1lbnUgd2lkdGggZm9yIHN3aXRjaGluZyBmcm9tIGNvcm5lciBwb3NpdGlvbmluZyB0byBjZW50ZXIgcG9zaXRpb25pbmcuXG4gIEFOQ0hPUl9UT19NRU5VX1dJRFRIX1JBVElPOiAwLjY3LFxuICAvLyBSYXRpbyBvZiB2ZXJ0aWNhbCBvZmZzZXQgdG8gbWVudSBoZWlnaHQgZm9yIHN3aXRjaGluZyBmcm9tIGNvcm5lciB0byBtaWQtd2F5IG9yaWdpbiBwb3NpdGlvbmluZy5cbiAgT0ZGU0VUX1RPX01FTlVfSEVJR0hUX1JBVElPOiAwLjEsXG59O1xuXG4vKipcbiAqIEVudW0gZm9yIGJpdHMgaW4gdGhlIHtAc2VlIENvcm5lcikgYml0bWFwLlxuICogQGVudW0ge251bWJlcn1cbiAqL1xuY29uc3QgQ29ybmVyQml0ID0ge1xuICBCT1RUT006IDEsXG4gIENFTlRFUjogMixcbiAgUklHSFQ6IDQsXG4gIEZMSVBfUlRMOiA4LFxufTtcblxuLyoqXG4gKiBFbnVtIGZvciByZXByZXNlbnRpbmcgYW4gZWxlbWVudCBjb3JuZXIgZm9yIHBvc2l0aW9uaW5nIHRoZSBtZW51LlxuICpcbiAqIFRoZSBTVEFSVCBjb25zdGFudHMgbWFwIHRvIExFRlQgaWYgZWxlbWVudCBkaXJlY3Rpb25hbGl0eSBpcyBsZWZ0XG4gKiB0byByaWdodCBhbmQgUklHSFQgaWYgdGhlIGRpcmVjdGlvbmFsaXR5IGlzIHJpZ2h0IHRvIGxlZnQuXG4gKiBMaWtld2lzZSBFTkQgbWFwcyB0byBSSUdIVCBvciBMRUZUIGRlcGVuZGluZyBvbiB0aGUgZGlyZWN0aW9uYWxpdHkuXG4gKlxuICogQGVudW0ge251bWJlcn1cbiAqL1xuY29uc3QgQ29ybmVyID0ge1xuICBUT1BfTEVGVDogMCxcbiAgVE9QX1JJR0hUOiBDb3JuZXJCaXQuUklHSFQsXG4gIEJPVFRPTV9MRUZUOiBDb3JuZXJCaXQuQk9UVE9NLFxuICBCT1RUT01fUklHSFQ6IENvcm5lckJpdC5CT1RUT00gfCBDb3JuZXJCaXQuUklHSFQsXG4gIFRPUF9TVEFSVDogQ29ybmVyQml0LkZMSVBfUlRMLFxuICBUT1BfRU5EOiBDb3JuZXJCaXQuRkxJUF9SVEwgfCBDb3JuZXJCaXQuUklHSFQsXG4gIEJPVFRPTV9TVEFSVDogQ29ybmVyQml0LkJPVFRPTSB8IENvcm5lckJpdC5GTElQX1JUTCxcbiAgQk9UVE9NX0VORDogQ29ybmVyQml0LkJPVFRPTSB8IENvcm5lckJpdC5SSUdIVCB8IENvcm5lckJpdC5GTElQX1JUTCxcbn07XG5cblxuZXhwb3J0IHtjc3NDbGFzc2VzLCBzdHJpbmdzLCBudW1iZXJzLCBDb3JuZXJCaXQsIENvcm5lcn07XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiB7e1xuICogICB0b3A6IG51bWJlcixcbiAqICAgcmlnaHQ6IG51bWJlcixcbiAqICAgYm90dG9tOiBudW1iZXIsXG4gKiAgIGxlZnQ6IG51bWJlclxuICogfX1cbiAqL1xubGV0IEFuY2hvck1hcmdpbjtcblxuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbi8qKlxuICogQHR5cGVkZWYge3tcbiAqICAgdmlld3BvcnQ6IHsgd2lkdGg6IG51bWJlciwgaGVpZ2h0OiBudW1iZXIgfSxcbiAqICAgdmlld3BvcnREaXN0YW5jZToge3RvcDogbnVtYmVyLCByaWdodDogbnVtYmVyLCBib3R0b206IG51bWJlciwgbGVmdDogbnVtYmVyfSxcbiAqICAgYW5jaG9ySGVpZ2h0OiBudW1iZXIsXG4gKiAgIGFuY2hvcldpZHRoOiBudW1iZXIsXG4gKiAgIG1lbnVIZWlnaHQ6IG51bWJlcixcbiAqICAgbWVudVdpZHRoOiBudW1iZXIsXG4gKiB9fVxuICovXG5sZXQgQXV0b0xheW91dE1lYXN1cmVtZW50cztcbi8qIGVzbGludC1lbmFibGUgbm8tdW51c2VkLXZhcnMgKi9cblxuaW1wb3J0IE1EQ0ZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL2Jhc2UvZm91bmRhdGlvbic7XG5pbXBvcnQge01EQ01lbnVBZGFwdGVyfSBmcm9tICcuL2FkYXB0ZXInO1xuaW1wb3J0IHtjc3NDbGFzc2VzLCBzdHJpbmdzLCBudW1iZXJzLCBDb3JuZXIsIENvcm5lckJpdH0gZnJvbSAnLi9jb25zdGFudHMnO1xuXG4vKipcbiAqIEBleHRlbmRzIHtNRENGb3VuZGF0aW9uPCFNRENNZW51QWRhcHRlcj59XG4gKi9cbmNsYXNzIE1EQ01lbnVGb3VuZGF0aW9uIGV4dGVuZHMgTURDRm91bmRhdGlvbiB7XG4gIC8qKiBAcmV0dXJuIGVudW17Y3NzQ2xhc3Nlc30gKi9cbiAgc3RhdGljIGdldCBjc3NDbGFzc2VzKCkge1xuICAgIHJldHVybiBjc3NDbGFzc2VzO1xuICB9XG5cbiAgLyoqIEByZXR1cm4gZW51bXtzdHJpbmdzfSAqL1xuICBzdGF0aWMgZ2V0IHN0cmluZ3MoKSB7XG4gICAgcmV0dXJuIHN0cmluZ3M7XG4gIH1cblxuICAvKiogQHJldHVybiBlbnVte251bWJlcnN9ICovXG4gIHN0YXRpYyBnZXQgbnVtYmVycygpIHtcbiAgICByZXR1cm4gbnVtYmVycztcbiAgfVxuXG4gIC8qKiBAcmV0dXJuIGVudW17bnVtYmVyfSAqL1xuICBzdGF0aWMgZ2V0IENvcm5lcigpIHtcbiAgICByZXR1cm4gQ29ybmVyO1xuICB9XG5cbiAgLyoqXG4gICAqIHtAc2VlIE1EQ01lbnVBZGFwdGVyfSBmb3IgdHlwaW5nIGluZm9ybWF0aW9uIG9uIHBhcmFtZXRlcnMgYW5kIHJldHVyblxuICAgKiB0eXBlcy5cbiAgICogQHJldHVybiB7IU1EQ01lbnVBZGFwdGVyfVxuICAgKi9cbiAgc3RhdGljIGdldCBkZWZhdWx0QWRhcHRlcigpIHtcbiAgICByZXR1cm4gLyoqIEB0eXBlIHshTURDTWVudUFkYXB0ZXJ9ICovICh7XG4gICAgICBhZGRDbGFzczogKCkgPT4ge30sXG4gICAgICByZW1vdmVDbGFzczogKCkgPT4ge30sXG4gICAgICBoYXNDbGFzczogKCkgPT4gZmFsc2UsXG4gICAgICBoYXNOZWNlc3NhcnlEb206ICgpID0+IGZhbHNlLFxuICAgICAgZ2V0QXR0cmlidXRlRm9yRXZlbnRUYXJnZXQ6ICgpID0+IHt9LFxuICAgICAgZ2V0SW5uZXJEaW1lbnNpb25zOiAoKSA9PiAoe30pLFxuICAgICAgaGFzQW5jaG9yOiAoKSA9PiBmYWxzZSxcbiAgICAgIGdldEFuY2hvckRpbWVuc2lvbnM6ICgpID0+ICh7fSksXG4gICAgICBnZXRXaW5kb3dEaW1lbnNpb25zOiAoKSA9PiAoe30pLFxuICAgICAgZ2V0TnVtYmVyT2ZJdGVtczogKCkgPT4gMCxcbiAgICAgIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6ICgpID0+IHt9LFxuICAgICAgcmVnaXN0ZXJCb2R5Q2xpY2tIYW5kbGVyOiAoKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJCb2R5Q2xpY2tIYW5kbGVyOiAoKSA9PiB7fSxcbiAgICAgIGdldEluZGV4Rm9yRXZlbnRUYXJnZXQ6ICgpID0+IDAsXG4gICAgICBub3RpZnlTZWxlY3RlZDogKCkgPT4ge30sXG4gICAgICBub3RpZnlDYW5jZWw6ICgpID0+IHt9LFxuICAgICAgc2F2ZUZvY3VzOiAoKSA9PiB7fSxcbiAgICAgIHJlc3RvcmVGb2N1czogKCkgPT4ge30sXG4gICAgICBpc0ZvY3VzZWQ6ICgpID0+IGZhbHNlLFxuICAgICAgZm9jdXM6ICgpID0+IHt9LFxuICAgICAgZ2V0Rm9jdXNlZEl0ZW1JbmRleDogKCkgPT4gLTEsXG4gICAgICBmb2N1c0l0ZW1BdEluZGV4OiAoKSA9PiB7fSxcbiAgICAgIGlzUnRsOiAoKSA9PiBmYWxzZSxcbiAgICAgIHNldFRyYW5zZm9ybU9yaWdpbjogKCkgPT4ge30sXG4gICAgICBzZXRQb3NpdGlvbjogKCkgPT4ge30sXG4gICAgICBzZXRNYXhIZWlnaHQ6ICgpID0+IHt9LFxuICAgICAgc2V0QXR0ckZvck9wdGlvbkF0SW5kZXg6ICgpID0+IHt9LFxuICAgICAgcm1BdHRyRm9yT3B0aW9uQXRJbmRleDogKCkgPT4ge30sXG4gICAgICBhZGRDbGFzc0Zvck9wdGlvbkF0SW5kZXg6ICgpID0+IHt9LFxuICAgICAgcm1DbGFzc0Zvck9wdGlvbkF0SW5kZXg6ICgpID0+IHt9LFxuICAgIH0pO1xuICB9XG5cbiAgLyoqIEBwYXJhbSB7IU1EQ01lbnVBZGFwdGVyfSBhZGFwdGVyICovXG4gIGNvbnN0cnVjdG9yKGFkYXB0ZXIpIHtcbiAgICBzdXBlcihPYmplY3QuYXNzaWduKE1EQ01lbnVGb3VuZGF0aW9uLmRlZmF1bHRBZGFwdGVyLCBhZGFwdGVyKSk7XG5cbiAgICAvKiogQHByaXZhdGUge2Z1bmN0aW9uKCFFdmVudCl9ICovXG4gICAgdGhpcy5jbGlja0hhbmRsZXJfID0gKGV2dCkgPT4gdGhpcy5oYW5kbGVQb3NzaWJsZVNlbGVjdGVkXyhldnQpO1xuICAgIC8qKiBAcHJpdmF0ZSB7ZnVuY3Rpb24oIUV2ZW50KX0gKi9cbiAgICB0aGlzLmtleWRvd25IYW5kbGVyXyA9IChldnQpID0+IHRoaXMuaGFuZGxlS2V5Ym9hcmREb3duXyhldnQpO1xuICAgIC8qKiBAcHJpdmF0ZSB7ZnVuY3Rpb24oIUV2ZW50KX0gKi9cbiAgICB0aGlzLmtleXVwSGFuZGxlcl8gPSAoZXZ0KSA9PiB0aGlzLmhhbmRsZUtleWJvYXJkVXBfKGV2dCk7XG4gICAgLyoqIEBwcml2YXRlIHtmdW5jdGlvbighRXZlbnQpfSAqL1xuICAgIHRoaXMuZG9jdW1lbnRDbGlja0hhbmRsZXJfID0gKGV2dCkgPT4gdGhpcy5oYW5kbGVEb2N1bWVudENsaWNrXyhldnQpO1xuICAgIC8qKiBAcHJpdmF0ZSB7Ym9vbGVhbn0gKi9cbiAgICB0aGlzLmlzT3Blbl8gPSBmYWxzZTtcbiAgICAvKiogQHByaXZhdGUge251bWJlcn0gKi9cbiAgICB0aGlzLm9wZW5BbmltYXRpb25FbmRUaW1lcklkXyA9IDA7XG4gICAgLyoqIEBwcml2YXRlIHtudW1iZXJ9ICovXG4gICAgdGhpcy5jbG9zZUFuaW1hdGlvbkVuZFRpbWVySWRfID0gMDtcbiAgICAvKiogQHByaXZhdGUge251bWJlcn0gKi9cbiAgICB0aGlzLnNlbGVjdGVkVHJpZ2dlclRpbWVySWRfID0gMDtcbiAgICAvKiogQHByaXZhdGUge251bWJlcn0gKi9cbiAgICB0aGlzLmFuaW1hdGlvblJlcXVlc3RJZF8gPSAwO1xuICAgIC8qKiBAcHJpdmF0ZSB7IXsgd2lkdGg6IG51bWJlciwgaGVpZ2h0OiBudW1iZXIgfX0gKi9cbiAgICB0aGlzLmRpbWVuc2lvbnNfO1xuICAgIC8qKiBAcHJpdmF0ZSB7bnVtYmVyfSAqL1xuICAgIHRoaXMuaXRlbUhlaWdodF87XG4gICAgLyoqIEBwcml2YXRlIHtDb3JuZXJ9ICovXG4gICAgdGhpcy5hbmNob3JDb3JuZXJfID0gQ29ybmVyLlRPUF9TVEFSVDtcbiAgICAvKiogQHByaXZhdGUge0FuY2hvck1hcmdpbn0gKi9cbiAgICB0aGlzLmFuY2hvck1hcmdpbl8gPSB7dG9wOiAwLCByaWdodDogMCwgYm90dG9tOiAwLCBsZWZ0OiAwfTtcbiAgICAvKiogQHByaXZhdGUgez9BdXRvTGF5b3V0TWVhc3VyZW1lbnRzfSAqL1xuICAgIHRoaXMubWVhc3VyZXNfID0gbnVsbDtcbiAgICAvKiogQHByaXZhdGUge251bWJlcn0gKi9cbiAgICB0aGlzLnNlbGVjdGVkSW5kZXhfID0gLTE7XG4gICAgLyoqIEBwcml2YXRlIHtib29sZWFufSAqL1xuICAgIHRoaXMucmVtZW1iZXJTZWxlY3Rpb25fID0gZmFsc2U7XG4gICAgLyoqIEBwcml2YXRlIHtib29sZWFufSAqL1xuICAgIHRoaXMucXVpY2tPcGVuXyA9IGZhbHNlO1xuXG4gICAgLy8gQSBrZXl1cCBldmVudCBvbiB0aGUgbWVudSBuZWVkcyB0byBoYXZlIGEgY29ycmVzcG9uZGluZyBrZXlkb3duXG4gICAgLy8gZXZlbnQgb24gdGhlIG1lbnUuIElmIHRoZSB1c2VyIG9wZW5zIHRoZSBtZW51IHdpdGggYSBrZXlkb3duIGV2ZW50IG9uIGFcbiAgICAvLyBidXR0b24sIHRoZSBtZW51IHdpbGwgb25seSBnZXQgdGhlIGtleSB1cCBldmVudCBjYXVzaW5nIGJ1Z2d5IGJlaGF2aW9yIHdpdGggc2VsZWN0ZWQgZWxlbWVudHMuXG4gICAgLyoqIEBwcml2YXRlIHtib29sZWFufSAqL1xuICAgIHRoaXMua2V5RG93bldpdGhpbk1lbnVfID0gZmFsc2U7XG4gIH1cblxuICBpbml0KCkge1xuICAgIGNvbnN0IHtST09ULCBPUEVOfSA9IE1EQ01lbnVGb3VuZGF0aW9uLmNzc0NsYXNzZXM7XG5cbiAgICBpZiAoIXRoaXMuYWRhcHRlcl8uaGFzQ2xhc3MoUk9PVCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgJHtST09UfSBjbGFzcyByZXF1aXJlZCBpbiByb290IGVsZW1lbnQuYCk7XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLmFkYXB0ZXJfLmhhc05lY2Vzc2FyeURvbSgpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFJlcXVpcmVkIERPTSBub2RlcyBtaXNzaW5nIGluICR7Uk9PVH0gY29tcG9uZW50LmApO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmFkYXB0ZXJfLmhhc0NsYXNzKE9QRU4pKSB7XG4gICAgICB0aGlzLmlzT3Blbl8gPSB0cnVlO1xuICAgIH1cblxuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ2NsaWNrJywgdGhpcy5jbGlja0hhbmRsZXJfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdrZXl1cCcsIHRoaXMua2V5dXBIYW5kbGVyXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcigna2V5ZG93bicsIHRoaXMua2V5ZG93bkhhbmRsZXJfKTtcbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgY2xlYXJUaW1lb3V0KHRoaXMuc2VsZWN0ZWRUcmlnZ2VyVGltZXJJZF8pO1xuICAgIGNsZWFyVGltZW91dCh0aGlzLm9wZW5BbmltYXRpb25FbmRUaW1lcklkXyk7XG4gICAgY2xlYXJUaW1lb3V0KHRoaXMuY2xvc2VBbmltYXRpb25FbmRUaW1lcklkXyk7XG4gICAgLy8gQ2FuY2VsIGFueSBjdXJyZW50bHkgcnVubmluZyBhbmltYXRpb25zLlxuICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuYW5pbWF0aW9uUmVxdWVzdElkXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdjbGljaycsIHRoaXMuY2xpY2tIYW5kbGVyXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdrZXl1cCcsIHRoaXMua2V5dXBIYW5kbGVyXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdrZXlkb3duJywgdGhpcy5rZXlkb3duSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlckJvZHlDbGlja0hhbmRsZXIodGhpcy5kb2N1bWVudENsaWNrSGFuZGxlcl8pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7IUNvcm5lcn0gY29ybmVyIERlZmF1bHQgYW5jaG9yIGNvcm5lciBhbGlnbm1lbnQgb2YgdG9wLWxlZnQgbWVudSBjb3JuZXIuXG4gICAqL1xuICBzZXRBbmNob3JDb3JuZXIoY29ybmVyKSB7XG4gICAgdGhpcy5hbmNob3JDb3JuZXJfID0gY29ybmVyO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7IUFuY2hvck1hcmdpbn0gbWFyZ2luIDQtcGxldCBvZiBtYXJnaW5zIGZyb20gYW5jaG9yLlxuICAgKi9cbiAgc2V0QW5jaG9yTWFyZ2luKG1hcmdpbikge1xuICAgIHRoaXMuYW5jaG9yTWFyZ2luXy50b3AgPSB0eXBlb2YgbWFyZ2luLnRvcCA9PT0gJ251bWJlcicgPyBtYXJnaW4udG9wIDogMDtcbiAgICB0aGlzLmFuY2hvck1hcmdpbl8ucmlnaHQgPSB0eXBlb2YgbWFyZ2luLnJpZ2h0ID09PSAnbnVtYmVyJyA/IG1hcmdpbi5yaWdodCA6IDA7XG4gICAgdGhpcy5hbmNob3JNYXJnaW5fLmJvdHRvbSA9IHR5cGVvZiBtYXJnaW4uYm90dG9tID09PSAnbnVtYmVyJyA/IG1hcmdpbi5ib3R0b20gOiAwO1xuICAgIHRoaXMuYW5jaG9yTWFyZ2luXy5sZWZ0ID0gdHlwZW9mIG1hcmdpbi5sZWZ0ID09PSAnbnVtYmVyJyA/IG1hcmdpbi5sZWZ0IDogMDtcbiAgfVxuXG4gIC8qKiBAcGFyYW0ge2Jvb2xlYW59IHJlbWVtYmVyU2VsZWN0aW9uICovXG4gIHNldFJlbWVtYmVyU2VsZWN0aW9uKHJlbWVtYmVyU2VsZWN0aW9uKSB7XG4gICAgdGhpcy5yZW1lbWJlclNlbGVjdGlvbl8gPSByZW1lbWJlclNlbGVjdGlvbjtcbiAgICB0aGlzLnNldFNlbGVjdGVkSW5kZXgoLTEpO1xuICB9XG5cbiAgLyoqIEBwYXJhbSB7Ym9vbGVhbn0gcXVpY2tPcGVuICovXG4gIHNldFF1aWNrT3BlbihxdWlja09wZW4pIHtcbiAgICB0aGlzLnF1aWNrT3Blbl8gPSBxdWlja09wZW47XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHs/bnVtYmVyfSBmb2N1c0luZGV4XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBmb2N1c09uT3Blbl8oZm9jdXNJbmRleCkge1xuICAgIGlmIChmb2N1c0luZGV4ID09PSBudWxsKSB7XG4gICAgICAvLyBJZiB0aGlzIGluc3RhbmNlIG9mIE1EQ01lbnUgcmVtZW1iZXJzIHNlbGVjdGlvbnMsIGFuZCB0aGUgdXNlciBoYXNcbiAgICAgIC8vIG1hZGUgYSBzZWxlY3Rpb24sIHRoZW4gZm9jdXMgdGhlIGxhc3Qgc2VsZWN0ZWQgaXRlbVxuICAgICAgaWYgKHRoaXMucmVtZW1iZXJTZWxlY3Rpb25fICYmIHRoaXMuc2VsZWN0ZWRJbmRleF8gPj0gMCkge1xuICAgICAgICB0aGlzLmFkYXB0ZXJfLmZvY3VzSXRlbUF0SW5kZXgodGhpcy5zZWxlY3RlZEluZGV4Xyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5hZGFwdGVyXy5mb2N1cygpO1xuICAgICAgLy8gSWYgdGhhdCBkb2Vzbid0IHdvcmssIGZvY3VzIGZpcnN0IGl0ZW0gaW5zdGVhZC5cbiAgICAgIGlmICghdGhpcy5hZGFwdGVyXy5pc0ZvY3VzZWQoKSkge1xuICAgICAgICB0aGlzLmFkYXB0ZXJfLmZvY3VzSXRlbUF0SW5kZXgoMCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uZm9jdXNJdGVtQXRJbmRleChmb2N1c0luZGV4KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogSGFuZGxlIGNsaWNrcyBhbmQgY2FuY2VsIHRoZSBtZW51IGlmIG5vdCBhIGNoaWxkIGxpc3QtaXRlbVxuICAgKiBAcGFyYW0geyFFdmVudH0gZXZ0XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBoYW5kbGVEb2N1bWVudENsaWNrXyhldnQpIHtcbiAgICBsZXQgZWwgPSBldnQudGFyZ2V0O1xuXG4gICAgd2hpbGUgKGVsICYmIGVsICE9PSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpIHtcbiAgICAgIGlmICh0aGlzLmFkYXB0ZXJfLmdldEluZGV4Rm9yRXZlbnRUYXJnZXQoZWwpICE9PSAtMSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBlbCA9IGVsLnBhcmVudE5vZGU7XG4gICAgfVxuXG4gICAgdGhpcy5hZGFwdGVyXy5ub3RpZnlDYW5jZWwoKTtcbiAgICB0aGlzLmNsb3NlKGV2dCk7XG4gIH07XG5cbiAgLyoqXG4gICAqIEhhbmRsZSBrZXlzIHRoYXQgd2Ugd2FudCB0byByZXBlYXQgb24gaG9sZCAodGFiIGFuZCBhcnJvd3MpLlxuICAgKiBAcGFyYW0geyFFdmVudH0gZXZ0XG4gICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBoYW5kbGVLZXlib2FyZERvd25fKGV2dCkge1xuICAgIC8vIERvIG5vdGhpbmcgaWYgQWx0LCBDdHJsIG9yIE1ldGEgYXJlIHByZXNzZWQuXG4gICAgaWYgKGV2dC5hbHRLZXkgfHwgZXZ0LmN0cmxLZXkgfHwgZXZ0Lm1ldGFLZXkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGNvbnN0IHtrZXlDb2RlLCBrZXksIHNoaWZ0S2V5fSA9IGV2dDtcbiAgICBjb25zdCBpc1RhYiA9IGtleSA9PT0gJ1RhYicgfHwga2V5Q29kZSA9PT0gOTtcbiAgICBjb25zdCBpc0Fycm93VXAgPSBrZXkgPT09ICdBcnJvd1VwJyB8fCBrZXlDb2RlID09PSAzODtcbiAgICBjb25zdCBpc0Fycm93RG93biA9IGtleSA9PT0gJ0Fycm93RG93bicgfHwga2V5Q29kZSA9PT0gNDA7XG4gICAgY29uc3QgaXNTcGFjZSA9IGtleSA9PT0gJ1NwYWNlJyB8fCBrZXlDb2RlID09PSAzMjtcbiAgICBjb25zdCBpc0VudGVyID0ga2V5ID09PSAnRW50ZXInIHx8IGtleUNvZGUgPT09IDEzO1xuICAgIC8vIFRoZSBtZW51IG5lZWRzIHRvIGtub3cgaWYgdGhlIGtleWRvd24gZXZlbnQgd2FzIHRyaWdnZXJlZCBvbiB0aGUgbWVudVxuICAgIHRoaXMua2V5RG93bldpdGhpbk1lbnVfID0gaXNFbnRlciB8fCBpc1NwYWNlO1xuXG4gICAgY29uc3QgZm9jdXNlZEl0ZW1JbmRleCA9IHRoaXMuYWRhcHRlcl8uZ2V0Rm9jdXNlZEl0ZW1JbmRleCgpO1xuICAgIGNvbnN0IGxhc3RJdGVtSW5kZXggPSB0aGlzLmFkYXB0ZXJfLmdldE51bWJlck9mSXRlbXMoKSAtIDE7XG5cbiAgICBpZiAoc2hpZnRLZXkgJiYgaXNUYWIgJiYgZm9jdXNlZEl0ZW1JbmRleCA9PT0gMCkge1xuICAgICAgdGhpcy5hZGFwdGVyXy5mb2N1c0l0ZW1BdEluZGV4KGxhc3RJdGVtSW5kZXgpO1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgaWYgKCFzaGlmdEtleSAmJiBpc1RhYiAmJiBmb2N1c2VkSXRlbUluZGV4ID09PSBsYXN0SXRlbUluZGV4KSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmZvY3VzSXRlbUF0SW5kZXgoMCk7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyBFbnN1cmUgQXJyb3d7VXAsRG93bn0gYW5kIHNwYWNlIGRvIG5vdCBjYXVzZSBpbmFkdmVydGVudCBzY3JvbGxpbmdcbiAgICBpZiAoaXNBcnJvd1VwIHx8IGlzQXJyb3dEb3duIHx8IGlzU3BhY2UpIHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cblxuICAgIGlmIChpc0Fycm93VXApIHtcbiAgICAgIGlmIChmb2N1c2VkSXRlbUluZGV4ID09PSAwIHx8IHRoaXMuYWRhcHRlcl8uaXNGb2N1c2VkKCkpIHtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5mb2N1c0l0ZW1BdEluZGV4KGxhc3RJdGVtSW5kZXgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5mb2N1c0l0ZW1BdEluZGV4KGZvY3VzZWRJdGVtSW5kZXggLSAxKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzQXJyb3dEb3duKSB7XG4gICAgICBpZiAoZm9jdXNlZEl0ZW1JbmRleCA9PT0gbGFzdEl0ZW1JbmRleCB8fCB0aGlzLmFkYXB0ZXJfLmlzRm9jdXNlZCgpKSB7XG4gICAgICAgIHRoaXMuYWRhcHRlcl8uZm9jdXNJdGVtQXRJbmRleCgwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuYWRhcHRlcl8uZm9jdXNJdGVtQXRJbmRleChmb2N1c2VkSXRlbUluZGV4ICsgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICAvKipcbiAgICogSGFuZGxlIGtleXMgdGhhdCB3ZSBkb24ndCB3YW50IHRvIHJlcGVhdCBvbiBob2xkIChFbnRlciwgU3BhY2UsIEVzY2FwZSkuXG4gICAqIEBwYXJhbSB7IUV2ZW50fSBldnRcbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICogQHByaXZhdGVcbiAgICovXG4gIGhhbmRsZUtleWJvYXJkVXBfKGV2dCkge1xuICAgIC8vIERvIG5vdGhpbmcgaWYgQWx0LCBDdHJsIG9yIE1ldGEgYXJlIHByZXNzZWQuXG4gICAgaWYgKGV2dC5hbHRLZXkgfHwgZXZ0LmN0cmxLZXkgfHwgZXZ0Lm1ldGFLZXkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGNvbnN0IHtrZXlDb2RlLCBrZXl9ID0gZXZ0O1xuICAgIGNvbnN0IGlzRW50ZXIgPSBrZXkgPT09ICdFbnRlcicgfHwga2V5Q29kZSA9PT0gMTM7XG4gICAgY29uc3QgaXNTcGFjZSA9IGtleSA9PT0gJ1NwYWNlJyB8fCBrZXlDb2RlID09PSAzMjtcbiAgICBjb25zdCBpc0VzY2FwZSA9IGtleSA9PT0gJ0VzY2FwZScgfHwga2V5Q29kZSA9PT0gMjc7XG5cbiAgICBpZiAoaXNFbnRlciB8fCBpc1NwYWNlKSB7XG4gICAgICAvLyBJZiB0aGUga2V5ZG93biBldmVudCBkaWRuJ3Qgb2NjdXIgb24gdGhlIG1lbnUsIHRoZW4gaXQgc2hvdWxkXG4gICAgICAvLyBkaXNyZWdhcmQgdGhlIHBvc3NpYmxlIHNlbGVjdGVkIGV2ZW50LlxuICAgICAgaWYgKHRoaXMua2V5RG93bldpdGhpbk1lbnVfKSB7XG4gICAgICAgIHRoaXMuaGFuZGxlUG9zc2libGVTZWxlY3RlZF8oZXZ0KTtcbiAgICAgIH1cbiAgICAgIHRoaXMua2V5RG93bldpdGhpbk1lbnVfID0gZmFsc2U7XG4gICAgfVxuXG4gICAgaWYgKGlzRXNjYXBlKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLm5vdGlmeUNhbmNlbCgpO1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7IUV2ZW50fSBldnRcbiAgICogQHByaXZhdGVcbiAgICovXG4gIGhhbmRsZVBvc3NpYmxlU2VsZWN0ZWRfKGV2dCkge1xuICAgIGlmICh0aGlzLmFkYXB0ZXJfLmdldEF0dHJpYnV0ZUZvckV2ZW50VGFyZ2V0KGV2dC50YXJnZXQsIHN0cmluZ3MuQVJJQV9ESVNBQkxFRF9BVFRSKSA9PT0gJ3RydWUnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHRhcmdldEluZGV4ID0gdGhpcy5hZGFwdGVyXy5nZXRJbmRleEZvckV2ZW50VGFyZ2V0KGV2dC50YXJnZXQpO1xuICAgIGlmICh0YXJnZXRJbmRleCA8IDApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gRGVib3VuY2UgbXVsdGlwbGUgc2VsZWN0aW9uc1xuICAgIGlmICh0aGlzLnNlbGVjdGVkVHJpZ2dlclRpbWVySWRfKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuc2VsZWN0ZWRUcmlnZ2VyVGltZXJJZF8gPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMuc2VsZWN0ZWRUcmlnZ2VyVGltZXJJZF8gPSAwO1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgaWYgKHRoaXMucmVtZW1iZXJTZWxlY3Rpb25fKSB7XG4gICAgICAgIHRoaXMuc2V0U2VsZWN0ZWRJbmRleCh0YXJnZXRJbmRleCk7XG4gICAgICB9XG4gICAgICB0aGlzLmFkYXB0ZXJfLm5vdGlmeVNlbGVjdGVkKHtpbmRleDogdGFyZ2V0SW5kZXh9KTtcbiAgICB9LCBudW1iZXJzLlNFTEVDVEVEX1RSSUdHRVJfREVMQVkpO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge0F1dG9MYXlvdXRNZWFzdXJlbWVudHN9IE1lYXN1cmVtZW50cyB1c2VkIHRvIHBvc2l0aW9uIG1lbnUgcG9wdXAuXG4gICAqL1xuICBnZXRBdXRvTGF5b3V0TWVhc3VyZW1lbnRzXygpIHtcbiAgICBjb25zdCBhbmNob3JSZWN0ID0gdGhpcy5hZGFwdGVyXy5nZXRBbmNob3JEaW1lbnNpb25zKCk7XG4gICAgY29uc3Qgdmlld3BvcnQgPSB0aGlzLmFkYXB0ZXJfLmdldFdpbmRvd0RpbWVuc2lvbnMoKTtcblxuICAgIHJldHVybiB7XG4gICAgICB2aWV3cG9ydDogdmlld3BvcnQsXG4gICAgICB2aWV3cG9ydERpc3RhbmNlOiB7XG4gICAgICAgIHRvcDogYW5jaG9yUmVjdC50b3AsXG4gICAgICAgIHJpZ2h0OiB2aWV3cG9ydC53aWR0aCAtIGFuY2hvclJlY3QucmlnaHQsXG4gICAgICAgIGxlZnQ6IGFuY2hvclJlY3QubGVmdCxcbiAgICAgICAgYm90dG9tOiB2aWV3cG9ydC5oZWlnaHQgLSBhbmNob3JSZWN0LmJvdHRvbSxcbiAgICAgIH0sXG4gICAgICBhbmNob3JIZWlnaHQ6IGFuY2hvclJlY3QuaGVpZ2h0LFxuICAgICAgYW5jaG9yV2lkdGg6IGFuY2hvclJlY3Qud2lkdGgsXG4gICAgICBtZW51SGVpZ2h0OiB0aGlzLmRpbWVuc2lvbnNfLmhlaWdodCxcbiAgICAgIG1lbnVXaWR0aDogdGhpcy5kaW1lbnNpb25zXy53aWR0aCxcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIENvbXB1dGVzIHRoZSBjb3JuZXIgb2YgdGhlIGFuY2hvciBmcm9tIHdoaWNoIHRvIGFuaW1hdGUgYW5kIHBvc2l0aW9uIHRoZSBtZW51LlxuICAgKiBAcmV0dXJuIHtDb3JuZXJ9XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBnZXRPcmlnaW5Db3JuZXJfKCkge1xuICAgIC8vIERlZmF1bHRzOiBvcGVuIGZyb20gdGhlIHRvcCBsZWZ0LlxuICAgIGxldCBjb3JuZXIgPSBDb3JuZXIuVE9QX0xFRlQ7XG5cbiAgICBjb25zdCB7dmlld3BvcnREaXN0YW5jZSwgYW5jaG9ySGVpZ2h0LCBhbmNob3JXaWR0aCwgbWVudUhlaWdodCwgbWVudVdpZHRofSA9IHRoaXMubWVhc3VyZXNfO1xuICAgIGNvbnN0IGlzQm90dG9tQWxpZ25lZCA9IEJvb2xlYW4odGhpcy5hbmNob3JDb3JuZXJfICYgQ29ybmVyQml0LkJPVFRPTSk7XG4gICAgY29uc3QgYXZhaWxhYmxlVG9wID0gaXNCb3R0b21BbGlnbmVkID8gdmlld3BvcnREaXN0YW5jZS50b3AgKyBhbmNob3JIZWlnaHQgKyB0aGlzLmFuY2hvck1hcmdpbl8uYm90dG9tXG4gICAgICA6IHZpZXdwb3J0RGlzdGFuY2UudG9wICsgdGhpcy5hbmNob3JNYXJnaW5fLnRvcDtcbiAgICBjb25zdCBhdmFpbGFibGVCb3R0b20gPSBpc0JvdHRvbUFsaWduZWQgPyB2aWV3cG9ydERpc3RhbmNlLmJvdHRvbSAtIHRoaXMuYW5jaG9yTWFyZ2luXy5ib3R0b21cbiAgICAgIDogdmlld3BvcnREaXN0YW5jZS5ib3R0b20gKyBhbmNob3JIZWlnaHQgLSB0aGlzLmFuY2hvck1hcmdpbl8udG9wO1xuXG4gICAgY29uc3QgdG9wT3ZlcmZsb3cgPSBtZW51SGVpZ2h0IC0gYXZhaWxhYmxlVG9wO1xuICAgIGNvbnN0IGJvdHRvbU92ZXJmbG93ID0gbWVudUhlaWdodCAtIGF2YWlsYWJsZUJvdHRvbTtcbiAgICBpZiAoYm90dG9tT3ZlcmZsb3cgPiAwICYmIHRvcE92ZXJmbG93IDwgYm90dG9tT3ZlcmZsb3cpIHtcbiAgICAgIGNvcm5lciB8PSBDb3JuZXJCaXQuQk9UVE9NO1xuICAgIH1cblxuICAgIGNvbnN0IGlzUnRsID0gdGhpcy5hZGFwdGVyXy5pc1J0bCgpO1xuICAgIGNvbnN0IGlzRmxpcFJ0bCA9IEJvb2xlYW4odGhpcy5hbmNob3JDb3JuZXJfICYgQ29ybmVyQml0LkZMSVBfUlRMKTtcbiAgICBjb25zdCBhdm9pZEhvcml6b250YWxPdmVybGFwID0gQm9vbGVhbih0aGlzLmFuY2hvckNvcm5lcl8gJiBDb3JuZXJCaXQuUklHSFQpO1xuICAgIGNvbnN0IGlzQWxpZ25lZFJpZ2h0ID0gKGF2b2lkSG9yaXpvbnRhbE92ZXJsYXAgJiYgIWlzUnRsKSB8fFxuICAgICAgKCFhdm9pZEhvcml6b250YWxPdmVybGFwICYmIGlzRmxpcFJ0bCAmJiBpc1J0bCk7XG4gICAgY29uc3QgYXZhaWxhYmxlTGVmdCA9IGlzQWxpZ25lZFJpZ2h0ID8gdmlld3BvcnREaXN0YW5jZS5sZWZ0ICsgYW5jaG9yV2lkdGggKyB0aGlzLmFuY2hvck1hcmdpbl8ucmlnaHQgOlxuICAgICAgdmlld3BvcnREaXN0YW5jZS5sZWZ0ICsgdGhpcy5hbmNob3JNYXJnaW5fLmxlZnQ7XG4gICAgY29uc3QgYXZhaWxhYmxlUmlnaHQgPSBpc0FsaWduZWRSaWdodCA/IHZpZXdwb3J0RGlzdGFuY2UucmlnaHQgLSB0aGlzLmFuY2hvck1hcmdpbl8ucmlnaHQgOlxuICAgICAgdmlld3BvcnREaXN0YW5jZS5yaWdodCArIGFuY2hvcldpZHRoIC0gdGhpcy5hbmNob3JNYXJnaW5fLmxlZnQ7XG5cbiAgICBjb25zdCBsZWZ0T3ZlcmZsb3cgPSBtZW51V2lkdGggLSBhdmFpbGFibGVMZWZ0O1xuICAgIGNvbnN0IHJpZ2h0T3ZlcmZsb3cgPSBtZW51V2lkdGggLSBhdmFpbGFibGVSaWdodDtcblxuICAgIGlmICgobGVmdE92ZXJmbG93IDwgMCAmJiBpc0FsaWduZWRSaWdodCAmJiBpc1J0bCkgfHxcbiAgICAgICAgKGF2b2lkSG9yaXpvbnRhbE92ZXJsYXAgJiYgIWlzQWxpZ25lZFJpZ2h0ICYmIGxlZnRPdmVyZmxvdyA8IDApIHx8XG4gICAgICAgIChyaWdodE92ZXJmbG93ID4gMCAmJiBsZWZ0T3ZlcmZsb3cgPCByaWdodE92ZXJmbG93KSkge1xuICAgICAgY29ybmVyIHw9IENvcm5lckJpdC5SSUdIVDtcbiAgICB9XG5cbiAgICByZXR1cm4gY29ybmVyO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7Q29ybmVyfSBjb3JuZXIgT3JpZ2luIGNvcm5lciBvZiB0aGUgbWVudS5cbiAgICogQHJldHVybiB7bnVtYmVyfSBIb3Jpem9udGFsIG9mZnNldCBvZiBtZW51IG9yaWdpbiBjb3JuZXIgZnJvbSBjb3JyZXNwb25kaW5nIGFuY2hvciBjb3JuZXIuXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBnZXRIb3Jpem9udGFsT3JpZ2luT2Zmc2V0Xyhjb3JuZXIpIHtcbiAgICBjb25zdCB7YW5jaG9yV2lkdGh9ID0gdGhpcy5tZWFzdXJlc187XG4gICAgY29uc3QgaXNSaWdodEFsaWduZWQgPSBCb29sZWFuKGNvcm5lciAmIENvcm5lckJpdC5SSUdIVCk7XG4gICAgY29uc3QgYXZvaWRIb3Jpem9udGFsT3ZlcmxhcCA9IEJvb2xlYW4odGhpcy5hbmNob3JDb3JuZXJfICYgQ29ybmVyQml0LlJJR0hUKTtcbiAgICBsZXQgeCA9IDA7XG4gICAgaWYgKGlzUmlnaHRBbGlnbmVkKSB7XG4gICAgICBjb25zdCByaWdodE9mZnNldCA9IGF2b2lkSG9yaXpvbnRhbE92ZXJsYXAgPyBhbmNob3JXaWR0aCAtIHRoaXMuYW5jaG9yTWFyZ2luXy5sZWZ0IDogdGhpcy5hbmNob3JNYXJnaW5fLnJpZ2h0O1xuICAgICAgeCA9IHJpZ2h0T2Zmc2V0O1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBsZWZ0T2Zmc2V0ID0gYXZvaWRIb3Jpem9udGFsT3ZlcmxhcCA/IGFuY2hvcldpZHRoIC0gdGhpcy5hbmNob3JNYXJnaW5fLnJpZ2h0IDogdGhpcy5hbmNob3JNYXJnaW5fLmxlZnQ7XG4gICAgICB4ID0gbGVmdE9mZnNldDtcbiAgICB9XG4gICAgcmV0dXJuIHg7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtDb3JuZXJ9IGNvcm5lciBPcmlnaW4gY29ybmVyIG9mIHRoZSBtZW51LlxuICAgKiBAcmV0dXJuIHtudW1iZXJ9IFZlcnRpY2FsIG9mZnNldCBvZiBtZW51IG9yaWdpbiBjb3JuZXIgZnJvbSBjb3JyZXNwb25kaW5nIGFuY2hvciBjb3JuZXIuXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBnZXRWZXJ0aWNhbE9yaWdpbk9mZnNldF8oY29ybmVyKSB7XG4gICAgY29uc3Qge3ZpZXdwb3J0LCB2aWV3cG9ydERpc3RhbmNlLCBhbmNob3JIZWlnaHQsIG1lbnVIZWlnaHR9ID0gdGhpcy5tZWFzdXJlc187XG4gICAgY29uc3QgaXNCb3R0b21BbGlnbmVkID0gQm9vbGVhbihjb3JuZXIgJiBDb3JuZXJCaXQuQk9UVE9NKTtcbiAgICBjb25zdCB7TUFSR0lOX1RPX0VER0V9ID0gTURDTWVudUZvdW5kYXRpb24ubnVtYmVycztcbiAgICBjb25zdCBhdm9pZFZlcnRpY2FsT3ZlcmxhcCA9IEJvb2xlYW4odGhpcy5hbmNob3JDb3JuZXJfICYgQ29ybmVyQml0LkJPVFRPTSk7XG4gICAgY29uc3QgY2FuT3ZlcmxhcFZlcnRpY2FsbHkgPSAhYXZvaWRWZXJ0aWNhbE92ZXJsYXA7XG4gICAgbGV0IHkgPSAwO1xuXG4gICAgaWYgKGlzQm90dG9tQWxpZ25lZCkge1xuICAgICAgeSA9IGF2b2lkVmVydGljYWxPdmVybGFwID8gYW5jaG9ySGVpZ2h0IC0gdGhpcy5hbmNob3JNYXJnaW5fLnRvcCA6IC10aGlzLmFuY2hvck1hcmdpbl8uYm90dG9tO1xuICAgICAgLy8gYWRqdXN0IGZvciB3aGVuIG1lbnUgY2FuIG92ZXJsYXAgYW5jaG9yLCBidXQgdG9vIHRhbGwgdG8gYmUgYWxpZ25lZCB0byBib3R0b21cbiAgICAgIC8vIGFuY2hvciBjb3JuZXIuIEJvdHRvbSBtYXJnaW4gaXMgaWdub3JlZCBpbiBzdWNoIGNhc2VzLlxuICAgICAgaWYgKGNhbk92ZXJsYXBWZXJ0aWNhbGx5ICYmIG1lbnVIZWlnaHQgPiB2aWV3cG9ydERpc3RhbmNlLnRvcCArIGFuY2hvckhlaWdodCkge1xuICAgICAgICB5ID0gLShNYXRoLm1pbihtZW51SGVpZ2h0LCB2aWV3cG9ydC5oZWlnaHQgLSBNQVJHSU5fVE9fRURHRSkgLSAodmlld3BvcnREaXN0YW5jZS50b3AgKyBhbmNob3JIZWlnaHQpKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgeSA9IGF2b2lkVmVydGljYWxPdmVybGFwID8gKGFuY2hvckhlaWdodCArIHRoaXMuYW5jaG9yTWFyZ2luXy5ib3R0b20pIDogdGhpcy5hbmNob3JNYXJnaW5fLnRvcDtcbiAgICAgIC8vIGFkanVzdCBmb3Igd2hlbiBtZW51IGNhbiBvdmVybGFwIGFuY2hvciwgYnV0IHRvbyB0YWxsIHRvIGJlIGFsaWduZWQgdG8gdG9wXG4gICAgICAvLyBhbmNob3IgY29ybmVycy4gVG9wIG1hcmdpbiBpcyBpZ25vcmVkIGluIHRoYXQgY2FzZS5cbiAgICAgIGlmIChjYW5PdmVybGFwVmVydGljYWxseSAmJiBtZW51SGVpZ2h0ID4gdmlld3BvcnREaXN0YW5jZS5ib3R0b20gKyBhbmNob3JIZWlnaHQpIHtcbiAgICAgICAgeSA9IC0oTWF0aC5taW4obWVudUhlaWdodCwgdmlld3BvcnQuaGVpZ2h0IC0gTUFSR0lOX1RPX0VER0UpIC0gKHZpZXdwb3J0RGlzdGFuY2UuYm90dG9tICsgYW5jaG9ySGVpZ2h0KSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB5O1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7Q29ybmVyfSBjb3JuZXIgT3JpZ2luIGNvcm5lciBvZiB0aGUgbWVudS5cbiAgICogQHJldHVybiB7bnVtYmVyfSBNYXhpbXVtIGhlaWdodCBvZiB0aGUgbWVudSwgYmFzZWQgb24gYXZhaWxhYmxlIHNwYWNlLiAwIGluZGljYXRlcyBzaG91bGQgbm90IGJlIHNldC5cbiAgICogQHByaXZhdGVcbiAgICovXG4gIGdldE1lbnVNYXhIZWlnaHRfKGNvcm5lcikge1xuICAgIGxldCBtYXhIZWlnaHQgPSAwO1xuICAgIGNvbnN0IHt2aWV3cG9ydERpc3RhbmNlfSA9IHRoaXMubWVhc3VyZXNfO1xuICAgIGNvbnN0IGlzQm90dG9tQWxpZ25lZCA9IEJvb2xlYW4oY29ybmVyICYgQ29ybmVyQml0LkJPVFRPTSk7XG5cbiAgICAvLyBXaGVuIG1heGltdW0gaGVpZ2h0IGlzIG5vdCBzcGVjaWZpZWQsIGl0IGlzIGhhbmRsZWQgZnJvbSBjc3MuXG4gICAgaWYgKHRoaXMuYW5jaG9yQ29ybmVyXyAmIENvcm5lckJpdC5CT1RUT00pIHtcbiAgICAgIGlmIChpc0JvdHRvbUFsaWduZWQpIHtcbiAgICAgICAgbWF4SGVpZ2h0ID0gdmlld3BvcnREaXN0YW5jZS50b3AgKyB0aGlzLmFuY2hvck1hcmdpbl8udG9wO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbWF4SGVpZ2h0ID0gdmlld3BvcnREaXN0YW5jZS5ib3R0b20gLSB0aGlzLmFuY2hvck1hcmdpbl8uYm90dG9tO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBtYXhIZWlnaHQ7XG4gIH1cblxuICAvKiogQHByaXZhdGUgKi9cbiAgYXV0b1Bvc2l0aW9uXygpIHtcbiAgICBpZiAoIXRoaXMuYWRhcHRlcl8uaGFzQW5jaG9yKCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBDb21wdXRlIG1lYXN1cmVtZW50cyBmb3IgYXV0b3Bvc2l0aW9uIG1ldGhvZHMgcmV1c2UuXG4gICAgdGhpcy5tZWFzdXJlc18gPSB0aGlzLmdldEF1dG9MYXlvdXRNZWFzdXJlbWVudHNfKCk7XG5cbiAgICBjb25zdCBjb3JuZXIgPSB0aGlzLmdldE9yaWdpbkNvcm5lcl8oKTtcbiAgICBjb25zdCBtYXhNZW51SGVpZ2h0ID0gdGhpcy5nZXRNZW51TWF4SGVpZ2h0Xyhjb3JuZXIpO1xuICAgIGxldCB2ZXJ0aWNhbEFsaWdubWVudCA9IChjb3JuZXIgJiBDb3JuZXJCaXQuQk9UVE9NKSA/ICdib3R0b20nIDogJ3RvcCc7XG4gICAgbGV0IGhvcml6b250YWxBbGlnbm1lbnQgPSAoY29ybmVyICYgQ29ybmVyQml0LlJJR0hUKSA/ICdyaWdodCcgOiAnbGVmdCc7XG4gICAgY29uc3QgaG9yaXpvbnRhbE9mZnNldCA9IHRoaXMuZ2V0SG9yaXpvbnRhbE9yaWdpbk9mZnNldF8oY29ybmVyKTtcbiAgICBjb25zdCB2ZXJ0aWNhbE9mZnNldCA9IHRoaXMuZ2V0VmVydGljYWxPcmlnaW5PZmZzZXRfKGNvcm5lcik7XG4gICAgY29uc3QgcG9zaXRpb24gPSB7XG4gICAgICBbaG9yaXpvbnRhbEFsaWdubWVudF06IGhvcml6b250YWxPZmZzZXQgPyBob3Jpem9udGFsT2Zmc2V0ICsgJ3B4JyA6ICcwJyxcbiAgICAgIFt2ZXJ0aWNhbEFsaWdubWVudF06IHZlcnRpY2FsT2Zmc2V0ID8gdmVydGljYWxPZmZzZXQgKyAncHgnIDogJzAnLFxuICAgIH07XG4gICAgY29uc3Qge2FuY2hvcldpZHRoLCBtZW51SGVpZ2h0LCBtZW51V2lkdGh9ID0gdGhpcy5tZWFzdXJlc187XG4gICAgLy8gQ2VudGVyIGFsaWduIHdoZW4gYW5jaG9yIHdpZHRoIGlzIGNvbXBhcmFibGUgb3IgZ3JlYXRlciB0aGFuIG1lbnUsIG90aGVyd2lzZSBrZWVwIGNvcm5lci5cbiAgICBpZiAoYW5jaG9yV2lkdGggLyBtZW51V2lkdGggPiBudW1iZXJzLkFOQ0hPUl9UT19NRU5VX1dJRFRIX1JBVElPKSB7XG4gICAgICBob3Jpem9udGFsQWxpZ25tZW50ID0gJ2NlbnRlcic7XG4gICAgfVxuXG4gICAgLy8gQWRqdXN0IHZlcnRpY2FsIG9yaWdpbiB3aGVuIG1lbnUgaXMgcG9zaXRpb25lZCB3aXRoIHNpZ25pZmljYW50IG9mZnNldCBmcm9tIGFuY2hvci4gVGhpcyBpcyBkb25lIHNvIHRoYXRcbiAgICAvLyBzY2FsZSBhbmltYXRpb24gaXMgXCJhbmNob3JlZFwiIG9uIHRoZSBhbmNob3IuXG4gICAgaWYgKCEodGhpcy5hbmNob3JDb3JuZXJfICYgQ29ybmVyQml0LkJPVFRPTSkgJiZcbiAgICAgICAgTWF0aC5hYnModmVydGljYWxPZmZzZXQgLyBtZW51SGVpZ2h0KSA+IG51bWJlcnMuT0ZGU0VUX1RPX01FTlVfSEVJR0hUX1JBVElPKSB7XG4gICAgICBjb25zdCB2ZXJ0aWNhbE9mZnNldFBlcmNlbnQgPSBNYXRoLmFicyh2ZXJ0aWNhbE9mZnNldCAvIG1lbnVIZWlnaHQpICogMTAwO1xuICAgICAgY29uc3Qgb3JpZ2luUGVyY2VudCA9IChjb3JuZXIgJiBDb3JuZXJCaXQuQk9UVE9NKSA/IDEwMCAtIHZlcnRpY2FsT2Zmc2V0UGVyY2VudCA6IHZlcnRpY2FsT2Zmc2V0UGVyY2VudDtcbiAgICAgIHZlcnRpY2FsQWxpZ25tZW50ID0gTWF0aC5yb3VuZChvcmlnaW5QZXJjZW50ICogMTAwKSAvIDEwMCArICclJztcbiAgICB9XG5cbiAgICB0aGlzLmFkYXB0ZXJfLnNldFRyYW5zZm9ybU9yaWdpbihgJHtob3Jpem9udGFsQWxpZ25tZW50fSAke3ZlcnRpY2FsQWxpZ25tZW50fWApO1xuICAgIHRoaXMuYWRhcHRlcl8uc2V0UG9zaXRpb24ocG9zaXRpb24pO1xuICAgIHRoaXMuYWRhcHRlcl8uc2V0TWF4SGVpZ2h0KG1heE1lbnVIZWlnaHQgPyBtYXhNZW51SGVpZ2h0ICsgJ3B4JyA6ICcnKTtcblxuICAgIC8vIENsZWFyIG1lYXN1cmVzIGFmdGVyIHBvc2l0aW9uaW5nIGlzIGNvbXBsZXRlLlxuICAgIHRoaXMubWVhc3VyZXNfID0gbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBPcGVuIHRoZSBtZW51LlxuICAgKiBAcGFyYW0ge3tmb2N1c0luZGV4OiA/bnVtYmVyfT19IG9wdGlvbnNcbiAgICovXG4gIG9wZW4oe2ZvY3VzSW5kZXggPSBudWxsfSA9IHt9KSB7XG4gICAgdGhpcy5hZGFwdGVyXy5zYXZlRm9jdXMoKTtcblxuICAgIGlmICghdGhpcy5xdWlja09wZW5fKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmFkZENsYXNzKE1EQ01lbnVGb3VuZGF0aW9uLmNzc0NsYXNzZXMuQU5JTUFUSU5HX09QRU4pO1xuICAgIH1cblxuICAgIHRoaXMuYW5pbWF0aW9uUmVxdWVzdElkXyA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICB0aGlzLmRpbWVuc2lvbnNfID0gdGhpcy5hZGFwdGVyXy5nZXRJbm5lckRpbWVuc2lvbnMoKTtcbiAgICAgIHRoaXMuYXV0b1Bvc2l0aW9uXygpO1xuICAgICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyhNRENNZW51Rm91bmRhdGlvbi5jc3NDbGFzc2VzLk9QRU4pO1xuICAgICAgdGhpcy5mb2N1c09uT3Blbl8oZm9jdXNJbmRleCk7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVyQm9keUNsaWNrSGFuZGxlcih0aGlzLmRvY3VtZW50Q2xpY2tIYW5kbGVyXyk7XG4gICAgICBpZiAoIXRoaXMucXVpY2tPcGVuXykge1xuICAgICAgICB0aGlzLm9wZW5BbmltYXRpb25FbmRUaW1lcklkXyA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHRoaXMub3BlbkFuaW1hdGlvbkVuZFRpbWVySWRfID0gMDtcbiAgICAgICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUNsYXNzKE1EQ01lbnVGb3VuZGF0aW9uLmNzc0NsYXNzZXMuQU5JTUFUSU5HX09QRU4pO1xuICAgICAgICB9LCBudW1iZXJzLlRSQU5TSVRJT05fT1BFTl9EVVJBVElPTik7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5pc09wZW5fID0gdHJ1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDbG9zZXMgdGhlIG1lbnUuXG4gICAqIEBwYXJhbSB7RXZlbnQ9fSBldnRcbiAgICovXG4gIGNsb3NlKGV2dCA9IG51bGwpIHtcbiAgICBjb25zdCB0YXJnZXRJc0Rpc2FibGVkID0gZXZ0ID9cbiAgICAgIHRoaXMuYWRhcHRlcl8uZ2V0QXR0cmlidXRlRm9yRXZlbnRUYXJnZXQoZXZ0LnRhcmdldCwgc3RyaW5ncy5BUklBX0RJU0FCTEVEX0FUVFIpID09PSAndHJ1ZScgOlxuICAgICAgZmFsc2U7XG5cbiAgICBpZiAodGFyZ2V0SXNEaXNhYmxlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlckJvZHlDbGlja0hhbmRsZXIodGhpcy5kb2N1bWVudENsaWNrSGFuZGxlcl8pO1xuXG4gICAgaWYgKCF0aGlzLnF1aWNrT3Blbl8pIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoTURDTWVudUZvdW5kYXRpb24uY3NzQ2xhc3Nlcy5BTklNQVRJTkdfQ0xPU0VEKTtcbiAgICB9XG5cbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhNRENNZW51Rm91bmRhdGlvbi5jc3NDbGFzc2VzLk9QRU4pO1xuICAgICAgaWYgKCF0aGlzLnF1aWNrT3Blbl8pIHtcbiAgICAgICAgdGhpcy5jbG9zZUFuaW1hdGlvbkVuZFRpbWVySWRfID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5jbG9zZUFuaW1hdGlvbkVuZFRpbWVySWRfID0gMDtcbiAgICAgICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUNsYXNzKE1EQ01lbnVGb3VuZGF0aW9uLmNzc0NsYXNzZXMuQU5JTUFUSU5HX0NMT1NFRCk7XG4gICAgICAgIH0sIG51bWJlcnMuVFJBTlNJVElPTl9DTE9TRV9EVVJBVElPTik7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5pc09wZW5fID0gZmFsc2U7XG4gICAgdGhpcy5hZGFwdGVyXy5yZXN0b3JlRm9jdXMoKTtcbiAgfVxuXG4gIC8qKiBAcmV0dXJuIHtib29sZWFufSAqL1xuICBpc09wZW4oKSB7XG4gICAgcmV0dXJuIHRoaXMuaXNPcGVuXztcbiAgfVxuXG4gIC8qKiBAcmV0dXJuIHtudW1iZXJ9ICovXG4gIGdldFNlbGVjdGVkSW5kZXgoKSB7XG4gICAgcmV0dXJuIHRoaXMuc2VsZWN0ZWRJbmRleF87XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtudW1iZXJ9IGluZGV4IEluZGV4IG9mIHRoZSBpdGVtIHRvIHNldCBhcyBzZWxlY3RlZC5cbiAgICovXG4gIHNldFNlbGVjdGVkSW5kZXgoaW5kZXgpIHtcbiAgICBpZiAoaW5kZXggPT09IHRoaXMuc2VsZWN0ZWRJbmRleF8pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBwcmV2U2VsZWN0ZWRJbmRleCA9IHRoaXMuc2VsZWN0ZWRJbmRleF87XG4gICAgaWYgKHByZXZTZWxlY3RlZEluZGV4ID49IDApIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucm1BdHRyRm9yT3B0aW9uQXRJbmRleChwcmV2U2VsZWN0ZWRJbmRleCwgJ2FyaWEtc2VsZWN0ZWQnKTtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucm1DbGFzc0Zvck9wdGlvbkF0SW5kZXgocHJldlNlbGVjdGVkSW5kZXgsIGNzc0NsYXNzZXMuU0VMRUNURURfTElTVF9JVEVNKTtcbiAgICB9XG5cbiAgICB0aGlzLnNlbGVjdGVkSW5kZXhfID0gaW5kZXggPj0gMCAmJiBpbmRleCA8IHRoaXMuYWRhcHRlcl8uZ2V0TnVtYmVyT2ZJdGVtcygpID8gaW5kZXggOiAtMTtcbiAgICBpZiAodGhpcy5zZWxlY3RlZEluZGV4XyA+PSAwKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnNldEF0dHJGb3JPcHRpb25BdEluZGV4KHRoaXMuc2VsZWN0ZWRJbmRleF8sICdhcmlhLXNlbGVjdGVkJywgJ3RydWUnKTtcbiAgICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3NGb3JPcHRpb25BdEluZGV4KHRoaXMuc2VsZWN0ZWRJbmRleF8sIGNzc0NsYXNzZXMuU0VMRUNURURfTElTVF9JVEVNKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IHtNRENNZW51Rm91bmRhdGlvbiwgQW5jaG9yTWFyZ2lufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qKiBAdHlwZSB7c3RyaW5nfHVuZGVmaW5lZH0gKi9cbmxldCBzdG9yZWRUcmFuc2Zvcm1Qcm9wZXJ0eU5hbWVfO1xuXG4vKipcbiAqIFJldHVybnMgdGhlIG5hbWUgb2YgdGhlIGNvcnJlY3QgdHJhbnNmb3JtIHByb3BlcnR5IHRvIHVzZSBvbiB0aGUgY3VycmVudCBicm93c2VyLlxuICogQHBhcmFtIHshV2luZG93fSBnbG9iYWxPYmpcbiAqIEBwYXJhbSB7Ym9vbGVhbj19IGZvcmNlUmVmcmVzaFxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBnZXRUcmFuc2Zvcm1Qcm9wZXJ0eU5hbWUoZ2xvYmFsT2JqLCBmb3JjZVJlZnJlc2ggPSBmYWxzZSkge1xuICBpZiAoc3RvcmVkVHJhbnNmb3JtUHJvcGVydHlOYW1lXyA9PT0gdW5kZWZpbmVkIHx8IGZvcmNlUmVmcmVzaCkge1xuICAgIGNvbnN0IGVsID0gZ2xvYmFsT2JqLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnN0IHRyYW5zZm9ybVByb3BlcnR5TmFtZSA9ICgndHJhbnNmb3JtJyBpbiBlbC5zdHlsZSA/ICd0cmFuc2Zvcm0nIDogJ3dlYmtpdFRyYW5zZm9ybScpO1xuICAgIHN0b3JlZFRyYW5zZm9ybVByb3BlcnR5TmFtZV8gPSB0cmFuc2Zvcm1Qcm9wZXJ0eU5hbWU7XG4gIH1cblxuICByZXR1cm4gc3RvcmVkVHJhbnNmb3JtUHJvcGVydHlOYW1lXztcbn1cblxuLyoqXG4gKiBDbGFtcHMgYSB2YWx1ZSBiZXR3ZWVuIHRoZSBtaW5pbXVtIGFuZCB0aGUgbWF4aW11bSwgcmV0dXJuaW5nIHRoZSBjbGFtcGVkIHZhbHVlLlxuICogQHBhcmFtIHtudW1iZXJ9IHZhbHVlXG4gKiBAcGFyYW0ge251bWJlcn0gbWluXG4gKiBAcGFyYW0ge251bWJlcn0gbWF4XG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmZ1bmN0aW9uIGNsYW1wKHZhbHVlLCBtaW4gPSAwLCBtYXggPSAxKSB7XG4gIHJldHVybiBNYXRoLm1pbihtYXgsIE1hdGgubWF4KG1pbiwgdmFsdWUpKTtcbn1cblxuXG4vKipcbiAqIFJldHVybnMgdGhlIGVhc2luZyB2YWx1ZSB0byBhcHBseSBhdCB0aW1lIHQsIGZvciBhIGdpdmVuIGN1YmljIGJlemllciBjdXJ2ZS5cbiAqIENvbnRyb2wgcG9pbnRzIFAwIGFuZCBQMyBhcmUgYXNzdW1lZCB0byBiZSAoMCwwKSBhbmQgKDEsMSksIHJlc3BlY3RpdmVseS5cbiAqIFBhcmFtZXRlcnMgYXJlIGFzIGZvbGxvd3M6XG4gKiAtIHRpbWU6IFRoZSBjdXJyZW50IHRpbWUgaW4gdGhlIGFuaW1hdGlvbiwgc2NhbGVkIGJldHdlZW4gMCBhbmQgMS5cbiAqIC0geDE6IFRoZSB4IHZhbHVlIG9mIGNvbnRyb2wgcG9pbnQgUDEuXG4gKiAtIHkxOiBUaGUgeSB2YWx1ZSBvZiBjb250cm9sIHBvaW50IFAxLlxuICogLSB4MjogVGhlIHggdmFsdWUgb2YgY29udHJvbCBwb2ludCBQMi5cbiAqIC0geTI6IFRoZSB5IHZhbHVlIG9mIGNvbnRyb2wgcG9pbnQgUDIuXG4gKiBAcGFyYW0ge251bWJlcn0gdGltZVxuICogQHBhcmFtIHtudW1iZXJ9IHgxXG4gKiBAcGFyYW0ge251bWJlcn0geTFcbiAqIEBwYXJhbSB7bnVtYmVyfSB4MlxuICogQHBhcmFtIHtudW1iZXJ9IHkyXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmZ1bmN0aW9uIGJlemllclByb2dyZXNzKHRpbWUsIHgxLCB5MSwgeDIsIHkyKSB7XG4gIHJldHVybiBnZXRCZXppZXJDb29yZGluYXRlXyhzb2x2ZVBvc2l0aW9uRnJvbVhWYWx1ZV8odGltZSwgeDEsIHgyKSwgeTEsIHkyKTtcbn1cblxuLyoqXG4gKiBDb21wdXRlIGEgc2luZ2xlIGNvb3JkaW5hdGUgYXQgYSBwb3NpdGlvbiBwb2ludCBiZXR3ZWVuIDAgYW5kIDEuXG4gKiBjMSBhbmQgYzIgYXJlIHRoZSBtYXRjaGluZyBjb29yZGluYXRlIG9uIGNvbnRyb2wgcG9pbnRzIFAxIGFuZCBQMiwgcmVzcGVjdGl2ZWx5LlxuICogQ29udHJvbCBwb2ludHMgUDAgYW5kIFAzIGFyZSBhc3N1bWVkIHRvIGJlICgwLDApIGFuZCAoMSwxKSwgcmVzcGVjdGl2ZWx5LlxuICogQWRhcHRlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGUvY2xvc3VyZS1saWJyYXJ5L2Jsb2IvbWFzdGVyL2Nsb3N1cmUvZ29vZy9tYXRoL2Jlemllci5qcy5cbiAqIEBwYXJhbSB7bnVtYmVyfSB0XG4gKiBAcGFyYW0ge251bWJlcn0gYzFcbiAqIEBwYXJhbSB7bnVtYmVyfSBjMlxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5mdW5jdGlvbiBnZXRCZXppZXJDb29yZGluYXRlXyh0LCBjMSwgYzIpIHtcbiAgLy8gU3BlY2lhbCBjYXNlIHN0YXJ0IGFuZCBlbmQuXG4gIGlmICh0ID09PSAwIHx8IHQgPT09IDEpIHtcbiAgICByZXR1cm4gdDtcbiAgfVxuXG4gIC8vIFN0ZXAgb25lIC0gZnJvbSA0IHBvaW50cyB0byAzXG4gIGxldCBpYzAgPSB0ICogYzE7XG4gIGxldCBpYzEgPSBjMSArIHQgKiAoYzIgLSBjMSk7XG4gIGNvbnN0IGljMiA9IGMyICsgdCAqICgxIC0gYzIpO1xuXG4gIC8vIFN0ZXAgdHdvIC0gZnJvbSAzIHBvaW50cyB0byAyXG4gIGljMCArPSB0ICogKGljMSAtIGljMCk7XG4gIGljMSArPSB0ICogKGljMiAtIGljMSk7XG5cbiAgLy8gRmluYWwgc3RlcCAtIGxhc3QgcG9pbnRcbiAgcmV0dXJuIGljMCArIHQgKiAoaWMxIC0gaWMwKTtcbn1cblxuLyoqXG4gKiBQcm9qZWN0IGEgcG9pbnQgb250byB0aGUgQmV6aWVyIGN1cnZlLCBmcm9tIGEgZ2l2ZW4gWC4gQ2FsY3VsYXRlcyB0aGUgcG9zaXRpb24gdCBhbG9uZyB0aGUgY3VydmUuXG4gKiBBZGFwdGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9jbG9zdXJlLWxpYnJhcnkvYmxvYi9tYXN0ZXIvY2xvc3VyZS9nb29nL21hdGgvYmV6aWVyLmpzLlxuICogQHBhcmFtIHtudW1iZXJ9IHhWYWxcbiAqIEBwYXJhbSB7bnVtYmVyfSB4MVxuICogQHBhcmFtIHtudW1iZXJ9IHgyXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmZ1bmN0aW9uIHNvbHZlUG9zaXRpb25Gcm9tWFZhbHVlXyh4VmFsLCB4MSwgeDIpIHtcbiAgY29uc3QgRVBTSUxPTiA9IDFlLTY7XG4gIGNvbnN0IE1BWF9JVEVSQVRJT05TID0gODtcblxuICBpZiAoeFZhbCA8PSAwKSB7XG4gICAgcmV0dXJuIDA7XG4gIH0gZWxzZSBpZiAoeFZhbCA+PSAxKSB7XG4gICAgcmV0dXJuIDE7XG4gIH1cblxuICAvLyBJbml0aWFsIGVzdGltYXRlIG9mIHQgdXNpbmcgbGluZWFyIGludGVycG9sYXRpb24uXG4gIGxldCB0ID0geFZhbDtcblxuICAvLyBUcnkgZ3JhZGllbnQgZGVzY2VudCB0byBzb2x2ZSBmb3IgdC4gSWYgaXQgd29ya3MsIGl0IGlzIHZlcnkgZmFzdC5cbiAgbGV0IHRNaW4gPSAwO1xuICBsZXQgdE1heCA9IDE7XG4gIGxldCB2YWx1ZSA9IDA7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgTUFYX0lURVJBVElPTlM7IGkrKykge1xuICAgIHZhbHVlID0gZ2V0QmV6aWVyQ29vcmRpbmF0ZV8odCwgeDEsIHgyKTtcbiAgICBjb25zdCBkZXJpdmF0aXZlID0gKGdldEJlemllckNvb3JkaW5hdGVfKHQgKyBFUFNJTE9OLCB4MSwgeDIpIC0gdmFsdWUpIC8gRVBTSUxPTjtcbiAgICBpZiAoTWF0aC5hYnModmFsdWUgLSB4VmFsKSA8IEVQU0lMT04pIHtcbiAgICAgIHJldHVybiB0O1xuICAgIH0gZWxzZSBpZiAoTWF0aC5hYnMoZGVyaXZhdGl2ZSkgPCBFUFNJTE9OKSB7XG4gICAgICBicmVhaztcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHZhbHVlIDwgeFZhbCkge1xuICAgICAgICB0TWluID0gdDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRNYXggPSB0O1xuICAgICAgfVxuICAgICAgdCAtPSAodmFsdWUgLSB4VmFsKSAvIGRlcml2YXRpdmU7XG4gICAgfVxuICB9XG5cbiAgLy8gSWYgdGhlIGdyYWRpZW50IGRlc2NlbnQgZ290IHN0dWNrIGluIGEgbG9jYWwgbWluaW11bSwgZS5nLiBiZWNhdXNlXG4gIC8vIHRoZSBkZXJpdmF0aXZlIHdhcyBjbG9zZSB0byAwLCB1c2UgYSBEaWNob3RvbXkgcmVmaW5lbWVudCBpbnN0ZWFkLlxuICAvLyBXZSBsaW1pdCB0aGUgbnVtYmVyIG9mIGludGVyYXRpb25zIHRvIDguXG4gIGZvciAobGV0IGkgPSAwOyBNYXRoLmFicyh2YWx1ZSAtIHhWYWwpID4gRVBTSUxPTiAmJiBpIDwgTUFYX0lURVJBVElPTlM7IGkrKykge1xuICAgIGlmICh2YWx1ZSA8IHhWYWwpIHtcbiAgICAgIHRNaW4gPSB0O1xuICAgICAgdCA9ICh0ICsgdE1heCkgLyAyO1xuICAgIH0gZWxzZSB7XG4gICAgICB0TWF4ID0gdDtcbiAgICAgIHQgPSAodCArIHRNaW4pIC8gMjtcbiAgICB9XG4gICAgdmFsdWUgPSBnZXRCZXppZXJDb29yZGluYXRlXyh0LCB4MSwgeDIpO1xuICB9XG4gIHJldHVybiB0O1xufVxuXG5leHBvcnQge2dldFRyYW5zZm9ybVByb3BlcnR5TmFtZSwgY2xhbXAsIGJlemllclByb2dyZXNzfTtcbiIsIjx0ZW1wbGF0ZT5cbiAgPGRpdiByZWY9XCJyb290XCIgY2xhc3M9XCJtZGMtbWVudSBtZGMtc2ltcGxlLW1lbnVcIlxuICAgIDpjbGFzcz1cImNsYXNzZXNcIiA6c3R5bGU9XCJzdHlsZXNcIiBcbiAgICB0YWJpbmRleD1cIi0xXCI+XG4gICAgPHVsIHJlZj1cIml0ZW1zXCIgY2xhc3M9XCJtZGMtc2ltcGxlLW1lbnVfX2l0ZW1zIG1kYy1saXN0XCIgXG4gICAgICByb2xlPVwibWVudVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxuICAgICAgPHNsb3Q+PC9zbG90PlxuICAgIDwvdWw+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCB7IE1EQ01lbnVGb3VuZGF0aW9uIH0gZnJvbSAnQG1hdGVyaWFsL21lbnUvZm91bmRhdGlvbic7XG5pbXBvcnQgeyBnZXRUcmFuc2Zvcm1Qcm9wZXJ0eU5hbWUgfSBmcm9tICdAbWF0ZXJpYWwvbWVudS91dGlsJztcbmltcG9ydCB7IGVtaXRDdXN0b21FdmVudCB9IGZyb20gJy4uL2Jhc2UnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtbWVudScsXG4gIHByb3BzOiB7XG4gICAgJ29wZW4tZnJvbS10b3AtbGVmdCc6IEJvb2xlYW4sXG4gICAgJ29wZW4tZnJvbS10b3AtcmlnaHQnOiBCb29sZWFuLFxuICAgICdvcGVuLWZyb20tYm90dG9tLWxlZnQnOiBCb29sZWFuLFxuICAgICdvcGVuLWZyb20tYm90dG9tLXJpZ2h0JzogQm9vbGVhbixcbiAgICAncXVpY2stb3Blbic6IEJvb2xlYW4sXG4gICAgJ2FuY2hvci1jb3JuZXInOiBbU3RyaW5nLCBOdW1iZXJdLFxuICAgICdhbmNob3ItbWFyZ2luJzogT2JqZWN0LFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjbGFzc2VzOiB7XG4gICAgICAgICdtZGMtc2ltcGxlLW1lbnUtLW9wZW4tZnJvbS10b3AtbGVmdCc6IHRoaXMub3BlbkZyb21Ub3BMZWZ0LFxuICAgICAgICAnbWRjLXNpbXBsZS1tZW51LS1vcGVuLWZyb20tdG9wLXJpZ2h0JzogdGhpcy5vcGVuRnJvbVRvcFJpZ2h0LFxuICAgICAgICAnbWRjLXNpbXBsZS1tZW51LS1vcGVuLWZyb20tYm90dG9tLWxlZnQnOiB0aGlzLm9wZW5Gcm9tQm90dG9tTGVmdCxcbiAgICAgICAgJ21kYy1zaW1wbGUtbWVudS0tb3Blbi1mcm9tLWJvdHRvbS1yaWdodCc6IHRoaXMub3BlbkZyb21Cb3R0b21SaWdodCxcbiAgICAgIH0sXG4gICAgICBzdHlsZXM6IHt9LFxuICAgICAgaXRlbXM6IFtdLFxuICAgIH07XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBzaG93KG9wdGlvbnMpIHtcbiAgICAgIHRoaXMuZm91bmRhdGlvbi5vcGVuKG9wdGlvbnMpO1xuICAgIH0sXG4gICAgaGlkZSgpIHtcbiAgICAgIHRoaXMuZm91bmRhdGlvbi5jbG9zZSgpO1xuICAgIH0sXG4gICAgaXNPcGVuKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZm91bmRhdGlvbiA/IHRoaXMuZm91bmRhdGlvbi5pc09wZW4oKSA6IGZhbHNlO1xuICAgIH0sXG4gIH0sXG4gIG1vdW50ZWQoKSB7XG4gICAgY29uc3QgcmVmcmVzaEl0ZW1zID0gKCkgPT4ge1xuICAgICAgdGhpcy5pdGVtcyA9IFtdLnNsaWNlLmNhbGwoXG4gICAgICAgIHRoaXMuJHJlZnMuaXRlbXMucXVlcnlTZWxlY3RvckFsbCgnLm1kYy1saXN0LWl0ZW1bcm9sZV0nKSxcbiAgICAgICk7XG4gICAgICB0aGlzLiRlbWl0KCd1cGRhdGUnKTtcbiAgICB9O1xuICAgIHRoaXMuc2xvdE9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoKCkgPT4gcmVmcmVzaEl0ZW1zKCkpO1xuICAgIHRoaXMuc2xvdE9ic2VydmVyLm9ic2VydmUodGhpcy4kZWwsIHsgY2hpbGRMaXN0OiB0cnVlLCBzdWJ0cmVlOiB0cnVlIH0pO1xuXG4gICAgdGhpcy5fcHJldmlvdXNGb2N1cyA9IHVuZGVmaW5lZDtcblxuICAgIHRoaXMuZm91bmRhdGlvbiA9IG5ldyBNRENNZW51Rm91bmRhdGlvbih7XG4gICAgICBhZGRDbGFzczogY2xhc3NOYW1lID0+IHRoaXMuJHNldCh0aGlzLmNsYXNzZXMsIGNsYXNzTmFtZSwgdHJ1ZSksXG4gICAgICByZW1vdmVDbGFzczogY2xhc3NOYW1lID0+IHRoaXMuJGRlbGV0ZSh0aGlzLmNsYXNzZXMsIGNsYXNzTmFtZSksXG4gICAgICBoYXNDbGFzczogY2xhc3NOYW1lID0+IHRoaXMuJHJlZnMucm9vdC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKSxcbiAgICAgIGhhc05lY2Vzc2FyeURvbTogKCkgPT4gQm9vbGVhbih0aGlzLiRyZWZzLml0ZW1zKSxcbiAgICAgIGdldEF0dHJpYnV0ZUZvckV2ZW50VGFyZ2V0OiAodGFyZ2V0LCBhdHRyaWJ1dGVOYW1lKSA9PlxuICAgICAgICB0YXJnZXQuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZU5hbWUpLFxuICAgICAgZ2V0SW5uZXJEaW1lbnNpb25zOiAoKSA9PiAoe1xuICAgICAgICB3aWR0aDogdGhpcy4kcmVmcy5pdGVtcy5vZmZzZXRXaWR0aCxcbiAgICAgICAgaGVpZ2h0OiB0aGlzLiRyZWZzLml0ZW1zLm9mZnNldEhlaWdodCxcbiAgICAgIH0pLFxuICAgICAgaGFzQW5jaG9yOiAoKSA9PlxuICAgICAgICB0aGlzLiRyZWZzLnJvb3QucGFyZW50RWxlbWVudCAmJlxuICAgICAgICB0aGlzLiRyZWZzLnJvb3QucGFyZW50RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ21kYy1tZW51LWFuY2hvcicpLFxuICAgICAgZ2V0QW5jaG9yRGltZW5zaW9uczogKCkgPT5cbiAgICAgICAgdGhpcy4kcmVmcy5yb290LnBhcmVudEVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksXG4gICAgICBnZXRXaW5kb3dEaW1lbnNpb25zOiAoKSA9PiAoe1xuICAgICAgICB3aWR0aDogd2luZG93LmlubmVyV2lkdGgsXG4gICAgICAgIGhlaWdodDogd2luZG93LmlubmVySGVpZ2h0LFxuICAgICAgfSksXG4gICAgICBnZXROdW1iZXJPZkl0ZW1zOiAoKSA9PiB0aGlzLml0ZW1zLmxlbmd0aCxcbiAgICAgIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAodHlwZSwgaGFuZGxlcikgPT5cbiAgICAgICAgdGhpcy4kcmVmcy5yb290LmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgaGFuZGxlciksXG4gICAgICBkZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAodHlwZSwgaGFuZGxlcikgPT5cbiAgICAgICAgdGhpcy4kcmVmcy5yb290LnJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgaGFuZGxlciksXG4gICAgICByZWdpc3RlckJvZHlDbGlja0hhbmRsZXI6IGhhbmRsZXIgPT5cbiAgICAgICAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZXIpLFxuICAgICAgZGVyZWdpc3RlckJvZHlDbGlja0hhbmRsZXI6IGhhbmRsZXIgPT5cbiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZXIpLFxuICAgICAgZ2V0SW5kZXhGb3JFdmVudFRhcmdldDogdGFyZ2V0ID0+IHRoaXMuaXRlbXMuaW5kZXhPZih0YXJnZXQpLFxuICAgICAgbm90aWZ5U2VsZWN0ZWQ6IGV2dERhdGEgPT4ge1xuICAgICAgICBjb25zdCBldnQgPSB7XG4gICAgICAgICAgaW5kZXg6IGV2dERhdGEuaW5kZXgsXG4gICAgICAgICAgaXRlbTogdGhpcy5pdGVtc1tldnREYXRhLmluZGV4XSxcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy4kZW1pdCgnc2VsZWN0JywgZXZ0KTtcbiAgICAgICAgZW1pdEN1c3RvbUV2ZW50KFxuICAgICAgICAgIHRoaXMuJGVsLFxuICAgICAgICAgIE1EQ01lbnVGb3VuZGF0aW9uLnN0cmluZ3MuU0VMRUNURURfRVZFTlQsXG4gICAgICAgICAgZXZ0LFxuICAgICAgICApO1xuICAgICAgfSxcbiAgICAgIG5vdGlmeUNhbmNlbDogKCkgPT4ge1xuICAgICAgICB0aGlzLiRlbWl0KCdjYW5jZWwnKTtcbiAgICAgICAgZW1pdEN1c3RvbUV2ZW50KHRoaXMuJGVsLCBNRENNZW51Rm91bmRhdGlvbi5zdHJpbmdzLkNBTkNFTF9FVkVOVCwge30pO1xuICAgICAgfSxcbiAgICAgIHNhdmVGb2N1czogKCkgPT4ge1xuICAgICAgICB0aGlzLl9wcmV2aW91c0ZvY3VzID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcbiAgICAgIH0sXG4gICAgICByZXN0b3JlRm9jdXM6ICgpID0+IHtcbiAgICAgICAgaWYgKHRoaXMuX3ByZXZpb3VzRm9jdXMpIHtcbiAgICAgICAgICB0aGlzLl9wcmV2aW91c0ZvY3VzLmZvY3VzKCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBpc0ZvY3VzZWQ6ICgpID0+IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgPT09IHRoaXMuJHJlZnMucm9vdCxcbiAgICAgIGZvY3VzOiAoKSA9PiB0aGlzLiRyZWZzLnJvb3QuZm9jdXMoKSxcbiAgICAgIGdldEZvY3VzZWRJdGVtSW5kZXg6ICgpID0+IHRoaXMuaXRlbXMuaW5kZXhPZihkb2N1bWVudC5hY3RpdmVFbGVtZW50KSxcbiAgICAgIGZvY3VzSXRlbUF0SW5kZXg6IGluZGV4ID0+IHRoaXMuaXRlbXNbaW5kZXhdLmZvY3VzKCksXG4gICAgICBpc1J0bDogKCkgPT5cbiAgICAgICAgZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLiRyZWZzLnJvb3QpLmdldFByb3BlcnR5VmFsdWUoJ2RpcmVjdGlvbicpID09PVxuICAgICAgICAncnRsJyxcbiAgICAgIHNldFRyYW5zZm9ybU9yaWdpbjogb3JpZ2luID0+IHtcbiAgICAgICAgdGhpcy4kc2V0KFxuICAgICAgICAgIHRoaXMuc3R5bGVzLFxuICAgICAgICAgIGAke2dldFRyYW5zZm9ybVByb3BlcnR5TmFtZSh3aW5kb3cpfS1vcmlnaW5gLFxuICAgICAgICAgIG9yaWdpbixcbiAgICAgICAgKTtcbiAgICAgIH0sXG4gICAgICBzZXRQb3NpdGlvbjogcG9zaXRpb24gPT4ge1xuICAgICAgICB0aGlzLiRzZXQodGhpcy5zdHlsZXMsICdsZWZ0JywgcG9zaXRpb24ubGVmdCk7XG4gICAgICAgIHRoaXMuJHNldCh0aGlzLnN0eWxlcywgJ3JpZ2h0JywgcG9zaXRpb24ucmlnaHQpO1xuICAgICAgICB0aGlzLiRzZXQodGhpcy5zdHlsZXMsICd0b3AnLCBwb3NpdGlvbi50b3ApO1xuICAgICAgICB0aGlzLiRzZXQodGhpcy5zdHlsZXMsICdib3R0b20nLCBwb3NpdGlvbi5ib3R0b20pO1xuICAgICAgfSxcbiAgICAgIHNldE1heEhlaWdodDogaGVpZ2h0ID0+IHtcbiAgICAgICAgdGhpcy4kc2V0KHRoaXMuc3R5bGVzLCAnbWF4LWhlaWdodCcsIGhlaWdodCk7XG4gICAgICB9LFxuICAgICAgc2V0QXR0ckZvck9wdGlvbkF0SW5kZXg6IChpbmRleCwgYXR0ciwgdmFsdWUpID0+IHtcbiAgICAgICAgdGhpcy5pdGVtc1tpbmRleF0uc2V0QXR0cmlidXRlKGF0dHIsIHZhbHVlKTtcbiAgICAgIH0sXG4gICAgICBybUF0dHJGb3JPcHRpb25BdEluZGV4OiAoaW5kZXgsIGF0dHIpID0+IHtcbiAgICAgICAgdGhpcy5pdGVtc1tpbmRleF0ucmVtb3ZlQXR0cmlidXRlKGF0dHIpO1xuICAgICAgfSxcbiAgICAgIGFkZENsYXNzRm9yT3B0aW9uQXRJbmRleDogKGluZGV4LCBjbGFzc05hbWUpID0+IHtcbiAgICAgICAgdGhpcy5pdGVtc1tpbmRleF0uY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO1xuICAgICAgfSxcbiAgICAgIHJtQ2xhc3NGb3JPcHRpb25BdEluZGV4OiAoaW5kZXgsIGNsYXNzTmFtZSkgPT4ge1xuICAgICAgICB0aGlzLml0ZW1zW2luZGV4XS5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7XG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgcmVmcmVzaEl0ZW1zKCk7XG4gICAgdGhpcy5mb3VuZGF0aW9uLmluaXQoKTtcbiAgICBpZiAodGhpcy5hbmNob3JDb3JuZXIgIT09IHZvaWQgMCkge1xuICAgICAgdGhpcy5mb3VuZGF0aW9uLnNldEFuY2hvckNvcm5lcihOdW1iZXIodGhpcy5hbmNob3JDb3JuZXIpKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuYW5jaG9yTWFyZ2luICE9PSB2b2lkIDApIHtcbiAgICAgIHRoaXMuZm91bmRhdGlvbi5zZXRBbmNob3JNYXJnaW4odGhpcy5hbmNob3JNYXJnaW4pO1xuICAgIH1cbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBxdWlja09wZW4obnYpIHtcbiAgICAgIHRoaXMuZm91bmRhdGlvbi5zZXRRdWlja09wZW4obnYpO1xuICAgIH0sXG4gICAgYW5jaG9yQ29ybmVyKG52KSB7XG4gICAgICB0aGlzLmZvdW5kYXRpb24uc2V0QW5jaG9yQ29ybmVyKE51bWJlcihudikpO1xuICAgIH0sXG4gICAgYW5jaG9yTWFyZ2luKG52KSB7XG4gICAgICB0aGlzLmZvdW5kYXRpb24uc2V0QW5jaG9yTWFyZ2luKG52KTtcbiAgICB9LFxuICB9LFxuICBiZWZvcmVEZXN0cm95KCkge1xuICAgIHRoaXMuX3ByZXZpb3VzRm9jdXMgPSBudWxsO1xuICAgIHRoaXMuc2xvdE9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICB0aGlzLmZvdW5kYXRpb24uZGVzdHJveSgpO1xuICB9LFxufTtcbjwvc2NyaXB0PlxuIiwiPHRlbXBsYXRlPlxuICA8bGkgY2xhc3M9XCJtZGMtbWVudS1pdGVtIG1kYy1saXN0LWl0ZW1cIiByb2xlPVwibWVudWl0ZW1cIiBcbiAgICA6dGFiaW5kZXg9XCJkaXNhYmxlZD8nLTEnOicwJ1wiXG4gICAgOmFyaWEtZGlzYWJsZWQ9XCJkaXNhYmxlZFwiXG4gICAgPlxuICAgIDxzbG90Pjwvc2xvdD5cbiAgPC9saT5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtbWVudS1pdGVtJyxcbiAgcHJvcHM6IHtcbiAgICBkaXNhYmxlZDogQm9vbGVhblxuICB9XG59XG48L3NjcmlwdD5cbiIsIjx0ZW1wbGF0ZT5cbiAgPGxpIHJvbGU9XCJzZXBhcmF0b3JcIiBjbGFzcz1cIm1kYy1tZW51LWRpdmlkZXIgbWRjLWxpc3QtZGl2aWRlclwiPjwvbGk+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnbWRjLW1lbnUtZGl2aWRlcicsXG59XG48L3NjcmlwdD5cbiIsIjx0ZW1wbGF0ZT5cbjxkaXYgY2xhc3M9XCJtZGMtbWVudS1hbmNob3JcIj5cbiAgPHNsb3Q+XG4gIDwvc2xvdD5cbjwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy1tZW51LWFuY2hvcicsXG59XG48L3NjcmlwdD5cbiIsImltcG9ydCB7QmFzZVBsdWdpbn0gZnJvbSAnLi4vYmFzZSdcbmltcG9ydCBtZGNNZW51IGZyb20gJy4vbWRjLW1lbnUudnVlJ1xuaW1wb3J0IG1kY01lbnVJdGVtIGZyb20gJy4vbWRjLW1lbnUtaXRlbS52dWUnXG5pbXBvcnQgbWRjTWVudURpdmlkZXIgZnJvbSAnLi9tZGMtbWVudS1kaXZpZGVyLnZ1ZSdcbmltcG9ydCBtZGNNZW51QW5jaG9yIGZyb20gJy4vbWRjLW1lbnUtYW5jaG9yLnZ1ZSdcblxuZXhwb3J0IHtcbiAgbWRjTWVudSxcbiAgbWRjTWVudUl0ZW0sXG4gIG1kY01lbnVEaXZpZGVyLFxuICBtZGNNZW51QW5jaG9yXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJhc2VQbHVnaW4oe1xuICBtZGNNZW51LFxuICBtZGNNZW51SXRlbSxcbiAgbWRjTWVudURpdmlkZXIsXG4gIG1kY01lbnVBbmNob3Jcbn0pXG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbmltcG9ydCB7TURDU2VsZWN0aW9uQ29udHJvbFN0YXRlfSBmcm9tICdAbWF0ZXJpYWwvc2VsZWN0aW9uLWNvbnRyb2wvaW5kZXgnO1xuXG4vKiBlc2xpbnQgbm8tdW51c2VkLXZhcnM6IFsyLCB7XCJhcmdzXCI6IFwibm9uZVwifV0gKi9cblxuLyoqXG4gKiBBZGFwdGVyIGZvciBNREMgUmFkaW8uIFByb3ZpZGVzIGFuIGludGVyZmFjZSBmb3IgbWFuYWdpbmdcbiAqIC0gY2xhc3Nlc1xuICogLSBkb21cbiAqXG4gKiBBZGRpdGlvbmFsbHksIHByb3ZpZGVzIHR5cGUgaW5mb3JtYXRpb24gZm9yIHRoZSBhZGFwdGVyIHRvIHRoZSBDbG9zdXJlXG4gKiBjb21waWxlci5cbiAqXG4gKiBJbXBsZW1lbnQgdGhpcyBhZGFwdGVyIGZvciB5b3VyIGZyYW1ld29yayBvZiBjaG9pY2UgdG8gZGVsZWdhdGUgdXBkYXRlcyB0b1xuICogdGhlIGNvbXBvbmVudCBpbiB5b3VyIGZyYW1ld29yayBvZiBjaG9pY2UuIFNlZSBhcmNoaXRlY3R1cmUgZG9jdW1lbnRhdGlvblxuICogZm9yIG1vcmUgZGV0YWlscy5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRlcmlhbC1jb21wb25lbnRzL21hdGVyaWFsLWNvbXBvbmVudHMtd2ViL2Jsb2IvbWFzdGVyL2RvY3MvY29kZS9hcmNoaXRlY3R1cmUubWRcbiAqXG4gKiBAcmVjb3JkXG4gKi9cbmNsYXNzIE1EQ1JhZGlvQWRhcHRlciB7XG4gIC8qKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lICovXG4gIGFkZENsYXNzKGNsYXNzTmFtZSkge31cblxuICAvKiogQHBhcmFtIHtzdHJpbmd9IGNsYXNzTmFtZSAqL1xuICByZW1vdmVDbGFzcyhjbGFzc05hbWUpIHt9XG5cbiAgLyoqIEByZXR1cm4geyFNRENTZWxlY3Rpb25Db250cm9sU3RhdGV9ICovXG4gIGdldE5hdGl2ZUNvbnRyb2woKSB7fVxufVxuXG5leHBvcnQgZGVmYXVsdCBNRENSYWRpb0FkYXB0ZXI7XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyoqIEBlbnVtIHtzdHJpbmd9ICovXG5jb25zdCBzdHJpbmdzID0ge1xuICBOQVRJVkVfQ09OVFJPTF9TRUxFQ1RPUjogJy5tZGMtcmFkaW9fX25hdGl2ZS1jb250cm9sJyxcbn07XG5cbi8qKiBAZW51bSB7c3RyaW5nfSAqL1xuY29uc3QgY3NzQ2xhc3NlcyA9IHtcbiAgUk9PVDogJ21kYy1yYWRpbycsXG4gIERJU0FCTEVEOiAnbWRjLXJhZGlvLS1kaXNhYmxlZCcsXG59O1xuXG5leHBvcnQge3N0cmluZ3MsIGNzc0NsYXNzZXN9O1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCBNRENGb3VuZGF0aW9uIGZyb20gJ0BtYXRlcmlhbC9iYXNlL2ZvdW5kYXRpb24nO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbmltcG9ydCB7TURDU2VsZWN0aW9uQ29udHJvbFN0YXRlfSBmcm9tICdAbWF0ZXJpYWwvc2VsZWN0aW9uLWNvbnRyb2wvaW5kZXgnO1xuaW1wb3J0IE1EQ1JhZGlvQWRhcHRlciBmcm9tICcuL2FkYXB0ZXInO1xuLyogZXNsaW50LWVuYWJsZSBuby11bnVzZWQtdmFycyAqL1xuaW1wb3J0IHtjc3NDbGFzc2VzLCBzdHJpbmdzfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbi8qKlxuICogQGV4dGVuZHMge01EQ0ZvdW5kYXRpb248IU1EQ1JhZGlvQWRhcHRlcj59XG4gKi9cbmNsYXNzIE1EQ1JhZGlvRm91bmRhdGlvbiBleHRlbmRzIE1EQ0ZvdW5kYXRpb24ge1xuICAvKiogQHJldHVybiBlbnVtIHtjc3NDbGFzc2VzfSAqL1xuICBzdGF0aWMgZ2V0IGNzc0NsYXNzZXMoKSB7XG4gICAgcmV0dXJuIGNzc0NsYXNzZXM7XG4gIH1cblxuICAvKiogQHJldHVybiBlbnVtIHtzdHJpbmdzfSAqL1xuICBzdGF0aWMgZ2V0IHN0cmluZ3MoKSB7XG4gICAgcmV0dXJuIHN0cmluZ3M7XG4gIH1cblxuICAvKiogQHJldHVybiB7IU1EQ1JhZGlvQWRhcHRlcn0gKi9cbiAgc3RhdGljIGdldCBkZWZhdWx0QWRhcHRlcigpIHtcbiAgICByZXR1cm4gLyoqIEB0eXBlIHshTURDUmFkaW9BZGFwdGVyfSAqLyAoe1xuICAgICAgYWRkQ2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICByZW1vdmVDbGFzczogKC8qIGNsYXNzTmFtZTogc3RyaW5nICovKSA9PiB7fSxcbiAgICAgIGdldE5hdGl2ZUNvbnRyb2w6ICgpID0+IC8qICFNRENTZWxlY3Rpb25Db250cm9sU3RhdGUgKi8ge30sXG4gICAgfSk7XG4gIH1cblxuICAvKiogQHJldHVybiB7Ym9vbGVhbn0gKi9cbiAgaXNDaGVja2VkKCkge1xuICAgIHJldHVybiB0aGlzLmdldE5hdGl2ZUNvbnRyb2xfKCkuY2hlY2tlZDtcbiAgfVxuXG4gIC8qKiBAcGFyYW0ge2Jvb2xlYW59IGNoZWNrZWQgKi9cbiAgc2V0Q2hlY2tlZChjaGVja2VkKSB7XG4gICAgdGhpcy5nZXROYXRpdmVDb250cm9sXygpLmNoZWNrZWQgPSBjaGVja2VkO1xuICB9XG5cbiAgLyoqIEByZXR1cm4ge2Jvb2xlYW59ICovXG4gIGlzRGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0TmF0aXZlQ29udHJvbF8oKS5kaXNhYmxlZDtcbiAgfVxuXG4gIC8qKiBAcGFyYW0ge2Jvb2xlYW59IGRpc2FibGVkICovXG4gIHNldERpc2FibGVkKGRpc2FibGVkKSB7XG4gICAgY29uc3Qge0RJU0FCTEVEfSA9IE1EQ1JhZGlvRm91bmRhdGlvbi5jc3NDbGFzc2VzO1xuICAgIHRoaXMuZ2V0TmF0aXZlQ29udHJvbF8oKS5kaXNhYmxlZCA9IGRpc2FibGVkO1xuICAgIGlmIChkaXNhYmxlZCkge1xuICAgICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyhESVNBQkxFRCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoRElTQUJMRUQpO1xuICAgIH1cbiAgfVxuXG4gIC8qKiBAcmV0dXJuIHs/c3RyaW5nfSAqL1xuICBnZXRWYWx1ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXROYXRpdmVDb250cm9sXygpLnZhbHVlO1xuICB9XG5cbiAgLyoqIEBwYXJhbSB7P3N0cmluZ30gdmFsdWUgKi9cbiAgc2V0VmFsdWUodmFsdWUpIHtcbiAgICB0aGlzLmdldE5hdGl2ZUNvbnRyb2xfKCkudmFsdWUgPSB2YWx1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHshTURDU2VsZWN0aW9uQ29udHJvbFN0YXRlfVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgZ2V0TmF0aXZlQ29udHJvbF8oKSB7XG4gICAgcmV0dXJuIHRoaXMuYWRhcHRlcl8uZ2V0TmF0aXZlQ29udHJvbCgpIHx8IHtcbiAgICAgIGNoZWNrZWQ6IGZhbHNlLFxuICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgICAgdmFsdWU6IG51bGwsXG4gICAgfTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBNRENSYWRpb0ZvdW5kYXRpb247XG4iLCI8dGVtcGxhdGU+XG48ZGl2IDpjbGFzcz1cImZvcm1GaWVsZENsYXNzZXNcIiBjbGFzcz1cIm1kYy1yYWRpby13cmFwcGVyXCI+XG4gIDxkaXYgcmVmPVwicm9vdFwiIGNsYXNzPVwibWRjLXJhZGlvXCIgOmNsYXNzPVwiY2xhc3Nlc1wiIDpzdHlsZT1cInN0eWxlc1wiPlxuICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIiByZWY9XCJjb250cm9sXCIgOmlkPVwiX3VpZFwiIDpuYW1lPVwibmFtZVwiIFxuICAgICAgY2xhc3M9XCJtZGMtcmFkaW9fX25hdGl2ZS1jb250cm9sXCIgQGNoYW5nZT1cInN5bmNcIj5cbiAgXG4gICAgPGRpdiByZWY9XCJsYWJlbFwiIGNsYXNzPVwibWRjLXJhZGlvX19iYWNrZ3JvdW5kXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwibWRjLXJhZGlvX19vdXRlci1jaXJjbGVcIj48L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJtZGMtcmFkaW9fX2lubmVyLWNpcmNsZVwiPjwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPGxhYmVsIHJlZj1cImxhYmVsXCIgOmZvcj1cIl91aWRcIj48c2xvdD57e2xhYmVsfX08L3Nsb3Q+PC9sYWJlbD5cbjwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBNRENSYWRpb0ZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL3JhZGlvL2ZvdW5kYXRpb24nXG5pbXBvcnQgTURDRm9ybUZpZWxkRm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvZm9ybS1maWVsZC9mb3VuZGF0aW9uJ1xuaW1wb3J0IHtEaXNwYXRjaEZvY3VzTWl4aW59IGZyb20gJy4uL2Jhc2UnXG5pbXBvcnQge1JpcHBsZUJhc2V9IGZyb20gJy4uL3JpcHBsZSdcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtcmFkaW8nLFxuICBtaXhpbnM6IFtEaXNwYXRjaEZvY3VzTWl4aW5dLFxuICBtb2RlbDoge1xuICAgIHByb3A6ICdwaWNrZWQnLFxuICAgIGV2ZW50OiAnY2hhbmdlJ1xuICB9LFxuICBwcm9wczoge1xuICAgICduYW1lJzoge3R5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWV9LFxuICAgICd2YWx1ZSc6IFN0cmluZyxcbiAgICAncGlja2VkJzogU3RyaW5nLFxuICAgICdjaGVja2VkJzogQm9vbGVhbixcbiAgICAnbGFiZWwnOiBTdHJpbmcsXG4gICAgJ2FsaWduLWVuZCc6IEJvb2xlYW4sXG4gICAgJ2Rpc2FibGVkJzogQm9vbGVhbixcbiAgfSxcbiAgZGF0YSAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNsYXNzZXM6IHt9LFxuICAgICAgc3R5bGVzOiB7fSxcbiAgICAgIGZvcm1GaWVsZENsYXNzZXM6IHtcbiAgICAgICAgJ21kYy1mb3JtLWZpZWxkJzogdGhpcy5sYWJlbCxcbiAgICAgICAgJ21kYy1mb3JtLWZpZWxkLS1hbGlnbi1lbmQnOiB0aGlzLmxhYmVsICYmIHRoaXMuYWxpZ25FbmRcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIG1vdW50ZWQgKCkge1xuICAgIC8vIGFkZCBmb3VuZGF0aW9uXG4gICAgdGhpcy5mb3VuZGF0aW9uID0gbmV3IE1EQ1JhZGlvRm91bmRhdGlvbih7XG4gICAgICBhZGRDbGFzczogKGNsYXNzTmFtZSkgPT4gdGhpcy4kc2V0KHRoaXMuY2xhc3NlcywgY2xhc3NOYW1lLCB0cnVlKSxcbiAgICAgIHJlbW92ZUNsYXNzOiAoY2xhc3NOYW1lKSA9PiB0aGlzLiRkZWxldGUodGhpcy5jbGFzc2VzLCBjbGFzc05hbWUpLFxuICAgICAgZ2V0TmF0aXZlQ29udHJvbDogKCkgPT4gdGhpcy4kcmVmcy5jb250cm9sXG4gICAgfSlcblxuICAgIC8vIGFkZCByaXBwbGVcbiAgICB0aGlzLnJpcHBsZSA9IG5ldyBSaXBwbGVCYXNlKHRoaXMsIHtcbiAgICAgIGlzVW5ib3VuZGVkOiAoKSA9PiB0cnVlLFxuICAgICAgaXNTdXJmYWNlQWN0aXZlOiAoKSA9PiBmYWxzZSxcbiAgICAgIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0LCBoYW5kbGVyKSA9PiB7XG4gICAgICAgIHRoaXMuJHJlZnMuY29udHJvbC5hZGRFdmVudExpc3RlbmVyKGV2dCwgaGFuZGxlcilcbiAgICAgIH0sXG4gICAgICBkZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0LCBoYW5kbGVyKSA9PiB7XG4gICAgICAgIHRoaXMuJHJlZnMuY29udHJvbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2dCwgaGFuZGxlcilcbiAgICAgIH0sXG4gICAgICBjb21wdXRlQm91bmRpbmdSZWN0OiAoKSA9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLiRyZWZzLnJvb3QuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgdGhpcy5mb3JtRmllbGQgPSBuZXcgTURDRm9ybUZpZWxkRm91bmRhdGlvbih7XG4gICAgICByZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKHR5cGUsIGhhbmRsZXIpID0+IHtcbiAgICAgICAgdGhpcy4kcmVmcy5sYWJlbC5hZGRFdmVudExpc3RlbmVyKHR5cGUsIGhhbmRsZXIpXG4gICAgICB9LFxuICAgICAgZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKHR5cGUsIGhhbmRsZXIpID0+IHtcbiAgICAgICAgdGhpcy4kcmVmcy5sYWJlbC5yZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsIGhhbmRsZXIpXG4gICAgICB9LFxuICAgICAgYWN0aXZhdGVJbnB1dFJpcHBsZTogKCkgPT4ge1xuICAgICAgICB0aGlzLnJpcHBsZSAmJiB0aGlzLnJpcHBsZS5hY3RpdmF0ZSgpXG4gICAgICB9LFxuICAgICAgZGVhY3RpdmF0ZUlucHV0UmlwcGxlOiAoKSA9PiB7XG4gICAgICAgIHRoaXMucmlwcGxlICYmIHRoaXMucmlwcGxlLmRlYWN0aXZhdGUoKVxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIHRoaXMuZm91bmRhdGlvbi5pbml0KClcbiAgICB0aGlzLnJpcHBsZS5pbml0KClcbiAgICB0aGlzLmZvcm1GaWVsZC5pbml0KClcblxuICAgIHRoaXMuZm91bmRhdGlvbi5zZXRWYWx1ZSh0aGlzLnZhbHVlID8gdGhpcy52YWx1ZSA6IHRoaXMubGFiZWwpXG4gICAgdGhpcy5mb3VuZGF0aW9uLnNldERpc2FibGVkKHRoaXMuZGlzYWJsZWQpXG4gICAgdGhpcy5mb3VuZGF0aW9uLnNldENoZWNrZWQodGhpcy5jaGVja2VkIHx8IHRoaXMucGlja2VkID09IHRoaXMuZm91bmRhdGlvbi5nZXRWYWx1ZSgpKVxuXG4gICAgLy8gcmVmcmVzaCBtb2RlbFxuICAgIHRoaXMuY2hlY2tlZCAmJiB0aGlzLnN5bmMoKVxuICB9LFxuICBiZWZvcmVEZXN0cm95ICgpIHtcbiAgICB0aGlzLmZvcm1GaWVsZC5kZXN0cm95KClcbiAgICB0aGlzLnJpcHBsZS5kZXN0cm95KClcbiAgICB0aGlzLmZvdW5kYXRpb24uZGVzdHJveSgpXG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgZGlzYWJsZWQgKHZhbHVlKSB7XG4gICAgICB0aGlzLmZvdW5kYXRpb24uc2V0RGlzYWJsZWQodmFsdWUpXG4gICAgfVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgaXNDaGVja2VkICgpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvdW5kYXRpb24uaXNDaGVja2VkKClcbiAgICB9LFxuICAgIHN5bmMgKCkge1xuICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgdGhpcy5mb3VuZGF0aW9uLmdldFZhbHVlKCkpXG4gICAgfVxuICB9XG59XG48L3NjcmlwdD5cbiIsImltcG9ydCB7QmFzZVBsdWdpbn0gZnJvbSAnLi4vYmFzZSdcbmltcG9ydCBtZGNSYWRpbyBmcm9tICcuL21kYy1yYWRpby52dWUnXG5cbmV4cG9ydCB7XG4gIG1kY1JhZGlvXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJhc2VQbHVnaW4oe1xuICBtZGNSYWRpb1xufSlcbiIsIjx0ZW1wbGF0ZT5cbiAgPHNlbGVjdCByZWY9XCJyb290XCIgY2xhc3M9XCJtZGMtc2VsZWN0IG1kYy1uYXRpdmUtc2VsZWN0XCIgXG4gICAgdi1tb2RlbD1cInNlbGVjdGVkXCIgOmRpc2FibGVkPVwiZGlzYWJsZWRcIlxuICAgIEBjaGFuZ2U9XCJvbkNoYW5nZVwiXG4gID5cbiAgICA8b3B0aW9uIGRpc2FibGVkIHZhbHVlPVwiXCIgdi1pZj1cImxhYmVsXCI+e3sgbGFiZWwgfX08L29wdGlvbj5cbiAgICA8c2xvdD48L3Nsb3Q+XG4gIDwvc2VsZWN0PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy1uYXRpdmUtc2VsZWN0JyxcbiAgbW9kZWw6IHtcbiAgICBwcm9wOiAndmFsdWUnLFxuICAgIGV2ZW50OiAnY2hhbmdlJ1xuICB9LFxuICBwcm9wczoge1xuICAgIHZhbHVlOiBbU3RyaW5nLCBBcnJheV0sXG4gICAgZGlzYWJsZWQ6IEJvb2xlYW4sXG4gICAgbGFiZWw6IFN0cmluZ1xuICB9LFxuICBkYXRhICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc2VsZWN0ZWQ6IHRoaXMudmFsdWVcbiAgICB9XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBvbkNoYW5nZSAoKSB7XG4gICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCB0aGlzLnNlbGVjdGVkKVxuICAgIH1cbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICB2YWx1ZSAobmV3VmFsdWUpIHtcbiAgICAgIHRoaXMuc2VsZWN0ZWQgPSBuZXdWYWx1ZTtcbiAgICB9LFxuICB9XG59XG48L3NjcmlwdD5cbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5leHBvcnQgY29uc3QgY3NzQ2xhc3NlcyA9IHtcbiAgQk9YOiAnbWRjLXNlbGVjdC0tYm94JyxcbiAgRElTQUJMRUQ6ICdtZGMtc2VsZWN0LS1kaXNhYmxlZCcsXG4gIE9QRU46ICdtZGMtc2VsZWN0LS1vcGVuJyxcbiAgUk9PVDogJ21kYy1zZWxlY3QnLFxuICBTQ1JPTExfTE9DSzogJ21kYy1zZWxlY3Qtc2Nyb2xsLWxvY2snLFxufTtcblxuZXhwb3J0IGNvbnN0IHN0cmluZ3MgPSB7XG4gIENIQU5HRV9FVkVOVDogJ01EQ1NlbGVjdDpjaGFuZ2UnLFxuICBCT1RUT01fTElORV9TRUxFQ1RPUjogJy5tZGMtc2VsZWN0X19ib3R0b20tbGluZScsXG4gIExBQkVMX1NFTEVDVE9SOiAnLm1kYy1zZWxlY3RfX2xhYmVsJyxcbiAgTUVOVV9TRUxFQ1RPUjogJy5tZGMtc2VsZWN0X19tZW51JyxcbiAgU1VSRkFDRV9TRUxFQ1RPUjogJy5tZGMtc2VsZWN0X19zdXJmYWNlJyxcbiAgU0VMRUNURURfVEVYVF9TRUxFQ1RPUjogJy5tZGMtc2VsZWN0X19zZWxlY3RlZC10ZXh0Jyxcbn07XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IE1EQ0NvbXBvbmVudCBmcm9tICdAbWF0ZXJpYWwvYmFzZS9jb21wb25lbnQnO1xuaW1wb3J0IHtnZXRUcmFuc2Zvcm1Qcm9wZXJ0eU5hbWV9IGZyb20gJy4vdXRpbCc7XG5pbXBvcnQge01EQ01lbnVGb3VuZGF0aW9uLCBBbmNob3JNYXJnaW59IGZyb20gJy4vZm91bmRhdGlvbic7XG5pbXBvcnQge0Nvcm5lciwgQ29ybmVyQml0fSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbi8qKlxuICogQGV4dGVuZHMgTURDQ29tcG9uZW50PCFNRENNZW51Rm91bmRhdGlvbj5cbiAqL1xuY2xhc3MgTURDTWVudSBleHRlbmRzIE1EQ0NvbXBvbmVudCB7XG4gIC8qKiBAcGFyYW0gey4uLj99IGFyZ3MgKi9cbiAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgIHN1cGVyKC4uLmFyZ3MpO1xuICAgIC8qKiBAcHJpdmF0ZSB7IUVsZW1lbnR9ICovXG4gICAgdGhpcy5wcmV2aW91c0ZvY3VzXztcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0geyFFbGVtZW50fSByb290XG4gICAqIEByZXR1cm4geyFNRENNZW51fVxuICAgKi9cbiAgc3RhdGljIGF0dGFjaFRvKHJvb3QpIHtcbiAgICByZXR1cm4gbmV3IE1EQ01lbnUocm9vdCk7XG4gIH1cblxuICAvKiogQHJldHVybiB7Ym9vbGVhbn0gKi9cbiAgZ2V0IG9wZW4oKSB7XG4gICAgcmV0dXJuIHRoaXMuZm91bmRhdGlvbl8uaXNPcGVuKCk7XG4gIH1cblxuICAvKiogQHBhcmFtIHtib29sZWFufSB2YWx1ZSAqL1xuICBzZXQgb3Blbih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgdGhpcy5mb3VuZGF0aW9uXy5vcGVuKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZm91bmRhdGlvbl8uY2xvc2UoKTtcbiAgICB9XG4gIH1cblxuICAvKiogQHBhcmFtIHt7Zm9jdXNJbmRleDogP251bWJlcn09fSBvcHRpb25zICovXG4gIHNob3coe2ZvY3VzSW5kZXggPSBudWxsfSA9IHt9KSB7XG4gICAgdGhpcy5mb3VuZGF0aW9uXy5vcGVuKHtmb2N1c0luZGV4OiBmb2N1c0luZGV4fSk7XG4gIH1cblxuICBoaWRlKCkge1xuICAgIHRoaXMuZm91bmRhdGlvbl8uY2xvc2UoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0Nvcm5lcn0gY29ybmVyIERlZmF1bHQgYW5jaG9yIGNvcm5lciBhbGlnbm1lbnQgb2YgdG9wLWxlZnRcbiAgICogICAgIG1lbnUgY29ybmVyLlxuICAgKi9cbiAgc2V0QW5jaG9yQ29ybmVyKGNvcm5lcikge1xuICAgIHRoaXMuZm91bmRhdGlvbl8uc2V0QW5jaG9yQ29ybmVyKGNvcm5lcik7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtBbmNob3JNYXJnaW59IG1hcmdpblxuICAgKi9cbiAgc2V0QW5jaG9yTWFyZ2luKG1hcmdpbikge1xuICAgIHRoaXMuZm91bmRhdGlvbl8uc2V0QW5jaG9yTWFyZ2luKG1hcmdpbik7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHRoZSBpdGVtIGNvbnRhaW5lciBlbGVtZW50IGluc2lkZSB0aGUgY29tcG9uZW50LlxuICAgKiBAcmV0dXJuIHs/RWxlbWVudH1cbiAgICovXG4gIGdldCBpdGVtc0NvbnRhaW5lcl8oKSB7XG4gICAgcmV0dXJuIHRoaXMucm9vdF8ucXVlcnlTZWxlY3RvcihNRENNZW51Rm91bmRhdGlvbi5zdHJpbmdzLklURU1TX1NFTEVDVE9SKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gdGhlIGl0ZW1zIHdpdGhpbiB0aGUgbWVudS4gTm90ZSB0aGF0IHRoaXMgb25seSBjb250YWlucyB0aGUgc2V0IG9mIGVsZW1lbnRzIHdpdGhpblxuICAgKiB0aGUgaXRlbXMgY29udGFpbmVyIHRoYXQgYXJlIHByb3BlciBsaXN0IGl0ZW1zLCBhbmQgbm90IHN1cHBsZW1lbnRhbCAvIHByZXNlbnRhdGlvbmFsIERPTVxuICAgKiBlbGVtZW50cy5cbiAgICogQHJldHVybiB7IUFycmF5PCFFbGVtZW50Pn1cbiAgICovXG4gIGdldCBpdGVtcygpIHtcbiAgICBjb25zdCB7aXRlbXNDb250YWluZXJfOiBpdGVtc0NvbnRhaW5lcn0gPSB0aGlzO1xuICAgIHJldHVybiBbXS5zbGljZS5jYWxsKGl0ZW1zQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5tZGMtbGlzdC1pdGVtW3JvbGVdJykpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiB0aGUgaXRlbSB3aXRoaW4gdGhlIG1lbnUgdGhhdCBpcyBzZWxlY3RlZC5cbiAgICogQHBhcmFtIHtudW1iZXJ9IGluZGV4XG4gICAqIEByZXR1cm4gez9FbGVtZW50fVxuICAgKi9cbiAgZ2V0T3B0aW9uQnlJbmRleChpbmRleCkge1xuICAgIGNvbnN0IGl0ZW1zID0gdGhpcy5pdGVtcztcblxuICAgIGlmIChpbmRleCA8IGl0ZW1zLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIHRoaXMuaXRlbXNbaW5kZXhdO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH1cblxuICAvKiogQHBhcmFtIHtudW1iZXJ9IGluZGV4ICovXG4gIHNldCBzZWxlY3RlZEl0ZW1JbmRleChpbmRleCkge1xuICAgIHRoaXMuZm91bmRhdGlvbl8uc2V0U2VsZWN0ZWRJbmRleChpbmRleCk7XG4gIH1cblxuICAvKiogQHJldHVybiB7bnVtYmVyfSAqL1xuICBnZXQgc2VsZWN0ZWRJdGVtSW5kZXgoKSB7XG4gICAgcmV0dXJuIHRoaXMuZm91bmRhdGlvbl8uZ2V0U2VsZWN0ZWRJbmRleCgpO1xuICB9XG5cbiAgLyoqIEBwYXJhbSB7IWJvb2xlYW59IHJlbWVtYmVyU2VsZWN0aW9uICovXG4gIHNldCByZW1lbWJlclNlbGVjdGlvbihyZW1lbWJlclNlbGVjdGlvbikge1xuICAgIHRoaXMuZm91bmRhdGlvbl8uc2V0UmVtZW1iZXJTZWxlY3Rpb24ocmVtZW1iZXJTZWxlY3Rpb24pO1xuICB9XG5cbiAgLyoqIEBwYXJhbSB7Ym9vbGVhbn0gcXVpY2tPcGVuICovXG4gIHNldCBxdWlja09wZW4ocXVpY2tPcGVuKSB7XG4gICAgdGhpcy5mb3VuZGF0aW9uXy5zZXRRdWlja09wZW4ocXVpY2tPcGVuKTtcbiAgfVxuXG4gIC8qKiBAcmV0dXJuIHshTURDTWVudUZvdW5kYXRpb259ICovXG4gIGdldERlZmF1bHRGb3VuZGF0aW9uKCkge1xuICAgIHJldHVybiBuZXcgTURDTWVudUZvdW5kYXRpb24oe1xuICAgICAgYWRkQ2xhc3M6IChjbGFzc05hbWUpID0+IHRoaXMucm9vdF8uY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpLFxuICAgICAgcmVtb3ZlQ2xhc3M6IChjbGFzc05hbWUpID0+IHRoaXMucm9vdF8uY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpLFxuICAgICAgaGFzQ2xhc3M6IChjbGFzc05hbWUpID0+IHRoaXMucm9vdF8uY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzTmFtZSksXG4gICAgICBoYXNOZWNlc3NhcnlEb206ICgpID0+IEJvb2xlYW4odGhpcy5pdGVtc0NvbnRhaW5lcl8pLFxuICAgICAgZ2V0QXR0cmlidXRlRm9yRXZlbnRUYXJnZXQ6ICh0YXJnZXQsIGF0dHJpYnV0ZU5hbWUpID0+IHRhcmdldC5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlTmFtZSksXG4gICAgICBnZXRJbm5lckRpbWVuc2lvbnM6ICgpID0+IHtcbiAgICAgICAgY29uc3Qge2l0ZW1zQ29udGFpbmVyXzogaXRlbXNDb250YWluZXJ9ID0gdGhpcztcbiAgICAgICAgcmV0dXJuIHt3aWR0aDogaXRlbXNDb250YWluZXIub2Zmc2V0V2lkdGgsIGhlaWdodDogaXRlbXNDb250YWluZXIub2Zmc2V0SGVpZ2h0fTtcbiAgICAgIH0sXG4gICAgICBoYXNBbmNob3I6ICgpID0+IHRoaXMucm9vdF8ucGFyZW50RWxlbWVudCAmJiB0aGlzLnJvb3RfLnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdtZGMtbWVudS1hbmNob3InKSxcbiAgICAgIGdldEFuY2hvckRpbWVuc2lvbnM6ICgpID0+IHRoaXMucm9vdF8ucGFyZW50RWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxcbiAgICAgIGdldFdpbmRvd0RpbWVuc2lvbnM6ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIHt3aWR0aDogd2luZG93LmlubmVyV2lkdGgsIGhlaWdodDogd2luZG93LmlubmVySGVpZ2h0fTtcbiAgICAgIH0sXG4gICAgICBnZXROdW1iZXJPZkl0ZW1zOiAoKSA9PiB0aGlzLml0ZW1zLmxlbmd0aCxcbiAgICAgIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAodHlwZSwgaGFuZGxlcikgPT4gdGhpcy5yb290Xy5hZGRFdmVudExpc3RlbmVyKHR5cGUsIGhhbmRsZXIpLFxuICAgICAgZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKHR5cGUsIGhhbmRsZXIpID0+IHRoaXMucm9vdF8ucmVtb3ZlRXZlbnRMaXN0ZW5lcih0eXBlLCBoYW5kbGVyKSxcbiAgICAgIHJlZ2lzdGVyQm9keUNsaWNrSGFuZGxlcjogKGhhbmRsZXIpID0+IGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVyKSxcbiAgICAgIGRlcmVnaXN0ZXJCb2R5Q2xpY2tIYW5kbGVyOiAoaGFuZGxlcikgPT4gZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZXIpLFxuICAgICAgZ2V0SW5kZXhGb3JFdmVudFRhcmdldDogKHRhcmdldCkgPT4gdGhpcy5pdGVtcy5pbmRleE9mKHRhcmdldCksXG4gICAgICBub3RpZnlTZWxlY3RlZDogKGV2dERhdGEpID0+IHRoaXMuZW1pdChNRENNZW51Rm91bmRhdGlvbi5zdHJpbmdzLlNFTEVDVEVEX0VWRU5ULCB7XG4gICAgICAgIGluZGV4OiBldnREYXRhLmluZGV4LFxuICAgICAgICBpdGVtOiB0aGlzLml0ZW1zW2V2dERhdGEuaW5kZXhdLFxuICAgICAgfSksXG4gICAgICBub3RpZnlDYW5jZWw6ICgpID0+IHRoaXMuZW1pdChNRENNZW51Rm91bmRhdGlvbi5zdHJpbmdzLkNBTkNFTF9FVkVOVCwge30pLFxuICAgICAgc2F2ZUZvY3VzOiAoKSA9PiB7XG4gICAgICAgIHRoaXMucHJldmlvdXNGb2N1c18gPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuICAgICAgfSxcbiAgICAgIHJlc3RvcmVGb2N1czogKCkgPT4ge1xuICAgICAgICBpZiAodGhpcy5wcmV2aW91c0ZvY3VzXykge1xuICAgICAgICAgIHRoaXMucHJldmlvdXNGb2N1c18uZm9jdXMoKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGlzRm9jdXNlZDogKCkgPT4gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCA9PT0gdGhpcy5yb290XyxcbiAgICAgIGZvY3VzOiAoKSA9PiB0aGlzLnJvb3RfLmZvY3VzKCksXG4gICAgICBnZXRGb2N1c2VkSXRlbUluZGV4OiAoKSA9PiB0aGlzLml0ZW1zLmluZGV4T2YoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCksXG4gICAgICBmb2N1c0l0ZW1BdEluZGV4OiAoaW5kZXgpID0+IHRoaXMuaXRlbXNbaW5kZXhdLmZvY3VzKCksXG4gICAgICBpc1J0bDogKCkgPT4gZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLnJvb3RfKS5nZXRQcm9wZXJ0eVZhbHVlKCdkaXJlY3Rpb24nKSA9PT0gJ3J0bCcsXG4gICAgICBzZXRUcmFuc2Zvcm1PcmlnaW46IChvcmlnaW4pID0+IHtcbiAgICAgICAgdGhpcy5yb290Xy5zdHlsZVtgJHtnZXRUcmFuc2Zvcm1Qcm9wZXJ0eU5hbWUod2luZG93KX0tb3JpZ2luYF0gPSBvcmlnaW47XG4gICAgICB9LFxuICAgICAgc2V0UG9zaXRpb246IChwb3NpdGlvbikgPT4ge1xuICAgICAgICB0aGlzLnJvb3RfLnN0eWxlLmxlZnQgPSAnbGVmdCcgaW4gcG9zaXRpb24gPyBwb3NpdGlvbi5sZWZ0IDogbnVsbDtcbiAgICAgICAgdGhpcy5yb290Xy5zdHlsZS5yaWdodCA9ICdyaWdodCcgaW4gcG9zaXRpb24gPyBwb3NpdGlvbi5yaWdodCA6IG51bGw7XG4gICAgICAgIHRoaXMucm9vdF8uc3R5bGUudG9wID0gJ3RvcCcgaW4gcG9zaXRpb24gPyBwb3NpdGlvbi50b3AgOiBudWxsO1xuICAgICAgICB0aGlzLnJvb3RfLnN0eWxlLmJvdHRvbSA9ICdib3R0b20nIGluIHBvc2l0aW9uID8gcG9zaXRpb24uYm90dG9tIDogbnVsbDtcbiAgICAgIH0sXG4gICAgICBzZXRNYXhIZWlnaHQ6IChoZWlnaHQpID0+IHtcbiAgICAgICAgdGhpcy5yb290Xy5zdHlsZS5tYXhIZWlnaHQgPSBoZWlnaHQ7XG4gICAgICB9LFxuICAgICAgc2V0QXR0ckZvck9wdGlvbkF0SW5kZXg6IChpbmRleCwgYXR0ciwgdmFsdWUpID0+IHRoaXMuaXRlbXNbaW5kZXhdLnNldEF0dHJpYnV0ZShhdHRyLCB2YWx1ZSksXG4gICAgICBybUF0dHJGb3JPcHRpb25BdEluZGV4OiAoaW5kZXgsIGF0dHIpID0+IHRoaXMuaXRlbXNbaW5kZXhdLnJlbW92ZUF0dHJpYnV0ZShhdHRyKSxcbiAgICAgIGFkZENsYXNzRm9yT3B0aW9uQXRJbmRleDogKGluZGV4LCBjbGFzc05hbWUpID0+IHRoaXMuaXRlbXNbaW5kZXhdLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKSxcbiAgICAgIHJtQ2xhc3NGb3JPcHRpb25BdEluZGV4OiAoaW5kZXgsIGNsYXNzTmFtZSkgPT4gdGhpcy5pdGVtc1tpbmRleF0uY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpLFxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCB7TURDTWVudUZvdW5kYXRpb24sIE1EQ01lbnUsIEFuY2hvck1hcmdpbiwgQ29ybmVyLCBDb3JuZXJCaXR9O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHtNRENGb3VuZGF0aW9ufSBmcm9tICdAbWF0ZXJpYWwvYmFzZS9pbmRleCc7XG5pbXBvcnQge2Nzc0NsYXNzZXMsIHN0cmluZ3N9IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7TURDTWVudUZvdW5kYXRpb259IGZyb20gJ0BtYXRlcmlhbC9tZW51L2luZGV4JztcblxuY29uc3QgT1BFTkVSX0tFWVMgPSBbXG4gIHtrZXk6ICdBcnJvd1VwJywga2V5Q29kZTogMzgsIGZvclR5cGU6ICdrZXlkb3duJ30sXG4gIHtrZXk6ICdBcnJvd0Rvd24nLCBrZXlDb2RlOiA0MCwgZm9yVHlwZTogJ2tleWRvd24nfSxcbiAge2tleTogJ1NwYWNlJywga2V5Q29kZTogMzIsIGZvclR5cGU6ICdrZXl1cCd9LFxuXTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTURDU2VsZWN0Rm91bmRhdGlvbiBleHRlbmRzIE1EQ0ZvdW5kYXRpb24ge1xuICBzdGF0aWMgZ2V0IGNzc0NsYXNzZXMoKSB7XG4gICAgcmV0dXJuIGNzc0NsYXNzZXM7XG4gIH1cblxuICBzdGF0aWMgZ2V0IHN0cmluZ3MoKSB7XG4gICAgcmV0dXJuIHN0cmluZ3M7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGRlZmF1bHRBZGFwdGVyKCkge1xuICAgIHJldHVybiB7XG4gICAgICBhZGRDbGFzczogKC8qIGNsYXNzTmFtZTogc3RyaW5nICovKSA9PiB7fSxcbiAgICAgIHJlbW92ZUNsYXNzOiAoLyogY2xhc3NOYW1lOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgZmxvYXRMYWJlbDogKC8qIHZhbHVlOiBib29sZWFuICovKSA9PiB7fSxcbiAgICAgIGFjdGl2YXRlQm90dG9tTGluZTogKCkgPT4ge30sXG4gICAgICBkZWFjdGl2YXRlQm90dG9tTGluZTogKCkgPT4ge30sXG4gICAgICBhZGRCb2R5Q2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICByZW1vdmVCb2R5Q2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICBzZXRBdHRyOiAoLyogYXR0cjogc3RyaW5nLCB2YWx1ZTogc3RyaW5nICovKSA9PiB7fSxcbiAgICAgIHJtQXR0cjogKC8qIGF0dHI6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICBjb21wdXRlQm91bmRpbmdSZWN0OiAoKSA9PiAvKiB7bGVmdDogbnVtYmVyLCB0b3A6IG51bWJlcn0gKi8gKHtsZWZ0OiAwLCB0b3A6IDB9KSxcbiAgICAgIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoLyogdHlwZTogc3RyaW5nLCBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6ICgvKiB0eXBlOiBzdHJpbmcsIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgZm9jdXM6ICgpID0+IHt9LFxuICAgICAgbWFrZVRhYmJhYmxlOiAoKSA9PiB7fSxcbiAgICAgIG1ha2VVbnRhYmJhYmxlOiAoKSA9PiB7fSxcbiAgICAgIGdldENvbXB1dGVkU3R5bGVWYWx1ZTogKC8qIHByb3BlcnR5TmFtZTogc3RyaW5nICovKSA9PiAvKiBzdHJpbmcgKi8gJycsXG4gICAgICBzZXRTdHlsZTogKC8qIHByb3BlcnR5TmFtZTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nICovKSA9PiB7fSxcbiAgICAgIGNyZWF0ZTJkUmVuZGVyaW5nQ29udGV4dDogKCkgPT4gLyoge2ZvbnQ6IHN0cmluZywgbWVhc3VyZVRleHQ6IChzdHJpbmcpID0+IHt3aWR0aDogbnVtYmVyfX0gKi8gKHtcbiAgICAgICAgZm9udDogJycsXG4gICAgICAgIG1lYXN1cmVUZXh0OiAoKSA9PiAoe3dpZHRoOiAwfSksXG4gICAgICB9KSxcbiAgICAgIHNldE1lbnVFbFN0eWxlOiAoLyogcHJvcGVydHlOYW1lOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgc2V0TWVudUVsQXR0cjogKC8qIGF0dHI6IHN0cmluZywgdmFsdWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICBybU1lbnVFbEF0dHI6ICgvKiBhdHRyOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgZ2V0TWVudUVsT2Zmc2V0SGVpZ2h0OiAoKSA9PiAvKiBudW1iZXIgKi8gMCxcbiAgICAgIG9wZW5NZW51OiAoLyogZm9jdXNJbmRleDogbnVtYmVyICovKSA9PiB7fSxcbiAgICAgIGlzTWVudU9wZW46ICgpID0+IC8qIGJvb2xlYW4gKi8gZmFsc2UsXG4gICAgICBzZXRTZWxlY3RlZFRleHRDb250ZW50OiAoLyogdGV4dENvbnRlbnQ6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICBnZXROdW1iZXJPZk9wdGlvbnM6ICgpID0+IC8qIG51bWJlciAqLyAwLFxuICAgICAgZ2V0VGV4dEZvck9wdGlvbkF0SW5kZXg6ICgvKiBpbmRleDogbnVtYmVyICovKSA9PiAvKiBzdHJpbmcgKi8gJycsXG4gICAgICBnZXRWYWx1ZUZvck9wdGlvbkF0SW5kZXg6ICgvKiBpbmRleDogbnVtYmVyICovKSA9PiAvKiBzdHJpbmcgKi8gJycsXG4gICAgICBzZXRBdHRyRm9yT3B0aW9uQXRJbmRleDogKC8qIGluZGV4OiBudW1iZXIsIGF0dHI6IHN0cmluZywgdmFsdWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICBybUF0dHJGb3JPcHRpb25BdEluZGV4OiAoLyogaW5kZXg6IG51bWJlciwgYXR0cjogc3RyaW5nICovKSA9PiB7fSxcbiAgICAgIGdldE9mZnNldFRvcEZvck9wdGlvbkF0SW5kZXg6ICgvKiBpbmRleDogbnVtYmVyICovKSA9PiAvKiBudW1iZXIgKi8gMCxcbiAgICAgIHJlZ2lzdGVyTWVudUludGVyYWN0aW9uSGFuZGxlcjogKC8qIHR5cGU6IHN0cmluZywgaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBkZXJlZ2lzdGVyTWVudUludGVyYWN0aW9uSGFuZGxlcjogKC8qIHR5cGU6IHN0cmluZywgaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBub3RpZnlDaGFuZ2U6ICgpID0+IHt9LFxuICAgICAgZ2V0V2luZG93SW5uZXJIZWlnaHQ6ICgpID0+IC8qIG51bWJlciAqLyAwLFxuICAgIH07XG4gIH1cblxuICBjb25zdHJ1Y3RvcihhZGFwdGVyKSB7XG4gICAgc3VwZXIoT2JqZWN0LmFzc2lnbihNRENTZWxlY3RGb3VuZGF0aW9uLmRlZmF1bHRBZGFwdGVyLCBhZGFwdGVyKSk7XG4gICAgdGhpcy5jdHhfID0gbnVsbDtcbiAgICB0aGlzLnNlbGVjdGVkSW5kZXhfID0gLTE7XG4gICAgdGhpcy5kaXNhYmxlZF8gPSBmYWxzZTtcbiAgICB0aGlzLmlzRm9jdXNlZF8gPSBmYWxzZTtcblxuICAgIC8qKiBAcHJpdmF0ZSB7bnVtYmVyfSAqL1xuICAgIHRoaXMuYW5pbWF0aW9uUmVxdWVzdElkXyA9IDA7XG5cbiAgICB0aGlzLmRpc3BsYXlIYW5kbGVyXyA9IChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgaWYgKCF0aGlzLmFkYXB0ZXJfLmlzTWVudU9wZW4oKSkge1xuICAgICAgICB0aGlzLm9wZW5fKCk7XG4gICAgICB9XG4gICAgfTtcbiAgICB0aGlzLmRpc3BsYXlWaWFLZXlib2FyZEhhbmRsZXJfID0gKGV2dCkgPT4gdGhpcy5oYW5kbGVEaXNwbGF5VmlhS2V5Ym9hcmRfKGV2dCk7XG4gICAgdGhpcy5zZWxlY3Rpb25IYW5kbGVyXyA9ICh7ZGV0YWlsfSkgPT4ge1xuICAgICAgY29uc3Qge2luZGV4fSA9IGRldGFpbDtcblxuICAgICAgaWYgKGluZGV4ICE9PSB0aGlzLnNlbGVjdGVkSW5kZXhfKSB7XG4gICAgICAgIHRoaXMuc2V0U2VsZWN0ZWRJbmRleChpbmRleCk7XG4gICAgICAgIHRoaXMuYWRhcHRlcl8ubm90aWZ5Q2hhbmdlKCk7XG4gICAgICB9XG4gICAgICB0aGlzLmNsb3NlXygpO1xuICAgIH07XG4gICAgdGhpcy5jYW5jZWxIYW5kbGVyXyA9ICgpID0+IHtcbiAgICAgIHRoaXMuY2xvc2VfKCk7XG4gICAgICBpZiAodGhpcy5zZWxlY3RlZEluZGV4XyA9PT0gLTEpIHtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5mbG9hdExhYmVsKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgaW5pdCgpIHtcbiAgICB0aGlzLmN0eF8gPSB0aGlzLmFkYXB0ZXJfLmNyZWF0ZTJkUmVuZGVyaW5nQ29udGV4dCgpO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ2NsaWNrJywgdGhpcy5kaXNwbGF5SGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ2tleWRvd24nLCB0aGlzLmRpc3BsYXlWaWFLZXlib2FyZEhhbmRsZXJfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdrZXl1cCcsIHRoaXMuZGlzcGxheVZpYUtleWJvYXJkSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJNZW51SW50ZXJhY3Rpb25IYW5kbGVyKFxuICAgICAgTURDTWVudUZvdW5kYXRpb24uc3RyaW5ncy5TRUxFQ1RFRF9FVkVOVCwgdGhpcy5zZWxlY3Rpb25IYW5kbGVyXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5yZWdpc3Rlck1lbnVJbnRlcmFjdGlvbkhhbmRsZXIoXG4gICAgICBNRENNZW51Rm91bmRhdGlvbi5zdHJpbmdzLkNBTkNFTF9FVkVOVCwgdGhpcy5jYW5jZWxIYW5kbGVyXyk7XG4gICAgdGhpcy5yZXNpemUoKTtcbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgLy8gRHJvcCByZWZlcmVuY2UgdG8gY29udGV4dCBvYmplY3QgdG8gcHJldmVudCBwb3RlbnRpYWwgbGVha3NcbiAgICB0aGlzLmN0eF8gPSBudWxsO1xuICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuYW5pbWF0aW9uUmVxdWVzdElkXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdjbGljaycsIHRoaXMuZGlzcGxheUhhbmRsZXJfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ2tleWRvd24nLCB0aGlzLmRpc3BsYXlWaWFLZXlib2FyZEhhbmRsZXJfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ2tleXVwJywgdGhpcy5kaXNwbGF5VmlhS2V5Ym9hcmRIYW5kbGVyXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVyTWVudUludGVyYWN0aW9uSGFuZGxlcihcbiAgICAgIE1EQ01lbnVGb3VuZGF0aW9uLnN0cmluZ3MuU0VMRUNURURfRVZFTlQsIHRoaXMuc2VsZWN0aW9uSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3Rlck1lbnVJbnRlcmFjdGlvbkhhbmRsZXIoXG4gICAgICBNRENNZW51Rm91bmRhdGlvbi5zdHJpbmdzLkNBTkNFTF9FVkVOVCwgdGhpcy5jYW5jZWxIYW5kbGVyXyk7XG4gIH1cblxuICBnZXRWYWx1ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5zZWxlY3RlZEluZGV4XyA+PSAwID8gdGhpcy5hZGFwdGVyXy5nZXRWYWx1ZUZvck9wdGlvbkF0SW5kZXgodGhpcy5zZWxlY3RlZEluZGV4XykgOiAnJztcbiAgfVxuXG4gIGdldFNlbGVjdGVkSW5kZXgoKSB7XG4gICAgcmV0dXJuIHRoaXMuc2VsZWN0ZWRJbmRleF87XG4gIH1cblxuICBzZXRTZWxlY3RlZEluZGV4KGluZGV4KSB7XG4gICAgY29uc3QgcHJldlNlbGVjdGVkSW5kZXggPSB0aGlzLnNlbGVjdGVkSW5kZXhfO1xuICAgIGlmIChwcmV2U2VsZWN0ZWRJbmRleCA+PSAwKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJtQXR0ckZvck9wdGlvbkF0SW5kZXgodGhpcy5zZWxlY3RlZEluZGV4XywgJ2FyaWEtc2VsZWN0ZWQnKTtcbiAgICB9XG5cbiAgICB0aGlzLnNlbGVjdGVkSW5kZXhfID0gaW5kZXggPj0gMCAmJiBpbmRleCA8IHRoaXMuYWRhcHRlcl8uZ2V0TnVtYmVyT2ZPcHRpb25zKCkgPyBpbmRleCA6IC0xO1xuICAgIGxldCBzZWxlY3RlZFRleHRDb250ZW50ID0gJyc7XG4gICAgaWYgKHRoaXMuc2VsZWN0ZWRJbmRleF8gPj0gMCkge1xuICAgICAgc2VsZWN0ZWRUZXh0Q29udGVudCA9IHRoaXMuYWRhcHRlcl8uZ2V0VGV4dEZvck9wdGlvbkF0SW5kZXgodGhpcy5zZWxlY3RlZEluZGV4XykudHJpbSgpO1xuICAgICAgdGhpcy5hZGFwdGVyXy5zZXRBdHRyRm9yT3B0aW9uQXRJbmRleCh0aGlzLnNlbGVjdGVkSW5kZXhfLCAnYXJpYS1zZWxlY3RlZCcsICd0cnVlJyk7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmZsb2F0TGFiZWwodHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICghdGhpcy5hZGFwdGVyXy5pc01lbnVPcGVuKCkpIHtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5mbG9hdExhYmVsKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5hZGFwdGVyXy5zZXRTZWxlY3RlZFRleHRDb250ZW50KHNlbGVjdGVkVGV4dENvbnRlbnQpO1xuICB9XG5cbiAgaXNEaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5kaXNhYmxlZF87XG4gIH1cblxuICBzZXREaXNhYmxlZChkaXNhYmxlZCkge1xuICAgIGNvbnN0IHtESVNBQkxFRH0gPSBNRENTZWxlY3RGb3VuZGF0aW9uLmNzc0NsYXNzZXM7XG4gICAgdGhpcy5kaXNhYmxlZF8gPSBkaXNhYmxlZDtcbiAgICBpZiAodGhpcy5kaXNhYmxlZF8pIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoRElTQUJMRUQpO1xuICAgICAgdGhpcy5hZGFwdGVyXy5zZXRBdHRyKCdhcmlhLWRpc2FibGVkJywgJ3RydWUnKTtcbiAgICAgIHRoaXMuYWRhcHRlcl8ubWFrZVVudGFiYmFibGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhESVNBQkxFRCk7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJtQXR0cignYXJpYS1kaXNhYmxlZCcpO1xuICAgICAgdGhpcy5hZGFwdGVyXy5tYWtlVGFiYmFibGUoKTtcbiAgICB9XG4gIH1cblxuICByZXNpemUoKSB7XG4gICAgY29uc3QgZm9udCA9IHRoaXMuYWRhcHRlcl8uZ2V0Q29tcHV0ZWRTdHlsZVZhbHVlKCdmb250Jyk7XG4gICAgY29uc3QgbGV0dGVyU3BhY2luZyA9IHBhcnNlRmxvYXQodGhpcy5hZGFwdGVyXy5nZXRDb21wdXRlZFN0eWxlVmFsdWUoJ2xldHRlci1zcGFjaW5nJykpO1xuXG4gICAgaWYgKGZvbnQpIHtcbiAgICAgIHRoaXMuY3R4Xy5mb250ID0gZm9udDtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgcHJpbWFyeUZvbnRGYW1pbHkgPSB0aGlzLmFkYXB0ZXJfLmdldENvbXB1dGVkU3R5bGVWYWx1ZSgnZm9udC1mYW1pbHknKS5zcGxpdCgnLCcpWzBdO1xuICAgICAgY29uc3QgZm9udFNpemUgPSB0aGlzLmFkYXB0ZXJfLmdldENvbXB1dGVkU3R5bGVWYWx1ZSgnZm9udC1zaXplJyk7XG4gICAgICB0aGlzLmN0eF8uZm9udCA9IGAke2ZvbnRTaXplfSAke3ByaW1hcnlGb250RmFtaWx5fWA7XG4gICAgfVxuXG4gICAgbGV0IG1heFRleHRMZW5ndGggPSAwO1xuXG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSB0aGlzLmFkYXB0ZXJfLmdldE51bWJlck9mT3B0aW9ucygpOyBpIDwgbDsgaSsrKSB7XG4gICAgICBjb25zdCBzdXJmYWNlUGFkZGluZ1JpZ2h0ID0gcGFyc2VJbnQodGhpcy5hZGFwdGVyXy5nZXRDb21wdXRlZFN0eWxlVmFsdWUoJ3BhZGRpbmctcmlnaHQnKSwgMTApO1xuICAgICAgY29uc3Qgc3VyZmFjZVBhZGRpbmdMZWZ0ID0gcGFyc2VJbnQodGhpcy5hZGFwdGVyXy5nZXRDb21wdXRlZFN0eWxlVmFsdWUoJ3BhZGRpbmctbGVmdCcpLCAxMCk7XG4gICAgICBjb25zdCBzZWxlY3RCb3hBZGRlZFBhZGRpbmcgPSBzdXJmYWNlUGFkZGluZ1JpZ2h0ICsgc3VyZmFjZVBhZGRpbmdMZWZ0O1xuICAgICAgY29uc3QgdHh0ID0gdGhpcy5hZGFwdGVyXy5nZXRUZXh0Rm9yT3B0aW9uQXRJbmRleChpKS50cmltKCk7XG4gICAgICBjb25zdCB7d2lkdGh9ID0gdGhpcy5jdHhfLm1lYXN1cmVUZXh0KHR4dCk7XG4gICAgICBjb25zdCBhZGRlZFNwYWNlID0gbGV0dGVyU3BhY2luZyAqIHR4dC5sZW5ndGg7XG5cbiAgICAgIG1heFRleHRMZW5ndGggPVxuICAgICAgICBNYXRoLm1heChtYXhUZXh0TGVuZ3RoLCBNYXRoLmNlaWwod2lkdGggKyBhZGRlZFNwYWNlICsgc2VsZWN0Qm94QWRkZWRQYWRkaW5nKSk7XG4gICAgfVxuXG4gICAgdGhpcy5hZGFwdGVyXy5zZXRTdHlsZSgnd2lkdGgnLCBgJHttYXhUZXh0TGVuZ3RofXB4YCk7XG4gIH1cblxuICBvcGVuXygpIHtcbiAgICB0aGlzLmRpc2FibGVTY3JvbGxfKCk7XG4gICAgY29uc3Qge09QRU59ID0gTURDU2VsZWN0Rm91bmRhdGlvbi5jc3NDbGFzc2VzO1xuICAgIGNvbnN0IGZvY3VzSW5kZXggPSB0aGlzLnNlbGVjdGVkSW5kZXhfIDwgMCA/IDAgOiB0aGlzLnNlbGVjdGVkSW5kZXhfO1xuXG4gICAgdGhpcy5zZXRNZW51U3R5bGVzRm9yT3BlbkF0SW5kZXhfKGZvY3VzSW5kZXgpO1xuICAgIHRoaXMuYWRhcHRlcl8uZmxvYXRMYWJlbCh0cnVlKTtcbiAgICB0aGlzLmFkYXB0ZXJfLmFjdGl2YXRlQm90dG9tTGluZSgpO1xuICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoT1BFTik7XG4gICAgdGhpcy5hbmltYXRpb25SZXF1ZXN0SWRfID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHtcbiAgICAgIHRoaXMuYWRhcHRlcl8ub3Blbk1lbnUoZm9jdXNJbmRleCk7XG4gICAgICB0aGlzLmlzRm9jdXNlZF8gPSB0cnVlO1xuICAgIH0pO1xuICB9XG5cbiAgc2V0TWVudVN0eWxlc0Zvck9wZW5BdEluZGV4XyhpbmRleCkge1xuICAgIGNvbnN0IGlubmVySGVpZ2h0ID0gdGhpcy5hZGFwdGVyXy5nZXRXaW5kb3dJbm5lckhlaWdodCgpO1xuICAgIGNvbnN0IHtsZWZ0LCB0b3B9ID0gdGhpcy5hZGFwdGVyXy5jb21wdXRlQm91bmRpbmdSZWN0KCk7XG5cbiAgICB0aGlzLmFkYXB0ZXJfLnNldE1lbnVFbEF0dHIoJ2FyaWEtaGlkZGVuJywgJ3RydWUnKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnNldE1lbnVFbFN0eWxlKCdkaXNwbGF5JywgJ2Jsb2NrJyk7XG4gICAgY29uc3QgbWVudUhlaWdodCA9IHRoaXMuYWRhcHRlcl8uZ2V0TWVudUVsT2Zmc2V0SGVpZ2h0KCk7XG4gICAgY29uc3QgaXRlbU9mZnNldFRvcCA9IHRoaXMuYWRhcHRlcl8uZ2V0T2Zmc2V0VG9wRm9yT3B0aW9uQXRJbmRleChpbmRleCk7XG4gICAgdGhpcy5hZGFwdGVyXy5zZXRNZW51RWxTdHlsZSgnZGlzcGxheScsICcnKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnJtTWVudUVsQXR0cignYXJpYS1oaWRkZW4nKTtcblxuICAgIGxldCBhZGp1c3RlZFRvcCA9IHRvcCAtIGl0ZW1PZmZzZXRUb3A7XG4gICAgY29uc3Qgb3ZlcmZsb3dzVG9wID0gYWRqdXN0ZWRUb3AgPCAwO1xuICAgIGNvbnN0IG92ZXJmbG93c0JvdHRvbSA9IGFkanVzdGVkVG9wICsgbWVudUhlaWdodCA+IGlubmVySGVpZ2h0O1xuICAgIGlmIChvdmVyZmxvd3NUb3ApIHtcbiAgICAgIGFkanVzdGVkVG9wID0gMDtcbiAgICB9IGVsc2UgaWYgKG92ZXJmbG93c0JvdHRvbSkge1xuICAgICAgYWRqdXN0ZWRUb3AgPSBNYXRoLm1heCgwLCBpbm5lckhlaWdodCAtIG1lbnVIZWlnaHQpO1xuICAgIH07XG5cbiAgICB0aGlzLmFkYXB0ZXJfLnNldE1lbnVFbFN0eWxlKCdsZWZ0JywgYCR7bGVmdH1weGApO1xuICAgIHRoaXMuYWRhcHRlcl8uc2V0TWVudUVsU3R5bGUoJ3RvcCcsIGAke2FkanVzdGVkVG9wfXB4YCk7XG4gICAgdGhpcy5hZGFwdGVyXy5zZXRNZW51RWxTdHlsZSgndHJhbnNmb3JtLW9yaWdpbicsIGBjZW50ZXIgJHtpdGVtT2Zmc2V0VG9wfXB4YCk7XG4gIH1cblxuICBjbG9zZV8oKSB7XG4gICAgY29uc3Qge09QRU59ID0gTURDU2VsZWN0Rm91bmRhdGlvbi5jc3NDbGFzc2VzO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoT1BFTik7XG4gICAgdGhpcy5hZGFwdGVyXy5kZWFjdGl2YXRlQm90dG9tTGluZSgpO1xuICAgIHRoaXMuYWRhcHRlcl8uZm9jdXMoKTtcbiAgICB0aGlzLmVuYWJsZVNjcm9sbF8oKTtcbiAgfVxuXG4gIGhhbmRsZURpc3BsYXlWaWFLZXlib2FyZF8oZXZ0KSB7XG4gICAgLy8gV2UgdXNlIGEgaGFyZC1jb2RlZCAyIGluc3RlYWQgb2YgRXZlbnQuQVRfVEFSR0VUIHRvIGF2b2lkIGhhdmluZyB0byByZWZlcmVuY2UgYSBicm93c2VyXG4gICAgLy8gZ2xvYmFsLlxuICAgIGNvbnN0IEVWRU5UX1BIQVNFX0FUX1RBUkdFVCA9IDI7XG4gICAgaWYgKGV2dC5ldmVudFBoYXNlICE9PSBFVkVOVF9QSEFTRV9BVF9UQVJHRVQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBQcmV2ZW50IHByZXNzaW5nIHNwYWNlIGRvd24gZnJvbSBzY3JvbGxpbmcgdGhlIHBhZ2VcbiAgICBjb25zdCBpc1NwYWNlRG93biA9IGV2dC50eXBlID09PSAna2V5ZG93bicgJiYgKGV2dC5rZXkgPT09ICdTcGFjZScgfHwgZXZ0LmtleUNvZGUgPT09IDMyKTtcbiAgICBpZiAoaXNTcGFjZURvd24pIHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cblxuICAgIGNvbnN0IGlzT3BlbmVyS2V5ID0gT1BFTkVSX0tFWVMuc29tZSgoe2tleSwga2V5Q29kZSwgZm9yVHlwZX0pID0+IHtcbiAgICAgIHJldHVybiBldnQudHlwZSA9PT0gZm9yVHlwZSAmJiAoZXZ0LmtleSA9PT0ga2V5IHx8IGV2dC5rZXlDb2RlID09PSBrZXlDb2RlKTtcbiAgICB9KTtcblxuICAgIGlmIChpc09wZW5lcktleSkge1xuICAgICAgdGhpcy5kaXNwbGF5SGFuZGxlcl8oZXZ0KTtcbiAgICB9XG4gIH1cblxuICBkaXNhYmxlU2Nyb2xsXygpIHtcbiAgICB0aGlzLmFkYXB0ZXJfLmFkZEJvZHlDbGFzcyhjc3NDbGFzc2VzLlNDUk9MTF9MT0NLKTtcbiAgfVxuXG4gIGVuYWJsZVNjcm9sbF8oKSB7XG4gICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVCb2R5Q2xhc3MoY3NzQ2xhc3Nlcy5TQ1JPTExfTE9DSyk7XG4gIH1cbn1cbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKiBlc2xpbnQgbm8tdW51c2VkLXZhcnM6IFsyLCB7XCJhcmdzXCI6IFwibm9uZVwifV0gKi9cblxuLyoqXG4gKiBBZGFwdGVyIGZvciBNREMgU2VsZWN0IEJvdHRvbSBMaW5lLlxuICpcbiAqIERlZmluZXMgdGhlIHNoYXBlIG9mIHRoZSBhZGFwdGVyIGV4cGVjdGVkIGJ5IHRoZSBmb3VuZGF0aW9uLiBJbXBsZW1lbnQgdGhpc1xuICogYWRhcHRlciB0byBpbnRlZ3JhdGUgdGhlIFNlbGVjdCBsYWJlbCBpbnRvIHlvdXIgZnJhbWV3b3JrLiBTZWVcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRlcmlhbC1jb21wb25lbnRzL21hdGVyaWFsLWNvbXBvbmVudHMtd2ViL2Jsb2IvbWFzdGVyL2RvY3MvYXV0aG9yaW5nLWNvbXBvbmVudHMubWRcbiAqIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICpcbiAqIEByZWNvcmRcbiAqL1xuY2xhc3MgTURDU2VsZWN0Qm90dG9tTGluZUFkYXB0ZXIge1xuICAvKipcbiAgICogQWRkcyBhIGNsYXNzIHRvIHRoZSBib3R0b20gbGluZSBlbGVtZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG4gICAqL1xuICBhZGRDbGFzcyhjbGFzc05hbWUpIHt9XG5cbiAgLyoqXG4gICAqIFJlbW92ZXMgYSBjbGFzcyBmcm9tIHRoZSBib3R0b20gbGluZSBlbGVtZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG4gICAqL1xuICByZW1vdmVDbGFzcyhjbGFzc05hbWUpIHt9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1EQ1NlbGVjdEJvdHRvbUxpbmVBZGFwdGVyO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuZXhwb3J0IGNvbnN0IGNzc0NsYXNzZXMgPSB7XG4gIEJPVFRPTV9MSU5FX0FDVElWRTogJ21kYy1zZWxlY3RfX2JvdHRvbS1saW5lLS1hY3RpdmUnLFxufTtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgTURDRm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvYmFzZS9mb3VuZGF0aW9uJztcbmltcG9ydCBNRENTZWxlY3RCb3R0b21MaW5lQWRhcHRlciBmcm9tICcuL2FkYXB0ZXInO1xuaW1wb3J0IHtjc3NDbGFzc2VzfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbi8qKlxuICogQGV4dGVuZHMge01EQ0ZvdW5kYXRpb248IU1EQ1NlbGVjdEJvdHRvbUxpbmVBZGFwdGVyPn1cbiAqIEBmaW5hbFxuICovXG5jbGFzcyBNRENTZWxlY3RCb3R0b21MaW5lRm91bmRhdGlvbiBleHRlbmRzIE1EQ0ZvdW5kYXRpb24ge1xuICAvKiogQHJldHVybiBlbnVtIHtzdHJpbmd9ICovXG4gIHN0YXRpYyBnZXQgY3NzQ2xhc3NlcygpIHtcbiAgICByZXR1cm4gY3NzQ2xhc3NlcztcbiAgfVxuXG4gIC8qKlxuICAgKiB7QHNlZSBNRENTZWxlY3RCb3R0b21MaW5lQWRhcHRlcn0gZm9yIHR5cGluZyBpbmZvcm1hdGlvbiBvbiBwYXJhbWV0ZXJzIGFuZCByZXR1cm5cbiAgICogdHlwZXMuXG4gICAqIEByZXR1cm4geyFNRENTZWxlY3RCb3R0b21MaW5lQWRhcHRlcn1cbiAgICovXG4gIHN0YXRpYyBnZXQgZGVmYXVsdEFkYXB0ZXIoKSB7XG4gICAgcmV0dXJuIC8qKiBAdHlwZSB7IU1EQ1NlbGVjdEJvdHRvbUxpbmVBZGFwdGVyfSAqLyAoe1xuICAgICAgYWRkQ2xhc3M6ICgpID0+IHt9LFxuICAgICAgcmVtb3ZlQ2xhc3M6ICgpID0+IHt9LFxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHMgdGhlIGFjdGl2ZSBjbGFzcyB0byBib3R0b20gbGluZVxuICAgKi9cbiAgYWN0aXZhdGUoKSB7XG4gICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyhjc3NDbGFzc2VzLkJPVFRPTV9MSU5FX0FDVElWRSk7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlcyB0aGUgYWN0aXZlIGNsYXNzIGZyb20gdGhlIGJvdHRvbSBsaW5lXG4gICAqL1xuICBkZWFjdGl2YXRlKCkge1xuICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoY3NzQ2xhc3Nlcy5CT1RUT01fTElORV9BQ1RJVkUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7IU1EQ1NlbGVjdEJvdHRvbUxpbmVBZGFwdGVyfSBhZGFwdGVyXG4gICAqL1xuICBjb25zdHJ1Y3RvcihhZGFwdGVyKSB7XG4gICAgc3VwZXIoT2JqZWN0LmFzc2lnbihNRENTZWxlY3RCb3R0b21MaW5lRm91bmRhdGlvbi5kZWZhdWx0QWRhcHRlciwgYWRhcHRlcikpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1EQ1NlbGVjdEJvdHRvbUxpbmVGb3VuZGF0aW9uO1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qIGVzbGludCBuby11bnVzZWQtdmFyczogWzIsIHtcImFyZ3NcIjogXCJub25lXCJ9XSAqL1xuXG4vKipcbiAqIEFkYXB0ZXIgZm9yIE1EQyBTZWxlY3QgTGFiZWwuXG4gKlxuICogRGVmaW5lcyB0aGUgc2hhcGUgb2YgdGhlIGFkYXB0ZXIgZXhwZWN0ZWQgYnkgdGhlIGZvdW5kYXRpb24uIEltcGxlbWVudCB0aGlzXG4gKiBhZGFwdGVyIHRvIGludGVncmF0ZSB0aGUgU2VsZWN0IGxhYmVsIGludG8geW91ciBmcmFtZXdvcmsuIFNlZVxuICogaHR0cHM6Ly9naXRodWIuY29tL21hdGVyaWFsLWNvbXBvbmVudHMvbWF0ZXJpYWwtY29tcG9uZW50cy13ZWIvYmxvYi9tYXN0ZXIvZG9jcy9hdXRob3JpbmctY29tcG9uZW50cy5tZFxuICogZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKlxuICogQHJlY29yZFxuICovXG5jbGFzcyBNRENTZWxlY3RMYWJlbEFkYXB0ZXIge1xuICAvKipcbiAgICogQWRkcyBhIGNsYXNzIHRvIHRoZSBsYWJlbCBlbGVtZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG4gICAqL1xuICBhZGRDbGFzcyhjbGFzc05hbWUpIHt9XG5cbiAgLyoqXG4gICAqIFJlbW92ZXMgYSBjbGFzcyBmcm9tIHRoZSBsYWJlbCBlbGVtZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG4gICAqL1xuICByZW1vdmVDbGFzcyhjbGFzc05hbWUpIHt9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1EQ1NlbGVjdExhYmVsQWRhcHRlcjtcbiIsImV4cG9ydCBjb25zdCBjc3NDbGFzc2VzID0ge1xuICBMQUJFTF9GTE9BVF9BQk9WRTogJ21kYy1zZWxlY3RfX2xhYmVsLS1mbG9hdC1hYm92ZScsXG59O1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCBNRENGb3VuZGF0aW9uIGZyb20gJ0BtYXRlcmlhbC9iYXNlL2ZvdW5kYXRpb24nO1xuaW1wb3J0IE1EQ1NlbGVjdExhYmVsQWRhcHRlciBmcm9tICcuL2FkYXB0ZXInO1xuaW1wb3J0IHtjc3NDbGFzc2VzfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbi8qKlxuICogQGV4dGVuZHMge01EQ0ZvdW5kYXRpb248IU1EQ1NlbGVjdExhYmVsQWRhcHRlcj59XG4gKiBAZmluYWxcbiAqL1xuY2xhc3MgTURDU2VsZWN0TGFiZWxGb3VuZGF0aW9uIGV4dGVuZHMgTURDRm91bmRhdGlvbiB7XG4gIC8qKiBAcmV0dXJuIGVudW0ge3N0cmluZ30gKi9cbiAgc3RhdGljIGdldCBjc3NDbGFzc2VzKCkge1xuICAgIHJldHVybiBjc3NDbGFzc2VzO1xuICB9XG5cbiAgLyoqXG4gICAqIHtAc2VlIE1EQ1NlbGVjdExhYmVsQWRhcHRlcn0gZm9yIHR5cGluZyBpbmZvcm1hdGlvbiBvbiBwYXJhbWV0ZXJzIGFuZCByZXR1cm5cbiAgICogdHlwZXMuXG4gICAqIEByZXR1cm4geyFNRENTZWxlY3RMYWJlbEFkYXB0ZXJ9XG4gICAqL1xuICBzdGF0aWMgZ2V0IGRlZmF1bHRBZGFwdGVyKCkge1xuICAgIHJldHVybiAvKiogQHR5cGUgeyFNRENTZWxlY3RMYWJlbEFkYXB0ZXJ9ICovICh7XG4gICAgICBhZGRDbGFzczogKCkgPT4ge30sXG4gICAgICByZW1vdmVDbGFzczogKCkgPT4ge30sXG4gICAgICBnZXRXaWR0aDogKCkgPT4ge30sXG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHshTURDU2VsZWN0TGFiZWxBZGFwdGVyfSBhZGFwdGVyXG4gICAqL1xuICBjb25zdHJ1Y3RvcihhZGFwdGVyKSB7XG4gICAgc3VwZXIoT2JqZWN0LmFzc2lnbihNRENTZWxlY3RMYWJlbEZvdW5kYXRpb24uZGVmYXVsdEFkYXB0ZXIsIGFkYXB0ZXIpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTdHlsZXMgdGhlIGxhYmVsIHRvIGZsb2F0IG9yIGRlZmxvYXQgYXMgbmVjZXNzYXJ5LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgVGhlIHZhbHVlIG9mIHRoZSBpbnB1dC5cbiAgICovXG4gIHN0eWxlRmxvYXQodmFsdWUpIHtcbiAgICBjb25zdCB7TEFCRUxfRkxPQVRfQUJPVkV9ID0gTURDU2VsZWN0TGFiZWxGb3VuZGF0aW9uLmNzc0NsYXNzZXM7XG4gICAgaWYgKCEhdmFsdWUpIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoTEFCRUxfRkxPQVRfQUJPVkUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUNsYXNzKExBQkVMX0ZMT0FUX0FCT1ZFKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTURDU2VsZWN0TGFiZWxGb3VuZGF0aW9uO1xuIiwiPHRlbXBsYXRlPlxyXG4gIDxkaXYgY2xhc3M9XCJtZGMtc2VsZWN0IG1kYy1tZW51LXNlbGVjdFwiIFxyXG4gICAgcm9sZT1cImxpc3Rib3hcIiBcclxuICAgIDpjbGFzcz1cImNsYXNzZXNcIj5cclxuICAgIDxkaXYgcmVmPVwic3VyZmFjZVwiIGNsYXNzPVwibWRjLXNlbGVjdF9fc3VyZmFjZVwiXHJcbiAgICAgIDpzdHlsZT1cInN1cmZhY2VTdHlsZXNcIiA6dGFiaW5kZXg9XCJ0YWJJbmRleFwiPlxyXG4gICAgICAgIDxkaXYgcmVmPVwibGFiZWxcIiBjbGFzcz1cIm1kYy1zZWxlY3RfX2xhYmVsXCJcclxuICAgICAgICAgIDpjbGFzcz1cImxhYmVsQ2xhc3Nlc1wiXHJcbiAgICAgICAgPnt7bGFiZWx9fTwvZGl2PlxyXG4gICAgICAgIDxkaXYgcmVmPVwic2VsZWN0ZWRDb250ZW50XCIgY2xhc3M9XCJtZGMtc2VsZWN0X19zZWxlY3RlZC10ZXh0XCIgXHJcbiAgICAgICAgPnt7c2VsZWN0ZWRUZXh0Q29udGVudH19PC9kaXY+XHJcbiAgICAgICAgPGRpdiByZWY9XCJib3R0b21MaW5lXCIgY2xhc3M9XCJtZGMtc2VsZWN0X19ib3R0b20tbGluZVwiXHJcbiAgICAgICAgICA6Y2xhc3M9XCJib3R0b21MaW5lQ2xhc3Nlc1wiPjwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgICA8bWRjLW1lbnUgcmVmPVwibWVudVwiIFxyXG4gICAgICBjbGFzcz1cIm1kYy1zZWxlY3RfX21lbnVcIlxyXG4gICAgICBAdXBkYXRlPVwicmVmcmVzaEluZGV4XCI+XHJcbiAgICAgIDxzbG90Pjwvc2xvdD5cclxuICAgIDwvbWRjLW1lbnU+XHJcbiAgPC9kaXY+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5pbXBvcnQgeyBtZGNNZW51IH0gZnJvbSAnLi4vbWVudSc7XHJcbmltcG9ydCBNRENTZWxlY3RGb3VuZGF0aW9uIGZyb20gJ0BtYXRlcmlhbC9zZWxlY3QvZm91bmRhdGlvbic7XHJcbmltcG9ydCBNRENTZWxlY3RCb3R0b21MaW5lRm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvc2VsZWN0L2JvdHRvbS1saW5lL2ZvdW5kYXRpb24nO1xyXG5pbXBvcnQgTURDU2VsZWN0TGFiZWxGb3VuZGF0aW9uIGZyb20gJ0BtYXRlcmlhbC9zZWxlY3QvbGFiZWwvZm91bmRhdGlvbic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgbmFtZTogJ21kYy1tZW51LXNlbGVjdCcsXHJcbiAgbW9kZWw6IHtcclxuICAgIHByb3A6ICd2YWx1ZScsXHJcbiAgICBldmVudDogJ2NoYW5nZScsXHJcbiAgfSxcclxuICBwcm9wczoge1xyXG4gICAgbXVsdGlwbGU6IEJvb2xlYW4sXHJcbiAgICB2YWx1ZTogW1N0cmluZywgQXJyYXldLFxyXG4gICAgZGlzYWJsZWQ6IEJvb2xlYW4sXHJcbiAgICBsYWJlbDogU3RyaW5nLFxyXG4gICAgYm94OiBCb29sZWFuLFxyXG4gIH0sXHJcbiAgZGF0YSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGNsYXNzZXM6IHtcclxuICAgICAgICAnbWRjLXNlbGVjdC0tYm94JzogdGhpcy5ib3gsXHJcbiAgICAgIH0sXHJcbiAgICAgIGxhYmVsQ2xhc3Nlczoge30sXHJcbiAgICAgIGJvdHRvbUxpbmVDbGFzc2VzOiB7fSxcclxuICAgICAgc3VyZmFjZVN0eWxlczoge30sXHJcbiAgICAgIHRhYkluZGV4OiAwLFxyXG4gICAgICBzZWxlY3RlZFRleHRDb250ZW50OiAnJyxcclxuICAgIH07XHJcbiAgfSxcclxuICBjb21wb25lbnRzOiB7XHJcbiAgICAnbWRjLW1lbnUnOiBtZGNNZW51LFxyXG4gIH0sXHJcbiAgd2F0Y2g6IHtcclxuICAgIGRpc2FibGVkKHZhbHVlKSB7XHJcbiAgICAgIHRoaXMuZm91bmRhdGlvbiAmJiB0aGlzLmZvdW5kYXRpb24uc2V0RGlzYWJsZWQodmFsdWUpO1xyXG4gICAgfSxcclxuICAgIHZhbHVlKCkge1xyXG4gICAgICB0aGlzLnJlZnJlc2hJbmRleCgpO1xyXG4gICAgfSxcclxuICAgIGJveCgpIHtcclxuICAgICAgdGhpcy4kc2V0KHRoaXMuY2xhc3NlcywgJ21kYy1zZWxlY3QtLWJveCcsIHRoaXMuYm94KTtcclxuICAgIH0sXHJcbiAgfSxcclxuICBtZXRob2RzOiB7XHJcbiAgICByZWZyZXNoSW5kZXgoKSB7XHJcbiAgICAgIGlmICh0aGlzLmZvdW5kYXRpb24pIHtcclxuICAgICAgICBsZXQgb3B0aW9ucyA9IHRoaXMuJHJlZnMubWVudS5pdGVtcztcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG9wdGlvbnMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIGxldCBvcHRpb25WYWx1ZSA9XHJcbiAgICAgICAgICAgIG9wdGlvbnNbaV0uZ2V0QXR0cmlidXRlKCdkYXRhLXZhbHVlJykgfHxcclxuICAgICAgICAgICAgb3B0aW9uc1tpXS50ZXh0Q29udGVudC50cmltKCk7XHJcbiAgICAgICAgICBpZiAodGhpcy52YWx1ZSA9PSBvcHRpb25WYWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLmZvdW5kYXRpb24uc2V0U2VsZWN0ZWRJbmRleChpKTtcclxuICAgICAgICAgICAgLy9UT0RPOiBNRENGSVggZm9yY2UgZmxvYXQgYWJvdmUgaWYgdmFsdWUgaXMgdmFsaWRcclxuICAgICAgICAgICAgdGhpcy4kc2V0KFxyXG4gICAgICAgICAgICAgIHRoaXMubGFiZWxDbGFzc2VzLFxyXG4gICAgICAgICAgICAgICdtZGMtc2VsZWN0X19sYWJlbC0tZmxvYXQtYWJvdmUnLFxyXG4gICAgICAgICAgICAgIHRydWUsXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLy9UT0RPOiBNRENGSVggZm9yY2UgZmxvYXQgYWJvdmUgaWYgdmFsdWUgaXMgdmFsaWRcclxuICAgICAgICB0aGlzLmZvdW5kYXRpb24uc2V0U2VsZWN0ZWRJbmRleCgtMSk7XHJcbiAgICAgICAgdGhpcy4kc2V0KHRoaXMubGFiZWxDbGFzc2VzLCAnbWRjLXNlbGVjdF9fbGFiZWwtLWZsb2F0LWFib3ZlJywgZmFsc2UpO1xyXG4gICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIHRoaXMuZm91bmRhdGlvbi5nZXRWYWx1ZSgpKTsgLy8gVE9ETzogTURDRklYXHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgfSxcclxuICBtb3VudGVkKCkge1xyXG4gICAgdGhpcy5sYWJlbEZvdW5kYXRpb24gPSBuZXcgTURDU2VsZWN0TGFiZWxGb3VuZGF0aW9uKHtcclxuICAgICAgYWRkQ2xhc3M6IGNsYXNzTmFtZSA9PiB0aGlzLiRzZXQodGhpcy5sYWJlbENsYXNzZXMsIGNsYXNzTmFtZSwgdHJ1ZSksXHJcbiAgICAgIHJlbW92ZUNsYXNzOiBjbGFzc05hbWUgPT4gdGhpcy4kZGVsZXRlKHRoaXMubGFiZWxDbGFzc2VzLCBjbGFzc05hbWUpLFxyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5ib3R0b21MaW5lRm91bmRhdGlvbiA9IG5ldyBNRENTZWxlY3RCb3R0b21MaW5lRm91bmRhdGlvbih7XHJcbiAgICAgIGFkZENsYXNzOiBjbGFzc05hbWUgPT4ge1xyXG4gICAgICAgIHRoaXMuJHNldCh0aGlzLmJvdHRvbUxpbmVDbGFzc2VzLCBjbGFzc05hbWUsIHRydWUpO1xyXG4gICAgICB9LFxyXG4gICAgICByZW1vdmVDbGFzczogY2xhc3NOYW1lID0+IHtcclxuICAgICAgICB0aGlzLiRkZWxldGUodGhpcy5ib3R0b21MaW5lQ2xhc3NlcywgY2xhc3NOYW1lKTtcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG4gICAgdGhpcy5ib3R0b21MaW5lRm91bmRhdGlvbi5pbml0KCk7XHJcblxyXG4gICAgdGhpcy5mb3VuZGF0aW9uID0gbmV3IE1EQ1NlbGVjdEZvdW5kYXRpb24oe1xyXG4gICAgICBhZGRDbGFzczogY2xhc3NOYW1lID0+IHRoaXMuJHNldCh0aGlzLmNsYXNzZXMsIGNsYXNzTmFtZSwgdHJ1ZSksXHJcbiAgICAgIHJlbW92ZUNsYXNzOiBjbGFzc05hbWUgPT4gdGhpcy4kZGVsZXRlKHRoaXMuY2xhc3NlcywgY2xhc3NOYW1lKSxcclxuICAgICAgZmxvYXRMYWJlbDogdmFsdWUgPT4ge1xyXG4gICAgICAgIHRoaXMubGFiZWxGb3VuZGF0aW9uLnN0eWxlRmxvYXQodmFsdWUpO1xyXG4gICAgICB9LFxyXG4gICAgICBhY3RpdmF0ZUJvdHRvbUxpbmU6ICgpID0+IHtcclxuICAgICAgICB0aGlzLmJvdHRvbUxpbmVGb3VuZGF0aW9uLmFjdGl2YXRlKCk7XHJcbiAgICAgIH0sXHJcbiAgICAgIGRlYWN0aXZhdGVCb3R0b21MaW5lOiAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5ib3R0b21MaW5lRm91bmRhdGlvbi5kZWFjdGl2YXRlKCk7XHJcbiAgICAgIH0sXHJcbiAgICAgIHNldEF0dHI6IChhdHRyLCB2YWx1ZSkgPT4gdGhpcy4kZWwuc2V0QXR0cmlidXRlKGF0dHIsIHZhbHVlKSxcclxuICAgICAgcm1BdHRyOiAoYXR0ciwgdmFsdWUpID0+IHRoaXMuJGVsLnJlbW92ZUF0dHJpYnV0ZShhdHRyLCB2YWx1ZSksXHJcbiAgICAgIGNvbXB1dGVCb3VuZGluZ1JlY3Q6ICgpID0+IHRoaXMuJHJlZnMuc3VyZmFjZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxcclxuICAgICAgcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6ICh0eXBlLCBoYW5kbGVyKSA9PlxyXG4gICAgICAgIHRoaXMuJHJlZnMuc3VyZmFjZS5hZGRFdmVudExpc3RlbmVyKHR5cGUsIGhhbmRsZXIpLFxyXG4gICAgICBkZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAodHlwZSwgaGFuZGxlcikgPT5cclxuICAgICAgICB0aGlzLiRyZWZzLnN1cmZhY2UucmVtb3ZlRXZlbnRMaXN0ZW5lcih0eXBlLCBoYW5kbGVyKSxcclxuICAgICAgZm9jdXM6ICgpID0+IHRoaXMuJHJlZnMuc3VyZmFjZS5mb2N1cygpLFxyXG4gICAgICBtYWtlVGFiYmFibGU6ICgpID0+IHtcclxuICAgICAgICB0aGlzLnRhYkluZGV4ID0gMDtcclxuICAgICAgfSxcclxuICAgICAgbWFrZVVudGFiYmFibGU6ICgpID0+IHtcclxuICAgICAgICB0aGlzLnRhYkluZGV4ID0gLTE7XHJcbiAgICAgIH0sXHJcbiAgICAgIGdldENvbXB1dGVkU3R5bGVWYWx1ZTogcHJvcCA9PlxyXG4gICAgICAgIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMuJHJlZnMuc3VyZmFjZSkuZ2V0UHJvcGVydHlWYWx1ZShwcm9wKSxcclxuICAgICAgc2V0U3R5bGU6IChwcm9wZXJ0eU5hbWUsIHZhbHVlKSA9PlxyXG4gICAgICAgIHRoaXMuJHNldCh0aGlzLnN1cmZhY2VTdHlsZXMsIHByb3BlcnR5TmFtZSwgdmFsdWUpLFxyXG4gICAgICBjcmVhdGUyZFJlbmRlcmluZ0NvbnRleHQ6ICgpID0+XHJcbiAgICAgICAgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJykuZ2V0Q29udGV4dCgnMmQnKSxcclxuICAgICAgc2V0TWVudUVsU3R5bGU6IChwcm9wZXJ0eU5hbWUsIHZhbHVlKSA9PlxyXG4gICAgICAgICh0aGlzLiRyZWZzLm1lbnUuJGVsLnN0eWxlW3Byb3BlcnR5TmFtZV0gPSB2YWx1ZSksXHJcbiAgICAgIHNldE1lbnVFbEF0dHI6IChhdHRyLCB2YWx1ZSkgPT5cclxuICAgICAgICB0aGlzLiRyZWZzLm1lbnUuJGVsLnNldEF0dHJpYnV0ZShhdHRyLCB2YWx1ZSksXHJcbiAgICAgIHJtTWVudUVsQXR0cjogYXR0ciA9PiB0aGlzLiRyZWZzLm1lbnUuJGVsLnJlbW92ZUF0dHJpYnV0ZShhdHRyKSxcclxuICAgICAgZ2V0TWVudUVsT2Zmc2V0SGVpZ2h0OiAoKSA9PiB0aGlzLiRyZWZzLm1lbnUuJGVsLm9mZnNldEhlaWdodCxcclxuICAgICAgb3Blbk1lbnU6IGZvY3VzSW5kZXggPT4gdGhpcy4kcmVmcy5tZW51LnNob3coeyBmb2N1c0luZGV4IH0pLFxyXG4gICAgICBpc01lbnVPcGVuOiAoKSA9PiB0aGlzLiRyZWZzLm1lbnUuaXNPcGVuKCksXHJcbiAgICAgIHNldFNlbGVjdGVkVGV4dENvbnRlbnQ6IHNlbGVjdGVkVGV4dENvbnRlbnQgPT4ge1xyXG4gICAgICAgIHRoaXMuc2VsZWN0ZWRUZXh0Q29udGVudCA9IHNlbGVjdGVkVGV4dENvbnRlbnQ7XHJcbiAgICAgIH0sXHJcbiAgICAgIGdldE51bWJlck9mT3B0aW9uczogKCkgPT4gdGhpcy4kcmVmcy5tZW51Lml0ZW1zLmxlbmd0aCxcclxuICAgICAgZ2V0VGV4dEZvck9wdGlvbkF0SW5kZXg6IGluZGV4ID0+XHJcbiAgICAgICAgdGhpcy4kcmVmcy5tZW51Lml0ZW1zW2luZGV4XS50ZXh0Q29udGVudC50cmltKCksXHJcbiAgICAgIGdldFZhbHVlRm9yT3B0aW9uQXRJbmRleDogaW5kZXggPT4ge1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICB0aGlzLiRyZWZzLm1lbnUuaXRlbXNbaW5kZXhdLmdldEF0dHJpYnV0ZSgnZGF0YS12YWx1ZScpIHx8XHJcbiAgICAgICAgICB0aGlzLiRyZWZzLm1lbnUuaXRlbXNbaW5kZXhdLnRleHRDb250ZW50LnRyaW0oKVxyXG4gICAgICAgICk7XHJcbiAgICAgIH0sXHJcbiAgICAgIHNldEF0dHJGb3JPcHRpb25BdEluZGV4OiAoaW5kZXgsIGF0dHIsIHZhbHVlKSA9PlxyXG4gICAgICAgIHRoaXMuJHJlZnMubWVudS5pdGVtc1tpbmRleF0uc2V0QXR0cmlidXRlKGF0dHIsIHZhbHVlKSxcclxuICAgICAgcm1BdHRyRm9yT3B0aW9uQXRJbmRleDogKGluZGV4LCBhdHRyKSA9PlxyXG4gICAgICAgIHRoaXMuJHJlZnMubWVudS5pdGVtc1tpbmRleF0ucmVtb3ZlQXR0cmlidXRlKGF0dHIpLFxyXG4gICAgICBnZXRPZmZzZXRUb3BGb3JPcHRpb25BdEluZGV4OiBpbmRleCA9PlxyXG4gICAgICAgIHRoaXMuJHJlZnMubWVudS5pdGVtc1tpbmRleF0ub2Zmc2V0VG9wLFxyXG4gICAgICByZWdpc3Rlck1lbnVJbnRlcmFjdGlvbkhhbmRsZXI6ICh0eXBlLCBoYW5kbGVyKSA9PlxyXG4gICAgICAgIHRoaXMuJHJlZnMubWVudS4kZWwuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCBoYW5kbGVyKSxcclxuICAgICAgZGVyZWdpc3Rlck1lbnVJbnRlcmFjdGlvbkhhbmRsZXI6ICh0eXBlLCBoYW5kbGVyKSA9PlxyXG4gICAgICAgIHRoaXMuJHJlZnMubWVudS4kZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcih0eXBlLCBoYW5kbGVyKSxcclxuICAgICAgbm90aWZ5Q2hhbmdlOiAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgdGhpcy5mb3VuZGF0aW9uLmdldFZhbHVlKCkpO1xyXG4gICAgICB9LFxyXG4gICAgICBnZXRXaW5kb3dJbm5lckhlaWdodDogKCkgPT4gd2luZG93LmlubmVySGVpZ2h0LFxyXG4gICAgICBhZGRCb2R5Q2xhc3M6IGNsYXNzTmFtZSA9PiBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKSxcclxuICAgICAgcmVtb3ZlQm9keUNsYXNzOiBjbGFzc05hbWUgPT4gZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSksXHJcbiAgICB9KTtcclxuXHJcbiAgICAvL1RPRE86IE1EQ0ZJWFxyXG4gICAgbGV0IGZvdW5kYXRpb24gPSB0aGlzLmZvdW5kYXRpb247XHJcbiAgICBpZiAoZm91bmRhdGlvbikge1xyXG4gICAgICBmb3VuZGF0aW9uLnJlc2l6ZSA9ICgpID0+IHtcclxuICAgICAgICBpZiAoIWZvdW5kYXRpb24uY3R4Xykge1xyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBmb250ID0gZm91bmRhdGlvbi5hZGFwdGVyXy5nZXRDb21wdXRlZFN0eWxlVmFsdWUoJ2ZvbnQnKTtcclxuICAgICAgICBjb25zdCBsZXR0ZXJTcGFjaW5nID0gcGFyc2VGbG9hdChcclxuICAgICAgICAgIGZvdW5kYXRpb24uYWRhcHRlcl8uZ2V0Q29tcHV0ZWRTdHlsZVZhbHVlKCdsZXR0ZXItc3BhY2luZycpLFxyXG4gICAgICAgICk7XHJcbiAgICAgICAgaWYgKGZvbnQpIHtcclxuICAgICAgICAgIGZvdW5kYXRpb24uY3R4Xy5mb250ID0gZm9udDtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY29uc3QgcHJpbWFyeUZvbnRGYW1pbHkgPSBmb3VuZGF0aW9uLmFkYXB0ZXJfXHJcbiAgICAgICAgICAgIC5nZXRDb21wdXRlZFN0eWxlVmFsdWUoJ2ZvbnQtZmFtaWx5JylcclxuICAgICAgICAgICAgLnNwbGl0KCcsJylbMF07XHJcbiAgICAgICAgICBjb25zdCBmb250U2l6ZSA9IGZvdW5kYXRpb24uYWRhcHRlcl8uZ2V0Q29tcHV0ZWRTdHlsZVZhbHVlKFxyXG4gICAgICAgICAgICAnZm9udC1zaXplJyxcclxuICAgICAgICAgICk7XHJcbiAgICAgICAgICBmb3VuZGF0aW9uLmN0eF8uZm9udCA9IGAke2ZvbnRTaXplfSAke3ByaW1hcnlGb250RmFtaWx5fWA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgbWF4VGV4dExlbmd0aCA9IDA7XHJcblxyXG4gICAgICAgIGNvbnN0IHN1cmZhY2VQYWRkaW5nUmlnaHQgPSBwYXJzZUludChcclxuICAgICAgICAgIGZvdW5kYXRpb24uYWRhcHRlcl8uZ2V0Q29tcHV0ZWRTdHlsZVZhbHVlKCdwYWRkaW5nLXJpZ2h0JyksXHJcbiAgICAgICAgICAxMCxcclxuICAgICAgICApO1xyXG4gICAgICAgIGNvbnN0IHN1cmZhY2VQYWRkaW5nTGVmdCA9IHBhcnNlSW50KFxyXG4gICAgICAgICAgZm91bmRhdGlvbi5hZGFwdGVyXy5nZXRDb21wdXRlZFN0eWxlVmFsdWUoJ3BhZGRpbmctbGVmdCcpLFxyXG4gICAgICAgICAgMTAsXHJcbiAgICAgICAgKTtcclxuICAgICAgICBjb25zdCBzZWxlY3RCb3hBZGRlZFBhZGRpbmcgPSBzdXJmYWNlUGFkZGluZ1JpZ2h0ICsgc3VyZmFjZVBhZGRpbmdMZWZ0O1xyXG5cclxuICAgICAgICBmb3IgKFxyXG4gICAgICAgICAgbGV0IGkgPSAwLCBsID0gZm91bmRhdGlvbi5hZGFwdGVyXy5nZXROdW1iZXJPZk9wdGlvbnMoKTtcclxuICAgICAgICAgIGkgPCBsO1xyXG4gICAgICAgICAgaSsrXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICBjb25zdCB0eHQgPSBmb3VuZGF0aW9uLmFkYXB0ZXJfLmdldFRleHRGb3JPcHRpb25BdEluZGV4KGkpLnRyaW0oKTtcclxuICAgICAgICAgIGNvbnN0IHsgd2lkdGggfSA9IGZvdW5kYXRpb24uY3R4Xy5tZWFzdXJlVGV4dCh0eHQpO1xyXG4gICAgICAgICAgY29uc3QgYWRkZWRTcGFjZSA9IGxldHRlclNwYWNpbmcgKiB0eHQubGVuZ3RoO1xyXG5cclxuICAgICAgICAgIG1heFRleHRMZW5ndGggPSBNYXRoLm1heChcclxuICAgICAgICAgICAgbWF4VGV4dExlbmd0aCxcclxuICAgICAgICAgICAgTWF0aC5jZWlsKHdpZHRoICsgYWRkZWRTcGFjZSArIHNlbGVjdEJveEFkZGVkUGFkZGluZyksXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgbGFiZWxUeHQgPSB0aGlzLmxhYmVsO1xyXG4gICAgICAgIGNvbnN0IHsgd2lkdGggfSA9IGZvdW5kYXRpb24uY3R4Xy5tZWFzdXJlVGV4dChsYWJlbFR4dCk7XHJcbiAgICAgICAgY29uc3QgYWRkZWRTcGFjZSA9IGxldHRlclNwYWNpbmcgKiBsYWJlbFR4dC5sZW5ndGg7XHJcblxyXG4gICAgICAgIG1heFRleHRMZW5ndGggPSBNYXRoLm1heChcclxuICAgICAgICAgIG1heFRleHRMZW5ndGgsXHJcbiAgICAgICAgICBNYXRoLmNlaWwod2lkdGggKyBhZGRlZFNwYWNlICsgc2VsZWN0Qm94QWRkZWRQYWRkaW5nKSxcclxuICAgICAgICApO1xyXG5cclxuICAgICAgICBmb3VuZGF0aW9uLmFkYXB0ZXJfLnNldFN0eWxlKCd3aWR0aCcsIGAke21heFRleHRMZW5ndGh9cHhgKTtcclxuICAgICAgfTtcclxuICAgIH1cclxuICAgIC8vL1xyXG4gICAgdGhpcy5sYWJlbEZvdW5kYXRpb24uaW5pdCgpO1xyXG4gICAgdGhpcy5mb3VuZGF0aW9uLmluaXQoKTtcclxuICAgIHRoaXMuZm91bmRhdGlvbi5zZXREaXNhYmxlZCh0aGlzLmRpc2FibGVkKTtcclxuICAgIHRoaXMucmVmcmVzaEluZGV4KCk7XHJcbiAgICBpZiAodGhpcy52YWx1ZSAhPT0gdGhpcy5mb3VuZGF0aW9uLmdldFZhbHVlKCkpIHtcclxuICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgdGhpcy5mb3VuZGF0aW9uLmdldFZhbHVlKCkpO1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgYmVmb3JlRGVzdHJveSgpIHtcclxuICAgIGxldCBmb3VuZGF0aW9uID0gdGhpcy5mb3VuZGF0aW9uO1xyXG4gICAgdGhpcy5mb3VuZGF0aW9uID0gbnVsbDtcclxuICAgIGZvdW5kYXRpb24uZGVzdHJveSgpO1xyXG5cclxuICAgIGxldCBsYWJlbEZvdW5kYXRpb24gPSB0aGlzLmxhYmVsRm91bmRhdGlvbjtcclxuICAgIHRoaXMubGFiZWxGb3VuZGF0aW9uID0gbnVsbDtcclxuICAgIGxhYmVsRm91bmRhdGlvbi5kZXN0cm95KCk7XHJcblxyXG4gICAgbGV0IGJvdHRvbUxpbmVGb3VuZGF0aW9uID0gdGhpcy5ib3R0b21MaW5lRm91bmRhdGlvbjtcclxuICAgIHRoaXMuYm90dG9tTGluZUZvdW5kYXRpb24gPSBudWxsO1xyXG4gICAgYm90dG9tTGluZUZvdW5kYXRpb24uZGVzdHJveSgpO1xyXG4gIH0sXHJcbn07XHJcbjwvc2NyaXB0PlxyXG4iLCI8dGVtcGxhdGU+XHJcbiAgPHNlbGVjdCA6bXVsdGlwbGU9XCJtdWx0aXBsZVwiICByZWY9XCJyb290XCIgdi1tb2RlbD1cInNlbGVjdGVkXCIgXHJcbiAgICA6ZGlzYWJsZWQ9XCJkaXNhYmxlZFwiICA6c3R5bGU9XCJzdHlsZXNcIiAgXHJcbiAgICBjbGFzcz1cIm1kYy1zZWxlY3QgbWRjLW11bHRpLXNlbGVjdCBtZGMtbGlzdFwiXHJcbiAgICBAY2hhbmdlPVwib25DaGFuZ2VcIlxyXG4gID5cclxuICAgIDxvcHRncm91cCByZWY9XCJvcHRncm91cFwiIGNsYXNzPVwibWRjLWxpc3QtZ3JvdXBcIiA6bGFiZWw9XCJsYWJlbFwiIHYtaWY9XCJsYWJlbFwiPlxyXG4gICAgICAgIDxzbG90Pjwvc2xvdD5cclxuICAgIDwvb3B0Z3JvdXA+XHJcbiAgICA8c2xvdCB2LWVsc2U+PC9zbG90PlxyXG4gIDwvc2VsZWN0PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIG5hbWU6ICdtZGMtbXVsdGktc2VsZWN0JyxcclxuICBtb2RlbDoge1xyXG4gICAgcHJvcDogJ3ZhbHVlJyxcclxuICAgIGV2ZW50OiAnY2hhbmdlJ1xyXG4gIH0sXHJcbiAgcHJvcHM6IHtcclxuICAgIG11bHRpcGxlOiBCb29sZWFuLFxyXG4gICAgdmFsdWU6IFtTdHJpbmcsIEFycmF5XSxcclxuICAgIGRpc2FibGVkOiBCb29sZWFuLFxyXG4gICAgbGFiZWw6IFN0cmluZyxcclxuICAgIG1heFNpemU6IHtcclxuICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSxcclxuICAgICAgZGVmYXVsdDogNFxyXG4gICAgfVxyXG4gIH0sXHJcbiAgZGF0YSAoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBzZWxlY3RlZDogdGhpcy52YWx1ZSxcclxuICAgICAgc2l6ZTogdW5kZWZpbmVkLFxyXG4gICAgICBjb3VudDogdW5kZWZpbmVkXHJcbiAgICB9XHJcbiAgfSxcclxuICBjb21wdXRlZDoge1xyXG4gICAgc3R5bGVzICgpIHtcclxuICAgICAgbGV0IHNjcm9sbCA9ICh0aGlzLmNvdW50ID4gdGhpcy5zaXplKVxyXG4gICAgICBsZXQgc2l6ZSA9IDQ4KiB0aGlzLnNpemUgKyAoc2Nyb2xsPyAwIDogMTYpXHJcblxyXG4gICAgICBsZXQgc3R5bGVzID0gIHtcclxuICAgICAgICAnaGVpZ2h0Jzogc2l6ZSArICdweCcsXHJcbiAgICAgICAgJ292ZXJmbG93LXknOiAgc2Nyb2xsID8gJ3Njcm9sbCcgOiAnaGlkZGVuJ1xyXG4gICAgICB9XHJcbiAgICAgIGlmICghc2Nyb2xsKSB7XHJcbiAgICAgICAgc3R5bGVzWydiYWNrZ3JvdW5kLWltYWdlJ10gPSAndW5zZXQnXHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHN0eWxlc1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgbWV0aG9kczoge1xyXG4gICAgb25DaGFuZ2UgKCkge1xyXG4gICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCB0aGlzLnNlbGVjdGVkKVxyXG4gICAgfVxyXG4gIH0sXHJcbiAgbW91bnRlZCAoKSB7XHJcbiAgICBjb25zdCByZWZyZXNoU2l6ZSA9ICgpID0+IHtcclxuICAgICAgbGV0IGNvdW50ID0gdGhpcy4kcmVmcy5yb290LnF1ZXJ5U2VsZWN0b3JBbGwoJ29wdGlvbiwgb3B0Z3JvdXAnKS5sZW5ndGhcclxuICAgICAgdGhpcy5jb3VudCA9IGNvdW50XHJcbiAgICAgIGxldCBtYXggPSBOdW1iZXIodGhpcy5tYXhTaXplKVxyXG4gICAgICBpZiAodGhpcy5sYWJlbCkge1xyXG4gICAgICAgIG1heCArPSAxXHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5zaXplID0gTWF0aC5taW4oY291bnQsIG1heClcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnNsb3RPYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKCgpID0+IHJlZnJlc2hTaXplKCkpXHJcbiAgICB0aGlzLnNsb3RPYnNlcnZlci5vYnNlcnZlKHRoaXMuJGVsLCB7IGNoaWxkTGlzdDogdHJ1ZSwgc3VidHJlZTogdHJ1ZSB9KVxyXG5cclxuICAgIHJlZnJlc2hTaXplKClcclxuICB9LFxyXG4gIGJlZm9yZURlc3Ryb3kgKCkge1xyXG4gICAgdGhpcy5zbG90T2JzZXJ2ZXIuZGlzY29ubmVjdCgpXHJcbiAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8dGVtcGxhdGU+XHJcbiAgPGNvbXBvbmVudCA6aXM9XCJ0eXBlXCIgOm11bHRpcGxlPVwibXVsdGlwbGVcIlxyXG4gICAgOmxhYmVsPVwibGFiZWxcIiBcclxuICAgIDp2YWx1ZT1cInZhbHVlXCIgQGNoYW5nZT1cIm9uQ2hhbmdlXCJcclxuICAgIHYtYmluZD1cIiRhdHRyc1wiXHJcbiAgPlxyXG4gICAgPHNsb3Q+PC9zbG90PlxyXG4gIDwvY29tcG9uZW50PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuaW1wb3J0IE1EQ05hdGl2ZVNlbGVjdCBmcm9tICcuL21kYy1uYXRpdmUtc2VsZWN0LnZ1ZSc7XHJcbmltcG9ydCBNRENNZW51U2VsZWN0IGZyb20gJy4vbWRjLW1lbnUtc2VsZWN0LnZ1ZSc7XHJcbmltcG9ydCBNRENNdWx0aVNlbGVjdCBmcm9tICcuL21kYy1tdWx0aS1zZWxlY3QudnVlJztcclxuaW1wb3J0IHsgRGlzcGF0Y2hGb2N1c01peGluIH0gZnJvbSAnLi4vYmFzZSc7XHJcblxyXG5jb25zdCBtZWRpYSA9IG5ldyBjbGFzcyB7XHJcbiAgZ2V0IG1vYmlsZSgpIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIHRoaXMuX21vYmlsZSB8fFxyXG4gICAgICAodGhpcy5fbW9iaWxlID0gd2luZG93Lm1hdGNoTWVkaWEoXHJcbiAgICAgICAgJyhtYXgtd2lkdGg6IDYwMHB4KSBhbmQgKHBvaW50ZXI6IGNvYXJzZSknLFxyXG4gICAgICApKVxyXG4gICAgKTtcclxuICB9XHJcbn0oKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBuYW1lOiAnbWRjLXNlbGVjdCcsXHJcbiAgbWl4aW5zOiBbRGlzcGF0Y2hGb2N1c01peGluXSxcclxuICBtb2RlbDoge1xyXG4gICAgcHJvcDogJ3ZhbHVlJyxcclxuICAgIGV2ZW50OiAnY2hhbmdlJyxcclxuICB9LFxyXG4gIHByb3BzOiB7XHJcbiAgICBtdWx0aXBsZTogQm9vbGVhbixcclxuICAgIHZhbHVlOiBbU3RyaW5nLCBBcnJheV0sXHJcbiAgICBsYWJlbDogU3RyaW5nLFxyXG4gICAgbmF0aXZlOiBCb29sZWFuLFxyXG4gICAgbWVudTogQm9vbGVhbixcclxuICB9LFxyXG4gIHByb3ZpZGUoKSB7XHJcbiAgICByZXR1cm4geyBtZGNTZWxlY3Q6IHRoaXMgfTtcclxuICB9LFxyXG4gIGNvbXBvbmVudHM6IHtcclxuICAgICdtZGMtbmF0aXZlLXNlbGVjdCc6IE1EQ05hdGl2ZVNlbGVjdCxcclxuICAgICdtZGMtbWVudS1zZWxlY3QnOiBNRENNZW51U2VsZWN0LFxyXG4gICAgJ21kYy1tdWx0aS1zZWxlY3QnOiBNRENNdWx0aVNlbGVjdCxcclxuICB9LFxyXG4gIGRhdGEoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBtb2JpbGU6IHdpbmRvdyA/IG1lZGlhLm1vYmlsZS5tYXRjaGVzIDogdHJ1ZSxcclxuICAgIH07XHJcbiAgfSxcclxuICBjb21wdXRlZDoge1xyXG4gICAgdHlwZSgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMubXVsdGlwbGVcclxuICAgICAgICA/ICdtZGMtbXVsdGktc2VsZWN0J1xyXG4gICAgICAgIDogdGhpcy5tZW51XHJcbiAgICAgICAgICA/ICdtZGMtbWVudS1zZWxlY3QnXHJcbiAgICAgICAgICA6IHRoaXMuaXNOYXRpdmUgPyAnbWRjLW5hdGl2ZS1zZWxlY3QnIDogJ21kYy1tZW51LXNlbGVjdCc7XHJcbiAgICB9LFxyXG4gICAgaXNOYXRpdmUoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLm5hdGl2ZSB8fCB0aGlzLm11bHRpcGxlIHx8IHRoaXMubW9iaWxlO1xyXG4gICAgfSxcclxuICB9LFxyXG4gIG1ldGhvZHM6IHtcclxuICAgIG9uQ2hhbmdlKHZhbHVlKSB7XHJcbiAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIHZhbHVlKTtcclxuICAgIH0sXHJcbiAgICByZWZyZXNoTWVkaWEoKSB7XHJcbiAgICAgIHRoaXMubW9iaWxlID0gbWVkaWEubW9iaWxlLm1hdGNoZXM7XHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgYmVmb3JlTW91bnQoKSB7XHJcbiAgICBtZWRpYS5tb2JpbGUuYWRkTGlzdGVuZXIodGhpcy5yZWZyZXNoTWVkaWEpO1xyXG4gICAgdGhpcy5yZWZyZXNoTWVkaWEoKTtcclxuICB9LFxyXG4gIGJlZm9yZURlc3Ryb3koKSB7XHJcbiAgICBtZWRpYS5tb2JpbGUucmVtb3ZlTGlzdGVuZXIodGhpcy5yZWZyZXNoTWVkaWEpO1xyXG4gIH0sXHJcbn07XHJcbjwvc2NyaXB0PlxyXG4iLCI8dGVtcGxhdGU+XG4gICA8b3B0aW9uIDpkaXNhYmxlZD1cImRpc2FibGVkXCIgOnZhbHVlPVwidmFsdWVcIiB2LWlmPVwiaGFzVmFsdWVcIlxuICAgIGNsYXNzPVwibWRjLW9wdGlvbiBtZGMtbmF0aXZlLW9wdGlvblwiPlxuICAgICA8c2xvdD48L3Nsb3Q+XG4gICA8L29wdGlvbj5cbiAgIDxvcHRpb24gOmRpc2FibGVkPVwiZGlzYWJsZWRcIiB2LWVsc2VcbiAgICBjbGFzcz1cIm1kYy1vcHRpb24gbWRjLW5hdGl2ZS1vcHRpb25cIj5cbiAgICAgPHNsb3Q+PC9zbG90PlxuICAgPC9vcHRpb24+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnbWRjLW5hdGl2ZS1vcHRpb24nLFxuICBwcm9wczoge1xuICAgIHZhbHVlOiBTdHJpbmcsXG4gICAgZGlzYWJsZWQ6IEJvb2xlYW5cbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBoYXNWYWx1ZSAoKSB7XG4gICAgICByZXR1cm4gISh0eXBlb2YgdGhpcy52YWx1ZSA9PT0gJ3VuZGVmaW5lZCcpXG4gICAgfVxuICB9XG59XG48L3NjcmlwdD5cbiIsIjx0ZW1wbGF0ZT5cbiAgIDxsaSBjbGFzcz1cIm1kYy1vcHRpb24gbWRjLW1lbnUtb3B0aW9uIG1kYy1saXN0LWl0ZW1cIiBcbiAgICByb2xlPVwib3B0aW9uXCIgXG4gICAgOnRhYmluZGV4PVwiZGlzYWJsZWQ/LTE6MFwiXG4gICAgOmFyaWEtZGlzYWJsZWQ9XCJkaXNhYmxlZFwiXG4gICAgOmRhdGEtdmFsdWU9XCJ2YWx1ZVwiPlxuICAgICA8c2xvdD48L3Nsb3Q+XG4gICA8L2xpPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy1tZW51LW9wdGlvbicsXG4gIHByb3BzOiB7XG4gICAgdmFsdWU6IFN0cmluZyxcbiAgICBkaXNhYmxlZDogQm9vbGVhblxuICB9XG59XG48L3NjcmlwdD5cbiIsIjx0ZW1wbGF0ZT5cbiAgIDxvcHRpb24gY2xhc3M9XCJtZGMtb3B0aW9uIG1kYy1tdWx0aS1vcHRpb24gbWRjLWxpc3QtaXRlbVwiIFxuICAgIDpkaXNhYmxlZD1cImRpc2FibGVkXCIgOnZhbHVlPVwidmFsdWVcIiB2LWlmPVwiaGFzVmFsdWVcIj5cbiAgICAgPHNsb3Q+PC9zbG90PlxuICAgPC9vcHRpb24+XG4gICA8b3B0aW9uIGNsYXNzPVwibWRjLW9wdGlvbiBtZGMtbXVsdGktb3B0aW9uIG1kYy1saXN0LWl0ZW1cIiBcbiAgICA6ZGlzYWJsZWQ9XCJkaXNhYmxlZFwiIHYtZWxzZT5cbiAgICAgPHNsb3Q+PC9zbG90PlxuICAgPC9vcHRpb24+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnbWRjLW11bHRpLW9wdGlvbicsXG4gIHByb3BzOiB7XG4gICAgdmFsdWU6IFN0cmluZyxcbiAgICBkaXNhYmxlZDogQm9vbGVhblxuICB9LFxuICBjb21wdXRlZDoge1xuICAgIGhhc1ZhbHVlICgpIHtcbiAgICAgIHJldHVybiAhKHR5cGVvZiB0aGlzLnZhbHVlID09PSAndW5kZWZpbmVkJylcbiAgICB9XG4gIH1cbn1cbjwvc2NyaXB0PlxuIiwiPHRlbXBsYXRlPlxuICA8Y29tcG9uZW50IDppcz1cInR5cGVcIiA6ZGlzYWJsZWQ9XCJkaXNhYmxlZFwiIDp2YWx1ZT12YWx1ZT5cbiAgICA8c2xvdD48L3Nsb3Q+XG4gIDwvY29tcG9uZW50PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBNRENOYXRpdmVPcHRpb24gZnJvbSAnLi9tZGMtbmF0aXZlLW9wdGlvbi52dWUnO1xuaW1wb3J0IE1EQ01lbnVPcHRpb24gZnJvbSAnLi9tZGMtbWVudS1vcHRpb24udnVlJztcbmltcG9ydCBNRENNdWx0aU9wdGlvbiBmcm9tICcuL21kYy1tdWx0aS1vcHRpb24udnVlJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnbWRjLW9wdGlvbicsXG4gIHByb3BzOiB7XG4gICAgdmFsdWU6IFN0cmluZyxcbiAgICBkaXNhYmxlZDogQm9vbGVhbixcbiAgfSxcbiAgaW5qZWN0OiBbJ21kY1NlbGVjdCddLFxuICBjb21wb25lbnRzOiB7XG4gICAgJ21kYy1uYXRpdmUtb3B0aW9uJzogTURDTmF0aXZlT3B0aW9uLFxuICAgICdtZGMtbXVsdGktb3B0aW9uJzogTURDTXVsdGlPcHRpb24sXG4gICAgJ21kYy1tZW51LW9wdGlvbic6IE1EQ01lbnVPcHRpb24sXG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgaXNOYXRpdmUoKSB7XG4gICAgICByZXR1cm4gdGhpcy5tZGNTZWxlY3QuaXNOYXRpdmU7XG4gICAgfSxcbiAgICBtdWx0aXBsZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLm1kY1NlbGVjdC5tdWx0aXBsZTtcbiAgICB9LFxuICAgIG1lbnUoKSB7XG4gICAgICByZXR1cm4gdGhpcy5tZGNTZWxlY3QubWVudTtcbiAgICB9LFxuICAgIHR5cGUoKSB7XG4gICAgICByZXR1cm4gdGhpcy5tdWx0aXBsZVxuICAgICAgICA/ICdtZGMtbXVsdGktb3B0aW9uJ1xuICAgICAgICA6IHRoaXMubWVudVxuICAgICAgICAgID8gJ21kYy1tZW51LW9wdGlvbidcbiAgICAgICAgICA6IHRoaXMuaXNOYXRpdmUgPyAnbWRjLW5hdGl2ZS1vcHRpb24nIDogJ21kYy1tZW51LW9wdGlvbic7XG4gICAgfSxcbiAgfSxcbn07XG48L3NjcmlwdD5cbiIsImltcG9ydCB7QmFzZVBsdWdpbn0gZnJvbSAnLi4vYmFzZSdcbmltcG9ydCBtZGNTZWxlY3QgZnJvbSAnLi9tZGMtc2VsZWN0LnZ1ZSdcbmltcG9ydCBtZGNPcHRpb24gZnJvbSAnLi9tZGMtb3B0aW9uLnZ1ZSdcblxuXG5leHBvcnQge1xuICBtZGNTZWxlY3QsXG4gIG1kY09wdGlvbixcbn1cblxuZXhwb3J0IGRlZmF1bHQgQmFzZVBsdWdpbih7XG4gIG1kY1NlbGVjdCxcbiAgbWRjT3B0aW9uLFxufSlcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyoqIEBlbnVtIHtzdHJpbmd9ICovXG5jb25zdCBjc3NDbGFzc2VzID0ge1xuICBBQ1RJVkU6ICdtZGMtc2xpZGVyLS1hY3RpdmUnLFxuICBESVNBQkxFRDogJ21kYy1zbGlkZXItLWRpc2FibGVkJyxcbiAgRElTQ1JFVEU6ICdtZGMtc2xpZGVyLS1kaXNjcmV0ZScsXG4gIEZPQ1VTOiAnbWRjLXNsaWRlci0tZm9jdXMnLFxuICBJTl9UUkFOU0lUOiAnbWRjLXNsaWRlci0taW4tdHJhbnNpdCcsXG4gIElTX0RJU0NSRVRFOiAnbWRjLXNsaWRlci0tZGlzY3JldGUnLFxuICBIQVNfVFJBQ0tfTUFSS0VSOiAnbWRjLXNsaWRlci0tZGlzcGxheS1tYXJrZXJzJyxcbn07XG5cbi8qKiBAZW51bSB7c3RyaW5nfSAqL1xuY29uc3Qgc3RyaW5ncyA9IHtcbiAgVFJBQ0tfU0VMRUNUT1I6ICcubWRjLXNsaWRlcl9fdHJhY2snLFxuICBUUkFDS19NQVJLRVJfQ09OVEFJTkVSX1NFTEVDVE9SOiAnLm1kYy1zbGlkZXJfX3RyYWNrLW1hcmtlci1jb250YWluZXInLFxuICBMQVNUX1RSQUNLX01BUktFUl9TRUxFQ1RPUjogJy5tZGMtc2xpZGVyX190cmFjay1tYXJrZXI6bGFzdC1jaGlsZCcsXG4gIFRIVU1CX0NPTlRBSU5FUl9TRUxFQ1RPUjogJy5tZGMtc2xpZGVyX190aHVtYi1jb250YWluZXInLFxuICBQSU5fVkFMVUVfTUFSS0VSX1NFTEVDVE9SOiAnLm1kYy1zbGlkZXJfX3Bpbi12YWx1ZS1tYXJrZXInLFxuICBBUklBX1ZBTFVFTUlOOiAnYXJpYS12YWx1ZW1pbicsXG4gIEFSSUFfVkFMVUVNQVg6ICdhcmlhLXZhbHVlbWF4JyxcbiAgQVJJQV9WQUxVRU5PVzogJ2FyaWEtdmFsdWVub3cnLFxuICBBUklBX0RJU0FCTEVEOiAnYXJpYS1kaXNhYmxlZCcsXG4gIFNURVBfREFUQV9BVFRSOiAnZGF0YS1zdGVwJyxcbiAgQ0hBTkdFX0VWRU5UOiAnTURDU2xpZGVyOmNoYW5nZScsXG4gIElOUFVUX0VWRU5UOiAnTURDU2xpZGVyOmlucHV0Jyxcbn07XG5cbi8qKiBAZW51bSB7bnVtYmVyfSAqL1xuY29uc3QgbnVtYmVycyA9IHtcbiAgUEFHRV9GQUNUT1I6IDQsXG59O1xuXG5leHBvcnQge2Nzc0NsYXNzZXMsIHN0cmluZ3MsIG51bWJlcnN9O1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuXG4vKipcbiAqIEFkYXB0ZXIgZm9yIE1EQyBTbGlkZXIuXG4gKlxuICogRGVmaW5lcyB0aGUgc2hhcGUgb2YgdGhlIGFkYXB0ZXIgZXhwZWN0ZWQgYnkgdGhlIGZvdW5kYXRpb24uIEltcGxlbWVudCB0aGlzXG4gKiBhZGFwdGVyIHRvIGludGVncmF0ZSB0aGUgU2xpZGVyIGludG8geW91ciBmcmFtZXdvcmsuIFNlZVxuICogaHR0cHM6Ly9naXRodWIuY29tL21hdGVyaWFsLWNvbXBvbmVudHMvbWF0ZXJpYWwtY29tcG9uZW50cy13ZWIvYmxvYi9tYXN0ZXIvZG9jcy9hdXRob3JpbmctY29tcG9uZW50cy5tZFxuICogZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKlxuICogQHJlY29yZFxuICovXG5jbGFzcyBNRENTbGlkZXJBZGFwdGVyIHtcbiAgLyoqXG4gICAqIFJldHVybnMgdHJ1ZSBpZiBjbGFzc05hbWUgZXhpc3RzIGZvciB0aGUgc2xpZGVyIEVsZW1lbnRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNsYXNzTmFtZVxuICAgKiBAcmV0dXJuIHtib29sZWFufVxuICAgKi9cbiAgaGFzQ2xhc3MoY2xhc3NOYW1lKSB7fVxuXG4gIC8qKlxuICAgKiBBZGRzIGEgY2xhc3MgdG8gdGhlIHNsaWRlciBFbGVtZW50XG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWVcbiAgICovXG4gIGFkZENsYXNzKGNsYXNzTmFtZSkge31cblxuICAvKipcbiAgICogUmVtb3ZlcyBhIGNsYXNzIGZyb20gdGhlIHNsaWRlciBFbGVtZW50XG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWVcbiAgICovXG4gIHJlbW92ZUNsYXNzKGNsYXNzTmFtZSkge31cblxuICAvKipcbiAgICogUmV0dXJucyBhIHN0cmluZyBpZiBhdHRyaWJ1dGUgbmFtZSBleGlzdHMgb24gdGhlIHNsaWRlciBFbGVtZW50LFxuICAgKiBvdGhlcndpc2UgcmV0dXJucyBudWxsXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gICAqIEByZXR1cm4gez9zdHJpbmd9XG4gICAqL1xuICBnZXRBdHRyaWJ1dGUobmFtZSkge31cblxuICAvKipcbiAgICogU2V0cyBhdHRyaWJ1dGUgbmFtZSBvbiBzbGlkZXIgRWxlbWVudCB0byB2YWx1ZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAgICovXG4gIHNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSkge31cblxuICAvKipcbiAgICogUmVtb3ZlcyBhdHRyaWJ1dGUgbmFtZSBmcm9tIHNsaWRlciBFbGVtZW50XG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gICAqL1xuICByZW1vdmVBdHRyaWJ1dGUobmFtZSkge31cblxuICAvKipcbiAgICogUmV0dXJucyB0aGUgYm91bmRpbmcgY2xpZW50IHJlY3QgZm9yIHRoZSBzbGlkZXIgRWxlbWVudFxuICAgKiBAcmV0dXJuIHs/Q2xpZW50UmVjdH1cbiAgICovXG4gIGNvbXB1dGVCb3VuZGluZ1JlY3QoKSB7fVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSB0YWIgaW5kZXggb2YgdGhlIHNsaWRlciBFbGVtZW50XG4gICAqIEByZXR1cm4ge251bWJlcn1cbiAgICovXG4gIGdldFRhYkluZGV4KCkge31cblxuICAvKipcbiAgICogUmVnaXN0ZXJzIGFuIGV2ZW50IGhhbmRsZXIgb24gdGhlIHJvb3QgZWxlbWVudCBmb3IgYSBnaXZlbiBldmVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcbiAgICogQHBhcmFtIHtmdW5jdGlvbighRXZlbnQpOiB1bmRlZmluZWR9IGhhbmRsZXJcbiAgICovXG4gIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKHR5cGUsIGhhbmRsZXIpIHt9XG5cbiAgLyoqXG4gICAqIERlcmVnaXN0ZXJzIGFuIGV2ZW50IGhhbmRsZXIgb24gdGhlIHJvb3QgZWxlbWVudCBmb3IgYSBnaXZlbiBldmVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcbiAgICogQHBhcmFtIHtmdW5jdGlvbighRXZlbnQpOiB1bmRlZmluZWR9IGhhbmRsZXJcbiAgICovXG4gIGRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIodHlwZSwgaGFuZGxlcikge31cblxuICAvKipcbiAgICogUmVnaXN0ZXJzIGFuIGV2ZW50IGhhbmRsZXIgb24gdGhlIHRodW1iIGNvbnRhaW5lciBlbGVtZW50IGZvciBhIGdpdmVuIGV2ZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICAgKiBAcGFyYW0ge2Z1bmN0aW9uKCFFdmVudCk6IHVuZGVmaW5lZH0gaGFuZGxlclxuICAgKi9cbiAgcmVnaXN0ZXJUaHVtYkNvbnRhaW5lckludGVyYWN0aW9uSGFuZGxlcih0eXBlLCBoYW5kbGVyKSB7fVxuXG4gIC8qKlxuICAgKiBEZXJlZ2lzdGVycyBhbiBldmVudCBoYW5kbGVyIG9uIHRoZSB0aHVtYiBjb250YWluZXIgZWxlbWVudCBmb3IgYSBnaXZlbiBldmVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcbiAgICogQHBhcmFtIHtmdW5jdGlvbighRXZlbnQpOiB1bmRlZmluZWR9IGhhbmRsZXJcbiAgICovXG4gIGRlcmVnaXN0ZXJUaHVtYkNvbnRhaW5lckludGVyYWN0aW9uSGFuZGxlcih0eXBlLCBoYW5kbGVyKSB7fVxuXG4gIC8qKlxuICAgKiBSZWdpc3RlcnMgYW4gZXZlbnQgaGFuZGxlciBvbiB0aGUgYm9keSBmb3IgYSBnaXZlbiBldmVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcbiAgICogQHBhcmFtIHtmdW5jdGlvbighRXZlbnQpOiB1bmRlZmluZWR9IGhhbmRsZXJcbiAgICovXG4gIHJlZ2lzdGVyQm9keUludGVyYWN0aW9uSGFuZGxlcih0eXBlLCBoYW5kbGVyKSB7fVxuXG4gIC8qKlxuICAgKiBEZXJlZ2lzdGVycyBhbiBldmVudCBoYW5kbGVyIG9uIHRoZSBib2R5IGZvciBhIGdpdmVuIGV2ZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICAgKiBAcGFyYW0ge2Z1bmN0aW9uKCFFdmVudCk6IHVuZGVmaW5lZH0gaGFuZGxlclxuICAgKi9cbiAgZGVyZWdpc3RlckJvZHlJbnRlcmFjdGlvbkhhbmRsZXIodHlwZSwgaGFuZGxlcikge31cblxuICAvKipcbiAgICogUmVnaXN0ZXJzIGFuIGV2ZW50IGhhbmRsZXIgZm9yIHRoZSB3aW5kb3cgcmVzaXplIGV2ZW50XG4gICAqIEBwYXJhbSB7ZnVuY3Rpb24oIUV2ZW50KTogdW5kZWZpbmVkfSBoYW5kbGVyXG4gICAqL1xuICByZWdpc3RlclJlc2l6ZUhhbmRsZXIoaGFuZGxlcikge31cblxuICAvKipcbiAgICogRGVyZWdpc3RlcnMgYW4gZXZlbnQgaGFuZGxlciBmb3IgdGhlIHdpbmRvdyByZXNpemUgZXZlbnRcbiAgICogQHBhcmFtIHtmdW5jdGlvbighRXZlbnQpOiB1bmRlZmluZWR9IGhhbmRsZXJcbiAgICovXG4gIGRlcmVnaXN0ZXJSZXNpemVIYW5kbGVyKGhhbmRsZXIpIHt9XG5cbiAgLyoqXG4gICAqIEVtaXRzIGEgY3VzdG9tIGV2ZW50IE1EQ1NsaWRlcjppbnB1dCBmcm9tIHRoZSByb290XG4gICAqL1xuICBub3RpZnlJbnB1dCgpIHt9XG5cbiAgLyoqXG4gICAqIEVtaXRzIGEgY3VzdG9tIGV2ZW50IE1EQ1NsaWRlcjpjaGFuZ2UgZnJvbSB0aGUgcm9vdFxuICAgKi9cbiAgbm90aWZ5Q2hhbmdlKCkge31cblxuICAvKipcbiAgICogU2V0cyBhIHN0eWxlIHByb3BlcnR5IG9mIHRoZSB0aHVtYiBjb250YWluZXIgZWxlbWVudCB0byB0aGUgcGFzc2VkIHZhbHVlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwcm9wZXJ0eU5hbWVcbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gICAqL1xuICBzZXRUaHVtYkNvbnRhaW5lclN0eWxlUHJvcGVydHkocHJvcGVydHlOYW1lLCB2YWx1ZSkge31cblxuICAvKipcbiAgICogU2V0cyBhIHN0eWxlIHByb3BlcnR5IG9mIHRoZSB0cmFjayBlbGVtZW50IHRvIHRoZSBwYXNzZWQgdmFsdWVcbiAgICogQHBhcmFtIHtzdHJpbmd9IHByb3BlcnR5TmFtZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAgICovXG4gIHNldFRyYWNrU3R5bGVQcm9wZXJ0eShwcm9wZXJ0eU5hbWUsIHZhbHVlKSB7fVxuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSBpbm5lciB0ZXh0IG9mIHRoZSBwaW4gbWFya2VyIHRvIHRoZSBwYXNzZWQgdmFsdWVcbiAgICogQHBhcmFtIHtudW1iZXJ9IHZhbHVlXG4gICAqL1xuICBzZXRNYXJrZXJWYWx1ZSh2YWx1ZSkge31cblxuICAvKipcbiAgICogQXBwZW5kcyB0aGUgcGFzc2VkIG51bWJlciBvZiB0cmFjayBtYXJrZXJzIHRvIHRoZSB0cmFjayBtYXJrIGNvbnRhaW5lciBlbGVtZW50XG4gICAqIEBwYXJhbSB7bnVtYmVyfSBudW1NYXJrZXJzXG4gICAqL1xuICBhcHBlbmRUcmFja01hcmtlcnMobnVtTWFya2Vycykge31cblxuICAvKipcbiAgICogUmVtb3ZlcyBhbGwgdHJhY2sgbWFya2VycyBmcm9tdCBoZSB0cmFjayBtYXJrIGNvbnRhaW5lciBlbGVtZW50XG4gICAqL1xuICByZW1vdmVUcmFja01hcmtlcnMoKSB7fVxuXG4gIC8qKlxuICAgKiBTZXRzIGEgc3R5bGUgcHJvcGVydHkgb2YgdGhlIGxhc3QgdHJhY2sgbWFya2VyIHRvIHRoZSBwYXNzZWQgdmFsdWVcbiAgICogQHBhcmFtIHtzdHJpbmd9IHByb3BlcnR5TmFtZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAgICovXG4gIHNldExhc3RUcmFja01hcmtlcnNTdHlsZVByb3BlcnR5KHByb3BlcnR5TmFtZSwgdmFsdWUpIHt9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgcm9vdCBlbGVtZW50IGlzIFJUTCwgb3RoZXJ3aXNlIGZhbHNlXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAqL1xuICBpc1JUTCgpIHt9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1EQ1NsaWRlckFkYXB0ZXI7XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHtjc3NDbGFzc2VzLCBzdHJpbmdzLCBudW1iZXJzfSBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQgTURDU2xpZGVyQWRhcHRlciBmcm9tICcuL2FkYXB0ZXInO1xuXG5pbXBvcnQge2dldENvcnJlY3RFdmVudE5hbWUsIGdldENvcnJlY3RQcm9wZXJ0eU5hbWV9IGZyb20gJ0BtYXRlcmlhbC9hbmltYXRpb24vaW5kZXgnO1xuaW1wb3J0IE1EQ0ZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL2Jhc2UvZm91bmRhdGlvbic7XG5cbi8qKiBAZW51bSB7c3RyaW5nfSAqL1xuY29uc3QgS0VZX0lEUyA9IHtcbiAgQVJST1dfTEVGVDogJ0Fycm93TGVmdCcsXG4gIEFSUk9XX1JJR0hUOiAnQXJyb3dSaWdodCcsXG4gIEFSUk9XX1VQOiAnQXJyb3dVcCcsXG4gIEFSUk9XX0RPV046ICdBcnJvd0Rvd24nLFxuICBIT01FOiAnSG9tZScsXG4gIEVORDogJ0VuZCcsXG4gIFBBR0VfVVA6ICdQYWdlVXAnLFxuICBQQUdFX0RPV046ICdQYWdlRG93bicsXG59O1xuXG4vKiogQGVudW0ge3N0cmluZ30gKi9cbmNvbnN0IE1PVkVfRVZFTlRfTUFQID0ge1xuICAnbW91c2Vkb3duJzogJ21vdXNlbW92ZScsXG4gICd0b3VjaHN0YXJ0JzogJ3RvdWNobW92ZScsXG4gICdwb2ludGVyZG93bic6ICdwb2ludGVybW92ZScsXG59O1xuXG5jb25zdCBET1dOX0VWRU5UUyA9IFsnbW91c2Vkb3duJywgJ3BvaW50ZXJkb3duJywgJ3RvdWNoc3RhcnQnXTtcbmNvbnN0IFVQX0VWRU5UUyA9IFsnbW91c2V1cCcsICdwb2ludGVydXAnLCAndG91Y2hlbmQnXTtcblxuLyoqXG4gKiBAZXh0ZW5kcyB7TURDRm91bmRhdGlvbjwhTURDU2xpZGVyQWRhcHRlcj59XG4gKi9cbmNsYXNzIE1EQ1NsaWRlckZvdW5kYXRpb24gZXh0ZW5kcyBNRENGb3VuZGF0aW9uIHtcbiAgLyoqIEByZXR1cm4gZW51bSB7Y3NzQ2xhc3Nlc30gKi9cbiAgc3RhdGljIGdldCBjc3NDbGFzc2VzKCkge1xuICAgIHJldHVybiBjc3NDbGFzc2VzO1xuICB9XG5cbiAgLyoqIEByZXR1cm4gZW51bSB7c3RyaW5nc30gKi9cbiAgc3RhdGljIGdldCBzdHJpbmdzKCkge1xuICAgIHJldHVybiBzdHJpbmdzO1xuICB9XG5cbiAgLyoqIEByZXR1cm4gZW51bSB7bnVtYmVyc30gKi9cbiAgc3RhdGljIGdldCBudW1iZXJzKCkge1xuICAgIHJldHVybiBudW1iZXJzO1xuICB9XG5cbiAgLyoqIEByZXR1cm4geyFNRENTbGlkZXJBZGFwdGVyfSAqL1xuICBzdGF0aWMgZ2V0IGRlZmF1bHRBZGFwdGVyKCkge1xuICAgIHJldHVybiAvKiogQHR5cGUgeyFNRENTbGlkZXJBZGFwdGVyfSAqLyAoe1xuICAgICAgaGFzQ2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4gLyogYm9vbGVhbiAqLyBmYWxzZSxcbiAgICAgIGFkZENsYXNzOiAoLyogY2xhc3NOYW1lOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgcmVtb3ZlQ2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICBnZXRBdHRyaWJ1dGU6ICgvKiBuYW1lOiBzdHJpbmcgKi8pID0+IC8qIHN0cmluZ3xudWxsICovIG51bGwsXG4gICAgICBzZXRBdHRyaWJ1dGU6ICgvKiBuYW1lOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgcmVtb3ZlQXR0cmlidXRlOiAoLyogbmFtZTogc3RyaW5nICovKSA9PiB7fSxcbiAgICAgIGNvbXB1dGVCb3VuZGluZ1JlY3Q6ICgpID0+IC8qIENsaWVudFJlY3QgKi8gKHtcbiAgICAgICAgdG9wOiAwLCByaWdodDogMCwgYm90dG9tOiAwLCBsZWZ0OiAwLCB3aWR0aDogMCwgaGVpZ2h0OiAwLFxuICAgICAgfSksXG4gICAgICBnZXRUYWJJbmRleDogKCkgPT4gLyogbnVtYmVyICovIDAsXG4gICAgICByZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKC8qIHR5cGU6IHN0cmluZywgaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBkZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoLyogdHlwZTogc3RyaW5nLCBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIHJlZ2lzdGVyVGh1bWJDb250YWluZXJJbnRlcmFjdGlvbkhhbmRsZXI6ICgvKiB0eXBlOiBzdHJpbmcsIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgZGVyZWdpc3RlclRodW1iQ29udGFpbmVySW50ZXJhY3Rpb25IYW5kbGVyOiAoLyogdHlwZTogc3RyaW5nLCBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIHJlZ2lzdGVyQm9keUludGVyYWN0aW9uSGFuZGxlcjogKC8qIHR5cGU6IHN0cmluZywgaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBkZXJlZ2lzdGVyQm9keUludGVyYWN0aW9uSGFuZGxlcjogKC8qIHR5cGU6IHN0cmluZywgaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICByZWdpc3RlclJlc2l6ZUhhbmRsZXI6ICgvKiBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJSZXNpemVIYW5kbGVyOiAoLyogaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBub3RpZnlJbnB1dDogKCkgPT4ge30sXG4gICAgICBub3RpZnlDaGFuZ2U6ICgpID0+IHt9LFxuICAgICAgc2V0VGh1bWJDb250YWluZXJTdHlsZVByb3BlcnR5OiAoLyogcHJvcGVydHlOYW1lOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgc2V0VHJhY2tTdHlsZVByb3BlcnR5OiAoLyogcHJvcGVydHlOYW1lOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgc2V0TWFya2VyVmFsdWU6ICgvKiB2YWx1ZTogbnVtYmVyICovKSA9PiB7fSxcbiAgICAgIGFwcGVuZFRyYWNrTWFya2VyczogKC8qIG51bU1hcmtlcnM6IG51bWJlciAqLykgPT4ge30sXG4gICAgICByZW1vdmVUcmFja01hcmtlcnM6ICgpID0+IHt9LFxuICAgICAgc2V0TGFzdFRyYWNrTWFya2Vyc1N0eWxlUHJvcGVydHk6ICgvKiBwcm9wZXJ0eU5hbWU6IHN0cmluZywgdmFsdWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICBpc1JUTDogKCkgPT4gLyogYm9vbGVhbiAqLyBmYWxzZSxcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgbmV3IGluc3RhbmNlIG9mIE1EQ1NsaWRlckZvdW5kYXRpb25cbiAgICogQHBhcmFtIHs/TURDU2xpZGVyQWRhcHRlcn0gYWRhcHRlclxuICAgKi9cbiAgY29uc3RydWN0b3IoYWRhcHRlcikge1xuICAgIHN1cGVyKE9iamVjdC5hc3NpZ24oTURDU2xpZGVyRm91bmRhdGlvbi5kZWZhdWx0QWRhcHRlciwgYWRhcHRlcikpO1xuICAgIC8qKiBAcHJpdmF0ZSB7P0NsaWVudFJlY3R9ICovXG4gICAgdGhpcy5yZWN0XyA9IG51bGw7XG4gICAgLy8gV2Ugc2V0IHRoaXMgdG8gTmFOIHNpbmNlIHdlIHdhbnQgaXQgdG8gYmUgYSBudW1iZXIsIGJ1dCB3ZSBjYW4ndCB1c2UgJzAnIG9yICctMSdcbiAgICAvLyBiZWNhdXNlIHRob3NlIGNvdWxkIGJlIHZhbGlkIHRhYmluZGljZXMgc2V0IGJ5IHRoZSBjbGllbnQgY29kZS5cbiAgICB0aGlzLnNhdmVkVGFiSW5kZXhfID0gTmFOO1xuICAgIHRoaXMuYWN0aXZlXyA9IGZhbHNlO1xuICAgIHRoaXMuaW5UcmFuc2l0XyA9IGZhbHNlO1xuICAgIHRoaXMuaXNEaXNjcmV0ZV8gPSBmYWxzZTtcbiAgICB0aGlzLmhhc1RyYWNrTWFya2VyXyA9IGZhbHNlO1xuICAgIHRoaXMuaGFuZGxpbmdUaHVtYlRhcmdldEV2dF8gPSBmYWxzZTtcbiAgICB0aGlzLm1pbl8gPSAwO1xuICAgIHRoaXMubWF4XyA9IDEwMDtcbiAgICB0aGlzLnN0ZXBfID0gMDtcbiAgICB0aGlzLnZhbHVlXyA9IDA7XG4gICAgdGhpcy5kaXNhYmxlZF8gPSBmYWxzZTtcbiAgICB0aGlzLnByZXZlbnRGb2N1c1N0YXRlXyA9IGZhbHNlO1xuICAgIHRoaXMudXBkYXRlVUlGcmFtZV8gPSAwO1xuICAgIHRoaXMudGh1bWJDb250YWluZXJQb2ludGVySGFuZGxlcl8gPSAoKSA9PiB7XG4gICAgICB0aGlzLmhhbmRsaW5nVGh1bWJUYXJnZXRFdnRfID0gdHJ1ZTtcbiAgICB9O1xuICAgIHRoaXMuaW50ZXJhY3Rpb25TdGFydEhhbmRsZXJfID0gKGV2dCkgPT4gdGhpcy5oYW5kbGVEb3duXyhldnQpO1xuICAgIHRoaXMua2V5ZG93bkhhbmRsZXJfID0gKGV2dCkgPT4gdGhpcy5oYW5kbGVLZXlkb3duXyhldnQpO1xuICAgIHRoaXMuZm9jdXNIYW5kbGVyXyA9ICgpID0+IHRoaXMuaGFuZGxlRm9jdXNfKCk7XG4gICAgdGhpcy5ibHVySGFuZGxlcl8gPSAoKSA9PiB0aGlzLmhhbmRsZUJsdXJfKCk7XG4gICAgdGhpcy5yZXNpemVIYW5kbGVyXyA9ICgpID0+IHRoaXMubGF5b3V0KCk7XG4gIH1cblxuICBpbml0KCkge1xuICAgIHRoaXMuaXNEaXNjcmV0ZV8gPSB0aGlzLmFkYXB0ZXJfLmhhc0NsYXNzKGNzc0NsYXNzZXMuSVNfRElTQ1JFVEUpO1xuICAgIHRoaXMuaGFzVHJhY2tNYXJrZXJfID0gdGhpcy5hZGFwdGVyXy5oYXNDbGFzcyhjc3NDbGFzc2VzLkhBU19UUkFDS19NQVJLRVIpO1xuICAgIERPV05fRVZFTlRTLmZvckVhY2goKGV2dE5hbWUpID0+IHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoZXZ0TmFtZSwgdGhpcy5pbnRlcmFjdGlvblN0YXJ0SGFuZGxlcl8pKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdrZXlkb3duJywgdGhpcy5rZXlkb3duSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ2ZvY3VzJywgdGhpcy5mb2N1c0hhbmRsZXJfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdibHVyJywgdGhpcy5ibHVySGFuZGxlcl8pO1xuICAgIERPV05fRVZFTlRTLmZvckVhY2goKGV2dE5hbWUpID0+IHtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJUaHVtYkNvbnRhaW5lckludGVyYWN0aW9uSGFuZGxlcihldnROYW1lLCB0aGlzLnRodW1iQ29udGFpbmVyUG9pbnRlckhhbmRsZXJfKTtcbiAgICB9KTtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVyUmVzaXplSGFuZGxlcih0aGlzLnJlc2l6ZUhhbmRsZXJfKTtcbiAgICB0aGlzLmxheW91dCgpO1xuICAgIC8vIEF0IGxhc3Qgc3RlcCwgcHJvdmlkZSBhIHJlYXNvbmFibGUgZGVmYXVsdCB2YWx1ZSB0byBkaXNjcmV0ZSBzbGlkZXJcbiAgICBpZiAodGhpcy5pc0Rpc2NyZXRlXyAmJiB0aGlzLmdldFN0ZXAoKSA9PSAwKSB7XG4gICAgICB0aGlzLnN0ZXBfID0gMTtcbiAgICB9XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIERPV05fRVZFTlRTLmZvckVhY2goKGV2dE5hbWUpID0+IHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcihldnROYW1lLCB0aGlzLmludGVyYWN0aW9uU3RhcnRIYW5kbGVyXyk7XG4gICAgfSk7XG4gICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdrZXlkb3duJywgdGhpcy5rZXlkb3duSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcignZm9jdXMnLCB0aGlzLmZvY3VzSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcignYmx1cicsIHRoaXMuYmx1ckhhbmRsZXJfKTtcbiAgICBET1dOX0VWRU5UUy5mb3JFYWNoKChldnROYW1lKSA9PiB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJUaHVtYkNvbnRhaW5lckludGVyYWN0aW9uSGFuZGxlcihldnROYW1lLCB0aGlzLnRodW1iQ29udGFpbmVyUG9pbnRlckhhbmRsZXJfKTtcbiAgICB9KTtcbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJSZXNpemVIYW5kbGVyKHRoaXMucmVzaXplSGFuZGxlcl8pO1xuICB9XG5cbiAgc2V0dXBUcmFja01hcmtlcigpIHtcbiAgICBpZiAodGhpcy5pc0Rpc2NyZXRlXyAmJiB0aGlzLmhhc1RyYWNrTWFya2VyXyYmIHRoaXMuZ2V0U3RlcCgpICE9IDApIHtcbiAgICAgIGNvbnN0IG1pbiA9IHRoaXMuZ2V0TWluKCk7XG4gICAgICBjb25zdCBtYXggPSB0aGlzLmdldE1heCgpO1xuICAgICAgY29uc3Qgc3RlcCA9IHRoaXMuZ2V0U3RlcCgpO1xuICAgICAgbGV0IG51bU1hcmtlcnMgPSAobWF4IC0gbWluKSAvIHN0ZXA7XG5cbiAgICAgIC8vIEluIGNhc2UgZGlzdGFuY2UgYmV0d2VlbiBtYXggJiBtaW4gaXMgaW5kaXZpc2libGUgdG8gc3RlcCxcbiAgICAgIC8vIHdlIHBsYWNlIHRoZSBzZWNvbmRhcnkgdG8gbGFzdCBtYXJrZXIgcHJvcG9ydGlvbmFsbHkgYXQgd2hlcmUgdGh1bWJcbiAgICAgIC8vIGNvdWxkIHJlYWNoIGFuZCBwbGFjZSB0aGUgbGFzdCBtYXJrZXIgYXQgbWF4IHZhbHVlXG4gICAgICBjb25zdCBpbmRpdmlzaWJsZSA9IE1hdGguY2VpbChudW1NYXJrZXJzKSAhPT0gbnVtTWFya2VycztcbiAgICAgIGlmIChpbmRpdmlzaWJsZSkge1xuICAgICAgICBudW1NYXJrZXJzID0gTWF0aC5jZWlsKG51bU1hcmtlcnMpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZVRyYWNrTWFya2VycygpO1xuICAgICAgdGhpcy5hZGFwdGVyXy5hcHBlbmRUcmFja01hcmtlcnMobnVtTWFya2Vycyk7XG5cbiAgICAgIGlmIChpbmRpdmlzaWJsZSkge1xuICAgICAgICBjb25zdCBsYXN0U3RlcFJhdGlvID0gKG1heCAtIG51bU1hcmtlcnMgKiBzdGVwKSAvIHN0ZXAgKyAxO1xuICAgICAgICBjb25zdCBmbGV4ID0gZ2V0Q29ycmVjdFByb3BlcnR5TmFtZSh3aW5kb3csICdmbGV4Jyk7XG4gICAgICAgIHRoaXMuYWRhcHRlcl8uc2V0TGFzdFRyYWNrTWFya2Vyc1N0eWxlUHJvcGVydHkoZmxleCwgU3RyaW5nKGxhc3RTdGVwUmF0aW8pKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBsYXlvdXQoKSB7XG4gICAgdGhpcy5yZWN0XyA9IHRoaXMuYWRhcHRlcl8uY29tcHV0ZUJvdW5kaW5nUmVjdCgpO1xuICAgIHRoaXMudXBkYXRlVUlGb3JDdXJyZW50VmFsdWVfKCk7XG4gIH1cblxuICAvKiogQHJldHVybiB7bnVtYmVyfSAqL1xuICBnZXRWYWx1ZSgpIHtcbiAgICByZXR1cm4gdGhpcy52YWx1ZV87XG4gIH1cblxuICAvKiogQHBhcmFtIHtudW1iZXJ9IHZhbHVlICovXG4gIHNldFZhbHVlKHZhbHVlKSB7XG4gICAgdGhpcy5zZXRWYWx1ZV8odmFsdWUsIGZhbHNlKTtcbiAgfVxuXG4gIC8qKiBAcmV0dXJuIHtudW1iZXJ9ICovXG4gIGdldE1heCgpIHtcbiAgICByZXR1cm4gdGhpcy5tYXhfO1xuICB9XG5cbiAgLyoqIEBwYXJhbSB7bnVtYmVyfSBtYXggKi9cbiAgc2V0TWF4KG1heCkge1xuICAgIGlmIChtYXggPCB0aGlzLm1pbl8pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IHNldCBtYXggdG8gYmUgbGVzcyB0aGFuIHRoZSBzbGlkZXJcXCdzIG1pbmltdW0gdmFsdWUnKTtcbiAgICB9XG4gICAgdGhpcy5tYXhfID0gbWF4O1xuICAgIHRoaXMuc2V0VmFsdWVfKHRoaXMudmFsdWVfLCBmYWxzZSwgdHJ1ZSk7XG4gICAgdGhpcy5hZGFwdGVyXy5zZXRBdHRyaWJ1dGUoc3RyaW5ncy5BUklBX1ZBTFVFTUFYLCBTdHJpbmcodGhpcy5tYXhfKSk7XG4gICAgdGhpcy5zZXR1cFRyYWNrTWFya2VyKCk7XG4gIH1cblxuICAvKiogQHJldHVybiB7bnVtYmVyfSAqL1xuICBnZXRNaW4oKSB7XG4gICAgcmV0dXJuIHRoaXMubWluXztcbiAgfVxuXG4gIC8qKiBAcGFyYW0ge251bWJlcn0gbWluICovXG4gIHNldE1pbihtaW4pIHtcbiAgICBpZiAobWluID4gdGhpcy5tYXhfKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBzZXQgbWluIHRvIGJlIGdyZWF0ZXIgdGhhbiB0aGUgc2xpZGVyXFwncyBtYXhpbXVtIHZhbHVlJyk7XG4gICAgfVxuICAgIHRoaXMubWluXyA9IG1pbjtcbiAgICB0aGlzLnNldFZhbHVlXyh0aGlzLnZhbHVlXywgZmFsc2UsIHRydWUpO1xuICAgIHRoaXMuYWRhcHRlcl8uc2V0QXR0cmlidXRlKHN0cmluZ3MuQVJJQV9WQUxVRU1JTiwgU3RyaW5nKHRoaXMubWluXykpO1xuICAgIHRoaXMuc2V0dXBUcmFja01hcmtlcigpO1xuICB9XG5cbiAgLyoqIEByZXR1cm4ge251bWJlcn0gKi9cbiAgZ2V0U3RlcCgpIHtcbiAgICByZXR1cm4gdGhpcy5zdGVwXztcbiAgfVxuXG4gIC8qKiBAcGFyYW0ge251bWJlcn0gc3RlcCAqL1xuICBzZXRTdGVwKHN0ZXApIHtcbiAgICBpZiAoc3RlcCA8IDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignU3RlcCBjYW5ub3QgYmUgc2V0IHRvIGEgbmVnYXRpdmUgbnVtYmVyJyk7XG4gICAgfVxuICAgIGlmICh0aGlzLmlzRGlzY3JldGVfICYmICh0eXBlb2Yoc3RlcCkgIT09ICdudW1iZXInIHx8IHN0ZXAgPCAxKSkge1xuICAgICAgc3RlcCA9IDE7XG4gICAgfVxuICAgIHRoaXMuc3RlcF8gPSBzdGVwO1xuICAgIHRoaXMuc2V0VmFsdWVfKHRoaXMudmFsdWVfLCBmYWxzZSwgdHJ1ZSk7XG4gICAgdGhpcy5zZXR1cFRyYWNrTWFya2VyKCk7XG4gIH1cblxuICAvKiogQHJldHVybiB7Ym9vbGVhbn0gKi9cbiAgaXNEaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5kaXNhYmxlZF87XG4gIH1cblxuICAvKiogQHBhcmFtIHtib29sZWFufSBkaXNhYmxlZCAqL1xuICBzZXREaXNhYmxlZChkaXNhYmxlZCkge1xuICAgIHRoaXMuZGlzYWJsZWRfID0gZGlzYWJsZWQ7XG4gICAgdGhpcy50b2dnbGVDbGFzc18oY3NzQ2xhc3Nlcy5ESVNBQkxFRCwgdGhpcy5kaXNhYmxlZF8pO1xuICAgIGlmICh0aGlzLmRpc2FibGVkXykge1xuICAgICAgdGhpcy5zYXZlZFRhYkluZGV4XyA9IHRoaXMuYWRhcHRlcl8uZ2V0VGFiSW5kZXgoKTtcbiAgICAgIHRoaXMuYWRhcHRlcl8uc2V0QXR0cmlidXRlKHN0cmluZ3MuQVJJQV9ESVNBQkxFRCwgJ3RydWUnKTtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQXR0cmlidXRlKCd0YWJpbmRleCcpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUF0dHJpYnV0ZShzdHJpbmdzLkFSSUFfRElTQUJMRUQpO1xuICAgICAgaWYgKCFpc05hTih0aGlzLnNhdmVkVGFiSW5kZXhfKSkge1xuICAgICAgICB0aGlzLmFkYXB0ZXJfLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCBTdHJpbmcodGhpcy5zYXZlZFRhYkluZGV4XykpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDYWxsZWQgd2hlbiB0aGUgdXNlciBzdGFydHMgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgc2xpZGVyXG4gICAqIEBwYXJhbSB7IUV2ZW50fSBldnRcbiAgICogQHByaXZhdGVcbiAgICovXG4gIGhhbmRsZURvd25fKGV2dCkge1xuICAgIGlmICh0aGlzLmRpc2FibGVkXykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMucHJldmVudEZvY3VzU3RhdGVfID0gdHJ1ZTtcbiAgICB0aGlzLnNldEluVHJhbnNpdF8oIXRoaXMuaGFuZGxpbmdUaHVtYlRhcmdldEV2dF8pO1xuICAgIHRoaXMuaGFuZGxpbmdUaHVtYlRhcmdldEV2dF8gPSBmYWxzZTtcbiAgICB0aGlzLnNldEFjdGl2ZV8odHJ1ZSk7XG5cbiAgICBjb25zdCBtb3ZlSGFuZGxlciA9IChldnQpID0+IHtcbiAgICAgIHRoaXMuaGFuZGxlTW92ZV8oZXZ0KTtcbiAgICB9O1xuXG4gICAgLy8gTm90ZTogdXBIYW5kbGVyIGlzIFtkZV1yZWdpc3RlcmVkIG9uIEFMTCBwb3RlbnRpYWwgcG9pbnRlci1yZWxhdGVkIHJlbGVhc2UgZXZlbnQgdHlwZXMsIHNpbmNlIHNvbWUgYnJvd3NlcnNcbiAgICAvLyBkbyBub3QgYWx3YXlzIGZpcmUgdGhlc2UgY29uc2lzdGVudGx5IGluIHBhaXJzLlxuICAgIC8vIChTZWUgaHR0cHM6Ly9naXRodWIuY29tL21hdGVyaWFsLWNvbXBvbmVudHMvbWF0ZXJpYWwtY29tcG9uZW50cy13ZWIvaXNzdWVzLzExOTIpXG4gICAgY29uc3QgdXBIYW5kbGVyID0gKCkgPT4ge1xuICAgICAgdGhpcy5oYW5kbGVVcF8oKTtcbiAgICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlckJvZHlJbnRlcmFjdGlvbkhhbmRsZXIoTU9WRV9FVkVOVF9NQVBbZXZ0LnR5cGVdLCBtb3ZlSGFuZGxlcik7XG4gICAgICBVUF9FVkVOVFMuZm9yRWFjaCgoZXZ0TmFtZSkgPT4gdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVyQm9keUludGVyYWN0aW9uSGFuZGxlcihldnROYW1lLCB1cEhhbmRsZXIpKTtcbiAgICB9O1xuXG4gICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlckJvZHlJbnRlcmFjdGlvbkhhbmRsZXIoTU9WRV9FVkVOVF9NQVBbZXZ0LnR5cGVdLCBtb3ZlSGFuZGxlcik7XG4gICAgVVBfRVZFTlRTLmZvckVhY2goKGV2dE5hbWUpID0+IHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJCb2R5SW50ZXJhY3Rpb25IYW5kbGVyKGV2dE5hbWUsIHVwSGFuZGxlcikpO1xuICAgIHRoaXMuc2V0VmFsdWVGcm9tRXZ0XyhldnQpO1xuICB9XG5cbiAgLyoqXG4gICAqIENhbGxlZCB3aGVuIHRoZSB1c2VyIG1vdmVzIHRoZSBzbGlkZXJcbiAgICogQHBhcmFtIHshRXZlbnR9IGV2dFxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgaGFuZGxlTW92ZV8oZXZ0KSB7XG4gICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgdGhpcy5zZXRWYWx1ZUZyb21FdnRfKGV2dCk7XG4gIH1cblxuICAvKipcbiAgICogQ2FsbGVkIHdoZW4gdGhlIHVzZXIncyBpbnRlcmFjdGlvbiB3aXRoIHRoZSBzbGlkZXIgZW5kc1xuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgaGFuZGxlVXBfKCkge1xuICAgIHRoaXMuc2V0QWN0aXZlXyhmYWxzZSk7XG4gICAgdGhpcy5hZGFwdGVyXy5ub3RpZnlDaGFuZ2UoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBwYWdlWCBvZiB0aGUgZXZlbnRcbiAgICogQHBhcmFtIHshRXZlbnR9IGV2dFxuICAgKiBAcmV0dXJuIHtudW1iZXJ9XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBnZXRQYWdlWF8oZXZ0KSB7XG4gICAgaWYgKGV2dC50YXJnZXRUb3VjaGVzICYmIGV2dC50YXJnZXRUb3VjaGVzLmxlbmd0aCA+IDApIHtcbiAgICAgIHJldHVybiBldnQudGFyZ2V0VG91Y2hlc1swXS5wYWdlWDtcbiAgICB9XG4gICAgcmV0dXJuIGV2dC5wYWdlWDtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSBzbGlkZXIgdmFsdWUgZnJvbSBhbiBldmVudFxuICAgKiBAcGFyYW0geyFFdmVudH0gZXZ0XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBzZXRWYWx1ZUZyb21FdnRfKGV2dCkge1xuICAgIGNvbnN0IHBhZ2VYID0gdGhpcy5nZXRQYWdlWF8oZXZ0KTtcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMuY29tcHV0ZVZhbHVlRnJvbVBhZ2VYXyhwYWdlWCk7XG4gICAgdGhpcy5zZXRWYWx1ZV8odmFsdWUsIHRydWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIENvbXB1dGVzIHRoZSBuZXcgdmFsdWUgZnJvbSB0aGUgcGFnZVggcG9zaXRpb25cbiAgICogQHBhcmFtIHtudW1iZXJ9IHBhZ2VYXG4gICAqIEByZXR1cm4ge251bWJlcn1cbiAgICovXG4gIGNvbXB1dGVWYWx1ZUZyb21QYWdlWF8ocGFnZVgpIHtcbiAgICBjb25zdCB7bWF4XzogbWF4LCBtaW5fOiBtaW59ID0gdGhpcztcbiAgICBjb25zdCB4UG9zID0gcGFnZVggLSB0aGlzLnJlY3RfLmxlZnQ7XG4gICAgbGV0IHBjdENvbXBsZXRlID0geFBvcyAvIHRoaXMucmVjdF8ud2lkdGg7XG4gICAgaWYgKHRoaXMuYWRhcHRlcl8uaXNSVEwoKSkge1xuICAgICAgcGN0Q29tcGxldGUgPSAxIC0gcGN0Q29tcGxldGU7XG4gICAgfVxuICAgIC8vIEZpdCB0aGUgcGVyY2VudGFnZSBjb21wbGV0ZSBiZXR3ZWVuIHRoZSByYW5nZSBbbWluLG1heF1cbiAgICAvLyBieSByZW1hcHBpbmcgZnJvbSBbMCwgMV0gdG8gW21pbiwgbWluKyhtYXgtbWluKV0uXG4gICAgcmV0dXJuIG1pbiArIHBjdENvbXBsZXRlICogKG1heCAtIG1pbik7XG4gIH1cblxuICAvKipcbiAgICogSGFuZGxlcyBrZXlkb3duIGV2ZW50c1xuICAgKiBAcGFyYW0geyFFdmVudH0gZXZ0XG4gICAqL1xuICBoYW5kbGVLZXlkb3duXyhldnQpIHtcbiAgICBjb25zdCBrZXlJZCA9IHRoaXMuZ2V0S2V5SWRfKGV2dCk7XG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLmdldFZhbHVlRm9yS2V5SWRfKGtleUlkKTtcbiAgICBpZiAoaXNOYU4odmFsdWUpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gUHJldmVudCBwYWdlIGZyb20gc2Nyb2xsaW5nIGR1ZSB0byBrZXkgcHJlc3NlcyB0aGF0IHdvdWxkIG5vcm1hbGx5IHNjcm9sbCB0aGUgcGFnZVxuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoY3NzQ2xhc3Nlcy5GT0NVUyk7XG4gICAgdGhpcy5zZXRWYWx1ZV8odmFsdWUsIHRydWUpO1xuICAgIHRoaXMuYWRhcHRlcl8ubm90aWZ5Q2hhbmdlKCk7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyB0aGUgY29tcHV0ZWQgbmFtZSBvZiB0aGUgZXZlbnRcbiAgICogQHBhcmFtIHshRXZlbnR9IGtiZEV2dFxuICAgKiBAcmV0dXJuIHtzdHJpbmd9XG4gICAqL1xuICBnZXRLZXlJZF8oa2JkRXZ0KSB7XG4gICAgaWYgKGtiZEV2dC5rZXkgPT09IEtFWV9JRFMuQVJST1dfTEVGVCB8fCBrYmRFdnQua2V5Q29kZSA9PT0gMzcpIHtcbiAgICAgIHJldHVybiBLRVlfSURTLkFSUk9XX0xFRlQ7XG4gICAgfVxuICAgIGlmIChrYmRFdnQua2V5ID09PSBLRVlfSURTLkFSUk9XX1JJR0hUIHx8IGtiZEV2dC5rZXlDb2RlID09PSAzOSkge1xuICAgICAgcmV0dXJuIEtFWV9JRFMuQVJST1dfUklHSFQ7XG4gICAgfVxuICAgIGlmIChrYmRFdnQua2V5ID09PSBLRVlfSURTLkFSUk9XX1VQIHx8IGtiZEV2dC5rZXlDb2RlID09PSAzOCkge1xuICAgICAgcmV0dXJuIEtFWV9JRFMuQVJST1dfVVA7XG4gICAgfVxuICAgIGlmIChrYmRFdnQua2V5ID09PSBLRVlfSURTLkFSUk9XX0RPV04gfHwga2JkRXZ0LmtleUNvZGUgPT09IDQwKSB7XG4gICAgICByZXR1cm4gS0VZX0lEUy5BUlJPV19ET1dOO1xuICAgIH1cbiAgICBpZiAoa2JkRXZ0LmtleSA9PT0gS0VZX0lEUy5IT01FIHx8IGtiZEV2dC5rZXlDb2RlID09PSAzNikge1xuICAgICAgcmV0dXJuIEtFWV9JRFMuSE9NRTtcbiAgICB9XG4gICAgaWYgKGtiZEV2dC5rZXkgPT09IEtFWV9JRFMuRU5EIHx8IGtiZEV2dC5rZXlDb2RlID09PSAzNSkge1xuICAgICAgcmV0dXJuIEtFWV9JRFMuRU5EO1xuICAgIH1cbiAgICBpZiAoa2JkRXZ0LmtleSA9PT0gS0VZX0lEUy5QQUdFX1VQIHx8IGtiZEV2dC5rZXlDb2RlID09PSAzMykge1xuICAgICAgcmV0dXJuIEtFWV9JRFMuUEFHRV9VUDtcbiAgICB9XG4gICAgaWYgKGtiZEV2dC5rZXkgPT09IEtFWV9JRFMuUEFHRV9ET1dOIHx8IGtiZEV2dC5rZXlDb2RlID09PSAzNCkge1xuICAgICAgcmV0dXJuIEtFWV9JRFMuUEFHRV9ET1dOO1xuICAgIH1cblxuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIC8qKlxuICAgKiBDb21wdXRlcyB0aGUgdmFsdWUgZ2l2ZW4gYSBrZXlib2FyZCBrZXkgSURcbiAgICogQHBhcmFtIHtzdHJpbmd9IGtleUlkXG4gICAqIEByZXR1cm4ge251bWJlcn1cbiAgICovXG4gIGdldFZhbHVlRm9yS2V5SWRfKGtleUlkKSB7XG4gICAgY29uc3Qge21heF86IG1heCwgbWluXzogbWluLCBzdGVwXzogc3RlcH0gPSB0aGlzO1xuICAgIGxldCBkZWx0YSA9IHN0ZXAgfHwgKG1heCAtIG1pbikgLyAxMDA7XG4gICAgY29uc3QgdmFsdWVOZWVkc1RvQmVGbGlwcGVkID0gdGhpcy5hZGFwdGVyXy5pc1JUTCgpICYmIChcbiAgICAgIGtleUlkID09PSBLRVlfSURTLkFSUk9XX0xFRlQgfHwga2V5SWQgPT09IEtFWV9JRFMuQVJST1dfUklHSFRcbiAgICApO1xuICAgIGlmICh2YWx1ZU5lZWRzVG9CZUZsaXBwZWQpIHtcbiAgICAgIGRlbHRhID0gLWRlbHRhO1xuICAgIH1cblxuICAgIHN3aXRjaCAoa2V5SWQpIHtcbiAgICBjYXNlIEtFWV9JRFMuQVJST1dfTEVGVDpcbiAgICBjYXNlIEtFWV9JRFMuQVJST1dfRE9XTjpcbiAgICAgIHJldHVybiB0aGlzLnZhbHVlXyAtIGRlbHRhO1xuICAgIGNhc2UgS0VZX0lEUy5BUlJPV19SSUdIVDpcbiAgICBjYXNlIEtFWV9JRFMuQVJST1dfVVA6XG4gICAgICByZXR1cm4gdGhpcy52YWx1ZV8gKyBkZWx0YTtcbiAgICBjYXNlIEtFWV9JRFMuSE9NRTpcbiAgICAgIHJldHVybiB0aGlzLm1pbl87XG4gICAgY2FzZSBLRVlfSURTLkVORDpcbiAgICAgIHJldHVybiB0aGlzLm1heF87XG4gICAgY2FzZSBLRVlfSURTLlBBR0VfVVA6XG4gICAgICByZXR1cm4gdGhpcy52YWx1ZV8gKyBkZWx0YSAqIG51bWJlcnMuUEFHRV9GQUNUT1I7XG4gICAgY2FzZSBLRVlfSURTLlBBR0VfRE9XTjpcbiAgICAgIHJldHVybiB0aGlzLnZhbHVlXyAtIGRlbHRhICogbnVtYmVycy5QQUdFX0ZBQ1RPUjtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIE5hTjtcbiAgICB9XG4gIH1cblxuICBoYW5kbGVGb2N1c18oKSB7XG4gICAgaWYgKHRoaXMucHJldmVudEZvY3VzU3RhdGVfKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoY3NzQ2xhc3Nlcy5GT0NVUyk7XG4gIH1cblxuICBoYW5kbGVCbHVyXygpIHtcbiAgICB0aGlzLnByZXZlbnRGb2N1c1N0YXRlXyA9IGZhbHNlO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoY3NzQ2xhc3Nlcy5GT0NVUyk7XG4gIH1cblxuICAvKipcbiAgICogU2V0cyB0aGUgdmFsdWUgb2YgdGhlIHNsaWRlclxuICAgKiBAcGFyYW0ge251bWJlcn0gdmFsdWVcbiAgICogQHBhcmFtIHtib29sZWFufSBzaG91bGRGaXJlSW5wdXRcbiAgICogQHBhcmFtIHtib29sZWFuPX0gZm9yY2VcbiAgICovXG4gIHNldFZhbHVlXyh2YWx1ZSwgc2hvdWxkRmlyZUlucHV0LCBmb3JjZSA9IGZhbHNlKSB7XG4gICAgaWYgKHZhbHVlID09PSB0aGlzLnZhbHVlXyAmJiAhZm9yY2UpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCB7bWluXzogbWluLCBtYXhfOiBtYXh9ID0gdGhpcztcbiAgICBjb25zdCB2YWx1ZVNldFRvQm91bmRhcnkgPSB2YWx1ZSA9PT0gbWluIHx8IHZhbHVlID09PSBtYXg7XG4gICAgaWYgKHRoaXMuc3RlcF8gJiYgIXZhbHVlU2V0VG9Cb3VuZGFyeSkge1xuICAgICAgdmFsdWUgPSB0aGlzLnF1YW50aXplXyh2YWx1ZSk7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA8IG1pbikge1xuICAgICAgdmFsdWUgPSBtaW47XG4gICAgfSBlbHNlIGlmICh2YWx1ZSA+IG1heCkge1xuICAgICAgdmFsdWUgPSBtYXg7XG4gICAgfVxuICAgIHRoaXMudmFsdWVfID0gdmFsdWU7XG4gICAgdGhpcy5hZGFwdGVyXy5zZXRBdHRyaWJ1dGUoc3RyaW5ncy5BUklBX1ZBTFVFTk9XLCBTdHJpbmcodGhpcy52YWx1ZV8pKTtcbiAgICB0aGlzLnVwZGF0ZVVJRm9yQ3VycmVudFZhbHVlXygpO1xuXG4gICAgaWYgKHNob3VsZEZpcmVJbnB1dCkge1xuICAgICAgdGhpcy5hZGFwdGVyXy5ub3RpZnlJbnB1dCgpO1xuICAgICAgaWYgKHRoaXMuaXNEaXNjcmV0ZV8pIHtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5zZXRNYXJrZXJWYWx1ZSh2YWx1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIENhbGN1bGF0ZXMgdGhlIHF1YW50aXplZCB2YWx1ZVxuICAgKiBAcGFyYW0ge251bWJlcn0gdmFsdWVcbiAgICogQHJldHVybiB7bnVtYmVyfVxuICAgKi9cbiAgcXVhbnRpemVfKHZhbHVlKSB7XG4gICAgY29uc3QgbnVtU3RlcHMgPSBNYXRoLnJvdW5kKHZhbHVlIC8gdGhpcy5zdGVwXyk7XG4gICAgY29uc3QgcXVhbnRpemVkVmFsID0gbnVtU3RlcHMgKiB0aGlzLnN0ZXBfO1xuICAgIHJldHVybiBxdWFudGl6ZWRWYWw7XG4gIH1cblxuICB1cGRhdGVVSUZvckN1cnJlbnRWYWx1ZV8oKSB7XG4gICAgY29uc3Qge21heF86IG1heCwgbWluXzogbWluLCB2YWx1ZV86IHZhbHVlfSA9IHRoaXM7XG4gICAgY29uc3QgcGN0Q29tcGxldGUgPSAodmFsdWUgLSBtaW4pIC8gKG1heCAtIG1pbik7XG4gICAgbGV0IHRyYW5zbGF0ZVB4ID0gcGN0Q29tcGxldGUgKiB0aGlzLnJlY3RfLndpZHRoO1xuICAgIGlmICh0aGlzLmFkYXB0ZXJfLmlzUlRMKCkpIHtcbiAgICAgIHRyYW5zbGF0ZVB4ID0gdGhpcy5yZWN0Xy53aWR0aCAtIHRyYW5zbGF0ZVB4O1xuICAgIH1cblxuICAgIGNvbnN0IHRyYW5zZm9ybVByb3AgPSBnZXRDb3JyZWN0UHJvcGVydHlOYW1lKHdpbmRvdywgJ3RyYW5zZm9ybScpO1xuICAgIGNvbnN0IHRyYW5zaXRpb25lbmRFdnROYW1lID0gZ2V0Q29ycmVjdEV2ZW50TmFtZSh3aW5kb3csICd0cmFuc2l0aW9uZW5kJyk7XG5cbiAgICBpZiAodGhpcy5pblRyYW5zaXRfKSB7XG4gICAgICBjb25zdCBvblRyYW5zaXRpb25FbmQgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0SW5UcmFuc2l0XyhmYWxzZSk7XG4gICAgICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlclRodW1iQ29udGFpbmVySW50ZXJhY3Rpb25IYW5kbGVyKHRyYW5zaXRpb25lbmRFdnROYW1lLCBvblRyYW5zaXRpb25FbmQpO1xuICAgICAgfTtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJUaHVtYkNvbnRhaW5lckludGVyYWN0aW9uSGFuZGxlcih0cmFuc2l0aW9uZW5kRXZ0TmFtZSwgb25UcmFuc2l0aW9uRW5kKTtcbiAgICB9XG5cbiAgICB0aGlzLnVwZGF0ZVVJRnJhbWVfID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHtcbiAgICAgIC8vIE5PVEUodHJhdmlza2F1Zm1hbik6IEl0IHdvdWxkIGJlIG5pY2UgdG8gdXNlIGNhbGMoKSBoZXJlLFxuICAgICAgLy8gYnV0IElFIGNhbm5vdCBoYW5kbGUgY2FsY3MgaW4gdHJhbnNmb3JtcyBjb3JyZWN0bHkuXG4gICAgICAvLyBTZWU6IGh0dHBzOi8vZ29vLmdsL05DMml0a1xuICAgICAgLy8gQWxzbyBub3RlIHRoYXQgdGhlIC01MCUgb2Zmc2V0IGlzIHVzZWQgdG8gY2VudGVyIHRoZSBzbGlkZXIgdGh1bWIuXG4gICAgICB0aGlzLmFkYXB0ZXJfLnNldFRodW1iQ29udGFpbmVyU3R5bGVQcm9wZXJ0eSh0cmFuc2Zvcm1Qcm9wLCBgdHJhbnNsYXRlWCgke3RyYW5zbGF0ZVB4fXB4KSB0cmFuc2xhdGVYKC01MCUpYCk7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnNldFRyYWNrU3R5bGVQcm9wZXJ0eSh0cmFuc2Zvcm1Qcm9wLCBgc2NhbGVYKCR7cGN0Q29tcGxldGV9KWApO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFRvZ2dsZXMgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgc2xpZGVyXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gYWN0aXZlXG4gICAqL1xuICBzZXRBY3RpdmVfKGFjdGl2ZSkge1xuICAgIHRoaXMuYWN0aXZlXyA9IGFjdGl2ZTtcbiAgICB0aGlzLnRvZ2dsZUNsYXNzXyhjc3NDbGFzc2VzLkFDVElWRSwgdGhpcy5hY3RpdmVfKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUb2dnbGVzIHRoZSBpblRyYW5zaXQgc3RhdGUgb2YgdGhlIHNsaWRlclxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IGluVHJhbnNpdFxuICAgKi9cbiAgc2V0SW5UcmFuc2l0XyhpblRyYW5zaXQpIHtcbiAgICB0aGlzLmluVHJhbnNpdF8gPSBpblRyYW5zaXQ7XG4gICAgdGhpcy50b2dnbGVDbGFzc18oY3NzQ2xhc3Nlcy5JTl9UUkFOU0lULCB0aGlzLmluVHJhbnNpdF8pO1xuICB9XG5cbiAgLyoqXG4gICAqIENvbmRpdGlvbmFsbHkgYWRkcyBvciByZW1vdmVzIGEgY2xhc3MgYmFzZWQgb24gc2hvdWxkQmVQcmVzZW50XG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWVcbiAgICogQHBhcmFtIHtib29sZWFufSBzaG91bGRCZVByZXNlbnRcbiAgICovXG4gIHRvZ2dsZUNsYXNzXyhjbGFzc05hbWUsIHNob3VsZEJlUHJlc2VudCkge1xuICAgIGlmIChzaG91bGRCZVByZXNlbnQpIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoY2xhc3NOYW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhjbGFzc05hbWUpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBNRENTbGlkZXJGb3VuZGF0aW9uO1xuIiwiPHRlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwibWRjLXNsaWRlclwiIDpjbGFzcz1cImNsYXNzZXNcIiB0YWJpbmRleD1cIjBcIiByb2xlPVwic2xpZGVyXCI+XG4gICAgPGRpdiBjbGFzcz1cIm1kYy1zbGlkZXJfX3RyYWNrLWNvbnRhaW5lclwiPlxuICAgICAgPGRpdiBjbGFzcz1cIm1kYy1zbGlkZXJfX3RyYWNrXCIgOnN0eWxlPVwidHJhY2tTdHlsZXNcIj48L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJtZGMtc2xpZGVyX190cmFjay1tYXJrZXItY29udGFpbmVyXCIgdi1pZj1cImhhc01hcmtlcnNcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIm1kYy1zbGlkZXJfX3RyYWNrLW1hcmtlclwiIFxuICAgICAgICAgIHYtZm9yPVwibWFya2VyTnVtIGluIG51bU1hcmtlcnNcIlxuICAgICAgICAgIDprZXk9XCJtYXJrZXJOdW1cIlxuICAgICAgICAgIDpzdHlsZT1cIihtYXJrZXJOdW0gPT0gbnVtTWFya2VycykgPyBsYXN0VHJhY2tNYXJrZXJzU3R5bGVzIDoge31cIlxuICAgICAgICAgID48L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDxkaXYgcmVmPVwidGh1bWJDb250YWluZXJcIiA6c3R5bGU9XCJ0aHVtYlN0eWxlc1wiIGNsYXNzPVwibWRjLXNsaWRlcl9fdGh1bWItY29udGFpbmVyXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwibWRjLXNsaWRlcl9fcGluXCIgdi1pZj1cImlzRGlzY3JldGVcIj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJtZGMtc2xpZGVyX19waW4tdmFsdWUtbWFya2VyXCI+e3ttYXJrZXJWYWx1ZX19PC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgICA8c3ZnIGNsYXNzPVwibWRjLXNsaWRlcl9fdGh1bWJcIiB3aWR0aD1cIjIxXCIgaGVpZ2h0PVwiMjFcIj5cbiAgICAgICAgPGNpcmNsZSBjeD1cIjEwLjVcIiBjeT1cIjEwLjVcIiByPVwiNy44NzVcIj48L2NpcmNsZT5cbiAgICAgIDwvc3ZnPlxuICAgICAgPGRpdiBjbGFzcz1cIm1kYy1zbGlkZXJfX2ZvY3VzLXJpbmdcIj48L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IE1EQ1NsaWRlckZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL3NsaWRlci9mb3VuZGF0aW9uJztcbmltcG9ydCB7IERpc3BhdGNoRm9jdXNNaXhpbiB9IGZyb20gJy4uL2Jhc2UnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtc2xpZGVyJyxcbiAgbWl4aW5zOiBbRGlzcGF0Y2hGb2N1c01peGluXSxcbiAgbW9kZWw6IHtcbiAgICBwcm9wOiAndmFsdWUnLFxuICAgIGV2ZW50OiAnY2hhbmdlJyxcbiAgfSxcbiAgcHJvcHM6IHtcbiAgICB2YWx1ZTogW051bWJlciwgU3RyaW5nXSxcbiAgICBtaW46IHsgdHlwZTogW051bWJlciwgU3RyaW5nXSwgZGVmYXVsdDogMCB9LFxuICAgIG1heDogeyB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLCBkZWZhdWx0OiAxMDAgfSxcbiAgICBzdGVwOiB7IHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sIGRlZmF1bHQ6IDAgfSxcbiAgICBkaXNwbGF5TWFya2VyczogQm9vbGVhbixcbiAgICBkaXNhYmxlZDogQm9vbGVhbixcbiAgICBsYXlvdXRPbjogU3RyaW5nLFxuICAgIGxheW91dE9uU291cmNlOiB7IHR5cGU6IE9iamVjdCwgcmVxdWlyZWQ6IGZhbHNlIH0sXG4gIH0sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNsYXNzZXM6IHtcbiAgICAgICAgJ21kYy1zbGlkZXItLWRpc2NyZXRlJzogISF0aGlzLnN0ZXAsXG4gICAgICAgICdtZGMtc2xpZGVyLS1kaXNwbGF5LW1hcmtlcnMnOiB0aGlzLmRpc3BsYXlNYXJrZXJzLFxuICAgICAgfSxcbiAgICAgIHRyYWNrU3R5bGVzOiB7fSxcbiAgICAgIGxhc3RUcmFja01hcmtlcnNTdHlsZXM6IHt9LFxuICAgICAgdGh1bWJTdHlsZXM6IHt9LFxuICAgICAgbWFya2VyVmFsdWU6ICcnLFxuICAgICAgbnVtTWFya2VyczogMCxcbiAgICB9O1xuICB9LFxuICBjb21wdXRlZDoge1xuICAgIGlzRGlzY3JldGUoKSB7XG4gICAgICByZXR1cm4gISF0aGlzLnN0ZXA7XG4gICAgfSxcbiAgICBoYXNNYXJrZXJzKCkge1xuICAgICAgcmV0dXJuICEhdGhpcy5zdGVwICYmIHRoaXMuZGlzcGxheU1hcmtlcnMgJiYgdGhpcy5udW1NYXJrZXJzO1xuICAgIH0sXG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgdmFsdWUoKSB7XG4gICAgICBpZiAodGhpcy5mb3VuZGF0aW9uLmdldFZhbHVlKCkgIT09IE51bWJlcih0aGlzLnZhbHVlKSkge1xuICAgICAgICB0aGlzLmZvdW5kYXRpb24uc2V0VmFsdWUodGhpcy52YWx1ZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBtaW4oKSB7XG4gICAgICB0aGlzLmZvdW5kYXRpb24uc2V0TWluKE51bWJlcih0aGlzLm1pbikpO1xuICAgIH0sXG4gICAgbWF4KCkge1xuICAgICAgdGhpcy5mb3VuZGF0aW9uLnNldE1heChOdW1iZXIodGhpcy5tYXgpKTtcbiAgICB9LFxuICAgIHN0ZXAoKSB7XG4gICAgICB0aGlzLmZvdW5kYXRpb24uc2V0U3RlcChOdW1iZXIodGhpcy5zdGVwKSk7XG4gICAgfSxcbiAgICBkaXNhYmxlZCgpIHtcbiAgICAgIHRoaXMuZm91bmRhdGlvbi5zZXREaXNhYmxlZCh0aGlzLmRpc2FibGVkKTtcbiAgICB9LFxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgbGF5b3V0KCkge1xuICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4ge1xuICAgICAgICB0aGlzLmZvdW5kYXRpb24gJiYgdGhpcy5mb3VuZGF0aW9uLmxheW91dCgpO1xuICAgICAgfSk7XG4gICAgfSxcbiAgfSxcbiAgbW91bnRlZCgpIHtcbiAgICB0aGlzLmZvdW5kYXRpb24gPSBuZXcgTURDU2xpZGVyRm91bmRhdGlvbih7XG4gICAgICBoYXNDbGFzczogY2xhc3NOYW1lID0+IHRoaXMuJGVsLmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpLFxuICAgICAgYWRkQ2xhc3M6IGNsYXNzTmFtZSA9PiB7XG4gICAgICAgIHRoaXMuJHNldCh0aGlzLmNsYXNzZXMsIGNsYXNzTmFtZSwgdHJ1ZSk7XG4gICAgICB9LFxuICAgICAgcmVtb3ZlQ2xhc3M6IGNsYXNzTmFtZSA9PiB7XG4gICAgICAgIHRoaXMuJGRlbGV0ZSh0aGlzLmNsYXNzZXMsIGNsYXNzTmFtZSwgdHJ1ZSk7XG4gICAgICB9LFxuICAgICAgZ2V0QXR0cmlidXRlOiBuYW1lID0+IHRoaXMuJGVsLmdldEF0dHJpYnV0ZShuYW1lKSxcbiAgICAgIHNldEF0dHJpYnV0ZTogKG5hbWUsIHZhbHVlKSA9PiB0aGlzLiRlbC5zZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpLFxuICAgICAgcmVtb3ZlQXR0cmlidXRlOiBuYW1lID0+IHRoaXMuJGVsLnJlbW92ZUF0dHJpYnV0ZShuYW1lKSxcbiAgICAgIGNvbXB1dGVCb3VuZGluZ1JlY3Q6ICgpID0+IHRoaXMuJGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFxuICAgICAgZ2V0VGFiSW5kZXg6ICgpID0+IHRoaXMuJGVsLnRhYkluZGV4LFxuICAgICAgcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6ICh0eXBlLCBoYW5kbGVyKSA9PiB7XG4gICAgICAgIHRoaXMuJGVsLmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgaGFuZGxlcik7XG4gICAgICB9LFxuICAgICAgZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKHR5cGUsIGhhbmRsZXIpID0+IHtcbiAgICAgICAgdGhpcy4kZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcih0eXBlLCBoYW5kbGVyKTtcbiAgICAgIH0sXG4gICAgICByZWdpc3RlclRodW1iQ29udGFpbmVySW50ZXJhY3Rpb25IYW5kbGVyOiAodHlwZSwgaGFuZGxlcikgPT4ge1xuICAgICAgICB0aGlzLiRyZWZzLnRodW1iQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgaGFuZGxlcik7XG4gICAgICB9LFxuICAgICAgZGVyZWdpc3RlclRodW1iQ29udGFpbmVySW50ZXJhY3Rpb25IYW5kbGVyOiAodHlwZSwgaGFuZGxlcikgPT4ge1xuICAgICAgICB0aGlzLiRyZWZzLnRodW1iQ29udGFpbmVyLnJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgaGFuZGxlcik7XG4gICAgICB9LFxuICAgICAgcmVnaXN0ZXJCb2R5SW50ZXJhY3Rpb25IYW5kbGVyOiAodHlwZSwgaGFuZGxlcikgPT4ge1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgaGFuZGxlcik7XG4gICAgICB9LFxuICAgICAgZGVyZWdpc3RlckJvZHlJbnRlcmFjdGlvbkhhbmRsZXI6ICh0eXBlLCBoYW5kbGVyKSA9PiB7XG4gICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcih0eXBlLCBoYW5kbGVyKTtcbiAgICAgIH0sXG4gICAgICByZWdpc3RlclJlc2l6ZUhhbmRsZXI6IGhhbmRsZXIgPT4ge1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaGFuZGxlcik7XG4gICAgICB9LFxuICAgICAgZGVyZWdpc3RlclJlc2l6ZUhhbmRsZXI6IGhhbmRsZXIgPT4ge1xuICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaGFuZGxlcik7XG4gICAgICB9LFxuICAgICAgbm90aWZ5SW5wdXQ6ICgpID0+IHtcbiAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB0aGlzLmZvdW5kYXRpb24uZ2V0VmFsdWUoKSk7XG4gICAgICB9LFxuICAgICAgbm90aWZ5Q2hhbmdlOiAoKSA9PiB7XG4gICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIHRoaXMuZm91bmRhdGlvbi5nZXRWYWx1ZSgpKTtcbiAgICAgIH0sXG4gICAgICBzZXRUaHVtYkNvbnRhaW5lclN0eWxlUHJvcGVydHk6IChwcm9wZXJ0eU5hbWUsIHZhbHVlKSA9PiB7XG4gICAgICAgIHRoaXMuJHNldCh0aGlzLnRodW1iU3R5bGVzLCBwcm9wZXJ0eU5hbWUsIHZhbHVlKTtcbiAgICAgIH0sXG4gICAgICBzZXRUcmFja1N0eWxlUHJvcGVydHk6IChwcm9wZXJ0eU5hbWUsIHZhbHVlKSA9PiB7XG4gICAgICAgIHRoaXMuJHNldCh0aGlzLnRyYWNrU3R5bGVzLCBwcm9wZXJ0eU5hbWUsIHZhbHVlKTtcbiAgICAgIH0sXG4gICAgICBzZXRNYXJrZXJWYWx1ZTogdmFsdWUgPT4ge1xuICAgICAgICB0aGlzLm1hcmtlclZhbHVlID0gdmFsdWU7XG4gICAgICB9LFxuICAgICAgYXBwZW5kVHJhY2tNYXJrZXJzOiBudW1NYXJrZXJzID0+IHtcbiAgICAgICAgdGhpcy5udW1NYXJrZXJzID0gbnVtTWFya2VycztcbiAgICAgIH0sXG4gICAgICByZW1vdmVUcmFja01hcmtlcnM6ICgpID0+IHtcbiAgICAgICAgdGhpcy5udW1NYXJrZXJzID0gMDtcbiAgICAgIH0sXG4gICAgICBzZXRMYXN0VHJhY2tNYXJrZXJzU3R5bGVQcm9wZXJ0eTogKHByb3BlcnR5TmFtZSwgdmFsdWUpID0+IHtcbiAgICAgICAgdGhpcy4kc2V0KHRoaXMubGFzdFRyYWNrTWFya2Vyc1N0eWxlcywgcHJvcGVydHlOYW1lLCB2YWx1ZSk7XG4gICAgICB9LFxuICAgICAgaXNSVEw6ICgpID0+IGZhbHNlLFxuICAgIH0pO1xuXG4gICAgdGhpcy5mb3VuZGF0aW9uLmluaXQoKTtcbiAgICB0aGlzLmZvdW5kYXRpb24uc2V0RGlzYWJsZWQodGhpcy5kaXNhYmxlZCk7XG4gICAgaWYgKE51bWJlcih0aGlzLm1pbikgPD0gdGhpcy5mb3VuZGF0aW9uLmdldE1heCgpKSB7XG4gICAgICB0aGlzLmZvdW5kYXRpb24uc2V0TWluKE51bWJlcih0aGlzLm1pbikpO1xuICAgICAgdGhpcy5mb3VuZGF0aW9uLnNldE1heChOdW1iZXIodGhpcy5tYXgpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5mb3VuZGF0aW9uLnNldE1heChOdW1iZXIodGhpcy5tYXgpKTtcbiAgICAgIHRoaXMuZm91bmRhdGlvbi5zZXRNaW4oTnVtYmVyKHRoaXMubWluKSk7XG4gICAgfVxuICAgIHRoaXMuZm91bmRhdGlvbi5zZXRTdGVwKE51bWJlcih0aGlzLnN0ZXApKTtcbiAgICB0aGlzLmZvdW5kYXRpb24uc2V0VmFsdWUoTnVtYmVyKHRoaXMudmFsdWUpKTtcbiAgICBpZiAodGhpcy5oYXNNYXJrZXJzKSB7XG4gICAgICB0aGlzLmZvdW5kYXRpb24uc2V0dXBUcmFja01hcmtlcigpO1xuICAgIH1cblxuICAgIHRoaXMuJHJvb3QuJG9uKCdtZGM6bGF5b3V0JywgdGhpcy5sYXlvdXQpO1xuXG4gICAgaWYgKHRoaXMubGF5b3V0T24pIHtcbiAgICAgIGxldCBzb3VyY2UgPSB0aGlzLmxheW91dE9uU291cmNlIHx8IHRoaXMuJHJvb3Q7XG4gICAgICBzb3VyY2UuJG9uKHRoaXMubGF5b3V0T24sIHRoaXMubGF5b3V0KTtcbiAgICB9XG4gIH0sXG4gIGJlZm9yZURlc3Ryb3koKSB7XG4gICAgdGhpcy5mb3VuZGF0aW9uLmRlc3Ryb3koKTtcbiAgfSxcbn07XG48L3NjcmlwdD5cbiIsImltcG9ydCB7QmFzZVBsdWdpbn0gZnJvbSAnLi4vYmFzZSdcbmltcG9ydCBtZGNTbGlkZXIgZnJvbSAnLi9tZGMtc2xpZGVyLnZ1ZSdcblxuZXhwb3J0IHtcbiAgbWRjU2xpZGVyXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJhc2VQbHVnaW4oe1xuICBtZGNTbGlkZXJcbn0pXG4iLCIvKipcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuZXhwb3J0IGNvbnN0IGNzc0NsYXNzZXMgPSB7XG4gIFJPT1Q6ICdtZGMtc25hY2tiYXInLFxuICBURVhUOiAnbWRjLXNuYWNrYmFyX190ZXh0JyxcbiAgQUNUSU9OX1dSQVBQRVI6ICdtZGMtc25hY2tiYXJfX2FjdGlvbi13cmFwcGVyJyxcbiAgQUNUSU9OX0JVVFRPTjogJ21kYy1zbmFja2Jhcl9fYWN0aW9uLWJ1dHRvbicsXG4gIEFDVElWRTogJ21kYy1zbmFja2Jhci0tYWN0aXZlJyxcbiAgTVVMVElMSU5FOiAnbWRjLXNuYWNrYmFyLS1tdWx0aWxpbmUnLFxuICBBQ1RJT05fT05fQk9UVE9NOiAnbWRjLXNuYWNrYmFyLS1hY3Rpb24tb24tYm90dG9tJyxcbn07XG5cbmV4cG9ydCBjb25zdCBzdHJpbmdzID0ge1xuICBURVhUX1NFTEVDVE9SOiAnLm1kYy1zbmFja2Jhcl9fdGV4dCcsXG4gIEFDVElPTl9XUkFQUEVSX1NFTEVDVE9SOiAnLm1kYy1zbmFja2Jhcl9fYWN0aW9uLXdyYXBwZXInLFxuICBBQ1RJT05fQlVUVE9OX1NFTEVDVE9SOiAnLm1kYy1zbmFja2Jhcl9fYWN0aW9uLWJ1dHRvbicsXG4gIFNIT1dfRVZFTlQ6ICdNRENTbmFja2JhcjpzaG93JyxcbiAgSElERV9FVkVOVDogJ01EQ1NuYWNrYmFyOmhpZGUnLFxufTtcblxuZXhwb3J0IGNvbnN0IG51bWJlcnMgPSB7XG4gIE1FU1NBR0VfVElNRU9VVDogMjc1MCxcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQge01EQ0ZvdW5kYXRpb259IGZyb20gJ0BtYXRlcmlhbC9iYXNlL2luZGV4JztcbmltcG9ydCB7Y3NzQ2xhc3Nlcywgc3RyaW5ncywgbnVtYmVyc30gZnJvbSAnLi9jb25zdGFudHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNRENTbmFja2JhckZvdW5kYXRpb24gZXh0ZW5kcyBNRENGb3VuZGF0aW9uIHtcbiAgc3RhdGljIGdldCBjc3NDbGFzc2VzKCkge1xuICAgIHJldHVybiBjc3NDbGFzc2VzO1xuICB9XG5cbiAgc3RhdGljIGdldCBzdHJpbmdzKCkge1xuICAgIHJldHVybiBzdHJpbmdzO1xuICB9XG5cbiAgc3RhdGljIGdldCBkZWZhdWx0QWRhcHRlcigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgYWRkQ2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICByZW1vdmVDbGFzczogKC8qIGNsYXNzTmFtZTogc3RyaW5nICovKSA9PiB7fSxcbiAgICAgIHNldEFyaWFIaWRkZW46ICgpID0+IHt9LFxuICAgICAgdW5zZXRBcmlhSGlkZGVuOiAoKSA9PiB7fSxcbiAgICAgIHNldEFjdGlvbkFyaWFIaWRkZW46ICgpID0+IHt9LFxuICAgICAgdW5zZXRBY3Rpb25BcmlhSGlkZGVuOiAoKSA9PiB7fSxcbiAgICAgIHNldEFjdGlvblRleHQ6ICgvKiBhY3Rpb25UZXh0OiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgc2V0TWVzc2FnZVRleHQ6ICgvKiBtZXNzYWdlOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgc2V0Rm9jdXM6ICgpID0+IHt9LFxuICAgICAgdmlzaWJpbGl0eUlzSGlkZGVuOiAoKSA9PiAvKiBib29sZWFuICovIGZhbHNlLFxuICAgICAgcmVnaXN0ZXJDYXB0dXJlZEJsdXJIYW5kbGVyOiAoLyogaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBkZXJlZ2lzdGVyQ2FwdHVyZWRCbHVySGFuZGxlcjogKC8qIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgcmVnaXN0ZXJWaXNpYmlsaXR5Q2hhbmdlSGFuZGxlcjogKC8qIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgZGVyZWdpc3RlclZpc2liaWxpdHlDaGFuZ2VIYW5kbGVyOiAoLyogaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICByZWdpc3RlckNhcHR1cmVkSW50ZXJhY3Rpb25IYW5kbGVyOiAoLyogZXZ0VHlwZTogc3RyaW5nLCBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJDYXB0dXJlZEludGVyYWN0aW9uSGFuZGxlcjogKC8qIGV2dFR5cGU6IHN0cmluZywgaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICByZWdpc3RlckFjdGlvbkNsaWNrSGFuZGxlcjogKC8qIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgZGVyZWdpc3RlckFjdGlvbkNsaWNrSGFuZGxlcjogKC8qIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgcmVnaXN0ZXJUcmFuc2l0aW9uRW5kSGFuZGxlcjogKC8qIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgZGVyZWdpc3RlclRyYW5zaXRpb25FbmRIYW5kbGVyOiAoLyogaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBub3RpZnlTaG93OiAoKSA9PiB7fSxcbiAgICAgIG5vdGlmeUhpZGU6ICgpID0+IHt9LFxuICAgIH07XG4gIH1cblxuICBnZXQgYWN0aXZlKCkge1xuICAgIHJldHVybiB0aGlzLmFjdGl2ZV87XG4gIH1cblxuICBjb25zdHJ1Y3RvcihhZGFwdGVyKSB7XG4gICAgc3VwZXIoT2JqZWN0LmFzc2lnbihNRENTbmFja2JhckZvdW5kYXRpb24uZGVmYXVsdEFkYXB0ZXIsIGFkYXB0ZXIpKTtcblxuICAgIHRoaXMuYWN0aXZlXyA9IGZhbHNlO1xuICAgIHRoaXMuYWN0aW9uV2FzQ2xpY2tlZF8gPSBmYWxzZTtcbiAgICB0aGlzLmRpc21pc3NPbkFjdGlvbl8gPSB0cnVlO1xuICAgIHRoaXMuZmlyc3RGb2N1c18gPSB0cnVlO1xuICAgIHRoaXMucG9pbnRlckRvd25SZWNvZ25pemVkXyA9IGZhbHNlO1xuICAgIHRoaXMuc25hY2tiYXJIYXNGb2N1c18gPSBmYWxzZTtcbiAgICB0aGlzLnNuYWNrYmFyRGF0YV8gPSBudWxsO1xuICAgIHRoaXMucXVldWVfID0gW107XG4gICAgdGhpcy5hY3Rpb25DbGlja0hhbmRsZXJfID0gKCkgPT4ge1xuICAgICAgdGhpcy5hY3Rpb25XYXNDbGlja2VkXyA9IHRydWU7XG4gICAgICB0aGlzLmludm9rZUFjdGlvbl8oKTtcbiAgICB9O1xuICAgIHRoaXMudmlzaWJpbGl0eWNoYW5nZUhhbmRsZXJfID0gKCkgPT4ge1xuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZW91dElkXyk7XG4gICAgICB0aGlzLnNuYWNrYmFySGFzRm9jdXNfID0gdHJ1ZTtcblxuICAgICAgaWYgKCF0aGlzLmFkYXB0ZXJfLnZpc2liaWxpdHlJc0hpZGRlbigpKSB7XG4gICAgICAgIHNldFRpbWVvdXQodGhpcy5jbGVhbnVwXy5iaW5kKHRoaXMpLCB0aGlzLnNuYWNrYmFyRGF0YV8udGltZW91dCB8fCBudW1iZXJzLk1FU1NBR0VfVElNRU9VVCk7XG4gICAgICB9XG4gICAgfTtcbiAgICB0aGlzLmludGVyYWN0aW9uSGFuZGxlcl8gPSAoZXZ0KSA9PiB7XG4gICAgICBpZiAoZXZ0LnR5cGUgPT0gJ3RvdWNoc3RhcnQnIHx8IGV2dC50eXBlID09ICdtb3VzZWRvd24nKSB7XG4gICAgICAgIHRoaXMucG9pbnRlckRvd25SZWNvZ25pemVkXyA9IHRydWU7XG4gICAgICB9XG4gICAgICB0aGlzLmhhbmRsZVBvc3NpYmxlVGFiS2V5Ym9hcmRGb2N1c18oZXZ0KTtcblxuICAgICAgaWYgKGV2dC50eXBlID09ICdmb2N1cycpIHtcbiAgICAgICAgdGhpcy5wb2ludGVyRG93blJlY29nbml6ZWRfID0gZmFsc2U7XG4gICAgICB9XG4gICAgfTtcbiAgICB0aGlzLmJsdXJIYW5kbGVyXyA9ICgpID0+IHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXRJZF8pO1xuICAgICAgdGhpcy5zbmFja2Jhckhhc0ZvY3VzXyA9IGZhbHNlO1xuICAgICAgdGhpcy50aW1lb3V0SWRfID0gc2V0VGltZW91dCh0aGlzLmNsZWFudXBfLmJpbmQodGhpcyksIHRoaXMuc25hY2tiYXJEYXRhXy50aW1lb3V0IHx8IG51bWJlcnMuTUVTU0FHRV9USU1FT1VUKTtcbiAgICB9O1xuICB9XG5cbiAgaW5pdCgpIHtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVyQWN0aW9uQ2xpY2tIYW5kbGVyKHRoaXMuYWN0aW9uQ2xpY2tIYW5kbGVyXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5zZXRBcmlhSGlkZGVuKCk7XG4gICAgdGhpcy5hZGFwdGVyXy5zZXRBY3Rpb25BcmlhSGlkZGVuKCk7XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlckFjdGlvbkNsaWNrSGFuZGxlcih0aGlzLmFjdGlvbkNsaWNrSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlckNhcHR1cmVkQmx1ckhhbmRsZXIodGhpcy5ibHVySGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlclZpc2liaWxpdHlDaGFuZ2VIYW5kbGVyKHRoaXMudmlzaWJpbGl0eWNoYW5nZUhhbmRsZXJfKTtcbiAgICBbJ3RvdWNoc3RhcnQnLCAnbW91c2Vkb3duJywgJ2ZvY3VzJ10uZm9yRWFjaCgoZXZ0VHlwZSkgPT4ge1xuICAgICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVyQ2FwdHVyZWRJbnRlcmFjdGlvbkhhbmRsZXIoZXZ0VHlwZSwgdGhpcy5pbnRlcmFjdGlvbkhhbmRsZXJfKTtcbiAgICB9KTtcbiAgfVxuXG4gIGRpc21pc3Nlc09uQWN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLmRpc21pc3NPbkFjdGlvbl87XG4gIH1cblxuICBzZXREaXNtaXNzT25BY3Rpb24oZGlzbWlzc09uQWN0aW9uKSB7XG4gICAgdGhpcy5kaXNtaXNzT25BY3Rpb25fID0gISFkaXNtaXNzT25BY3Rpb247XG4gIH1cblxuICBzaG93KGRhdGEpIHtcbiAgICBpZiAoIWRhdGEpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ1BsZWFzZSBwcm92aWRlIGEgZGF0YSBvYmplY3Qgd2l0aCBhdCBsZWFzdCBhIG1lc3NhZ2UgdG8gZGlzcGxheS4nKTtcbiAgICB9XG4gICAgaWYgKCFkYXRhLm1lc3NhZ2UpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignUGxlYXNlIHByb3ZpZGUgYSBtZXNzYWdlIHRvIGJlIGRpc3BsYXllZC4nKTtcbiAgICB9XG4gICAgaWYgKGRhdGEuYWN0aW9uSGFuZGxlciAmJiAhZGF0YS5hY3Rpb25UZXh0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1BsZWFzZSBwcm92aWRlIGFjdGlvbiB0ZXh0IHdpdGggdGhlIGhhbmRsZXIuJyk7XG4gICAgfVxuICAgIGlmICh0aGlzLmFjdGl2ZSkge1xuICAgICAgdGhpcy5xdWV1ZV8ucHVzaChkYXRhKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZW91dElkXyk7XG4gICAgdGhpcy5zbmFja2JhckRhdGFfID0gZGF0YTtcbiAgICB0aGlzLmZpcnN0Rm9jdXNfID0gdHJ1ZTtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVyVmlzaWJpbGl0eUNoYW5nZUhhbmRsZXIodGhpcy52aXNpYmlsaXR5Y2hhbmdlSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJDYXB0dXJlZEJsdXJIYW5kbGVyKHRoaXMuYmx1ckhhbmRsZXJfKTtcbiAgICBbJ3RvdWNoc3RhcnQnLCAnbW91c2Vkb3duJywgJ2ZvY3VzJ10uZm9yRWFjaCgoZXZ0VHlwZSkgPT4ge1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlckNhcHR1cmVkSW50ZXJhY3Rpb25IYW5kbGVyKGV2dFR5cGUsIHRoaXMuaW50ZXJhY3Rpb25IYW5kbGVyXyk7XG4gICAgfSk7XG5cbiAgICBjb25zdCB7QUNUSVZFLCBNVUxUSUxJTkUsIEFDVElPTl9PTl9CT1RUT019ID0gY3NzQ2xhc3NlcztcblxuICAgIHRoaXMuYWRhcHRlcl8uc2V0TWVzc2FnZVRleHQodGhpcy5zbmFja2JhckRhdGFfLm1lc3NhZ2UpO1xuXG4gICAgaWYgKHRoaXMuc25hY2tiYXJEYXRhXy5tdWx0aWxpbmUpIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoTVVMVElMSU5FKTtcbiAgICAgIGlmICh0aGlzLnNuYWNrYmFyRGF0YV8uYWN0aW9uT25Cb3R0b20pIHtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyhBQ1RJT05fT05fQk9UVE9NKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodGhpcy5zbmFja2JhckRhdGFfLmFjdGlvbkhhbmRsZXIpIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uc2V0QWN0aW9uVGV4dCh0aGlzLnNuYWNrYmFyRGF0YV8uYWN0aW9uVGV4dCk7XG4gICAgICB0aGlzLmFjdGlvbkhhbmRsZXJfID0gdGhpcy5zbmFja2JhckRhdGFfLmFjdGlvbkhhbmRsZXI7XG4gICAgICB0aGlzLnNldEFjdGlvbkhpZGRlbl8oZmFsc2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNldEFjdGlvbkhpZGRlbl8odHJ1ZSk7XG4gICAgICB0aGlzLmFjdGlvbkhhbmRsZXJfID0gbnVsbDtcbiAgICAgIHRoaXMuYWRhcHRlcl8uc2V0QWN0aW9uVGV4dChudWxsKTtcbiAgICB9XG5cbiAgICB0aGlzLmFjdGl2ZV8gPSB0cnVlO1xuICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoQUNUSVZFKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnVuc2V0QXJpYUhpZGRlbigpO1xuICAgIHRoaXMuYWRhcHRlcl8ubm90aWZ5U2hvdygpO1xuXG4gICAgdGhpcy50aW1lb3V0SWRfID0gc2V0VGltZW91dCh0aGlzLmNsZWFudXBfLmJpbmQodGhpcyksIHRoaXMuc25hY2tiYXJEYXRhXy50aW1lb3V0IHx8IG51bWJlcnMuTUVTU0FHRV9USU1FT1VUKTtcbiAgfVxuXG4gIGhhbmRsZVBvc3NpYmxlVGFiS2V5Ym9hcmRGb2N1c18oKSB7XG4gICAgY29uc3QgaGlqYWNrRm9jdXMgPVxuICAgICAgdGhpcy5maXJzdEZvY3VzXyAmJiAhdGhpcy5wb2ludGVyRG93blJlY29nbml6ZWRfO1xuXG4gICAgaWYgKGhpamFja0ZvY3VzKSB7XG4gICAgICB0aGlzLnNldEZvY3VzT25BY3Rpb25fKCk7XG4gICAgfVxuXG4gICAgdGhpcy5maXJzdEZvY3VzXyA9IGZhbHNlO1xuICB9XG5cbiAgc2V0Rm9jdXNPbkFjdGlvbl8oKSB7XG4gICAgdGhpcy5hZGFwdGVyXy5zZXRGb2N1cygpO1xuICAgIHRoaXMuc25hY2tiYXJIYXNGb2N1c18gPSB0cnVlO1xuICAgIHRoaXMuZmlyc3RGb2N1c18gPSBmYWxzZTtcbiAgfVxuXG4gIGludm9rZUFjdGlvbl8oKSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghdGhpcy5hY3Rpb25IYW5kbGVyXykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRoaXMuYWN0aW9uSGFuZGxlcl8oKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKHRoaXMuZGlzbWlzc09uQWN0aW9uXykge1xuICAgICAgICB0aGlzLmNsZWFudXBfKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgY2xlYW51cF8oKSB7XG4gICAgY29uc3QgYWxsb3dEaXNtaXNzYWwgPSAhdGhpcy5zbmFja2Jhckhhc0ZvY3VzXyB8fCB0aGlzLmFjdGlvbldhc0NsaWNrZWRfO1xuXG4gICAgaWYgKGFsbG93RGlzbWlzc2FsKSB7XG4gICAgICBjb25zdCB7QUNUSVZFLCBNVUxUSUxJTkUsIEFDVElPTl9PTl9CT1RUT019ID0gY3NzQ2xhc3NlcztcblxuICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhBQ1RJVkUpO1xuXG4gICAgICBjb25zdCBoYW5kbGVyID0gKCkgPT4ge1xuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0SWRfKTtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVyVHJhbnNpdGlvbkVuZEhhbmRsZXIoaGFuZGxlcik7XG4gICAgICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoTVVMVElMSU5FKTtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhBQ1RJT05fT05fQk9UVE9NKTtcbiAgICAgICAgdGhpcy5zZXRBY3Rpb25IaWRkZW5fKHRydWUpO1xuICAgICAgICB0aGlzLmFkYXB0ZXJfLnNldEFyaWFIaWRkZW4oKTtcbiAgICAgICAgdGhpcy5hY3RpdmVfID0gZmFsc2U7XG4gICAgICAgIHRoaXMuc25hY2tiYXJIYXNGb2N1c18gPSBmYWxzZTtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5ub3RpZnlIaWRlKCk7XG4gICAgICAgIHRoaXMuc2hvd05leHRfKCk7XG4gICAgICB9O1xuXG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVyVHJhbnNpdGlvbkVuZEhhbmRsZXIoaGFuZGxlcik7XG4gICAgfVxuICB9XG5cbiAgc2hvd05leHRfKCkge1xuICAgIGlmICghdGhpcy5xdWV1ZV8ubGVuZ3RoKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuc2hvdyh0aGlzLnF1ZXVlXy5zaGlmdCgpKTtcbiAgfVxuXG4gIHNldEFjdGlvbkhpZGRlbl8oaXNIaWRkZW4pIHtcbiAgICBpZiAoaXNIaWRkZW4pIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uc2V0QWN0aW9uQXJpYUhpZGRlbigpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnVuc2V0QWN0aW9uQXJpYUhpZGRlbigpO1xuICAgIH1cbiAgfVxufVxuIiwiPHRlbXBsYXRlPlxuPGRpdiByZWY9XCJyb290XCIgY2xhc3M9XCJtZGMtc25hY2tiYXJcIiA6Y2xhc3M9XCJjbGFzc2VzXCJcbiAgICBhcmlhLWxpdmU9XCJhc3NlcnRpdmVcIiBhcmlhLWF0b21pYz1cInRydWVcIiA6YXJpYS1oaWRkZW49XCJoaWRkZW5cIj5cbiAgPGRpdiBjbGFzcz1cIm1kYy1zbmFja2Jhcl9fdGV4dFwiPnt7bWVzc2FnZX19PC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJtZGMtc25hY2tiYXJfX2FjdGlvbi13cmFwcGVyXCI+XG4gICAgPGJ1dHRvbiByZWY9XCJidXR0b25cIiB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgY2xhc3M9XCJtZGMtc25hY2tiYXJfX2FjdGlvbi1idXR0b25cIlxuICAgICAgICA6YXJpYS1oaWRkZW49XCJhY3Rpb25IaWRkZW5cIj57e2FjdGlvblRleHR9fTwvYnV0dG9uPlxuICA8L2Rpdj5cbjwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBNRENTbmFja2JhckZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL3NuYWNrYmFyL2ZvdW5kYXRpb24nXG5pbXBvcnQgeyBnZXRDb3JyZWN0RXZlbnROYW1lIH0gZnJvbSAnQG1hdGVyaWFsL2FuaW1hdGlvbidcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnbWRjLXNuYWNrYmFyJyxcbiAgcHJvcHM6IHtcbiAgICAnYWxpZ24tc3RhcnQnOiBCb29sZWFuLFxuICAgICdldmVudCc6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICAgIGRlZmF1bHQgKCkgeyByZXR1cm4gJ3Nob3ctc25hY2tiYXInIH1cbiAgICB9LFxuICAgICdldmVudC1zb3VyY2UnOiB7XG4gICAgICB0eXBlOiBPYmplY3QsXG4gICAgICByZXF1aXJlZDogZmFsc2UsXG4gICAgICBkZWZhdWx0ICgpIHsgcmV0dXJuIHRoaXMuJHJvb3QgfVxuICAgIH0sXG4gICAgJ2Rpc21pc3Nlcy1vbi1hY3Rpb24nOiB7dHlwZTogQm9vbGVhbiwgZGVmYXVsdDogdHJ1ZX1cbiAgfSxcbiAgZGF0YSAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNsYXNzZXM6IHtcbiAgICAgICAgJ21kYy1zbmFja2Jhci0tYWxpZ24tc3RhcnQnOiB0aGlzLmFsaWduU3RhcnRcbiAgICAgIH0sXG4gICAgICBtZXNzYWdlOiAnJyxcbiAgICAgIGFjdGlvblRleHQ6ICcnLFxuICAgICAgaGlkZGVuOiBmYWxzZSxcbiAgICAgIGFjdGlvbkhpZGRlbjogZmFsc2UsXG4gICAgfVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgc2hvdyAoZGF0YSkge1xuICAgICAgdGhpcy5mb3VuZGF0aW9uLnNob3coZGF0YSlcbiAgICB9XG4gIH0sXG4gIG1vdW50ZWQgKCkge1xuICAgIHRoaXMuZm91bmRhdGlvbiA9IG5ldyBNRENTbmFja2JhckZvdW5kYXRpb24oe1xuICAgICAgYWRkQ2xhc3M6IChjbGFzc05hbWUpID0+IHRoaXMuJHNldCh0aGlzLmNsYXNzZXMsIGNsYXNzTmFtZSwgdHJ1ZSksXG4gICAgICByZW1vdmVDbGFzczogKGNsYXNzTmFtZSkgPT4gdGhpcy4kZGVsZXRlKHRoaXMuY2xhc3NlcywgY2xhc3NOYW1lKSxcbiAgICAgIHNldEFyaWFIaWRkZW46ICgpID0+IHRoaXMuaGlkZGVuID0gdHJ1ZSxcbiAgICAgIHVuc2V0QXJpYUhpZGRlbjogKCkgPT4gdGhpcy5oaWRkZW4gPSBmYWxzZSxcbiAgICAgIHNldEFjdGlvbkFyaWFIaWRkZW46ICgpID0+IHRoaXMuYWN0aW9uSGlkZGVuID0gdHJ1ZSxcbiAgICAgIHVuc2V0QWN0aW9uQXJpYUhpZGRlbjogKCkgPT4gdGhpcy5hY3Rpb25IaWRkZW4gPSBmYWxzZSxcbiAgICAgIHNldEFjdGlvblRleHQ6ICh0ZXh0KSA9PiB7IHRoaXMuYWN0aW9uVGV4dCA9IHRleHQgfSxcbiAgICAgIHNldE1lc3NhZ2VUZXh0OiAodGV4dCkgPT4geyB0aGlzLm1lc3NhZ2UgPSB0ZXh0ICB9LFxuICAgICAgc2V0Rm9jdXM6ICgpID0+IHRoaXMuJHJlZnMuYnV0dG9uLmZvY3VzKCksXG4gICAgICB2aXNpYmlsaXR5SXNIaWRkZW46ICgpID0+IGRvY3VtZW50LmhpZGRlbixcbiAgICAgIHJlZ2lzdGVyQ2FwdHVyZWRCbHVySGFuZGxlcjogKGhhbmRsZXIpID0+IHRoaXMuJHJlZnMuYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCBoYW5kbGVyLCB0cnVlKSxcbiAgICAgIGRlcmVnaXN0ZXJDYXB0dXJlZEJsdXJIYW5kbGVyOiAoaGFuZGxlcikgPT4gdGhpcy4kcmVmcy5idXR0b24ucmVtb3ZlRXZlbnRMaXN0ZW5lcignYmx1cicsIGhhbmRsZXIsIHRydWUpLFxuICAgICAgcmVnaXN0ZXJWaXNpYmlsaXR5Q2hhbmdlSGFuZGxlcjogKGhhbmRsZXIpID0+IGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCBoYW5kbGVyKSxcbiAgICAgIGRlcmVnaXN0ZXJWaXNpYmlsaXR5Q2hhbmdlSGFuZGxlcjogKGhhbmRsZXIpID0+IGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCBoYW5kbGVyKSxcbiAgICAgIHJlZ2lzdGVyQ2FwdHVyZWRJbnRlcmFjdGlvbkhhbmRsZXI6IChldnQsIGhhbmRsZXIpID0+XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihldnQsIGhhbmRsZXIsIHRydWUpLFxuICAgICAgZGVyZWdpc3RlckNhcHR1cmVkSW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0LCBoYW5kbGVyKSA9PlxuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZ0LCBoYW5kbGVyLCB0cnVlKSxcbiAgICAgIHJlZ2lzdGVyQWN0aW9uQ2xpY2tIYW5kbGVyOiAoaGFuZGxlcikgPT4gdGhpcy4kcmVmcy5idXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVyKSxcbiAgICAgIGRlcmVnaXN0ZXJBY3Rpb25DbGlja0hhbmRsZXI6IChoYW5kbGVyKSA9PiB0aGlzLiRyZWZzLmJ1dHRvbi5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZXIpLFxuICAgICAgcmVnaXN0ZXJUcmFuc2l0aW9uRW5kSGFuZGxlcjogKGhhbmRsZXIpID0+IHtcbiAgICAgICAgdGhpcy4kcmVmcy5yb290LmFkZEV2ZW50TGlzdGVuZXIoZ2V0Q29ycmVjdEV2ZW50TmFtZSh3aW5kb3csICd0cmFuc2l0aW9uZW5kJyksIGhhbmRsZXIpXG4gICAgICB9LFxuICAgICAgZGVyZWdpc3RlclRyYW5zaXRpb25FbmRIYW5kbGVyOiAoaGFuZGxlcikgPT4ge1xuICAgICAgICB0aGlzLiRyZWZzLnJvb3QucmVtb3ZlRXZlbnRMaXN0ZW5lcihnZXRDb3JyZWN0RXZlbnROYW1lKHdpbmRvdywgJ3RyYW5zaXRpb25lbmQnKSwgaGFuZGxlcilcbiAgICAgIH0sXG4gICAgICBub3RpZnlTaG93OiAoKSA9PiB0aGlzLiRlbWl0KCdzaG93JyksXG4gICAgICBub3RpZnlIaWRlOiAoKSA9PiB0aGlzLiRlbWl0KCdoaWRlJyksXG4gICAgfSlcbiAgICB0aGlzLmZvdW5kYXRpb24uaW5pdCgpXG4gICAgaWYgKHRoaXMuZXZlbnQpIHtcbiAgICAgIHRoaXMuZXZlbnRTb3VyY2UuJG9uKHRoaXMuZXZlbnQsIChkYXRhKSA9PiB7XG4gICAgICAgIHRoaXMuZm91bmRhdGlvbi5zaG93KGRhdGEpXG4gICAgICB9KVxuICAgIH1cbiAgICB0aGlzLmZvdW5kYXRpb24uc2V0RGlzbWlzc09uQWN0aW9uKHRoaXMuZGlzbWlzc2VzT25BY3Rpb24pXG4gIH0sXG4gIGJlZm9yZURlc3Ryb3kgKCkge1xuICAgIHRoaXMuZm91bmRhdGlvbi5kZXN0cm95KClcbiAgfVxufVxuPC9zY3JpcHQ+XG4iLCJpbXBvcnQge0Jhc2VQbHVnaW59IGZyb20gJy4uL2Jhc2UnXG5pbXBvcnQgbWRjU25hY2tiYXIgZnJvbSAnLi9tZGMtc25hY2tiYXIudnVlJ1xuXG5leHBvcnQge1xuICBtZGNTbmFja2JhclxufVxuXG5leHBvcnQgZGVmYXVsdCBCYXNlUGx1Z2luKHtcbiAgbWRjU25hY2tiYXJcbn0pXG4iLCI8dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJtZGMtc3dpdGNoLXdyYXBwZXJcIiBcbiAgICA6Y2xhc3M9XCJ7XG4gICAgICAgICdtZGMtZm9ybS1maWVsZCc6IHRoaXMuaGFzTGFiZWwsXG4gICAgICAgICdtZGMtZm9ybS1maWVsZC0tYWxpZ24tZW5kJzogdGhpcy5oYXNMYWJlbCAmJiB0aGlzLmFsaWduRW5kXG4gICAgICB9XCIgPlxuXG4gICAgPGRpdiBjbGFzcz1cIm1kYy1zd2l0Y2hcIiBcbiAgICAgIDpjbGFzcz1cInsnbWRjLXN3aXRjaC0tZGlzYWJsZWQnOiBkaXNhYmxlZCB9XCI+XG4gICAgICA8aW5wdXQgcmVmPVwiY29udHJvbFwiIHR5cGU9XCJjaGVja2JveFwiIFxuICAgICAgICA6bmFtZT1cIm5hbWVcIiA6aWQ9XCJfdWlkXCIgXG4gICAgICAgIGNsYXNzPVwibWRjLXN3aXRjaF9fbmF0aXZlLWNvbnRyb2xcIiBcbiAgICAgICAgOmNoZWNrZWQ9XCJjaGVja2VkXCIgXG4gICAgICAgIDpkaXNhYmxlZD1cImRpc2FibGVkXCJcbiAgICAgICAgQGNoYW5nZT1cIm9uQ2hhbmdlZFwiIC8+XG5cbiAgICAgIDxkaXYgY2xhc3M9XCJtZGMtc3dpdGNoX19iYWNrZ3JvdW5kXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJtZGMtc3dpdGNoX19rbm9iXCI+PC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgIDwvZGl2PlxuXG4gICAgPGxhYmVsIDpmb3I9XCJfdWlkXCIgdi1pZj1cImhhc0xhYmVsXCJcbiAgICAgIGNsYXNzPVwibWRjLXN3aXRjaC1sYWJlbFwiPlxuICAgICAgPHNsb3Q+e3tsYWJlbH19PC9zbG90PlxuICAgIDwvbGFiZWw+XG5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHtEaXNwYXRjaEZvY3VzTWl4aW59IGZyb20gJy4uL2Jhc2UnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy1zd2l0Y2gnLFxuICBtaXhpbnM6IFtEaXNwYXRjaEZvY3VzTWl4aW5dLFxuICBtb2RlbDoge1xuICAgIHByb3A6ICdjaGVja2VkJyxcbiAgICBldmVudDogJ2NoYW5nZSdcbiAgfSxcbiAgcHJvcHM6IHtcbiAgICAnY2hlY2tlZCc6IEJvb2xlYW4sXG4gICAgJ2xhYmVsJzogU3RyaW5nLFxuICAgICdhbGlnbkVuZCc6IEJvb2xlYW4sXG4gICAgJ2Rpc2FibGVkJzogQm9vbGVhbixcbiAgICAndmFsdWUnOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdCAoKSB7IHJldHVybiAnb24nIH0gfSxcbiAgICAnbmFtZSc6IFN0cmluZ1xuICB9LFxuICBjb21wdXRlZDoge1xuICAgIGhhc0xhYmVsICgpIHtcbiAgICAgIHJldHVybiB0aGlzLmxhYmVsIHx8IHRoaXMuJHNsb3RzLmRlZmF1bHRcbiAgICB9XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBvbkNoYW5nZWQgKGV2ZW50KSB7XG4gICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCBldmVudC50YXJnZXQuY2hlY2tlZClcbiAgICB9XG4gIH1cbn1cbjwvc2NyaXB0PlxuIiwiaW1wb3J0IHtCYXNlUGx1Z2lufSBmcm9tICcuLi9iYXNlJ1xuaW1wb3J0IG1kY1N3aXRjaCBmcm9tICcuL21kYy1zd2l0Y2gudnVlJ1xuXG5leHBvcnQge1xuICBtZGNTd2l0Y2hcbn1cblxuZXhwb3J0IGRlZmF1bHQgQmFzZVBsdWdpbih7XG4gIG1kY1N3aXRjaFxufSlcbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmV4cG9ydCBjb25zdCBjc3NDbGFzc2VzID0ge1xuICBBQ1RJVkU6ICdtZGMtdGFiLS1hY3RpdmUnLFxufTtcblxuZXhwb3J0IGNvbnN0IHN0cmluZ3MgPSB7XG4gIFNFTEVDVEVEX0VWRU5UOiAnTURDVGFiOnNlbGVjdGVkJyxcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgTURDRm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvYmFzZS9mb3VuZGF0aW9uJztcbmltcG9ydCB7Y3NzQ2xhc3Nlcywgc3RyaW5nc30gZnJvbSAnLi9jb25zdGFudHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNRENUYWJGb3VuZGF0aW9uIGV4dGVuZHMgTURDRm91bmRhdGlvbiB7XG4gIHN0YXRpYyBnZXQgY3NzQ2xhc3NlcygpIHtcbiAgICByZXR1cm4gY3NzQ2xhc3NlcztcbiAgfVxuXG4gIHN0YXRpYyBnZXQgc3RyaW5ncygpIHtcbiAgICByZXR1cm4gc3RyaW5ncztcbiAgfVxuXG4gIHN0YXRpYyBnZXQgZGVmYXVsdEFkYXB0ZXIoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFkZENsYXNzOiAoLyogY2xhc3NOYW1lOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgcmVtb3ZlQ2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICByZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKC8qIHR5cGU6IHN0cmluZywgaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBkZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoLyogdHlwZTogc3RyaW5nLCBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIGdldE9mZnNldFdpZHRoOiAoKSA9PiAvKiBudW1iZXIgKi8gMCxcbiAgICAgIGdldE9mZnNldExlZnQ6ICgpID0+IC8qIG51bWJlciAqLyAwLFxuICAgICAgbm90aWZ5U2VsZWN0ZWQ6ICgpID0+IHt9LFxuICAgIH07XG4gIH1cblxuICBjb25zdHJ1Y3RvcihhZGFwdGVyID0ge30pIHtcbiAgICBzdXBlcihPYmplY3QuYXNzaWduKE1EQ1RhYkZvdW5kYXRpb24uZGVmYXVsdEFkYXB0ZXIsIGFkYXB0ZXIpKTtcblxuICAgIHRoaXMuY29tcHV0ZWRXaWR0aF8gPSAwO1xuICAgIHRoaXMuY29tcHV0ZWRMZWZ0XyA9IDA7XG4gICAgdGhpcy5pc0FjdGl2ZV8gPSBmYWxzZTtcbiAgICB0aGlzLnByZXZlbnREZWZhdWx0T25DbGlja18gPSBmYWxzZTtcblxuICAgIHRoaXMuY2xpY2tIYW5kbGVyXyA9IChldnQpID0+IHtcbiAgICAgIGlmICh0aGlzLnByZXZlbnREZWZhdWx0T25DbGlja18pIHtcbiAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB9XG4gICAgICB0aGlzLmFkYXB0ZXJfLm5vdGlmeVNlbGVjdGVkKCk7XG4gICAgfTtcblxuICAgIHRoaXMua2V5ZG93bkhhbmRsZXJfID0gKGV2dCkgPT4ge1xuICAgICAgaWYgKGV2dC5rZXkgJiYgZXZ0LmtleSA9PT0gJ0VudGVyJyB8fCBldnQua2V5Q29kZSA9PT0gMTMpIHtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5ub3RpZnlTZWxlY3RlZCgpO1xuICAgICAgfVxuICAgIH07XG4gIH1cblxuICBpbml0KCkge1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ2NsaWNrJywgdGhpcy5jbGlja0hhbmRsZXJfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdrZXlkb3duJywgdGhpcy5rZXlkb3duSGFuZGxlcl8pO1xuICB9XG5cbiAgZGVzdHJveSgpIHtcbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ2NsaWNrJywgdGhpcy5jbGlja0hhbmRsZXJfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ2tleWRvd24nLCB0aGlzLmtleWRvd25IYW5kbGVyXyk7XG4gIH1cblxuICBnZXRDb21wdXRlZFdpZHRoKCkge1xuICAgIHJldHVybiB0aGlzLmNvbXB1dGVkV2lkdGhfO1xuICB9XG5cbiAgZ2V0Q29tcHV0ZWRMZWZ0KCkge1xuICAgIHJldHVybiB0aGlzLmNvbXB1dGVkTGVmdF87XG4gIH1cblxuICBpc0FjdGl2ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5pc0FjdGl2ZV87XG4gIH1cblxuICBzZXRBY3RpdmUoaXNBY3RpdmUpIHtcbiAgICB0aGlzLmlzQWN0aXZlXyA9IGlzQWN0aXZlO1xuICAgIGlmICh0aGlzLmlzQWN0aXZlXykge1xuICAgICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyhjc3NDbGFzc2VzLkFDVElWRSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoY3NzQ2xhc3Nlcy5BQ1RJVkUpO1xuICAgIH1cbiAgfVxuXG4gIHByZXZlbnRzRGVmYXVsdE9uQ2xpY2soKSB7XG4gICAgcmV0dXJuIHRoaXMucHJldmVudERlZmF1bHRPbkNsaWNrXztcbiAgfVxuXG4gIHNldFByZXZlbnREZWZhdWx0T25DbGljayhwcmV2ZW50RGVmYXVsdE9uQ2xpY2spIHtcbiAgICB0aGlzLnByZXZlbnREZWZhdWx0T25DbGlja18gPSBwcmV2ZW50RGVmYXVsdE9uQ2xpY2s7XG4gIH1cblxuICBtZWFzdXJlU2VsZigpIHtcbiAgICB0aGlzLmNvbXB1dGVkV2lkdGhfID0gdGhpcy5hZGFwdGVyXy5nZXRPZmZzZXRXaWR0aCgpO1xuICAgIHRoaXMuY29tcHV0ZWRMZWZ0XyA9IHRoaXMuYWRhcHRlcl8uZ2V0T2Zmc2V0TGVmdCgpO1xuICB9XG59XG4iLCI8dGVtcGxhdGU+XHJcbiAgPGN1c3RvbS1saW5rIGNsYXNzPVwibWRjLXRhYlwiIFxyXG4gICAgOmNsYXNzPVwiY2xhc3Nlc1wiIDpzdHlsZT1cInN0eWxlc1wiXHJcbiAgICA6bGluaz1cImxpbmtcIiBcclxuICAgIEBjbGljaz1cImRpc3BhdGNoRXZlbnRcIj5cclxuXHJcbiAgICA8aSByZWY9XCJpY29uXCIgdi1pZj1cIiEhaGFzSWNvblwiXHJcbiAgICAgIHRhYmluZGV4PVwiMFwiIFxyXG4gICAgICBjbGFzcz1cIm1kYy10YWJfX2ljb25cIiAgXHJcbiAgICAgIDpjbGFzcz1cImhhc0ljb24uY2xhc3Nlc1wiPlxyXG4gICAgICA8c2xvdCBuYW1lPVwiaWNvblwiPnt7IGhhc0ljb24uY29udGVudCB9fTwvc2xvdD5cclxuICAgIDwvaT5cclxuXHJcbiAgICA8c3BhbiA6Y2xhc3M9XCJ7J21kYy10YWJfX2ljb24tdGV4dCc6ICEhaGFzSWNvbn1cIiB2LWlmPVwiaGFzVGV4dFwiPlxyXG4gICAgICA8c2xvdD48L3Nsb3Q+ICBcclxuICAgIDwvc3Bhbj5cclxuXHJcbiAgPC9jdXN0b20tbGluaz5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmltcG9ydCBNRENUYWJGb3VuZGF0aW9uIGZyb20gJ0BtYXRlcmlhbC90YWJzL3RhYi9mb3VuZGF0aW9uJ1xyXG5pbXBvcnQge0N1c3RvbUxpbmtNaXhpbiwgRGlzcGF0Y2hFdmVudE1peGluLCBlbWl0Q3VzdG9tRXZlbnQsIGV4dHJhY3RJY29uUHJvcCB9IGZyb20gJy4uL2Jhc2UnXHJcbmltcG9ydCB7UmlwcGxlQmFzZX0gZnJvbSAnLi4vcmlwcGxlJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIG5hbWU6ICdtZGMtdGFiJyxcclxuICBtaXhpbnM6IFtDdXN0b21MaW5rTWl4aW4sIERpc3BhdGNoRXZlbnRNaXhpbl0sXHJcbiAgcHJvcHM6IHtcclxuICAgIGFjdGl2ZTogQm9vbGVhbixcclxuICAgIGljb246IFtTdHJpbmcsIEFycmF5LCBPYmplY3RdLFxyXG4gIH0sXHJcbiAgZGF0YSAoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBjbGFzc2VzOiB7fSxcclxuICAgICAgc3R5bGVzOiB7fVxyXG4gICAgfVxyXG4gIH0sXHJcbiAgY29tcHV0ZWQ6IHtcclxuICAgIGhhc0ljb24gKCkge1xyXG4gICAgICBpZiAodGhpcy5pY29uIHx8IHRoaXMuJHNsb3RzLmljb24pIHtcclxuICAgICAgICB0aGlzLmljb24gPyBleHRyYWN0SWNvblByb3AodGhpcy5pY29uKSA6IHt9XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGZhbHNlXHJcbiAgICB9LFxyXG4gICAgaGFzVGV4dCAoKSB7XHJcbiAgICAgIHJldHVybiAhIXRoaXMuJHNsb3RzLmRlZmF1bHRcclxuICAgIH1cclxuICB9LFxyXG4gIG1ldGhvZHM6IHtcclxuICAgIGdldENvbXB1dGVkV2lkdGggKCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5mb3VuZGF0aW9uLmdldENvbXB1dGVkV2lkdGgoKVxyXG4gICAgfSxcclxuICAgIGdldENvbXB1dGVkTGVmdCAoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmZvdW5kYXRpb24uZ2V0Q29tcHV0ZWRMZWZ0KClcclxuICAgIH0sXHJcbiAgICBpc0FjdGl2ZSAoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmZvdW5kYXRpb24uaXNBY3RpdmUoKVxyXG4gICAgfSxcclxuICAgIHNldEFjdGl2ZSAoaXNBY3RpdmUpIHtcclxuICAgICAgdGhpcy5mb3VuZGF0aW9uLnNldEFjdGl2ZShpc0FjdGl2ZSlcclxuICAgIH0sXHJcbiAgICBpc0RlZmF1bHRQcmV2ZW50ZWRPbkNsaWNrICgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuZm91bmRhdGlvbi5wcmV2ZW50c0RlZmF1bHRPbkNsaWNrKClcclxuICAgIH0sXHJcbiAgICBzZXRQcmV2ZW50RGVmYXVsdE9uQ2xpY2sgKHByZXZlbnREZWZhdWx0T25DbGljaykge1xyXG4gICAgICB0aGlzLmZvdW5kYXRpb24uc2V0UHJldmVudERlZmF1bHRPbkNsaWNrKHByZXZlbnREZWZhdWx0T25DbGljaylcclxuICAgIH0sXHJcbiAgICBtZWFzdXJlU2VsZiAoKSB7XHJcbiAgICAgIHRoaXMuZm91bmRhdGlvbi5tZWFzdXJlU2VsZigpXHJcbiAgICB9XHJcbiAgfSxcclxuICBtb3VudGVkICgpIHtcclxuICAgIHRoaXMuZm91bmRhdGlvbiA9IG5ldyBNRENUYWJGb3VuZGF0aW9uKHtcclxuICAgICAgYWRkQ2xhc3M6IChjbGFzc05hbWUpID0+XHJcbiAgICAgICAgdGhpcy4kc2V0KHRoaXMuY2xhc3NlcywgY2xhc3NOYW1lLCB0cnVlKSxcclxuICAgICAgcmVtb3ZlQ2xhc3M6IChjbGFzc05hbWUpID0+XHJcbiAgICAgICAgdGhpcy4kZGVsZXRlKHRoaXMuY2xhc3NlcywgY2xhc3NOYW1lKSxcclxuICAgICAgcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6ICh0eXBlLCBoYW5kbGVyKSA9PlxyXG4gICAgICAgIHRoaXMuJGVsLmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgaGFuZGxlciksXHJcbiAgICAgIGRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6ICh0eXBlLCBoYW5kbGVyKSA9PlxyXG4gICAgICAgIHRoaXMuJGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgaGFuZGxlciksXHJcbiAgICAgIGdldE9mZnNldFdpZHRoOiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuJGVsLm9mZnNldFdpZHRoXHJcbiAgICAgIH0sXHJcbiAgICAgIGdldE9mZnNldExlZnQ6ICgpID0+XHJcbiAgICAgICAgdGhpcy4kZWwub2Zmc2V0TGVmdCxcclxuICAgICAgbm90aWZ5U2VsZWN0ZWQ6ICgpID0+IHtcclxuICAgICAgICBlbWl0Q3VzdG9tRXZlbnQodGhpcy4kZWwsXHJcbiAgICAgICAgICBNRENUYWJGb3VuZGF0aW9uLnN0cmluZ3MuU0VMRUNURURfRVZFTlQsIHt0YWI6IHRoaXN9LCB0cnVlKVxyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgdGhpcy5mb3VuZGF0aW9uLmluaXQoKVxyXG4gICAgdGhpcy5zZXRBY3RpdmUodGhpcy5hY3RpdmUpXHJcbiAgICB0aGlzLnJpcHBsZSA9IG5ldyBSaXBwbGVCYXNlKHRoaXMpXHJcbiAgICB0aGlzLnJpcHBsZS5pbml0KClcclxuICB9LFxyXG4gIGJlZm9yZURlc3Ryb3kgKCkge1xyXG4gICAgdGhpcy5mb3VuZGF0aW9uLmRlc3Ryb3koKVxyXG4gICAgdGhpcy5yaXBwbGUuZGVzdHJveSgpXHJcbiAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCIvKipcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5leHBvcnQgY29uc3QgY3NzQ2xhc3NlcyA9IHtcbiAgVVBHUkFERUQ6ICdtZGMtdGFiLWJhci11cGdyYWRlZCcsXG59O1xuXG5leHBvcnQgY29uc3Qgc3RyaW5ncyA9IHtcbiAgVEFCX1NFTEVDVE9SOiAnLm1kYy10YWInLFxuICBJTkRJQ0FUT1JfU0VMRUNUT1I6ICcubWRjLXRhYi1iYXJfX2luZGljYXRvcicsXG4gIENIQU5HRV9FVkVOVDogJ01EQ1RhYkJhcjpjaGFuZ2UnLFxufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCBNRENGb3VuZGF0aW9uIGZyb20gJ0BtYXRlcmlhbC9iYXNlL2ZvdW5kYXRpb24nO1xuaW1wb3J0IHtnZXRDb3JyZWN0UHJvcGVydHlOYW1lfSBmcm9tICdAbWF0ZXJpYWwvYW5pbWF0aW9uL2luZGV4JztcblxuaW1wb3J0IHtjc3NDbGFzc2VzLCBzdHJpbmdzfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1EQ1RhYkJhckZvdW5kYXRpb24gZXh0ZW5kcyBNRENGb3VuZGF0aW9uIHtcbiAgc3RhdGljIGdldCBjc3NDbGFzc2VzKCkge1xuICAgIHJldHVybiBjc3NDbGFzc2VzO1xuICB9XG5cbiAgc3RhdGljIGdldCBzdHJpbmdzKCkge1xuICAgIHJldHVybiBzdHJpbmdzO1xuICB9XG5cbiAgc3RhdGljIGdldCBkZWZhdWx0QWRhcHRlcigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgYWRkQ2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICByZW1vdmVDbGFzczogKC8qIGNsYXNzTmFtZTogc3RyaW5nICovKSA9PiB7fSxcbiAgICAgIGJpbmRPbk1EQ1RhYlNlbGVjdGVkRXZlbnQ6ICgpID0+IHt9LFxuICAgICAgdW5iaW5kT25NRENUYWJTZWxlY3RlZEV2ZW50OiAoKSA9PiB7fSxcbiAgICAgIHJlZ2lzdGVyUmVzaXplSGFuZGxlcjogKC8qIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgZGVyZWdpc3RlclJlc2l6ZUhhbmRsZXI6ICgvKiBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIGdldE9mZnNldFdpZHRoOiAoKSA9PiAvKiBudW1iZXIgKi8gMCxcbiAgICAgIHNldFN0eWxlRm9ySW5kaWNhdG9yOiAoLyogcHJvcGVydHlOYW1lOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgZ2V0T2Zmc2V0V2lkdGhGb3JJbmRpY2F0b3I6ICgpID0+IC8qIG51bWJlciAqLyAwLFxuICAgICAgbm90aWZ5Q2hhbmdlOiAoLyogZXZ0RGF0YToge2FjdGl2ZVRhYkluZGV4OiBudW1iZXJ9ICovKSA9PiB7fSxcbiAgICAgIGdldE51bWJlck9mVGFiczogKCkgPT4gLyogbnVtYmVyICovIDAsXG4gICAgICBpc1RhYkFjdGl2ZUF0SW5kZXg6ICgvKiBpbmRleDogbnVtYmVyICovKSA9PiAvKiBib29sZWFuICovIGZhbHNlLFxuICAgICAgc2V0VGFiQWN0aXZlQXRJbmRleDogKC8qIGluZGV4OiBudW1iZXIsIGlzQWN0aXZlOiB0cnVlICovKSA9PiB7fSxcbiAgICAgIGlzRGVmYXVsdFByZXZlbnRlZE9uQ2xpY2tGb3JUYWJBdEluZGV4OiAoLyogaW5kZXg6IG51bWJlciAqLykgPT4gLyogYm9vbGVhbiAqLyBmYWxzZSxcbiAgICAgIHNldFByZXZlbnREZWZhdWx0T25DbGlja0ZvclRhYkF0SW5kZXg6ICgvKiBpbmRleDogbnVtYmVyLCBwcmV2ZW50RGVmYXVsdE9uQ2xpY2s6IGJvb2xlYW4gKi8pID0+IHt9LFxuICAgICAgbWVhc3VyZVRhYkF0SW5kZXg6ICgvKiBpbmRleDogbnVtYmVyICovKSA9PiB7fSxcbiAgICAgIGdldENvbXB1dGVkV2lkdGhGb3JUYWJBdEluZGV4OiAoLyogaW5kZXg6IG51bWJlciAqLykgPT4gLyogbnVtYmVyICovIDAsXG4gICAgICBnZXRDb21wdXRlZExlZnRGb3JUYWJBdEluZGV4OiAoLyogaW5kZXg6IG51bWJlciAqLykgPT4gLyogbnVtYmVyICovIDAsXG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKGFkYXB0ZXIpIHtcbiAgICBzdXBlcihPYmplY3QuYXNzaWduKE1EQ1RhYkJhckZvdW5kYXRpb24uZGVmYXVsdEFkYXB0ZXIsIGFkYXB0ZXIpKTtcblxuICAgIHRoaXMuaXNJbmRpY2F0b3JTaG93bl8gPSBmYWxzZTtcbiAgICB0aGlzLmNvbXB1dGVkV2lkdGhfID0gMDtcbiAgICB0aGlzLmNvbXB1dGVkTGVmdF8gPSAwO1xuICAgIHRoaXMuYWN0aXZlVGFiSW5kZXhfID0gMDtcbiAgICB0aGlzLmxheW91dEZyYW1lXyA9IDA7XG4gICAgdGhpcy5yZXNpemVIYW5kbGVyXyA9ICgpID0+IHRoaXMubGF5b3V0KCk7XG4gIH1cblxuICBpbml0KCkge1xuICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoY3NzQ2xhc3Nlcy5VUEdSQURFRCk7XG4gICAgdGhpcy5hZGFwdGVyXy5iaW5kT25NRENUYWJTZWxlY3RlZEV2ZW50KCk7XG4gICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlclJlc2l6ZUhhbmRsZXIodGhpcy5yZXNpemVIYW5kbGVyXyk7XG4gICAgY29uc3QgYWN0aXZlVGFiSW5kZXggPSB0aGlzLmZpbmRBY3RpdmVUYWJJbmRleF8oKTtcbiAgICBpZiAoYWN0aXZlVGFiSW5kZXggPj0gMCkge1xuICAgICAgdGhpcy5hY3RpdmVUYWJJbmRleF8gPSBhY3RpdmVUYWJJbmRleDtcbiAgICB9XG4gICAgdGhpcy5sYXlvdXQoKTtcbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhjc3NDbGFzc2VzLlVQR1JBREVEKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnVuYmluZE9uTURDVGFiU2VsZWN0ZWRFdmVudCgpO1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlclJlc2l6ZUhhbmRsZXIodGhpcy5yZXNpemVIYW5kbGVyXyk7XG4gIH1cblxuICBsYXlvdXRJbnRlcm5hbF8oKSB7XG4gICAgdGhpcy5mb3JFYWNoVGFiSW5kZXhfKChpbmRleCkgPT4gdGhpcy5hZGFwdGVyXy5tZWFzdXJlVGFiQXRJbmRleChpbmRleCkpO1xuICAgIHRoaXMuY29tcHV0ZWRXaWR0aF8gPSB0aGlzLmFkYXB0ZXJfLmdldE9mZnNldFdpZHRoKCk7XG4gICAgdGhpcy5sYXlvdXRJbmRpY2F0b3JfKCk7XG4gIH1cblxuICBsYXlvdXRJbmRpY2F0b3JfKCkge1xuICAgIGNvbnN0IGlzSW5kaWNhdG9yRmlyc3RSZW5kZXIgPSAhdGhpcy5pc0luZGljYXRvclNob3duXztcblxuICAgIC8vIEVuc3VyZSB0aGF0IGluZGljYXRvciBhcHBlYXJzIGluIHRoZSByaWdodCBwb3NpdGlvbiBpbW1lZGlhdGVseSBmb3IgY29ycmVjdCBmaXJzdCByZW5kZXIuXG4gICAgaWYgKGlzSW5kaWNhdG9yRmlyc3RSZW5kZXIpIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uc2V0U3R5bGVGb3JJbmRpY2F0b3IoJ3RyYW5zaXRpb24nLCAnbm9uZScpO1xuICAgIH1cblxuICAgIGNvbnN0IHRyYW5zbGF0ZUFtdEZvckFjdGl2ZVRhYkxlZnQgPSB0aGlzLmFkYXB0ZXJfLmdldENvbXB1dGVkTGVmdEZvclRhYkF0SW5kZXgodGhpcy5hY3RpdmVUYWJJbmRleF8pO1xuICAgIGNvbnN0IHNjYWxlQW10Rm9yQWN0aXZlVGFiV2lkdGggPVxuICAgICAgdGhpcy5hZGFwdGVyXy5nZXRDb21wdXRlZFdpZHRoRm9yVGFiQXRJbmRleCh0aGlzLmFjdGl2ZVRhYkluZGV4XykgLyB0aGlzLmFkYXB0ZXJfLmdldE9mZnNldFdpZHRoKCk7XG5cbiAgICBjb25zdCB0cmFuc2Zvcm1WYWx1ZSA9IGB0cmFuc2xhdGVYKCR7dHJhbnNsYXRlQW10Rm9yQWN0aXZlVGFiTGVmdH1weCkgc2NhbGUoJHtzY2FsZUFtdEZvckFjdGl2ZVRhYldpZHRofSwgMSlgO1xuICAgIHRoaXMuYWRhcHRlcl8uc2V0U3R5bGVGb3JJbmRpY2F0b3IoZ2V0Q29ycmVjdFByb3BlcnR5TmFtZSh3aW5kb3csICd0cmFuc2Zvcm0nKSwgdHJhbnNmb3JtVmFsdWUpO1xuXG4gICAgaWYgKGlzSW5kaWNhdG9yRmlyc3RSZW5kZXIpIHtcbiAgICAgIC8vIEZvcmNlIGxheW91dCBzbyB0aGF0IHRyYW5zZm9ybSBzdHlsZXMgdG8gdGFrZSBlZmZlY3QuXG4gICAgICB0aGlzLmFkYXB0ZXJfLmdldE9mZnNldFdpZHRoRm9ySW5kaWNhdG9yKCk7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnNldFN0eWxlRm9ySW5kaWNhdG9yKCd0cmFuc2l0aW9uJywgJycpO1xuICAgICAgdGhpcy5hZGFwdGVyXy5zZXRTdHlsZUZvckluZGljYXRvcigndmlzaWJpbGl0eScsICd2aXNpYmxlJyk7XG4gICAgICB0aGlzLmlzSW5kaWNhdG9yU2hvd25fID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBmaW5kQWN0aXZlVGFiSW5kZXhfKCkge1xuICAgIGxldCBhY3RpdmVUYWJJbmRleCA9IC0xO1xuICAgIHRoaXMuZm9yRWFjaFRhYkluZGV4XygoaW5kZXgpID0+IHtcbiAgICAgIGlmICh0aGlzLmFkYXB0ZXJfLmlzVGFiQWN0aXZlQXRJbmRleChpbmRleCkpIHtcbiAgICAgICAgYWN0aXZlVGFiSW5kZXggPSBpbmRleDtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGFjdGl2ZVRhYkluZGV4O1xuICB9XG5cbiAgZm9yRWFjaFRhYkluZGV4XyhpdGVyYXRvcikge1xuICAgIGNvbnN0IG51bVRhYnMgPSB0aGlzLmFkYXB0ZXJfLmdldE51bWJlck9mVGFicygpO1xuICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBudW1UYWJzOyBpbmRleCsrKSB7XG4gICAgICBjb25zdCBzaG91bGRCcmVhayA9IGl0ZXJhdG9yKGluZGV4KTtcbiAgICAgIGlmIChzaG91bGRCcmVhaykge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBsYXlvdXQoKSB7XG4gICAgaWYgKHRoaXMubGF5b3V0RnJhbWVfKSB7XG4gICAgICBjYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLmxheW91dEZyYW1lXyk7XG4gICAgfVxuXG4gICAgdGhpcy5sYXlvdXRGcmFtZV8gPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgdGhpcy5sYXlvdXRJbnRlcm5hbF8oKTtcbiAgICAgIHRoaXMubGF5b3V0RnJhbWVfID0gMDtcbiAgICB9KTtcbiAgfVxuXG4gIHN3aXRjaFRvVGFiQXRJbmRleChpbmRleCwgc2hvdWxkTm90aWZ5KSB7XG4gICAgaWYgKGluZGV4ID09PSB0aGlzLmFjdGl2ZVRhYkluZGV4Xykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChpbmRleCA8IDAgfHwgaW5kZXggPj0gdGhpcy5hZGFwdGVyXy5nZXROdW1iZXJPZlRhYnMoKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBPdXQgb2YgYm91bmRzIGluZGV4IHNwZWNpZmllZCBmb3IgdGFiOiAke2luZGV4fWApO1xuICAgIH1cblxuICAgIGNvbnN0IHByZXZBY3RpdmVUYWJJbmRleCA9IHRoaXMuYWN0aXZlVGFiSW5kZXhfO1xuICAgIHRoaXMuYWN0aXZlVGFiSW5kZXhfID0gaW5kZXg7XG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHtcbiAgICAgIGlmIChwcmV2QWN0aXZlVGFiSW5kZXggPj0gMCkge1xuICAgICAgICB0aGlzLmFkYXB0ZXJfLnNldFRhYkFjdGl2ZUF0SW5kZXgocHJldkFjdGl2ZVRhYkluZGV4LCBmYWxzZSk7XG4gICAgICB9XG4gICAgICB0aGlzLmFkYXB0ZXJfLnNldFRhYkFjdGl2ZUF0SW5kZXgodGhpcy5hY3RpdmVUYWJJbmRleF8sIHRydWUpO1xuICAgICAgdGhpcy5sYXlvdXRJbmRpY2F0b3JfKCk7XG4gICAgICBpZiAoc2hvdWxkTm90aWZ5KSB7XG4gICAgICAgIHRoaXMuYWRhcHRlcl8ubm90aWZ5Q2hhbmdlKHthY3RpdmVUYWJJbmRleDogdGhpcy5hY3RpdmVUYWJJbmRleF99KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGdldEFjdGl2ZVRhYkluZGV4KCkge1xuICAgIHJldHVybiB0aGlzLmZpbmRBY3RpdmVUYWJJbmRleF8oKTtcbiAgfVxufVxuIiwiPHRlbXBsYXRlPlxuICA8bmF2IGNsYXNzPVwibWRjLXRhYi1iYXJcIiA6Y2xhc3M9XCJjbGFzc2VzXCI+XG4gICAgPHNsb3Q+PC9zbG90PlxuICAgIDxzcGFuIHJlZj1cImluZGljYXRvclwiIGNsYXNzPVwibWRjLXRhYi1iYXJfX2luZGljYXRvclwiIFxuICAgICAgOnN0eWxlPVwiaW5kaWNhdG9yU3R5bGVzXCI+PC9zcGFuPlxuICA8L25hdj4gIFxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBNRENUYWJCYXJGb3VuZGF0aW9uIGZyb20gJ0BtYXRlcmlhbC90YWJzL3RhYi1iYXIvZm91bmRhdGlvbidcbmltcG9ydCBNRENUYWJGb3VuZGF0aW9uIGZyb20gJ0BtYXRlcmlhbC90YWJzL3RhYi9mb3VuZGF0aW9uJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtdGFiLWJhcicsXG4gIHByb3BzOiB7XG4gICAgJ2luZGljYXRvci1wcmltYXJ5JzogQm9vbGVhbixcbiAgICAnaW5kaWNhdG9yLWFjY2VudCc6IEJvb2xlYW5cbiAgfSxcbiAgZGF0YSAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNsYXNzZXM6IHtcbiAgICAgICAgJ21kYy10YWItYmFyLS1pbmRpY2F0b3ItcHJpbWFyeSc6IHRoaXMuaW5kaWNhdG9yUHJpbWFyeSxcbiAgICAgICAgJ21kYy10YWItYmFyLS1pbmRpY2F0b3ItYWNjZW50JzogdGhpcy5pbmRpY2F0b3JBY2NlbnRcbiAgICAgIH0sXG4gICAgICBpbmRpY2F0b3JTdHlsZXM6IHt9LFxuICAgICAgdGFiczogW11cbiAgICB9XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBvblNlbGVjdCAoe2RldGFpbH0pIHtcbiAgICAgIGNvbnN0IHt0YWJ9ID0gZGV0YWlsXG4gICAgICBjb25zdCBpbmRleCA9IHRoaXMudGFicy5pbmRleE9mKHRhYilcbiAgICAgIGlmIChpbmRleCA8IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdtZGMtdGFiLWJhciBpbnRlcm5hbCBlcnJvcjogaW5kZXggbm90IGZvdW5kJylcbiAgICAgIH1cbiAgICAgIHRoaXMuZm91bmRhdGlvbi5zd2l0Y2hUb1RhYkF0SW5kZXgoaW5kZXgsIHRydWUpXG4gICAgfVxuICB9LFxuICBtb3VudGVkICgpIHtcbiAgICB0aGlzLmZvdW5kYXRpb24gPSBuZXcgTURDVGFiQmFyRm91bmRhdGlvbih7XG4gICAgICBhZGRDbGFzczogKGNsYXNzTmFtZSkgPT5cbiAgICAgICAgdGhpcy4kc2V0KHRoaXMuY2xhc3NlcywgY2xhc3NOYW1lLCB0cnVlKSxcbiAgICAgIHJlbW92ZUNsYXNzOiAoY2xhc3NOYW1lKSA9PlxuICAgICAgICB0aGlzLiRkZWxldGUodGhpcy5jbGFzc2VzLCBjbGFzc05hbWUpLFxuICAgICAgYmluZE9uTURDVGFiU2VsZWN0ZWRFdmVudDogKCkgPT4ge1xuICAgICAgICB0aGlzLiRlbC5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgICAgIE1EQ1RhYkZvdW5kYXRpb24uc3RyaW5ncy5TRUxFQ1RFRF9FVkVOVCwgdGhpcy5vblNlbGVjdClcbiAgICAgIH0sXG4gICAgICB1bmJpbmRPbk1EQ1RhYlNlbGVjdGVkRXZlbnQ6ICgpID0+XG4gICAgICAgIHRoaXMuJGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgTURDVGFiRm91bmRhdGlvbi5zdHJpbmdzLlNFTEVDVEVEX0VWRU5ULCB0aGlzLm9uU2VsZWN0KSxcbiAgICAgIHJlZ2lzdGVyUmVzaXplSGFuZGxlcjogKGhhbmRsZXIpID0+XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBoYW5kbGVyKSxcbiAgICAgIGRlcmVnaXN0ZXJSZXNpemVIYW5kbGVyOiAoaGFuZGxlcikgPT5cbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGhhbmRsZXIpLFxuICAgICAgZ2V0T2Zmc2V0V2lkdGg6ICgpID0+XG4gICAgICAgIHRoaXMuJGVsLm9mZnNldFdpZHRoLFxuICAgICAgc2V0U3R5bGVGb3JJbmRpY2F0b3I6IChwcm9wZXJ0eU5hbWUsIHZhbHVlKSA9PlxuICAgICAgICB0aGlzLiRzZXQodGhpcy5pbmRpY2F0b3JTdHlsZXMsIHByb3BlcnR5TmFtZSwgdmFsdWUpLFxuICAgICAgZ2V0T2Zmc2V0V2lkdGhGb3JJbmRpY2F0b3I6ICgpID0+XG4gICAgICAgIHRoaXMuJHJlZnMuaW5kaWNhdG9yLm9mZnNldFdpZHRoLFxuICAgICAgbm90aWZ5Q2hhbmdlOiAoZXZ0RGF0YSkgPT4ge1xuICAgICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCBldnREYXRhLmFjdGl2ZVRhYkluZGV4KVxuICAgICAgfSxcbiAgICAgIGdldE51bWJlck9mVGFiczogKCkgPT5cbiAgICAgICAgdGhpcy50YWJzLmxlbmd0aCxcbiAgICAgIGlzVGFiQWN0aXZlQXRJbmRleDogKGluZGV4KSA9PlxuICAgICAgICB0aGlzLnRhYnNbaW5kZXhdLmlzQWN0aXZlKCksXG4gICAgICBzZXRUYWJBY3RpdmVBdEluZGV4OiAoaW5kZXgsIGlzQWN0aXZlKSA9PiB7XG4gICAgICAgIHRoaXMudGFic1tpbmRleF0uc2V0QWN0aXZlKGlzQWN0aXZlKVxuICAgICAgfSxcbiAgICAgIGlzRGVmYXVsdFByZXZlbnRlZE9uQ2xpY2tGb3JUYWJBdEluZGV4OiAoaW5kZXgpID0+XG4gICAgICAgIHRoaXMudGFic1tpbmRleF0uaXNEZWZhdWx0UHJldmVudGVkT25DbGljaygpLFxuICAgICAgc2V0UHJldmVudERlZmF1bHRPbkNsaWNrRm9yVGFiQXRJbmRleDogKGluZGV4LCBwcmV2ZW50RGVmYXVsdE9uQ2xpY2spID0+IHtcbiAgICAgICAgdGhpcy50YWJzW2luZGV4XS5zZXRQcmV2ZW50RGVmYXVsdE9uQ2xpY2socHJldmVudERlZmF1bHRPbkNsaWNrKVxuICAgICAgfSxcbiAgICAgIG1lYXN1cmVUYWJBdEluZGV4OiAoaW5kZXgpID0+XG4gICAgICAgIHRoaXMudGFic1tpbmRleF0ubWVhc3VyZVNlbGYoKSxcbiAgICAgIGdldENvbXB1dGVkV2lkdGhGb3JUYWJBdEluZGV4OiAoaW5kZXgpID0+XG4gICAgICAgIHRoaXMudGFic1tpbmRleF0uZ2V0Q29tcHV0ZWRXaWR0aCgpLFxuICAgICAgZ2V0Q29tcHV0ZWRMZWZ0Rm9yVGFiQXRJbmRleDogKGluZGV4KSA9PlxuICAgICAgICB0aGlzLnRhYnNbaW5kZXhdLmdldENvbXB1dGVkTGVmdCgpXG4gICAgfSlcblxuICAgIGNvbnN0IHJlc2V0VGFicyA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHRhYkVsZW1lbnRzID0gW10uc2xpY2UuY2FsbChcbiAgICAgICAgdGhpcy4kZWwucXVlcnlTZWxlY3RvckFsbChNRENUYWJCYXJGb3VuZGF0aW9uLnN0cmluZ3MuVEFCX1NFTEVDVE9SKSlcbiAgICAgIHRoaXMudGFicyA9IHRhYkVsZW1lbnRzLm1hcCgoZWwpID0+IGVsLl9fdnVlX18pXG5cbiAgICAgIGxldCBoYXNUZXh0LCBoYXNJY29uXG4gICAgICBjb25zdCB0YWJzID0gdGhpcy50YWJzXG4gICAgICBmb3IgKGxldCB0YWIgb2YgdGFicykge1xuICAgICAgICBpZiAodGFiLmhhc1RleHQpIHtcbiAgICAgICAgICBoYXNUZXh0ID0gdHJ1ZVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGZvciAobGV0IHRhYiBvZiB0YWJzKSB7XG4gICAgICAgIGlmICh0YWIuaGFzSWNvbikge1xuICAgICAgICAgIGhhc0ljb24gPSB0cnVlXG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaGFzVGV4dCAmJiBoYXNJY29uKSB7XG4gICAgICAgIHRoaXMuJHNldCh0aGlzLmNsYXNzZXMsICdtZGMtdGFiLWJhci0taWNvbnMtd2l0aC10ZXh0JywgdHJ1ZSlcbiAgICAgIH0gZWxzZSBpZiAoaGFzSWNvbikge1xuICAgICAgICB0aGlzLiRzZXQodGhpcy5jbGFzc2VzLCAnbWRjLXRhYi1iYXItLWljb24tdGFiLWJhcicsIHRydWUpXG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLmZvdW5kYXRpb24pIHtcbiAgICAgICAgY29uc3QgYWN0aXZlVGFiSW5kZXggPSB0aGlzLmZvdW5kYXRpb24uZ2V0QWN0aXZlVGFiSW5kZXgoKVxuICAgICAgICBpZiAoYWN0aXZlVGFiSW5kZXggPj0gMCkge1xuICAgICAgICAgIHRoaXMuZm91bmRhdGlvbi5zd2l0Y2hUb1RhYkF0SW5kZXgoYWN0aXZlVGFiSW5kZXgsIHRydWUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5mb3VuZGF0aW9uLnN3aXRjaFRvVGFiQXRJbmRleCgwLCB0cnVlKVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuZm91bmRhdGlvbi5sYXlvdXQoKVxuICAgICAgfVxuICAgIH1cblxuICAgIHJlc2V0VGFicygpXG5cbiAgICB0aGlzLnNsb3RPYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKCgpID0+IHJlc2V0VGFicygpKVxuICAgIHRoaXMuc2xvdE9ic2VydmVyLm9ic2VydmUodGhpcy4kZWwsIHsgY2hpbGRMaXN0OiB0cnVlLCBzdWJ0cmVlOiB0cnVlIH0pXG5cbiAgICB0aGlzLmZvdW5kYXRpb24uaW5pdCgpXG4gIH0sXG4gIGJlZm9yZURlc3Ryb3kgKCkge1xuICAgIHRoaXMuc2xvdE9ic2VydmVyLmRpc2Nvbm5lY3QoKVxuICAgIHRoaXMuZm91bmRhdGlvbi5kZXN0cm95KClcbiAgfVxufVxuPC9zY3JpcHQ+XG4iLCJpbXBvcnQge0Jhc2VQbHVnaW59IGZyb20gJy4uL2Jhc2UnXG5pbXBvcnQgbWRjVGFiIGZyb20gJy4vbWRjLXRhYi52dWUnXG5pbXBvcnQgbWRjVGFiQmFyIGZyb20gJy4vbWRjLXRhYi1iYXIudnVlJ1xuXG5leHBvcnQgeyBcbiAgbWRjVGFiLCBcbiAgbWRjVGFiQmFyIFxufVxuXG5leHBvcnQgZGVmYXVsdCBCYXNlUGx1Z2luKHtcbiAgbWRjVGFiLCBcbiAgbWRjVGFiQmFyIFxufSlcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKiBlc2xpbnQgbm8tdW51c2VkLXZhcnM6IFsyLCB7XCJhcmdzXCI6IFwibm9uZVwifV0gKi9cblxuLyoqXG4gKiBBZGFwdGVyIGZvciBNREMgVGV4dCBGaWVsZCBIZWxwZXIgVGV4dC5cbiAqXG4gKiBEZWZpbmVzIHRoZSBzaGFwZSBvZiB0aGUgYWRhcHRlciBleHBlY3RlZCBieSB0aGUgZm91bmRhdGlvbi4gSW1wbGVtZW50IHRoaXNcbiAqIGFkYXB0ZXIgdG8gaW50ZWdyYXRlIHRoZSBUZXh0RmllbGQgaGVscGVyIHRleHQgaW50byB5b3VyIGZyYW1ld29yay4gU2VlXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbWF0ZXJpYWwtY29tcG9uZW50cy9tYXRlcmlhbC1jb21wb25lbnRzLXdlYi9ibG9iL21hc3Rlci9kb2NzL2F1dGhvcmluZy1jb21wb25lbnRzLm1kXG4gKiBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAcmVjb3JkXG4gKi9cbmNsYXNzIE1EQ1RleHRGaWVsZEhlbHBlclRleHRBZGFwdGVyIHtcbiAgLyoqXG4gICAqIEFkZHMgYSBjbGFzcyB0byB0aGUgaGVscGVyIHRleHQgZWxlbWVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGNsYXNzTmFtZVxuICAgKi9cbiAgYWRkQ2xhc3MoY2xhc3NOYW1lKSB7fVxuXG4gIC8qKlxuICAgKiBSZW1vdmVzIGEgY2xhc3MgZnJvbSB0aGUgaGVscGVyIHRleHQgZWxlbWVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGNsYXNzTmFtZVxuICAgKi9cbiAgcmVtb3ZlQ2xhc3MoY2xhc3NOYW1lKSB7fVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHdoZXRoZXIgb3Igbm90IHRoZSBoZWxwZXIgdGV4dCBlbGVtZW50IGNvbnRhaW5zIHRoZSBnaXZlbiBjbGFzcy5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGNsYXNzTmFtZVxuICAgKiBAcmV0dXJuIHtib29sZWFufVxuICAgKi9cbiAgaGFzQ2xhc3MoY2xhc3NOYW1lKSB7fVxuXG4gIC8qKlxuICAgKiBTZXRzIGFuIGF0dHJpYnV0ZSB3aXRoIGEgZ2l2ZW4gdmFsdWUgb24gdGhlIGhlbHBlciB0ZXh0IGVsZW1lbnQuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBhdHRyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxuICAgKi9cbiAgc2V0QXR0cihhdHRyLCB2YWx1ZSkge31cblxuICAvKipcbiAgICogUmVtb3ZlcyBhbiBhdHRyaWJ1dGUgZnJvbSB0aGUgaGVscGVyIHRleHQgZWxlbWVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGF0dHJcbiAgICovXG4gIHJlbW92ZUF0dHIoYXR0cikge31cblxuICAvKipcbiAgICogU2V0cyB0aGUgdGV4dCBjb250ZW50IGZvciB0aGUgaGVscGVyIHRleHQgZWxlbWVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnRlbnRcbiAgICovXG4gIHNldENvbnRlbnQoY29udGVudCkge31cbn1cblxuZXhwb3J0IGRlZmF1bHQgTURDVGV4dEZpZWxkSGVscGVyVGV4dEFkYXB0ZXI7XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyoqIEBlbnVtIHtzdHJpbmd9ICovXG5jb25zdCBzdHJpbmdzID0ge1xuICBBUklBX0hJRERFTjogJ2FyaWEtaGlkZGVuJyxcbiAgUk9MRTogJ3JvbGUnLFxufTtcblxuLyoqIEBlbnVtIHtzdHJpbmd9ICovXG5jb25zdCBjc3NDbGFzc2VzID0ge1xuICBIRUxQRVJfVEVYVF9QRVJTSVNURU5UOiAnbWRjLXRleHQtZmllbGQtaGVscGVyLXRleHQtLXBlcnNpc3RlbnQnLFxuICBIRUxQRVJfVEVYVF9WQUxJREFUSU9OX01TRzogJ21kYy10ZXh0LWZpZWxkLWhlbHBlci10ZXh0LS12YWxpZGF0aW9uLW1zZycsXG59O1xuXG5leHBvcnQge3N0cmluZ3MsIGNzc0NsYXNzZXN9O1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCBNRENGb3VuZGF0aW9uIGZyb20gJ0BtYXRlcmlhbC9iYXNlL2ZvdW5kYXRpb24nO1xuaW1wb3J0IE1EQ1RleHRGaWVsZEhlbHBlclRleHRBZGFwdGVyIGZyb20gJy4vYWRhcHRlcic7XG5pbXBvcnQge2Nzc0NsYXNzZXMsIHN0cmluZ3N9IGZyb20gJy4vY29uc3RhbnRzJztcblxuXG4vKipcbiAqIEBleHRlbmRzIHtNRENGb3VuZGF0aW9uPCFNRENUZXh0RmllbGRIZWxwZXJUZXh0QWRhcHRlcj59XG4gKiBAZmluYWxcbiAqL1xuY2xhc3MgTURDVGV4dEZpZWxkSGVscGVyVGV4dEZvdW5kYXRpb24gZXh0ZW5kcyBNRENGb3VuZGF0aW9uIHtcbiAgLyoqIEByZXR1cm4gZW51bSB7c3RyaW5nfSAqL1xuICBzdGF0aWMgZ2V0IGNzc0NsYXNzZXMoKSB7XG4gICAgcmV0dXJuIGNzc0NsYXNzZXM7XG4gIH1cblxuICAvKiogQHJldHVybiBlbnVtIHtzdHJpbmd9ICovXG4gIHN0YXRpYyBnZXQgc3RyaW5ncygpIHtcbiAgICByZXR1cm4gc3RyaW5ncztcbiAgfVxuXG4gIC8qKlxuICAgKiB7QHNlZSBNRENUZXh0RmllbGRIZWxwZXJUZXh0QWRhcHRlcn0gZm9yIHR5cGluZyBpbmZvcm1hdGlvbiBvbiBwYXJhbWV0ZXJzIGFuZCByZXR1cm5cbiAgICogdHlwZXMuXG4gICAqIEByZXR1cm4geyFNRENUZXh0RmllbGRIZWxwZXJUZXh0QWRhcHRlcn1cbiAgICovXG4gIHN0YXRpYyBnZXQgZGVmYXVsdEFkYXB0ZXIoKSB7XG4gICAgcmV0dXJuIC8qKiBAdHlwZSB7IU1EQ1RleHRGaWVsZEhlbHBlclRleHRBZGFwdGVyfSAqLyAoe1xuICAgICAgYWRkQ2xhc3M6ICgpID0+IHt9LFxuICAgICAgcmVtb3ZlQ2xhc3M6ICgpID0+IHt9LFxuICAgICAgaGFzQ2xhc3M6ICgpID0+IHt9LFxuICAgICAgc2V0QXR0cjogKCkgPT4ge30sXG4gICAgICByZW1vdmVBdHRyOiAoKSA9PiB7fSxcbiAgICAgIHNldENvbnRlbnQ6ICgpID0+IHt9LFxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7IU1EQ1RleHRGaWVsZEhlbHBlclRleHRBZGFwdGVyfSBhZGFwdGVyXG4gICAqL1xuICBjb25zdHJ1Y3RvcihhZGFwdGVyKSB7XG4gICAgc3VwZXIoT2JqZWN0LmFzc2lnbihNRENUZXh0RmllbGRIZWxwZXJUZXh0Rm91bmRhdGlvbi5kZWZhdWx0QWRhcHRlciwgYWRhcHRlcikpO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldHMgdGhlIGNvbnRlbnQgb2YgdGhlIGhlbHBlciB0ZXh0IGZpZWxkLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY29udGVudFxuICAgKi9cbiAgc2V0Q29udGVudChjb250ZW50KSB7XG4gICAgdGhpcy5hZGFwdGVyXy5zZXRDb250ZW50KGNvbnRlbnQpO1xuICB9XG5cbiAgLyoqIEBwYXJhbSB7Ym9vbGVhbn0gaXNQZXJzaXN0ZW50IFNldHMgdGhlIHBlcnNpc3RlbmN5IG9mIHRoZSBoZWxwZXIgdGV4dC4gKi9cbiAgc2V0UGVyc2lzdGVudChpc1BlcnNpc3RlbnQpIHtcbiAgICBpZiAoaXNQZXJzaXN0ZW50KSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmFkZENsYXNzKGNzc0NsYXNzZXMuSEVMUEVSX1RFWFRfUEVSU0lTVEVOVCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoY3NzQ2xhc3Nlcy5IRUxQRVJfVEVYVF9QRVJTSVNURU5UKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtib29sZWFufSBpc1ZhbGlkYXRpb24gVHJ1ZSB0byBtYWtlIHRoZSBoZWxwZXIgdGV4dCBhY3QgYXMgYW5cbiAgICogICBlcnJvciB2YWxpZGF0aW9uIG1lc3NhZ2UuXG4gICAqL1xuICBzZXRWYWxpZGF0aW9uKGlzVmFsaWRhdGlvbikge1xuICAgIGlmIChpc1ZhbGlkYXRpb24pIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoY3NzQ2xhc3Nlcy5IRUxQRVJfVEVYVF9WQUxJREFUSU9OX01TRyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoY3NzQ2xhc3Nlcy5IRUxQRVJfVEVYVF9WQUxJREFUSU9OX01TRyk7XG4gICAgfVxuICB9XG5cbiAgLyoqIE1ha2VzIHRoZSBoZWxwZXIgdGV4dCB2aXNpYmxlIHRvIHRoZSBzY3JlZW4gcmVhZGVyLiAqL1xuICBzaG93VG9TY3JlZW5SZWFkZXIoKSB7XG4gICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVBdHRyKHN0cmluZ3MuQVJJQV9ISURERU4pO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldHMgdGhlIHZhbGlkaXR5IG9mIHRoZSBoZWxwZXIgdGV4dCBiYXNlZCBvbiB0aGUgaW5wdXQgdmFsaWRpdHkuXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gaW5wdXRJc1ZhbGlkXG4gICAqL1xuICBzZXRWYWxpZGl0eShpbnB1dElzVmFsaWQpIHtcbiAgICBjb25zdCBoZWxwZXJUZXh0SXNQZXJzaXN0ZW50ID0gdGhpcy5hZGFwdGVyXy5oYXNDbGFzcyhjc3NDbGFzc2VzLkhFTFBFUl9URVhUX1BFUlNJU1RFTlQpO1xuICAgIGNvbnN0IGhlbHBlclRleHRJc1ZhbGlkYXRpb25Nc2cgPSB0aGlzLmFkYXB0ZXJfLmhhc0NsYXNzKGNzc0NsYXNzZXMuSEVMUEVSX1RFWFRfVkFMSURBVElPTl9NU0cpO1xuICAgIGNvbnN0IHZhbGlkYXRpb25Nc2dOZWVkc0Rpc3BsYXkgPSBoZWxwZXJUZXh0SXNWYWxpZGF0aW9uTXNnICYmICFpbnB1dElzVmFsaWQ7XG5cbiAgICBpZiAodmFsaWRhdGlvbk1zZ05lZWRzRGlzcGxheSkge1xuICAgICAgdGhpcy5hZGFwdGVyXy5zZXRBdHRyKHN0cmluZ3MuUk9MRSwgJ2FsZXJ0Jyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQXR0cihzdHJpbmdzLlJPTEUpO1xuICAgIH1cblxuICAgIGlmICghaGVscGVyVGV4dElzUGVyc2lzdGVudCAmJiAhdmFsaWRhdGlvbk1zZ05lZWRzRGlzcGxheSkge1xuICAgICAgdGhpcy5oaWRlXygpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBIaWRlcyB0aGUgaGVscCB0ZXh0IGZyb20gc2NyZWVuIHJlYWRlcnMuXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBoaWRlXygpIHtcbiAgICB0aGlzLmFkYXB0ZXJfLnNldEF0dHIoc3RyaW5ncy5BUklBX0hJRERFTiwgJ3RydWUnKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBNRENUZXh0RmllbGRIZWxwZXJUZXh0Rm91bmRhdGlvbjtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKiBlc2xpbnQgbm8tdW51c2VkLXZhcnM6IFsyLCB7XCJhcmdzXCI6IFwibm9uZVwifV0gKi9cblxuLyoqXG4gKiBBZGFwdGVyIGZvciBNREMgVGV4dCBGaWVsZCBJY29uLlxuICpcbiAqIERlZmluZXMgdGhlIHNoYXBlIG9mIHRoZSBhZGFwdGVyIGV4cGVjdGVkIGJ5IHRoZSBmb3VuZGF0aW9uLiBJbXBsZW1lbnQgdGhpc1xuICogYWRhcHRlciB0byBpbnRlZ3JhdGUgdGhlIHRleHQgZmllbGQgaWNvbiBpbnRvIHlvdXIgZnJhbWV3b3JrLiBTZWVcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRlcmlhbC1jb21wb25lbnRzL21hdGVyaWFsLWNvbXBvbmVudHMtd2ViL2Jsb2IvbWFzdGVyL2RvY3MvYXV0aG9yaW5nLWNvbXBvbmVudHMubWRcbiAqIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICpcbiAqIEByZWNvcmRcbiAqL1xuY2xhc3MgTURDVGV4dEZpZWxkSWNvbkFkYXB0ZXIge1xuICAvKipcbiAgICogU2V0cyBhbiBhdHRyaWJ1dGUgb24gdGhlIGljb24gZWxlbWVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGF0dHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gICAqL1xuICBzZXRBdHRyKGF0dHIsIHZhbHVlKSB7fVxuXG4gIC8qKlxuICAgKiBSZWdpc3RlcnMgYW4gZXZlbnQgbGlzdGVuZXIgb24gdGhlIGljb24gZWxlbWVudCBmb3IgYSBnaXZlbiBldmVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2dFR5cGVcbiAgICogQHBhcmFtIHtmdW5jdGlvbighRXZlbnQpOiB1bmRlZmluZWR9IGhhbmRsZXJcbiAgICovXG4gIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKGV2dFR5cGUsIGhhbmRsZXIpIHt9XG5cbiAgLyoqXG4gICAqIERlcmVnaXN0ZXJzIGFuIGV2ZW50IGxpc3RlbmVyIG9uIHRoZSBpY29uIGVsZW1lbnQgZm9yIGEgZ2l2ZW4gZXZlbnQuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldnRUeXBlXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb24oIUV2ZW50KTogdW5kZWZpbmVkfSBoYW5kbGVyXG4gICAqL1xuICBkZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKGV2dFR5cGUsIGhhbmRsZXIpIHt9XG5cbiAgLyoqXG4gICAqIEVtaXRzIGEgY3VzdG9tIGV2ZW50IFwiTURDVGV4dEZpZWxkOmljb25cIiBkZW5vdGluZyBhIHVzZXIgaGFzIGNsaWNrZWQgdGhlIGljb24uXG4gICAqL1xuICBub3RpZnlJY29uQWN0aW9uKCkge31cbn1cblxuZXhwb3J0IGRlZmF1bHQgTURDVGV4dEZpZWxkSWNvbkFkYXB0ZXI7XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyoqIEBlbnVtIHtzdHJpbmd9ICovXG5jb25zdCBzdHJpbmdzID0ge1xuICBJQ09OX0VWRU5UOiAnTURDVGV4dEZpZWxkOmljb24nLFxufTtcblxuZXhwb3J0IHtzdHJpbmdzfTtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgTURDRm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvYmFzZS9mb3VuZGF0aW9uJztcbmltcG9ydCBNRENUZXh0RmllbGRJY29uQWRhcHRlciBmcm9tICcuL2FkYXB0ZXInO1xuaW1wb3J0IHtzdHJpbmdzfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cblxuLyoqXG4gKiBAZXh0ZW5kcyB7TURDRm91bmRhdGlvbjwhTURDVGV4dEZpZWxkSWNvbkFkYXB0ZXI+fVxuICogQGZpbmFsXG4gKi9cbmNsYXNzIE1EQ1RleHRGaWVsZEljb25Gb3VuZGF0aW9uIGV4dGVuZHMgTURDRm91bmRhdGlvbiB7XG4gIC8qKiBAcmV0dXJuIGVudW0ge3N0cmluZ30gKi9cbiAgc3RhdGljIGdldCBzdHJpbmdzKCkge1xuICAgIHJldHVybiBzdHJpbmdzO1xuICB9XG5cbiAgLyoqXG4gICAqIHtAc2VlIE1EQ1RleHRGaWVsZEljb25BZGFwdGVyfSBmb3IgdHlwaW5nIGluZm9ybWF0aW9uIG9uIHBhcmFtZXRlcnMgYW5kIHJldHVyblxuICAgKiB0eXBlcy5cbiAgICogQHJldHVybiB7IU1EQ1RleHRGaWVsZEljb25BZGFwdGVyfVxuICAgKi9cbiAgc3RhdGljIGdldCBkZWZhdWx0QWRhcHRlcigpIHtcbiAgICByZXR1cm4gLyoqIEB0eXBlIHshTURDVGV4dEZpZWxkSWNvbkFkYXB0ZXJ9ICovICh7XG4gICAgICBzZXRBdHRyOiAoKSA9PiB7fSxcbiAgICAgIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6ICgpID0+IHt9LFxuICAgICAgbm90aWZ5SWNvbkFjdGlvbjogKCkgPT4ge30sXG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHshTURDVGV4dEZpZWxkSWNvbkFkYXB0ZXJ9IGFkYXB0ZXJcbiAgICovXG4gIGNvbnN0cnVjdG9yKGFkYXB0ZXIpIHtcbiAgICBzdXBlcihPYmplY3QuYXNzaWduKE1EQ1RleHRGaWVsZEljb25Gb3VuZGF0aW9uLmRlZmF1bHRBZGFwdGVyLCBhZGFwdGVyKSk7XG5cbiAgICAvKiogQHByaXZhdGUge2Z1bmN0aW9uKCFFdmVudCk6IHVuZGVmaW5lZH0gKi9cbiAgICB0aGlzLmludGVyYWN0aW9uSGFuZGxlcl8gPSAoZXZ0KSA9PiB0aGlzLmhhbmRsZUludGVyYWN0aW9uKGV2dCk7XG4gIH1cblxuICBpbml0KCkge1xuICAgIFsnY2xpY2snLCAna2V5ZG93biddLmZvckVhY2goKGV2dFR5cGUpID0+IHtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoZXZ0VHlwZSwgdGhpcy5pbnRlcmFjdGlvbkhhbmRsZXJfKTtcbiAgICB9KTtcbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgWydjbGljaycsICdrZXlkb3duJ10uZm9yRWFjaCgoZXZ0VHlwZSkgPT4ge1xuICAgICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKGV2dFR5cGUsIHRoaXMuaW50ZXJhY3Rpb25IYW5kbGVyXyk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogU2V0cyB0aGUgY29udGVudCBvZiB0aGUgaGVscGVyIHRleHQgZmllbGQuXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gZGlzYWJsZWRcbiAgICovXG4gIHNldERpc2FibGVkKGRpc2FibGVkKSB7XG4gICAgaWYgKGRpc2FibGVkKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnNldEF0dHIoJ3RhYmluZGV4JywgJy0xJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uc2V0QXR0cigndGFiaW5kZXgnLCAnMCcpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBIYW5kbGVzIGFuIGludGVyYWN0aW9uIGV2ZW50XG4gICAqIEBwYXJhbSB7IUV2ZW50fSBldnRcbiAgICovXG4gIGhhbmRsZUludGVyYWN0aW9uKGV2dCkge1xuICAgIGlmIChldnQudHlwZSA9PT0gJ2NsaWNrJyB8fCBldnQua2V5ID09PSAnRW50ZXInIHx8IGV2dC5rZXlDb2RlID09PSAxMykge1xuICAgICAgdGhpcy5hZGFwdGVyXy5ub3RpZnlJY29uQWN0aW9uKCk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1EQ1RleHRGaWVsZEljb25Gb3VuZGF0aW9uO1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG5pbXBvcnQgTURDVGV4dEZpZWxkSGVscGVyVGV4dEZvdW5kYXRpb24gZnJvbSAnLi9oZWxwZXItdGV4dC9mb3VuZGF0aW9uJztcbmltcG9ydCBNRENUZXh0RmllbGRJY29uRm91bmRhdGlvbiBmcm9tICcuL2ljb24vZm91bmRhdGlvbic7XG5cbi8qIGVzbGludCBuby11bnVzZWQtdmFyczogWzIsIHtcImFyZ3NcIjogXCJub25lXCJ9XSAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHt7XG4gKiAgIHZhbHVlOiBzdHJpbmcsXG4gKiAgIGRpc2FibGVkOiBib29sZWFuLFxuICogICBiYWRJbnB1dDogYm9vbGVhbixcbiAqICAgdmFsaWRpdHk6IHtcbiAqICAgICBiYWRJbnB1dDogYm9vbGVhbixcbiAqICAgICB2YWxpZDogYm9vbGVhbixcbiAqICAgfSxcbiAqIH19XG4gKi9cbmxldCBOYXRpdmVJbnB1dFR5cGU7XG5cbi8qKlxuICogQHR5cGVkZWYge3tcbiAqICAgaGVscGVyVGV4dDogKCFNRENUZXh0RmllbGRIZWxwZXJUZXh0Rm91bmRhdGlvbnx1bmRlZmluZWQpLFxuICogICBpY29uOiAoIU1EQ1RleHRGaWVsZEljb25Gb3VuZGF0aW9ufHVuZGVmaW5lZCksXG4gKiB9fVxuICovXG5sZXQgRm91bmRhdGlvbk1hcFR5cGU7XG5cbi8qKlxuICogQWRhcHRlciBmb3IgTURDIFRleHQgRmllbGQuXG4gKlxuICogRGVmaW5lcyB0aGUgc2hhcGUgb2YgdGhlIGFkYXB0ZXIgZXhwZWN0ZWQgYnkgdGhlIGZvdW5kYXRpb24uIEltcGxlbWVudCB0aGlzXG4gKiBhZGFwdGVyIHRvIGludGVncmF0ZSB0aGUgVGV4dCBGaWVsZCBpbnRvIHlvdXIgZnJhbWV3b3JrLiBTZWVcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRlcmlhbC1jb21wb25lbnRzL21hdGVyaWFsLWNvbXBvbmVudHMtd2ViL2Jsb2IvbWFzdGVyL2RvY3MvYXV0aG9yaW5nLWNvbXBvbmVudHMubWRcbiAqIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICpcbiAqIEByZWNvcmRcbiAqL1xuY2xhc3MgTURDVGV4dEZpZWxkQWRhcHRlciB7XG4gIC8qKlxuICAgKiBBZGRzIGEgY2xhc3MgdG8gdGhlIHJvb3QgRWxlbWVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGNsYXNzTmFtZVxuICAgKi9cbiAgYWRkQ2xhc3MoY2xhc3NOYW1lKSB7fVxuXG4gIC8qKlxuICAgKiBSZW1vdmVzIGEgY2xhc3MgZnJvbSB0aGUgcm9vdCBFbGVtZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG4gICAqL1xuICByZW1vdmVDbGFzcyhjbGFzc05hbWUpIHt9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgcm9vdCBlbGVtZW50IGNvbnRhaW5zIHRoZSBnaXZlbiBjbGFzcyBuYW1lLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAqL1xuICBoYXNDbGFzcyhjbGFzc05hbWUpIHt9XG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVycyBhbiBldmVudCBoYW5kbGVyIG9uIHRoZSByb290IGVsZW1lbnQgZm9yIGEgZ2l2ZW4gZXZlbnQuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb24oIUV2ZW50KTogdW5kZWZpbmVkfSBoYW5kbGVyXG4gICAqL1xuICByZWdpc3RlclRleHRGaWVsZEludGVyYWN0aW9uSGFuZGxlcih0eXBlLCBoYW5kbGVyKSB7fVxuXG4gIC8qKlxuICAgKiBEZXJlZ2lzdGVycyBhbiBldmVudCBoYW5kbGVyIG9uIHRoZSByb290IGVsZW1lbnQgZm9yIGEgZ2l2ZW4gZXZlbnQuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb24oIUV2ZW50KTogdW5kZWZpbmVkfSBoYW5kbGVyXG4gICAqL1xuICBkZXJlZ2lzdGVyVGV4dEZpZWxkSW50ZXJhY3Rpb25IYW5kbGVyKHR5cGUsIGhhbmRsZXIpIHt9XG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVycyBhbiBldmVudCBsaXN0ZW5lciBvbiB0aGUgbmF0aXZlIGlucHV0IGVsZW1lbnQgZm9yIGEgZ2l2ZW4gZXZlbnQuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldnRUeXBlXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb24oIUV2ZW50KTogdW5kZWZpbmVkfSBoYW5kbGVyXG4gICAqL1xuICByZWdpc3RlcklucHV0SW50ZXJhY3Rpb25IYW5kbGVyKGV2dFR5cGUsIGhhbmRsZXIpIHt9XG5cbiAgLyoqXG4gICAqIERlcmVnaXN0ZXJzIGFuIGV2ZW50IGxpc3RlbmVyIG9uIHRoZSBuYXRpdmUgaW5wdXQgZWxlbWVudCBmb3IgYSBnaXZlbiBldmVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2dFR5cGVcbiAgICogQHBhcmFtIHtmdW5jdGlvbighRXZlbnQpOiB1bmRlZmluZWR9IGhhbmRsZXJcbiAgICovXG4gIGRlcmVnaXN0ZXJJbnB1dEludGVyYWN0aW9uSGFuZGxlcihldnRUeXBlLCBoYW5kbGVyKSB7fVxuXG4gIC8qKlxuICAgKiBSZWdpc3RlcnMgYSB2YWxpZGF0aW9uIGF0dHJpYnV0ZSBjaGFuZ2UgbGlzdGVuZXIgb24gdGhlIGlucHV0IGVsZW1lbnQuXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb24oIUFycmF5KTogdW5kZWZpbmVkfSBoYW5kbGVyXG4gICAqIEByZXR1cm4geyFNdXRhdGlvbk9ic2VydmVyfVxuICAgKi9cbiAgcmVnaXN0ZXJWYWxpZGF0aW9uQXR0cmlidXRlQ2hhbmdlSGFuZGxlcihoYW5kbGVyKSB7fVxuXG4gIC8qKlxuICAgKiBEaXNjb25uZWN0cyBhIHZhbGlkYXRpb24gYXR0cmlidXRlIG9ic2VydmVyIG9uIHRoZSBpbnB1dCBlbGVtZW50LlxuICAgKiBAcGFyYW0geyFNdXRhdGlvbk9ic2VydmVyfSBvYnNlcnZlclxuICAgKi9cbiAgZGVyZWdpc3RlclZhbGlkYXRpb25BdHRyaWJ1dGVDaGFuZ2VIYW5kbGVyKG9ic2VydmVyKSB7fVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGFuIG9iamVjdCByZXByZXNlbnRpbmcgdGhlIG5hdGl2ZSB0ZXh0IGlucHV0IGVsZW1lbnQsIHdpdGggYVxuICAgKiBzaW1pbGFyIEFQSSBzaGFwZS4gVGhlIG9iamVjdCByZXR1cm5lZCBzaG91bGQgaW5jbHVkZSB0aGUgdmFsdWUsIGRpc2FibGVkXG4gICAqIGFuZCBiYWRJbnB1dCBwcm9wZXJ0aWVzLCBhcyB3ZWxsIGFzIHRoZSBjaGVja1ZhbGlkaXR5KCkgZnVuY3Rpb24uIFdlIG5ldmVyXG4gICAqIGFsdGVyIHRoZSB2YWx1ZSB3aXRoaW4gb3VyIGNvZGUsIGhvd2V2ZXIgd2UgZG8gdXBkYXRlIHRoZSBkaXNhYmxlZFxuICAgKiBwcm9wZXJ0eSwgc28gaWYgeW91IGNob29zZSB0byBkdWNrLXR5cGUgdGhlIHJldHVybiB2YWx1ZSBmb3IgdGhpcyBtZXRob2RcbiAgICogaW4geW91ciBpbXBsZW1lbnRhdGlvbiBpdCdzIGltcG9ydGFudCB0byBrZWVwIHRoaXMgaW4gbWluZC4gQWxzbyBub3RlIHRoYXRcbiAgICogdGhpcyBtZXRob2QgY2FuIHJldHVybiBudWxsLCB3aGljaCB0aGUgZm91bmRhdGlvbiB3aWxsIGhhbmRsZSBncmFjZWZ1bGx5LlxuICAgKiBAcmV0dXJuIHs/RWxlbWVudHw/TmF0aXZlSW5wdXRUeXBlfVxuICAgKi9cbiAgZ2V0TmF0aXZlSW5wdXQoKSB7fVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRydWUgaWYgdGhlIHRleHRmaWVsZCBpcyBmb2N1c2VkLlxuICAgKiBXZSBhY2hpZXZlIHRoaXMgdmlhIGBkb2N1bWVudC5hY3RpdmVFbGVtZW50ID09PSB0aGlzLnJvb3RfYC5cbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICovXG4gIGlzRm9jdXNlZCgpIHt9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgZGlyZWN0aW9uIG9mIHRoZSByb290IGVsZW1lbnQgaXMgc2V0IHRvIFJUTC5cbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICovXG4gIGlzUnRsKCkge31cblxuICAvKipcbiAgICogQWN0aXZhdGVzIHRoZSBsaW5lIHJpcHBsZS5cbiAgICovXG4gIGFjdGl2YXRlTGluZVJpcHBsZSgpIHt9XG5cbiAgLyoqXG4gICAqIERlYWN0aXZhdGVzIHRoZSBsaW5lIHJpcHBsZS5cbiAgICovXG4gIGRlYWN0aXZhdGVMaW5lUmlwcGxlKCkge31cblxuICAvKipcbiAgICogU2V0cyB0aGUgdHJhbnNmb3JtIG9yaWdpbiBvZiB0aGUgbGluZSByaXBwbGUuXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBub3JtYWxpemVkWFxuICAgKi9cbiAgc2V0TGluZVJpcHBsZVRyYW5zZm9ybU9yaWdpbihub3JtYWxpemVkWCkge31cblxuICAvKipcbiAgICogT25seSBpbXBsZW1lbnQgaWYgbGFiZWwgZXhpc3RzLlxuICAgKiBTaGFrZXMgbGFiZWwgaWYgc2hvdWxkU2hha2UgaXMgdHJ1ZS5cbiAgICogQHBhcmFtIHtib29sZWFufSBzaG91bGRTaGFrZVxuICAgKi9cbiAgc2hha2VMYWJlbChzaG91bGRTaGFrZSkge31cblxuICAvKipcbiAgICogT25seSBpbXBsZW1lbnQgaWYgbGFiZWwgZXhpc3RzLlxuICAgKiBGbG9hdHMgdGhlIGxhYmVsIGFib3ZlIHRoZSBpbnB1dCBlbGVtZW50IGlmIHNob3VsZEZsb2F0IGlzIHRydWUuXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gc2hvdWxkRmxvYXRcbiAgICovXG4gIGZsb2F0TGFiZWwoc2hvdWxkRmxvYXQpIHt9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdHJ1ZSBpZiBsYWJlbCBlbGVtZW50IGV4aXN0cywgZmFsc2UgaWYgaXQgZG9lc24ndC5cbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICovXG4gIGhhc0xhYmVsKCkge31cblxuICAvKipcbiAgICogT25seSBpbXBsZW1lbnQgaWYgbGFiZWwgZXhpc3RzLlxuICAgKiBSZXR1cm5zIHdpZHRoIG9mIGxhYmVsIGluIHBpeGVscy5cbiAgICogQHJldHVybiB7bnVtYmVyfVxuICAgKi9cbiAgZ2V0TGFiZWxXaWR0aCgpIHt9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdHJ1ZSBpZiBvdXRsaW5lIGVsZW1lbnQgZXhpc3RzLCBmYWxzZSBpZiBpdCBkb2Vzbid0LlxuICAgKiBAcmV0dXJuIHtib29sZWFufVxuICAgKi9cbiAgaGFzT3V0bGluZSgpIHt9XG5cbiAgLyoqXG4gICAqIE9ubHkgaW1wbGVtZW50IGlmIG91dGxpbmUgZWxlbWVudCBleGlzdHMuXG4gICAqIFVwZGF0ZXMgU1ZHIFBhdGggb24gb3V0bGluZSBlbGVtZW50IGJhc2VkIG9uIHRoZVxuICAgKiBsYWJlbCBlbGVtZW50IHdpZHRoIGFuZCBSVEwgY29udGV4dC5cbiAgICogQHBhcmFtIHtudW1iZXJ9IGxhYmVsV2lkdGhcbiAgICogQHBhcmFtIHtib29sZWFufSBpc1J0bFxuICAgKi9cbiAgdXBkYXRlT3V0bGluZVBhdGgobGFiZWxXaWR0aCwgaXNSdGwpIHt9XG59XG5cbmV4cG9ydCB7TURDVGV4dEZpZWxkQWRhcHRlciwgTmF0aXZlSW5wdXRUeXBlLCBGb3VuZGF0aW9uTWFwVHlwZX07XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOCBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyogZXNsaW50IG5vLXVudXNlZC12YXJzOiBbMiwge1wiYXJnc1wiOiBcIm5vbmVcIn1dICovXG5cbi8qKlxuICogQWRhcHRlciBmb3IgTURDIFRleHRGaWVsZCBMaW5lIFJpcHBsZS5cbiAqXG4gKiBEZWZpbmVzIHRoZSBzaGFwZSBvZiB0aGUgYWRhcHRlciBleHBlY3RlZCBieSB0aGUgZm91bmRhdGlvbi4gSW1wbGVtZW50IHRoaXNcbiAqIGFkYXB0ZXIgdG8gaW50ZWdyYXRlIHRoZSBsaW5lIHJpcHBsZSBpbnRvIHlvdXIgZnJhbWV3b3JrLiBTZWVcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRlcmlhbC1jb21wb25lbnRzL21hdGVyaWFsLWNvbXBvbmVudHMtd2ViL2Jsb2IvbWFzdGVyL2RvY3MvYXV0aG9yaW5nLWNvbXBvbmVudHMubWRcbiAqIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICpcbiAqIEByZWNvcmRcbiAqL1xuY2xhc3MgTURDTGluZVJpcHBsZUFkYXB0ZXIge1xuICAvKipcbiAgICogQWRkcyBhIGNsYXNzIHRvIHRoZSBsaW5lIHJpcHBsZSBlbGVtZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG4gICAqL1xuICBhZGRDbGFzcyhjbGFzc05hbWUpIHt9XG5cbiAgLyoqXG4gICAqIFJlbW92ZXMgYSBjbGFzcyBmcm9tIHRoZSBsaW5lIHJpcHBsZSBlbGVtZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG4gICAqL1xuICByZW1vdmVDbGFzcyhjbGFzc05hbWUpIHt9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWVcbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICovXG4gIGhhc0NsYXNzKGNsYXNzTmFtZSkge31cblxuICAvKipcbiAgICogU2V0cyBhbiBhdHRyaWJ1dGUgd2l0aCBhIGdpdmVuIHZhbHVlIG9uIHRoZSBsaW5lIHJpcHBsZSBlbGVtZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gYXR0clxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAgICovXG4gIHNldEF0dHIoYXR0ciwgdmFsdWUpIHt9XG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVycyBhbiBldmVudCBsaXN0ZW5lciBvbiB0aGUgbGluZSByaXBwbGUgZWxlbWVudCBmb3IgYSBnaXZlbiBldmVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2dFR5cGVcbiAgICogQHBhcmFtIHtmdW5jdGlvbighRXZlbnQpOiB1bmRlZmluZWR9IGhhbmRsZXJcbiAgICovXG4gIHJlZ2lzdGVyRXZlbnRIYW5kbGVyKGV2dFR5cGUsIGhhbmRsZXIpIHt9XG5cbiAgLyoqXG4gICAqIERlcmVnaXN0ZXJzIGFuIGV2ZW50IGxpc3RlbmVyIG9uIHRoZSBsaW5lIHJpcHBsZSBlbGVtZW50IGZvciBhIGdpdmVuIGV2ZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXZ0VHlwZVxuICAgKiBAcGFyYW0ge2Z1bmN0aW9uKCFFdmVudCk6IHVuZGVmaW5lZH0gaGFuZGxlclxuICAgKi9cbiAgZGVyZWdpc3RlckV2ZW50SGFuZGxlcihldnRUeXBlLCBoYW5kbGVyKSB7fVxufVxuXG5leHBvcnQgZGVmYXVsdCBNRENMaW5lUmlwcGxlQWRhcHRlcjtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE4IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKiogQGVudW0ge3N0cmluZ30gKi9cbmNvbnN0IGNzc0NsYXNzZXMgPSB7XG4gIExJTkVfUklQUExFX0FDVElWRTogJ21kYy1saW5lLXJpcHBsZS0tYWN0aXZlJyxcbiAgTElORV9SSVBQTEVfREVBQ1RJVkFUSU5HOiAnbWRjLWxpbmUtcmlwcGxlLS1kZWFjdGl2YXRpbmcnLFxufTtcblxuZXhwb3J0IHtjc3NDbGFzc2VzfTtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE4IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgTURDRm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvYmFzZS9mb3VuZGF0aW9uJztcbmltcG9ydCBNRENMaW5lUmlwcGxlQWRhcHRlciBmcm9tICcuL2FkYXB0ZXInO1xuaW1wb3J0IHtjc3NDbGFzc2VzfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cblxuLyoqXG4gKiBAZXh0ZW5kcyB7TURDRm91bmRhdGlvbjwhTURDTGluZVJpcHBsZUFkYXB0ZXI+fVxuICogQGZpbmFsXG4gKi9cbmNsYXNzIE1EQ0xpbmVSaXBwbGVGb3VuZGF0aW9uIGV4dGVuZHMgTURDRm91bmRhdGlvbiB7XG4gIC8qKiBAcmV0dXJuIGVudW0ge3N0cmluZ30gKi9cbiAgc3RhdGljIGdldCBjc3NDbGFzc2VzKCkge1xuICAgIHJldHVybiBjc3NDbGFzc2VzO1xuICB9XG5cbiAgLyoqXG4gICAqIHtAc2VlIE1EQ0xpbmVSaXBwbGVBZGFwdGVyfSBmb3IgdHlwaW5nIGluZm9ybWF0aW9uIG9uIHBhcmFtZXRlcnMgYW5kIHJldHVyblxuICAgKiB0eXBlcy5cbiAgICogQHJldHVybiB7IU1EQ0xpbmVSaXBwbGVBZGFwdGVyfVxuICAgKi9cbiAgc3RhdGljIGdldCBkZWZhdWx0QWRhcHRlcigpIHtcbiAgICByZXR1cm4gLyoqIEB0eXBlIHshTURDTGluZVJpcHBsZUFkYXB0ZXJ9ICovICh7XG4gICAgICBhZGRDbGFzczogKCkgPT4ge30sXG4gICAgICByZW1vdmVDbGFzczogKCkgPT4ge30sXG4gICAgICBoYXNDbGFzczogKCkgPT4ge30sXG4gICAgICBzZXRBdHRyOiAoKSA9PiB7fSxcbiAgICAgIHJlZ2lzdGVyRXZlbnRIYW5kbGVyOiAoKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJFdmVudEhhbmRsZXI6ICgpID0+IHt9LFxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7IU1EQ0xpbmVSaXBwbGVBZGFwdGVyPX0gYWRhcHRlclxuICAgKi9cbiAgY29uc3RydWN0b3IoYWRhcHRlciA9IC8qKiBAdHlwZSB7IU1EQ0xpbmVSaXBwbGVBZGFwdGVyfSAqLyAoe30pKSB7XG4gICAgc3VwZXIoT2JqZWN0LmFzc2lnbihNRENMaW5lUmlwcGxlRm91bmRhdGlvbi5kZWZhdWx0QWRhcHRlciwgYWRhcHRlcikpO1xuXG4gICAgLyoqIEBwcml2YXRlIHtmdW5jdGlvbighRXZlbnQpOiB1bmRlZmluZWR9ICovXG4gICAgdGhpcy50cmFuc2l0aW9uRW5kSGFuZGxlcl8gPSAoZXZ0KSA9PiB0aGlzLmhhbmRsZVRyYW5zaXRpb25FbmQoZXZ0KTtcbiAgfVxuXG4gIGluaXQoKSB7XG4gICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlckV2ZW50SGFuZGxlcigndHJhbnNpdGlvbmVuZCcsIHRoaXMudHJhbnNpdGlvbkVuZEhhbmRsZXJfKTtcbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVyRXZlbnRIYW5kbGVyKCd0cmFuc2l0aW9uZW5kJywgdGhpcy50cmFuc2l0aW9uRW5kSGFuZGxlcl8pO1xuICB9XG5cbiAgLyoqXG4gICAqIEFjdGl2YXRlcyB0aGUgbGluZSByaXBwbGVcbiAgICovXG4gIGFjdGl2YXRlKCkge1xuICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoY3NzQ2xhc3Nlcy5MSU5FX1JJUFBMRV9ERUFDVElWQVRJTkcpO1xuICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoY3NzQ2xhc3Nlcy5MSU5FX1JJUFBMRV9BQ1RJVkUpO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldHMgdGhlIGNlbnRlciBvZiB0aGUgcmlwcGxlIGFuaW1hdGlvbiB0byB0aGUgZ2l2ZW4gWCBjb29yZGluYXRlLlxuICAgKiBAcGFyYW0geyFudW1iZXJ9IHhDb29yZGluYXRlXG4gICAqL1xuICBzZXRSaXBwbGVDZW50ZXIoeENvb3JkaW5hdGUpIHtcbiAgICBjb25zdCBhdHRyaWJ1dGVTdHJpbmcgPVxuICAgICAgICBgdHJhbnNmb3JtLW9yaWdpbjogJHt4Q29vcmRpbmF0ZX1weCBjZW50ZXJgO1xuXG4gICAgdGhpcy5hZGFwdGVyXy5zZXRBdHRyKCdzdHlsZScsIGF0dHJpYnV0ZVN0cmluZyk7XG4gIH1cblxuICAvKipcbiAgICogRGVhY3RpdmF0ZXMgdGhlIGxpbmUgcmlwcGxlXG4gICAqL1xuICBkZWFjdGl2YXRlKCkge1xuICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoY3NzQ2xhc3Nlcy5MSU5FX1JJUFBMRV9ERUFDVElWQVRJTkcpO1xuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZXMgYSB0cmFuc2l0aW9uIGVuZCBldmVudFxuICAgKiBAcGFyYW0geyFFdmVudH0gZXZ0XG4gICAqL1xuICBoYW5kbGVUcmFuc2l0aW9uRW5kKGV2dCkge1xuICAgIC8vIFdhaXQgZm9yIHRoZSBsaW5lIHJpcHBsZSB0byBiZSBlaXRoZXIgdHJhbnNwYXJlbnQgb3Igb3BhcXVlXG4gICAgLy8gYmVmb3JlIGVtaXR0aW5nIHRoZSBhbmltYXRpb24gZW5kIGV2ZW50XG4gICAgY29uc3QgaXNEZWFjdGl2YXRpbmcgPSB0aGlzLmFkYXB0ZXJfLmhhc0NsYXNzKGNzc0NsYXNzZXMuTElORV9SSVBQTEVfREVBQ1RJVkFUSU5HKTtcblxuICAgIGlmIChldnQucHJvcGVydHlOYW1lID09PSAnb3BhY2l0eScpIHtcbiAgICAgIGlmIChpc0RlYWN0aXZhdGluZykge1xuICAgICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUNsYXNzKGNzc0NsYXNzZXMuTElORV9SSVBQTEVfQUNUSVZFKTtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhjc3NDbGFzc2VzLkxJTkVfUklQUExFX0RFQUNUSVZBVElORyk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1EQ0xpbmVSaXBwbGVGb3VuZGF0aW9uO1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qIGVzbGludCBuby11bnVzZWQtdmFyczogWzIsIHtcImFyZ3NcIjogXCJub25lXCJ9XSAqL1xuXG4vKipcbiAqIEFkYXB0ZXIgZm9yIE1EQyBGbG9hdGluZyBMYWJlbC5cbiAqXG4gKiBEZWZpbmVzIHRoZSBzaGFwZSBvZiB0aGUgYWRhcHRlciBleHBlY3RlZCBieSB0aGUgZm91bmRhdGlvbi4gSW1wbGVtZW50IHRoaXNcbiAqIGFkYXB0ZXIgdG8gaW50ZWdyYXRlIHRoZSBmbG9hdGluZyBsYWJlbCBpbnRvIHlvdXIgZnJhbWV3b3JrLiBTZWVcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRlcmlhbC1jb21wb25lbnRzL21hdGVyaWFsLWNvbXBvbmVudHMtd2ViL2Jsb2IvbWFzdGVyL2RvY3MvYXV0aG9yaW5nLWNvbXBvbmVudHMubWRcbiAqIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICpcbiAqIEByZWNvcmRcbiAqL1xuY2xhc3MgTURDRmxvYXRpbmdMYWJlbEFkYXB0ZXIge1xuICAvKipcbiAgICogQWRkcyBhIGNsYXNzIHRvIHRoZSBsYWJlbCBlbGVtZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG4gICAqL1xuICBhZGRDbGFzcyhjbGFzc05hbWUpIHt9XG5cbiAgLyoqXG4gICAqIFJlbW92ZXMgYSBjbGFzcyBmcm9tIHRoZSBsYWJlbCBlbGVtZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG4gICAqL1xuICByZW1vdmVDbGFzcyhjbGFzc05hbWUpIHt9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIHdpZHRoIG9mIHRoZSBsYWJlbCBlbGVtZW50LlxuICAgKiBAcmV0dXJuIHtudW1iZXJ9XG4gICAqL1xuICBnZXRXaWR0aCgpIHt9XG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVycyBhbiBldmVudCBsaXN0ZW5lciBvbiB0aGUgcm9vdCBlbGVtZW50IGZvciBhIGdpdmVuIGV2ZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXZ0VHlwZVxuICAgKiBAcGFyYW0ge2Z1bmN0aW9uKCFFdmVudCk6IHVuZGVmaW5lZH0gaGFuZGxlclxuICAgKi9cbiAgcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoZXZ0VHlwZSwgaGFuZGxlcikge31cblxuICAvKipcbiAgICogRGVyZWdpc3RlcnMgYW4gZXZlbnQgbGlzdGVuZXIgb24gdGhlIHJvb3QgZWxlbWVudCBmb3IgYSBnaXZlbiBldmVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2dFR5cGVcbiAgICogQHBhcmFtIHtmdW5jdGlvbighRXZlbnQpOiB1bmRlZmluZWR9IGhhbmRsZXJcbiAgICovXG4gIGRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoZXZ0VHlwZSwgaGFuZGxlcikge31cbn1cblxuZXhwb3J0IGRlZmF1bHQgTURDRmxvYXRpbmdMYWJlbEFkYXB0ZXI7XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyoqIEBlbnVtIHtzdHJpbmd9ICovXG5jb25zdCBjc3NDbGFzc2VzID0ge1xuICBMQUJFTF9GTE9BVF9BQk9WRTogJ21kYy1mbG9hdGluZy1sYWJlbC0tZmxvYXQtYWJvdmUnLFxuICBMQUJFTF9TSEFLRTogJ21kYy1mbG9hdGluZy1sYWJlbC0tc2hha2UnLFxufTtcblxuZXhwb3J0IHtjc3NDbGFzc2VzfTtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgTURDRm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvYmFzZS9mb3VuZGF0aW9uJztcbmltcG9ydCBNRENGbG9hdGluZ0xhYmVsQWRhcHRlciBmcm9tICcuL2FkYXB0ZXInO1xuaW1wb3J0IHtjc3NDbGFzc2VzfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbi8qKlxuICogQGV4dGVuZHMge01EQ0ZvdW5kYXRpb248IU1EQ0Zsb2F0aW5nTGFiZWxBZGFwdGVyPn1cbiAqIEBmaW5hbFxuICovXG5jbGFzcyBNRENGbG9hdGluZ0xhYmVsRm91bmRhdGlvbiBleHRlbmRzIE1EQ0ZvdW5kYXRpb24ge1xuICAvKiogQHJldHVybiBlbnVtIHtzdHJpbmd9ICovXG4gIHN0YXRpYyBnZXQgY3NzQ2xhc3NlcygpIHtcbiAgICByZXR1cm4gY3NzQ2xhc3NlcztcbiAgfVxuXG4gIC8qKlxuICAgKiB7QHNlZSBNRENGbG9hdGluZ0xhYmVsQWRhcHRlcn0gZm9yIHR5cGluZyBpbmZvcm1hdGlvbiBvbiBwYXJhbWV0ZXJzIGFuZCByZXR1cm5cbiAgICogdHlwZXMuXG4gICAqIEByZXR1cm4geyFNRENGbG9hdGluZ0xhYmVsQWRhcHRlcn1cbiAgICovXG4gIHN0YXRpYyBnZXQgZGVmYXVsdEFkYXB0ZXIoKSB7XG4gICAgcmV0dXJuIC8qKiBAdHlwZSB7IU1EQ0Zsb2F0aW5nTGFiZWxBZGFwdGVyfSAqLyAoe1xuICAgICAgYWRkQ2xhc3M6ICgpID0+IHt9LFxuICAgICAgcmVtb3ZlQ2xhc3M6ICgpID0+IHt9LFxuICAgICAgZ2V0V2lkdGg6ICgpID0+IHt9LFxuICAgICAgcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6ICgpID0+IHt9LFxuICAgICAgZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKCkgPT4ge30sXG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHshTURDRmxvYXRpbmdMYWJlbEFkYXB0ZXJ9IGFkYXB0ZXJcbiAgICovXG4gIGNvbnN0cnVjdG9yKGFkYXB0ZXIpIHtcbiAgICBzdXBlcihPYmplY3QuYXNzaWduKE1EQ0Zsb2F0aW5nTGFiZWxGb3VuZGF0aW9uLmRlZmF1bHRBZGFwdGVyLCBhZGFwdGVyKSk7XG5cbiAgICAvKiogQHByaXZhdGUge2Z1bmN0aW9uKCFFdmVudCk6IHVuZGVmaW5lZH0gKi9cbiAgICB0aGlzLnNoYWtlQW5pbWF0aW9uRW5kSGFuZGxlcl8gPSAoKSA9PiB0aGlzLmhhbmRsZVNoYWtlQW5pbWF0aW9uRW5kXygpO1xuICB9XG5cbiAgaW5pdCgpIHtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdhbmltYXRpb25lbmQnLCB0aGlzLnNoYWtlQW5pbWF0aW9uRW5kSGFuZGxlcl8pO1xuICB9XG5cbiAgZGVzdHJveSgpIHtcbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ2FuaW1hdGlvbmVuZCcsIHRoaXMuc2hha2VBbmltYXRpb25FbmRIYW5kbGVyXyk7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyB0aGUgd2lkdGggb2YgdGhlIGxhYmVsIGVsZW1lbnQuXG4gICAqIEByZXR1cm4ge251bWJlcn1cbiAgICovXG4gIGdldFdpZHRoKCkge1xuICAgIHJldHVybiB0aGlzLmFkYXB0ZXJfLmdldFdpZHRoKCk7XG4gIH1cblxuICAvKipcbiAgICogU3R5bGVzIHRoZSBsYWJlbCB0byBwcm9kdWNlIHRoZSBsYWJlbCBzaGFrZSBmb3IgZXJyb3JzLlxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IHNob3VsZFNoYWtlIGFkZHMgc2hha2UgY2xhc3MgaWYgdHJ1ZSxcbiAgICogb3RoZXJ3aXNlIHJlbW92ZXMgc2hha2UgY2xhc3MuXG4gICAqL1xuICBzaGFrZShzaG91bGRTaGFrZSkge1xuICAgIGNvbnN0IHtMQUJFTF9TSEFLRX0gPSBNRENGbG9hdGluZ0xhYmVsRm91bmRhdGlvbi5jc3NDbGFzc2VzO1xuICAgIGlmIChzaG91bGRTaGFrZSkge1xuICAgICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyhMQUJFTF9TSEFLRSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoTEFCRUxfU0hBS0UpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBTdHlsZXMgdGhlIGxhYmVsIHRvIGZsb2F0IG9yIGRvY2suXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gc2hvdWxkRmxvYXQgYWRkcyBmbG9hdCBjbGFzcyBpZiB0cnVlLCBvdGhlcndpc2UgcmVtb3ZlXG4gICAqIGZsb2F0IGFuZCBzaGFrZSBjbGFzcyB0byBkb2NrIGxhYmVsLlxuICAgKi9cbiAgZmxvYXQoc2hvdWxkRmxvYXQpIHtcbiAgICBjb25zdCB7TEFCRUxfRkxPQVRfQUJPVkUsIExBQkVMX1NIQUtFfSA9IE1EQ0Zsb2F0aW5nTGFiZWxGb3VuZGF0aW9uLmNzc0NsYXNzZXM7XG4gICAgaWYgKHNob3VsZEZsb2F0KSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmFkZENsYXNzKExBQkVMX0ZMT0FUX0FCT1ZFKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhMQUJFTF9GTE9BVF9BQk9WRSk7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUNsYXNzKExBQkVMX1NIQUtFKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogSGFuZGxlcyBhbiBpbnRlcmFjdGlvbiBldmVudCBvbiB0aGUgcm9vdCBlbGVtZW50LlxuICAgKi9cbiAgaGFuZGxlU2hha2VBbmltYXRpb25FbmRfKCkge1xuICAgIGNvbnN0IHtMQUJFTF9TSEFLRX0gPSBNRENGbG9hdGluZ0xhYmVsRm91bmRhdGlvbi5jc3NDbGFzc2VzO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoTEFCRUxfU0hBS0UpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1EQ0Zsb2F0aW5nTGFiZWxGb3VuZGF0aW9uO1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qIGVzbGludCBuby11bnVzZWQtdmFyczogWzIsIHtcImFyZ3NcIjogXCJub25lXCJ9XSAqL1xuXG4vKipcbiAqIEFkYXB0ZXIgZm9yIE1EQyBOb3RjaGVkIE91dGxpbmUuXG4gKlxuICogRGVmaW5lcyB0aGUgc2hhcGUgb2YgdGhlIGFkYXB0ZXIgZXhwZWN0ZWQgYnkgdGhlIGZvdW5kYXRpb24uIEltcGxlbWVudCB0aGlzXG4gKiBhZGFwdGVyIHRvIGludGVncmF0ZSB0aGUgTm90Y2hlZCBPdXRsaW5lIGludG8geW91ciBmcmFtZXdvcmsuIFNlZVxuICogaHR0cHM6Ly9naXRodWIuY29tL21hdGVyaWFsLWNvbXBvbmVudHMvbWF0ZXJpYWwtY29tcG9uZW50cy13ZWIvYmxvYi9tYXN0ZXIvZG9jcy9hdXRob3JpbmctY29tcG9uZW50cy5tZFxuICogZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKlxuICogQHJlY29yZFxuICovXG5jbGFzcyBNRENOb3RjaGVkT3V0bGluZUFkYXB0ZXIge1xuICAvKipcbiAgICogUmV0dXJucyB0aGUgd2lkdGggb2YgdGhlIHJvb3QgZWxlbWVudC5cbiAgICogQHJldHVybiB7bnVtYmVyfVxuICAgKi9cbiAgZ2V0V2lkdGgoKSB7fVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBoZWlnaHQgb2YgdGhlIHJvb3QgZWxlbWVudC5cbiAgICogQHJldHVybiB7bnVtYmVyfVxuICAgKi9cbiAgZ2V0SGVpZ2h0KCkge31cblxuICAvKipcbiAgICogU2V0cyB0aGUgXCJkXCIgYXR0cmlidXRlIG9mIHRoZSBvdXRsaW5lIGVsZW1lbnQncyBTVkcgcGF0aC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gICAqL1xuICBzZXRPdXRsaW5lUGF0aEF0dHIodmFsdWUpIHt9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGlkbGUgb3V0bGluZSBlbGVtZW50J3MgY29tcHV0ZWQgc3R5bGUgdmFsdWUgb2YgdGhlIGdpdmVuIGNzcyBwcm9wZXJ0eSBgcHJvcGVydHlOYW1lYC5cbiAgICogV2UgYWNoaWV2ZSB0aGlzIHZpYSBgZ2V0Q29tcHV0ZWRTdHlsZSguLi4pLmdldFByb3BlcnR5VmFsdWUocHJvcGVydHlOYW1lKWAuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwcm9wZXJ0eU5hbWVcbiAgICogQHJldHVybiB7c3RyaW5nfVxuICAgKi9cbiAgZ2V0SWRsZU91dGxpbmVTdHlsZVZhbHVlKHByb3BlcnR5TmFtZSkge31cbn1cblxuZXhwb3J0IGRlZmF1bHQgTURDTm90Y2hlZE91dGxpbmVBZGFwdGVyO1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTggR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qKiBAZW51bSB7c3RyaW5nfSAqL1xuY29uc3Qgc3RyaW5ncyA9IHtcbiAgUEFUSF9TRUxFQ1RPUjogJy5tZGMtbm90Y2hlZC1vdXRsaW5lX19wYXRoJyxcbiAgSURMRV9PVVRMSU5FX1NFTEVDVE9SOiAnLm1kYy1ub3RjaGVkLW91dGxpbmVfX2lkbGUnLFxufTtcblxuZXhwb3J0IHtzdHJpbmdzfTtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgTURDRm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvYmFzZS9mb3VuZGF0aW9uJztcbmltcG9ydCBNRENOb3RjaGVkT3V0bGluZUFkYXB0ZXIgZnJvbSAnLi9hZGFwdGVyJztcbmltcG9ydCB7c3RyaW5nc30gZnJvbSAnLi9jb25zdGFudHMnO1xuXG4vKipcbiAqIEBleHRlbmRzIHtNRENGb3VuZGF0aW9uPCFNRENOb3RjaGVkT3V0bGluZUFkYXB0ZXI+fVxuICogQGZpbmFsXG4gKi9cbmNsYXNzIE1EQ05vdGNoZWRPdXRsaW5lRm91bmRhdGlvbiBleHRlbmRzIE1EQ0ZvdW5kYXRpb24ge1xuICAvKiogQHJldHVybiBlbnVtIHtzdHJpbmd9ICovXG4gIHN0YXRpYyBnZXQgc3RyaW5ncygpIHtcbiAgICByZXR1cm4gc3RyaW5ncztcbiAgfVxuXG4gIC8qKlxuICAgKiB7QHNlZSBNRENOb3RjaGVkT3V0bGluZUFkYXB0ZXJ9IGZvciB0eXBpbmcgaW5mb3JtYXRpb24gb24gcGFyYW1ldGVycyBhbmQgcmV0dXJuXG4gICAqIHR5cGVzLlxuICAgKiBAcmV0dXJuIHshTURDTm90Y2hlZE91dGxpbmVBZGFwdGVyfVxuICAgKi9cbiAgc3RhdGljIGdldCBkZWZhdWx0QWRhcHRlcigpIHtcbiAgICByZXR1cm4gLyoqIEB0eXBlIHshTURDTm90Y2hlZE91dGxpbmVBZGFwdGVyfSAqLyAoe1xuICAgICAgZ2V0V2lkdGg6ICgpID0+IHt9LFxuICAgICAgZ2V0SGVpZ2h0OiAoKSA9PiB7fSxcbiAgICAgIHNldE91dGxpbmVQYXRoQXR0cjogKCkgPT4ge30sXG4gICAgICBnZXRJZGxlT3V0bGluZVN0eWxlVmFsdWU6ICgpID0+IHt9LFxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7IU1EQ05vdGNoZWRPdXRsaW5lQWRhcHRlcn0gYWRhcHRlclxuICAgKi9cbiAgY29uc3RydWN0b3IoYWRhcHRlcikge1xuICAgIHN1cGVyKE9iamVjdC5hc3NpZ24oTURDTm90Y2hlZE91dGxpbmVGb3VuZGF0aW9uLmRlZmF1bHRBZGFwdGVyLCBhZGFwdGVyKSk7XG4gIH1cblxuICAvKipcbiAgICogVXBkYXRlcyB0aGUgU1ZHIHBhdGggb2YgdGhlIGZvY3VzIG91dGxpbmUgZWxlbWVudCBiYXNlZCBvbiB0aGUgbm90Y2hXaWR0aFxuICAgKiBhbmQgdGhlIFJUTCBjb250ZXh0LlxuICAgKiBAcGFyYW0ge251bWJlcn0gbm90Y2hXaWR0aFxuICAgKiBAcGFyYW0ge2Jvb2xlYW49fSBpc1J0bFxuICAgKi9cbiAgdXBkYXRlU3ZnUGF0aChub3RjaFdpZHRoLCBpc1J0bCA9IGZhbHNlKSB7XG4gICAgLy8gRmFsbCBiYWNrIHRvIHJlYWRpbmcgYSBzcGVjaWZpYyBjb3JuZXIncyBzdHlsZSBiZWNhdXNlIEZpcmVmb3ggZG9lc24ndCByZXBvcnQgdGhlIHN0eWxlIG9uIGJvcmRlci1yYWRpdXMuXG4gICAgY29uc3QgcmFkaXVzU3R5bGVWYWx1ZSA9IHRoaXMuYWRhcHRlcl8uZ2V0SWRsZU91dGxpbmVTdHlsZVZhbHVlKCdib3JkZXItcmFkaXVzJykgfHxcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5nZXRJZGxlT3V0bGluZVN0eWxlVmFsdWUoJ2JvcmRlci10b3AtbGVmdC1yYWRpdXMnKTtcbiAgICBjb25zdCByYWRpdXMgPSBwYXJzZUZsb2F0KHJhZGl1c1N0eWxlVmFsdWUpO1xuICAgIGNvbnN0IHdpZHRoID0gdGhpcy5hZGFwdGVyXy5nZXRXaWR0aCgpO1xuICAgIGNvbnN0IGhlaWdodCA9IHRoaXMuYWRhcHRlcl8uZ2V0SGVpZ2h0KCk7XG4gICAgY29uc3QgY29ybmVyV2lkdGggPSByYWRpdXMgKyAxLjI7XG4gICAgY29uc3QgbGVhZGluZ1N0cm9rZUxlbmd0aCA9IE1hdGguYWJzKDExIC0gY29ybmVyV2lkdGgpO1xuICAgIGNvbnN0IHBhZGRlZE5vdGNoV2lkdGggPSBub3RjaFdpZHRoICsgODtcblxuICAgIC8vIFRoZSByaWdodCwgYm90dG9tLCBhbmQgbGVmdCBzaWRlcyBvZiB0aGUgb3V0bGluZSBmb2xsb3cgdGhlIHNhbWUgU1ZHIHBhdGguXG4gICAgY29uc3QgcGF0aE1pZGRsZSA9ICdhJyArIHJhZGl1cyArICcsJyArIHJhZGl1cyArICcgMCAwIDEgJyArIHJhZGl1cyArICcsJyArIHJhZGl1c1xuICAgICAgKyAndicgKyAoaGVpZ2h0IC0gKDIgKiBjb3JuZXJXaWR0aCkpXG4gICAgICArICdhJyArIHJhZGl1cyArICcsJyArIHJhZGl1cyArICcgMCAwIDEgJyArIC1yYWRpdXMgKyAnLCcgKyByYWRpdXNcbiAgICAgICsgJ2gnICsgKC13aWR0aCArICgyICogY29ybmVyV2lkdGgpKVxuICAgICAgKyAnYScgKyByYWRpdXMgKyAnLCcgKyByYWRpdXMgKyAnIDAgMCAxICcgKyAtcmFkaXVzICsgJywnICsgLXJhZGl1c1xuICAgICAgKyAndicgKyAoLWhlaWdodCArICgyICogY29ybmVyV2lkdGgpKVxuICAgICAgKyAnYScgKyByYWRpdXMgKyAnLCcgKyByYWRpdXMgKyAnIDAgMCAxICcgKyByYWRpdXMgKyAnLCcgKyAtcmFkaXVzO1xuXG4gICAgbGV0IHBhdGg7XG4gICAgaWYgKCFpc1J0bCkge1xuICAgICAgcGF0aCA9ICdNJyArIChjb3JuZXJXaWR0aCArIGxlYWRpbmdTdHJva2VMZW5ndGggKyBwYWRkZWROb3RjaFdpZHRoKSArICcsJyArIDFcbiAgICAgICAgKyAnaCcgKyAod2lkdGggLSAoMiAqIGNvcm5lcldpZHRoKSAtIHBhZGRlZE5vdGNoV2lkdGggLSBsZWFkaW5nU3Ryb2tlTGVuZ3RoKVxuICAgICAgICArIHBhdGhNaWRkbGVcbiAgICAgICAgKyAnaCcgKyBsZWFkaW5nU3Ryb2tlTGVuZ3RoO1xuICAgIH0gZWxzZSB7XG4gICAgICBwYXRoID0gJ00nICsgKHdpZHRoIC0gY29ybmVyV2lkdGggLSBsZWFkaW5nU3Ryb2tlTGVuZ3RoKSArICcsJyArIDFcbiAgICAgICAgKyAnaCcgKyBsZWFkaW5nU3Ryb2tlTGVuZ3RoXG4gICAgICAgICsgcGF0aE1pZGRsZVxuICAgICAgICArICdoJyArICh3aWR0aCAtICgyICogY29ybmVyV2lkdGgpIC0gcGFkZGVkTm90Y2hXaWR0aCAtIGxlYWRpbmdTdHJva2VMZW5ndGgpO1xuICAgIH1cblxuICAgIHRoaXMuYWRhcHRlcl8uc2V0T3V0bGluZVBhdGhBdHRyKHBhdGgpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1EQ05vdGNoZWRPdXRsaW5lRm91bmRhdGlvbjtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKiogQGVudW0ge3N0cmluZ30gKi9cbmNvbnN0IHN0cmluZ3MgPSB7XG4gIEFSSUFfQ09OVFJPTFM6ICdhcmlhLWNvbnRyb2xzJyxcbiAgSU5QVVRfU0VMRUNUT1I6ICcubWRjLXRleHQtZmllbGRfX2lucHV0JyxcbiAgTEFCRUxfU0VMRUNUT1I6ICcubWRjLWZsb2F0aW5nLWxhYmVsJyxcbiAgSUNPTl9TRUxFQ1RPUjogJy5tZGMtdGV4dC1maWVsZF9faWNvbicsXG4gIE9VVExJTkVfU0VMRUNUT1I6ICcubWRjLW5vdGNoZWQtb3V0bGluZScsXG4gIEJPVFRPTV9MSU5FX1NFTEVDVE9SOiAnLm1kYy1saW5lLXJpcHBsZScsXG59O1xuXG4vKiogQGVudW0ge3N0cmluZ30gKi9cbmNvbnN0IGNzc0NsYXNzZXMgPSB7XG4gIFJPT1Q6ICdtZGMtdGV4dC1maWVsZCcsXG4gIFVQR1JBREVEOiAnbWRjLXRleHQtZmllbGQtLXVwZ3JhZGVkJyxcbiAgRElTQUJMRUQ6ICdtZGMtdGV4dC1maWVsZC0tZGlzYWJsZWQnLFxuICBERU5TRTogJ21kYy10ZXh0LWZpZWxkLS1kZW5zZScsXG4gIEZPQ1VTRUQ6ICdtZGMtdGV4dC1maWVsZC0tZm9jdXNlZCcsXG4gIElOVkFMSUQ6ICdtZGMtdGV4dC1maWVsZC0taW52YWxpZCcsXG4gIEJPWDogJ21kYy10ZXh0LWZpZWxkLS1ib3gnLFxuICBPVVRMSU5FRDogJ21kYy10ZXh0LWZpZWxkLS1vdXRsaW5lZCcsXG59O1xuXG4vKiogQGVudW0ge251bWJlcn0gKi9cbmNvbnN0IG51bWJlcnMgPSB7XG4gIExBQkVMX1NDQUxFOiAwLjc1LFxuICBERU5TRV9MQUJFTF9TQ0FMRTogMC45MjMsXG59O1xuXG5leHBvcnQge2Nzc0NsYXNzZXMsIHN0cmluZ3MsIG51bWJlcnN9O1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCBNRENGb3VuZGF0aW9uIGZyb20gJ0BtYXRlcmlhbC9iYXNlL2ZvdW5kYXRpb24nO1xuaW1wb3J0IHtNRENUZXh0RmllbGRBZGFwdGVyLCBOYXRpdmVJbnB1dFR5cGUsIEZvdW5kYXRpb25NYXBUeXBlfSBmcm9tICcuL2FkYXB0ZXInO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbmltcG9ydCBNRENMaW5lUmlwcGxlRm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvbGluZS1yaXBwbGUvZm91bmRhdGlvbic7XG5pbXBvcnQgTURDVGV4dEZpZWxkSGVscGVyVGV4dEZvdW5kYXRpb24gZnJvbSAnLi9oZWxwZXItdGV4dC9mb3VuZGF0aW9uJztcbmltcG9ydCBNRENUZXh0RmllbGRJY29uRm91bmRhdGlvbiBmcm9tICcuL2ljb24vZm91bmRhdGlvbic7XG5pbXBvcnQgTURDRmxvYXRpbmdMYWJlbEZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL2Zsb2F0aW5nLWxhYmVsL2ZvdW5kYXRpb24nO1xuaW1wb3J0IE1EQ05vdGNoZWRPdXRsaW5lRm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvbm90Y2hlZC1vdXRsaW5lL2ZvdW5kYXRpb24nO1xuLyogZXNsaW50LWVuYWJsZSBuby11bnVzZWQtdmFycyAqL1xuaW1wb3J0IHtjc3NDbGFzc2VzLCBzdHJpbmdzLCBudW1iZXJzfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cblxuLy8gd2hpdGVsaXN0IGJhc2VkIG9mZiBvZiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9HdWlkZS9IVE1ML0hUTUw1L0NvbnN0cmFpbnRfdmFsaWRhdGlvblxuLy8gdW5kZXIgc2VjdGlvbjogYFZhbGlkYXRpb24tcmVsYXRlZCBhdHRyaWJ1dGVzYFxuY29uc3QgVkFMSURBVElPTl9BVFRSX1dISVRFTElTVCA9IFtcbiAgJ3BhdHRlcm4nLCAnbWluJywgJ21heCcsICdyZXF1aXJlZCcsICdzdGVwJywgJ21pbmxlbmd0aCcsICdtYXhsZW5ndGgnLFxuXTtcblxuLyoqXG4gKiBAZXh0ZW5kcyB7TURDRm91bmRhdGlvbjwhTURDVGV4dEZpZWxkQWRhcHRlcj59XG4gKiBAZmluYWxcbiAqL1xuY2xhc3MgTURDVGV4dEZpZWxkRm91bmRhdGlvbiBleHRlbmRzIE1EQ0ZvdW5kYXRpb24ge1xuICAvKiogQHJldHVybiBlbnVtIHtzdHJpbmd9ICovXG4gIHN0YXRpYyBnZXQgY3NzQ2xhc3NlcygpIHtcbiAgICByZXR1cm4gY3NzQ2xhc3NlcztcbiAgfVxuXG4gIC8qKiBAcmV0dXJuIGVudW0ge3N0cmluZ30gKi9cbiAgc3RhdGljIGdldCBzdHJpbmdzKCkge1xuICAgIHJldHVybiBzdHJpbmdzO1xuICB9XG5cbiAgLyoqIEByZXR1cm4gZW51bSB7c3RyaW5nfSAqL1xuICBzdGF0aWMgZ2V0IG51bWJlcnMoKSB7XG4gICAgcmV0dXJuIG51bWJlcnM7XG4gIH1cblxuICAvKiogQHJldHVybiB7Ym9vbGVhbn0gKi9cbiAgZ2V0IHNob3VsZFNoYWtlKCkge1xuICAgIHJldHVybiAhdGhpcy5pc1ZhbGlkKCkgJiYgIXRoaXMuaXNGb2N1c2VkXztcbiAgfVxuXG4gIC8qKiBAcmV0dXJuIHtib29sZWFufSAqL1xuICBnZXQgc2hvdWxkRmxvYXQoKSB7XG4gICAgcmV0dXJuICF0aGlzLmlzQmFkSW5wdXRfKCkgJiYgKCEhdGhpcy5nZXRWYWx1ZSgpIHx8IHRoaXMuaXNGb2N1c2VkXyk7XG4gIH1cblxuICAvKipcbiAgICoge0BzZWUgTURDVGV4dEZpZWxkQWRhcHRlcn0gZm9yIHR5cGluZyBpbmZvcm1hdGlvbiBvbiBwYXJhbWV0ZXJzIGFuZCByZXR1cm5cbiAgICogdHlwZXMuXG4gICAqIEByZXR1cm4geyFNRENUZXh0RmllbGRBZGFwdGVyfVxuICAgKi9cbiAgc3RhdGljIGdldCBkZWZhdWx0QWRhcHRlcigpIHtcbiAgICByZXR1cm4gLyoqIEB0eXBlIHshTURDVGV4dEZpZWxkQWRhcHRlcn0gKi8gKHtcbiAgICAgIGFkZENsYXNzOiAoKSA9PiB7fSxcbiAgICAgIHJlbW92ZUNsYXNzOiAoKSA9PiB7fSxcbiAgICAgIGhhc0NsYXNzOiAoKSA9PiB7fSxcbiAgICAgIHJlZ2lzdGVyVGV4dEZpZWxkSW50ZXJhY3Rpb25IYW5kbGVyOiAoKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJUZXh0RmllbGRJbnRlcmFjdGlvbkhhbmRsZXI6ICgpID0+IHt9LFxuICAgICAgcmVnaXN0ZXJJbnB1dEludGVyYWN0aW9uSGFuZGxlcjogKCkgPT4ge30sXG4gICAgICBkZXJlZ2lzdGVySW5wdXRJbnRlcmFjdGlvbkhhbmRsZXI6ICgpID0+IHt9LFxuICAgICAgcmVnaXN0ZXJWYWxpZGF0aW9uQXR0cmlidXRlQ2hhbmdlSGFuZGxlcjogKCkgPT4ge30sXG4gICAgICBkZXJlZ2lzdGVyVmFsaWRhdGlvbkF0dHJpYnV0ZUNoYW5nZUhhbmRsZXI6ICgpID0+IHt9LFxuICAgICAgZ2V0TmF0aXZlSW5wdXQ6ICgpID0+IHt9LFxuICAgICAgaXNGb2N1c2VkOiAoKSA9PiB7fSxcbiAgICAgIGlzUnRsOiAoKSA9PiB7fSxcbiAgICAgIGFjdGl2YXRlTGluZVJpcHBsZTogKCkgPT4ge30sXG4gICAgICBkZWFjdGl2YXRlTGluZVJpcHBsZTogKCkgPT4ge30sXG4gICAgICBzZXRMaW5lUmlwcGxlVHJhbnNmb3JtT3JpZ2luOiAoKSA9PiB7fSxcbiAgICAgIHNoYWtlTGFiZWw6ICgpID0+IHt9LFxuICAgICAgZmxvYXRMYWJlbDogKCkgPT4ge30sXG4gICAgICBoYXNMYWJlbDogKCkgPT4ge30sXG4gICAgICBnZXRMYWJlbFdpZHRoOiAoKSA9PiB7fSxcbiAgICAgIGhhc091dGxpbmU6ICgpID0+IHt9LFxuICAgICAgdXBkYXRlT3V0bGluZVBhdGg6ICgpID0+IHt9LFxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7IU1EQ1RleHRGaWVsZEFkYXB0ZXJ9IGFkYXB0ZXJcbiAgICogQHBhcmFtIHshRm91bmRhdGlvbk1hcFR5cGU9fSBmb3VuZGF0aW9uTWFwIE1hcCBmcm9tIHN1YmNvbXBvbmVudCBuYW1lcyB0byB0aGVpciBzdWJmb3VuZGF0aW9ucy5cbiAgICovXG4gIGNvbnN0cnVjdG9yKGFkYXB0ZXIsIGZvdW5kYXRpb25NYXAgPSAvKiogQHR5cGUgeyFGb3VuZGF0aW9uTWFwVHlwZX0gKi8gKHt9KSkge1xuICAgIHN1cGVyKE9iamVjdC5hc3NpZ24oTURDVGV4dEZpZWxkRm91bmRhdGlvbi5kZWZhdWx0QWRhcHRlciwgYWRhcHRlcikpO1xuXG4gICAgLyoqIEB0eXBlIHshTURDVGV4dEZpZWxkSGVscGVyVGV4dEZvdW5kYXRpb258dW5kZWZpbmVkfSAqL1xuICAgIHRoaXMuaGVscGVyVGV4dF8gPSBmb3VuZGF0aW9uTWFwLmhlbHBlclRleHQ7XG4gICAgLyoqIEB0eXBlIHshTURDVGV4dEZpZWxkSWNvbkZvdW5kYXRpb258dW5kZWZpbmVkfSAqL1xuICAgIHRoaXMuaWNvbl8gPSBmb3VuZGF0aW9uTWFwLmljb247XG5cbiAgICAvKiogQHByaXZhdGUge2Jvb2xlYW59ICovXG4gICAgdGhpcy5pc0ZvY3VzZWRfID0gZmFsc2U7XG4gICAgLyoqIEBwcml2YXRlIHtib29sZWFufSAqL1xuICAgIHRoaXMucmVjZWl2ZWRVc2VySW5wdXRfID0gZmFsc2U7XG4gICAgLyoqIEBwcml2YXRlIHtib29sZWFufSAqL1xuICAgIHRoaXMudXNlQ3VzdG9tVmFsaWRpdHlDaGVja2luZ18gPSBmYWxzZTtcbiAgICAvKiogQHByaXZhdGUge2Jvb2xlYW59ICovXG4gICAgdGhpcy5pc1ZhbGlkXyA9IHRydWU7XG4gICAgLyoqIEBwcml2YXRlIHtmdW5jdGlvbigpOiB1bmRlZmluZWR9ICovXG4gICAgdGhpcy5pbnB1dEZvY3VzSGFuZGxlcl8gPSAoKSA9PiB0aGlzLmFjdGl2YXRlRm9jdXMoKTtcbiAgICAvKiogQHByaXZhdGUge2Z1bmN0aW9uKCk6IHVuZGVmaW5lZH0gKi9cbiAgICB0aGlzLmlucHV0Qmx1ckhhbmRsZXJfID0gKCkgPT4gdGhpcy5kZWFjdGl2YXRlRm9jdXMoKTtcbiAgICAvKiogQHByaXZhdGUge2Z1bmN0aW9uKCk6IHVuZGVmaW5lZH0gKi9cbiAgICB0aGlzLmlucHV0SW5wdXRIYW5kbGVyXyA9ICgpID0+IHRoaXMuYXV0b0NvbXBsZXRlRm9jdXMoKTtcbiAgICAvKiogQHByaXZhdGUge2Z1bmN0aW9uKCFFdmVudCk6IHVuZGVmaW5lZH0gKi9cbiAgICB0aGlzLnNldFBvaW50ZXJYT2Zmc2V0XyA9IChldnQpID0+IHRoaXMuc2V0VHJhbnNmb3JtT3JpZ2luKGV2dCk7XG4gICAgLyoqIEBwcml2YXRlIHtmdW5jdGlvbighRXZlbnQpOiB1bmRlZmluZWR9ICovXG4gICAgdGhpcy50ZXh0RmllbGRJbnRlcmFjdGlvbkhhbmRsZXJfID0gKCkgPT4gdGhpcy5oYW5kbGVUZXh0RmllbGRJbnRlcmFjdGlvbigpO1xuICAgIC8qKiBAcHJpdmF0ZSB7ZnVuY3Rpb24oIUFycmF5KTogdW5kZWZpbmVkfSAqL1xuICAgIHRoaXMudmFsaWRhdGlvbkF0dHJpYnV0ZUNoYW5nZUhhbmRsZXJfID0gKG11dGF0aW9ucykgPT4gdGhpcy5oYW5kbGVWYWxpZGF0aW9uQXR0cmlidXRlTXV0YXRpb25fKG11dGF0aW9ucyk7XG4gICAgLyoqIEBwcml2YXRlIHshTXV0YXRpb25PYnNlcnZlcn0gKi9cbiAgICB0aGlzLnZhbGlkYXRpb25PYnNlcnZlcl87XG4gIH1cblxuICBpbml0KCkge1xuICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoTURDVGV4dEZpZWxkRm91bmRhdGlvbi5jc3NDbGFzc2VzLlVQR1JBREVEKTtcbiAgICAvLyBFbnN1cmUgbGFiZWwgZG9lcyBub3QgY29sbGlkZSB3aXRoIGFueSBwcmUtZmlsbGVkIHZhbHVlLlxuICAgIGlmICh0aGlzLmFkYXB0ZXJfLmhhc0xhYmVsKCkgJiYgdGhpcy5nZXRWYWx1ZSgpKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmZsb2F0TGFiZWwodGhpcy5zaG91bGRGbG9hdCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuYWRhcHRlcl8uaXNGb2N1c2VkKCkpIHtcbiAgICAgIHRoaXMuaW5wdXRGb2N1c0hhbmRsZXJfKCk7XG4gICAgfVxuXG4gICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlcklucHV0SW50ZXJhY3Rpb25IYW5kbGVyKCdmb2N1cycsIHRoaXMuaW5wdXRGb2N1c0hhbmRsZXJfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVySW5wdXRJbnRlcmFjdGlvbkhhbmRsZXIoJ2JsdXInLCB0aGlzLmlucHV0Qmx1ckhhbmRsZXJfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVySW5wdXRJbnRlcmFjdGlvbkhhbmRsZXIoJ2lucHV0JywgdGhpcy5pbnB1dElucHV0SGFuZGxlcl8pO1xuICAgIFsnbW91c2Vkb3duJywgJ3RvdWNoc3RhcnQnXS5mb3JFYWNoKChldnRUeXBlKSA9PiB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVySW5wdXRJbnRlcmFjdGlvbkhhbmRsZXIoZXZ0VHlwZSwgdGhpcy5zZXRQb2ludGVyWE9mZnNldF8pO1xuICAgIH0pO1xuICAgIFsnY2xpY2snLCAna2V5ZG93biddLmZvckVhY2goKGV2dFR5cGUpID0+IHtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJUZXh0RmllbGRJbnRlcmFjdGlvbkhhbmRsZXIoZXZ0VHlwZSwgdGhpcy50ZXh0RmllbGRJbnRlcmFjdGlvbkhhbmRsZXJfKTtcbiAgICB9KTtcbiAgICB0aGlzLnZhbGlkYXRpb25PYnNlcnZlcl8gPSB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVyVmFsaWRhdGlvbkF0dHJpYnV0ZUNoYW5nZUhhbmRsZXIoXG4gICAgICB0aGlzLnZhbGlkYXRpb25BdHRyaWJ1dGVDaGFuZ2VIYW5kbGVyXyk7XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoTURDVGV4dEZpZWxkRm91bmRhdGlvbi5jc3NDbGFzc2VzLlVQR1JBREVEKTtcbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJJbnB1dEludGVyYWN0aW9uSGFuZGxlcignZm9jdXMnLCB0aGlzLmlucHV0Rm9jdXNIYW5kbGVyXyk7XG4gICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVySW5wdXRJbnRlcmFjdGlvbkhhbmRsZXIoJ2JsdXInLCB0aGlzLmlucHV0Qmx1ckhhbmRsZXJfKTtcbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJJbnB1dEludGVyYWN0aW9uSGFuZGxlcignaW5wdXQnLCB0aGlzLmlucHV0SW5wdXRIYW5kbGVyXyk7XG4gICAgWydtb3VzZWRvd24nLCAndG91Y2hzdGFydCddLmZvckVhY2goKGV2dFR5cGUpID0+IHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlcklucHV0SW50ZXJhY3Rpb25IYW5kbGVyKGV2dFR5cGUsIHRoaXMuc2V0UG9pbnRlclhPZmZzZXRfKTtcbiAgICB9KTtcbiAgICBbJ2NsaWNrJywgJ2tleWRvd24nXS5mb3JFYWNoKChldnRUeXBlKSA9PiB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJUZXh0RmllbGRJbnRlcmFjdGlvbkhhbmRsZXIoZXZ0VHlwZSwgdGhpcy50ZXh0RmllbGRJbnRlcmFjdGlvbkhhbmRsZXJfKTtcbiAgICB9KTtcbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJWYWxpZGF0aW9uQXR0cmlidXRlQ2hhbmdlSGFuZGxlcih0aGlzLnZhbGlkYXRpb25PYnNlcnZlcl8pO1xuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZXMgdXNlciBpbnRlcmFjdGlvbnMgd2l0aCB0aGUgVGV4dCBGaWVsZC5cbiAgICovXG4gIGhhbmRsZVRleHRGaWVsZEludGVyYWN0aW9uKCkge1xuICAgIGlmICh0aGlzLmFkYXB0ZXJfLmdldE5hdGl2ZUlucHV0KCkuZGlzYWJsZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5yZWNlaXZlZFVzZXJJbnB1dF8gPSB0cnVlO1xuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZXMgdmFsaWRhdGlvbiBhdHRyaWJ1dGUgY2hhbmdlc1xuICAgKiBAcGFyYW0ge0FycmF5PE11dGF0aW9uUmVjb3JkPn0gbXV0YXRpb25zTGlzdFxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgaGFuZGxlVmFsaWRhdGlvbkF0dHJpYnV0ZU11dGF0aW9uXyhtdXRhdGlvbnNMaXN0KSB7XG4gICAgbXV0YXRpb25zTGlzdC5zb21lKChtdXRhdGlvbikgPT4ge1xuICAgICAgaWYgKFZBTElEQVRJT05fQVRUUl9XSElURUxJU1QuaW5kZXhPZihtdXRhdGlvbi5hdHRyaWJ1dGVOYW1lKSA+IC0xKSB7XG4gICAgICAgIHRoaXMuc3R5bGVWYWxpZGl0eV8odHJ1ZSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFVwZGF0ZXMgdGhlIGZvY3VzIG91dGxpbmUgZm9yIG91dGxpbmVkIHRleHQgZmllbGRzLlxuICAgKi9cbiAgdXBkYXRlT3V0bGluZSgpIHtcbiAgICBpZiAoIXRoaXMuYWRhcHRlcl8uaGFzT3V0bGluZSgpIHx8ICF0aGlzLmFkYXB0ZXJfLmhhc0xhYmVsKCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBpc0RlbnNlID0gdGhpcy5hZGFwdGVyXy5oYXNDbGFzcyhjc3NDbGFzc2VzLkRFTlNFKTtcbiAgICBjb25zdCBsYWJlbFNjYWxlID0gaXNEZW5zZSA/IG51bWJlcnMuREVOU0VfTEFCRUxfU0NBTEUgOiBudW1iZXJzLkxBQkVMX1NDQUxFO1xuICAgIGNvbnN0IGxhYmVsV2lkdGggPSB0aGlzLmFkYXB0ZXJfLmdldExhYmVsV2lkdGgoKSAqIGxhYmVsU2NhbGU7XG4gICAgY29uc3QgaXNSdGwgPSB0aGlzLmFkYXB0ZXJfLmlzUnRsKCk7XG4gICAgdGhpcy5hZGFwdGVyXy51cGRhdGVPdXRsaW5lUGF0aChsYWJlbFdpZHRoLCBpc1J0bCk7XG4gIH1cblxuICAvKipcbiAgICogQWN0aXZhdGVzIHRoZSB0ZXh0IGZpZWxkIGZvY3VzIHN0YXRlLlxuICAgKi9cbiAgYWN0aXZhdGVGb2N1cygpIHtcbiAgICB0aGlzLmlzRm9jdXNlZF8gPSB0cnVlO1xuICAgIHRoaXMuc3R5bGVGb2N1c2VkXyh0aGlzLmlzRm9jdXNlZF8pO1xuICAgIHRoaXMuYWRhcHRlcl8uYWN0aXZhdGVMaW5lUmlwcGxlKCk7XG4gICAgdGhpcy51cGRhdGVPdXRsaW5lKCk7XG4gICAgaWYgKHRoaXMuYWRhcHRlcl8uaGFzTGFiZWwoKSkge1xuICAgICAgdGhpcy5hZGFwdGVyXy5zaGFrZUxhYmVsKHRoaXMuc2hvdWxkU2hha2UpO1xuICAgICAgdGhpcy5hZGFwdGVyXy5mbG9hdExhYmVsKHRoaXMuc2hvdWxkRmxvYXQpO1xuICAgIH1cbiAgICBpZiAodGhpcy5oZWxwZXJUZXh0Xykge1xuICAgICAgdGhpcy5oZWxwZXJUZXh0Xy5zaG93VG9TY3JlZW5SZWFkZXIoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogU2V0cyB0aGUgbGluZSByaXBwbGUncyB0cmFuc2Zvcm0gb3JpZ2luLCBzbyB0aGF0IHRoZSBsaW5lIHJpcHBsZSBhY3RpdmF0ZVxuICAgKiBhbmltYXRpb24gd2lsbCBhbmltYXRlIG91dCBmcm9tIHRoZSB1c2VyJ3MgY2xpY2sgbG9jYXRpb24uXG4gICAqIEBwYXJhbSB7IUV2ZW50fSBldnRcbiAgICovXG4gIHNldFRyYW5zZm9ybU9yaWdpbihldnQpIHtcbiAgICBjb25zdCB0YXJnZXRDbGllbnRSZWN0ID0gZXZ0LnRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBjb25zdCBldnRDb29yZHMgPSB7eDogZXZ0LmNsaWVudFgsIHk6IGV2dC5jbGllbnRZfTtcbiAgICBjb25zdCBub3JtYWxpemVkWCA9IGV2dENvb3Jkcy54IC0gdGFyZ2V0Q2xpZW50UmVjdC5sZWZ0O1xuICAgIHRoaXMuYWRhcHRlcl8uc2V0TGluZVJpcHBsZVRyYW5zZm9ybU9yaWdpbihub3JtYWxpemVkWCk7XG4gIH1cblxuICAvKipcbiAgICogQWN0aXZhdGVzIHRoZSBUZXh0IEZpZWxkJ3MgZm9jdXMgc3RhdGUgaW4gY2FzZXMgd2hlbiB0aGUgaW5wdXQgdmFsdWVcbiAgICogY2hhbmdlcyB3aXRob3V0IHVzZXIgaW5wdXQgKGUuZy4gcHJvZ3JhbWF0aWNhbGx5KS5cbiAgICovXG4gIGF1dG9Db21wbGV0ZUZvY3VzKCkge1xuICAgIGlmICghdGhpcy5yZWNlaXZlZFVzZXJJbnB1dF8pIHtcbiAgICAgIHRoaXMuYWN0aXZhdGVGb2N1cygpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBEZWFjdGl2YXRlcyB0aGUgVGV4dCBGaWVsZCdzIGZvY3VzIHN0YXRlLlxuICAgKi9cbiAgZGVhY3RpdmF0ZUZvY3VzKCkge1xuICAgIHRoaXMuaXNGb2N1c2VkXyA9IGZhbHNlO1xuICAgIHRoaXMuYWRhcHRlcl8uZGVhY3RpdmF0ZUxpbmVSaXBwbGUoKTtcbiAgICBjb25zdCBpbnB1dCA9IHRoaXMuZ2V0TmF0aXZlSW5wdXRfKCk7XG4gICAgY29uc3Qgc2hvdWxkUmVtb3ZlTGFiZWxGbG9hdCA9ICFpbnB1dC52YWx1ZSAmJiAhdGhpcy5pc0JhZElucHV0XygpO1xuICAgIGNvbnN0IGlzVmFsaWQgPSB0aGlzLmlzVmFsaWQoKTtcbiAgICB0aGlzLnN0eWxlVmFsaWRpdHlfKGlzVmFsaWQpO1xuICAgIHRoaXMuc3R5bGVGb2N1c2VkXyh0aGlzLmlzRm9jdXNlZF8pO1xuICAgIGlmICh0aGlzLmFkYXB0ZXJfLmhhc0xhYmVsKCkpIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uc2hha2VMYWJlbCh0aGlzLnNob3VsZFNoYWtlKTtcbiAgICAgIHRoaXMuYWRhcHRlcl8uZmxvYXRMYWJlbCh0aGlzLnNob3VsZEZsb2F0KTtcbiAgICB9XG4gICAgaWYgKHNob3VsZFJlbW92ZUxhYmVsRmxvYXQpIHtcbiAgICAgIHRoaXMucmVjZWl2ZWRVc2VySW5wdXRfID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge3N0cmluZ30gVGhlIHZhbHVlIG9mIHRoZSBpbnB1dCBFbGVtZW50LlxuICAgKi9cbiAgZ2V0VmFsdWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0TmF0aXZlSW5wdXRfKCkudmFsdWU7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQgb24gdGhlIGlucHV0IEVsZW1lbnQuXG4gICAqL1xuICBzZXRWYWx1ZSh2YWx1ZSkge1xuICAgIHRoaXMuZ2V0TmF0aXZlSW5wdXRfKCkudmFsdWUgPSB2YWx1ZTtcbiAgICBjb25zdCBpc1ZhbGlkID0gdGhpcy5pc1ZhbGlkKCk7XG4gICAgdGhpcy5zdHlsZVZhbGlkaXR5Xyhpc1ZhbGlkKTtcbiAgICBpZiAodGhpcy5hZGFwdGVyXy5oYXNMYWJlbCgpKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnNoYWtlTGFiZWwodGhpcy5zaG91bGRTaGFrZSk7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmZsb2F0TGFiZWwodGhpcy5zaG91bGRGbG9hdCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59IElmIGEgY3VzdG9tIHZhbGlkaXR5IGlzIHNldCwgcmV0dXJucyB0aGF0IHZhbHVlLlxuICAgKiAgICAgT3RoZXJ3aXNlLCByZXR1cm5zIHRoZSByZXN1bHQgb2YgbmF0aXZlIHZhbGlkaXR5IGNoZWNrcy5cbiAgICovXG4gIGlzVmFsaWQoKSB7XG4gICAgcmV0dXJuIHRoaXMudXNlQ3VzdG9tVmFsaWRpdHlDaGVja2luZ19cbiAgICAgID8gdGhpcy5pc1ZhbGlkXyA6IHRoaXMuaXNOYXRpdmVJbnB1dFZhbGlkXygpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gaXNWYWxpZCBTZXRzIHRoZSB2YWxpZGl0eSBzdGF0ZSBvZiB0aGUgVGV4dCBGaWVsZC5cbiAgICovXG4gIHNldFZhbGlkKGlzVmFsaWQpIHtcbiAgICB0aGlzLnVzZUN1c3RvbVZhbGlkaXR5Q2hlY2tpbmdfID0gdHJ1ZTtcbiAgICB0aGlzLmlzVmFsaWRfID0gaXNWYWxpZDtcbiAgICAvLyBSZXRyaWV2ZSBmcm9tIHRoZSBnZXR0ZXIgdG8gZW5zdXJlIGNvcnJlY3QgbG9naWMgaXMgYXBwbGllZC5cbiAgICBpc1ZhbGlkID0gdGhpcy5pc1ZhbGlkKCk7XG4gICAgdGhpcy5zdHlsZVZhbGlkaXR5Xyhpc1ZhbGlkKTtcbiAgICBpZiAodGhpcy5hZGFwdGVyXy5oYXNMYWJlbCgpKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnNoYWtlTGFiZWwodGhpcy5zaG91bGRTaGFrZSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59IFRydWUgaWYgdGhlIFRleHQgRmllbGQgaXMgZGlzYWJsZWQuXG4gICAqL1xuICBpc0Rpc2FibGVkKCkge1xuICAgIHJldHVybiB0aGlzLmdldE5hdGl2ZUlucHV0XygpLmRpc2FibGVkO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gZGlzYWJsZWQgU2V0cyB0aGUgdGV4dC1maWVsZCBkaXNhYmxlZCBvciBlbmFibGVkLlxuICAgKi9cbiAgc2V0RGlzYWJsZWQoZGlzYWJsZWQpIHtcbiAgICB0aGlzLmdldE5hdGl2ZUlucHV0XygpLmRpc2FibGVkID0gZGlzYWJsZWQ7XG4gICAgdGhpcy5zdHlsZURpc2FibGVkXyhkaXNhYmxlZCk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnRlbnQgU2V0cyB0aGUgY29udGVudCBvZiB0aGUgaGVscGVyIHRleHQuXG4gICAqL1xuICBzZXRIZWxwZXJUZXh0Q29udGVudChjb250ZW50KSB7XG4gICAgaWYgKHRoaXMuaGVscGVyVGV4dF8pIHtcbiAgICAgIHRoaXMuaGVscGVyVGV4dF8uc2V0Q29udGVudChjb250ZW50KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgVGV4dCBGaWVsZCBpbnB1dCBmYWlscyBpbiBjb252ZXJ0aW5nIHRoZVxuICAgKiAgICAgdXNlci1zdXBwbGllZCB2YWx1ZS5cbiAgICogQHByaXZhdGVcbiAgICovXG4gIGlzQmFkSW5wdXRfKCkge1xuICAgIHJldHVybiB0aGlzLmdldE5hdGl2ZUlucHV0XygpLnZhbGlkaXR5LmJhZElucHV0O1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59IFRoZSByZXN1bHQgb2YgbmF0aXZlIHZhbGlkaXR5IGNoZWNraW5nXG4gICAqICAgICAoVmFsaWRpdHlTdGF0ZS52YWxpZCkuXG4gICAqL1xuICBpc05hdGl2ZUlucHV0VmFsaWRfKCkge1xuICAgIHJldHVybiB0aGlzLmdldE5hdGl2ZUlucHV0XygpLnZhbGlkaXR5LnZhbGlkO1xuICB9XG5cbiAgLyoqXG4gICAqIFN0eWxlcyB0aGUgY29tcG9uZW50IGJhc2VkIG9uIHRoZSB2YWxpZGl0eSBzdGF0ZS5cbiAgICogQHBhcmFtIHtib29sZWFufSBpc1ZhbGlkXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBzdHlsZVZhbGlkaXR5Xyhpc1ZhbGlkKSB7XG4gICAgY29uc3Qge0lOVkFMSUR9ID0gTURDVGV4dEZpZWxkRm91bmRhdGlvbi5jc3NDbGFzc2VzO1xuICAgIGlmIChpc1ZhbGlkKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUNsYXNzKElOVkFMSUQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmFkZENsYXNzKElOVkFMSUQpO1xuICAgIH1cbiAgICBpZiAodGhpcy5oZWxwZXJUZXh0Xykge1xuICAgICAgdGhpcy5oZWxwZXJUZXh0Xy5zZXRWYWxpZGl0eShpc1ZhbGlkKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogU3R5bGVzIHRoZSBjb21wb25lbnQgYmFzZWQgb24gdGhlIGZvY3VzZWQgc3RhdGUuXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gaXNGb2N1c2VkXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBzdHlsZUZvY3VzZWRfKGlzRm9jdXNlZCkge1xuICAgIGNvbnN0IHtGT0NVU0VEfSA9IE1EQ1RleHRGaWVsZEZvdW5kYXRpb24uY3NzQ2xhc3NlcztcbiAgICBpZiAoaXNGb2N1c2VkKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmFkZENsYXNzKEZPQ1VTRUQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUNsYXNzKEZPQ1VTRUQpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBTdHlsZXMgdGhlIGNvbXBvbmVudCBiYXNlZCBvbiB0aGUgZGlzYWJsZWQgc3RhdGUuXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gaXNEaXNhYmxlZFxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgc3R5bGVEaXNhYmxlZF8oaXNEaXNhYmxlZCkge1xuICAgIGNvbnN0IHtESVNBQkxFRCwgSU5WQUxJRH0gPSBNRENUZXh0RmllbGRGb3VuZGF0aW9uLmNzc0NsYXNzZXM7XG4gICAgaWYgKGlzRGlzYWJsZWQpIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoRElTQUJMRUQpO1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhJTlZBTElEKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhESVNBQkxFRCk7XG4gICAgfVxuICAgIGlmICh0aGlzLmljb25fKSB7XG4gICAgICB0aGlzLmljb25fLnNldERpc2FibGVkKGlzRGlzYWJsZWQpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHshRWxlbWVudHwhTmF0aXZlSW5wdXRUeXBlfSBUaGUgbmF0aXZlIHRleHQgaW5wdXQgZnJvbSB0aGVcbiAgICogaG9zdCBlbnZpcm9ubWVudCwgb3IgYSBkdW1teSBpZiBub25lIGV4aXN0cy5cbiAgICogQHByaXZhdGVcbiAgICovXG4gIGdldE5hdGl2ZUlucHV0XygpIHtcbiAgICByZXR1cm4gdGhpcy5hZGFwdGVyXy5nZXROYXRpdmVJbnB1dCgpIHx8XG4gICAgLyoqIEB0eXBlIHshTmF0aXZlSW5wdXRUeXBlfSAqLyAoe1xuICAgICAgdmFsdWU6ICcnLFxuICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgICAgdmFsaWRpdHk6IHtcbiAgICAgICAgYmFkSW5wdXQ6IGZhbHNlLFxuICAgICAgICB2YWxpZDogdHJ1ZSxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTURDVGV4dEZpZWxkRm91bmRhdGlvbjtcbiIsIjx0ZW1wbGF0ZT5cclxuICA8ZGl2IGNsYXNzPVwibWRjLXRleHRmaWVsZC13cmFwcGVyXCIgOnN0eWxlPVwie3dpZHRoOmZ1bGx3aWR0aD8nMTAwJSc6dW5kZWZpbmVkfVwiPlxyXG5cclxuICAgIDxkaXYgcmVmPVwicm9vdFwiIDpjbGFzcz1cInJvb3RDbGFzc2VzXCI+XHJcblxyXG4gICAgICA8aSByZWY9XCJpY29uXCIgdi1pZj1cIiEhaGFzTGVhZGluZ0ljb25cIlxyXG4gICAgICAgIHRhYmluZGV4PVwiMFwiXHJcbiAgICAgICAgY2xhc3M9XCJtZGMtdGV4dC1maWVsZF9faWNvblwiXHJcbiAgICAgICAgOmNsYXNzPVwiaGFzTGVhZGluZ0ljb24uY2xhc3Nlc1wiPlxyXG4gICAgICAgIDxzbG90IG5hbWU9XCJsZWFkaW5nLWljb25cIj57eyBoYXNMZWFkaW5nSWNvbi5jb250ZW50IH19PC9zbG90PlxyXG4gICAgICA8L2k+XHJcblxyXG4gICAgICA8dGV4dGFyZWEgcmVmPVwiaW5wdXRcIiB2LWlmPVwibXVsdGlsaW5lXCJcclxuICAgICAgICB2LW9uPVwiJGxpc3RlbmVyc1wiXHJcbiAgICAgICAgdi1iaW5kPVwiaW5wdXRBdHRyc1wiXHJcbiAgICAgICAgOmNsYXNzPVwiaW5wdXRDbGFzc2VzXCJcclxuICAgICAgICBAaW5wdXQ9XCJ1cGRhdGVWYWx1ZSgkZXZlbnQudGFyZ2V0LnZhbHVlKVwiXHJcbiAgICAgICAgOm1pbmxlbmd0aD1cIm1pbmxlbmd0aFwiIDptYXhsZW5ndGg9XCJtYXhsZW5ndGhcIlxyXG4gICAgICAgIDpwbGFjZWhvbGRlcj1cImlucHV0UGxhY2VIb2xkZXJcIlxyXG4gICAgICAgIDphcmlhLWxhYmVsPVwiaW5wdXRQbGFjZUhvbGRlclwiXHJcbiAgICAgICAgOmFyaWEtY29udHJvbHM9XCJpbnB1dEFyaWFDb250cm9sc1wiXHJcbiAgICAgICAgOnJvd3M9XCJyb3dzXCIgOmNvbHM9XCJjb2xzXCJcclxuICAgICAgICA+PC90ZXh0YXJlYT5cclxuXHJcbiAgICAgIDxpbnB1dCByZWY9XCJpbnB1dFwiIHYtZWxzZVxyXG4gICAgICAgIHYtb249XCIkbGlzdGVuZXJzXCJcclxuICAgICAgICB2LWJpbmQ9XCJpbnB1dEF0dHJzXCJcclxuICAgICAgICA6Y2xhc3M9XCJpbnB1dENsYXNzZXNcIlxyXG4gICAgICAgIEBpbnB1dD1cInVwZGF0ZVZhbHVlKCRldmVudC50YXJnZXQudmFsdWUpXCJcclxuICAgICAgICA6dHlwZT1cInR5cGVcIlxyXG4gICAgICAgIDptaW5sZW5ndGg9XCJtaW5sZW5ndGhcIiA6bWF4bGVuZ3RoPVwibWF4bGVuZ3RoXCJcclxuICAgICAgICA6cGxhY2Vob2xkZXI9XCJpbnB1dFBsYWNlSG9sZGVyXCJcclxuICAgICAgICA6YXJpYS1sYWJlbD1cImlucHV0UGxhY2VIb2xkZXJcIlxyXG4gICAgICAgIDphcmlhLWNvbnRyb2xzPVwiaW5wdXRBcmlhQ29udHJvbHNcIlxyXG4gICAgICAgIC8+XHJcblxyXG4gICAgICA8bGFiZWwgcmVmPVwibGFiZWxcIiA6Y2xhc3M9XCJsYWJlbENsYXNzZXNVcGdyYWRlZFwiIDpmb3I9XCJfdWlkXCIgIHYtaWY9XCJoYXNMYWJlbFwiPlxyXG4gICAgICAgIHt7IGxhYmVsIH19XHJcbiAgICAgIDwvbGFiZWw+XHJcblxyXG4gICAgICA8aSByZWY9XCJpY29uXCIgdi1pZj1cIiEhaGFzVHJhaWxpbmdJY29uXCJcclxuICAgICAgICB0YWJpbmRleD1cIjBcIlxyXG4gICAgICAgIGNsYXNzPVwibWRjLXRleHQtZmllbGRfX2ljb25cIlxyXG4gICAgICAgIDpjbGFzcz1cImhhc1RyYWlsaW5nSWNvbi5jbGFzc2VzXCI+XHJcbiAgICAgICAgPHNsb3QgbmFtZT1cInRyYWlsaW5nLWljb25cIj57eyBoYXNUcmFpbGluZ0ljb24uY29udGVudCB9fTwvc2xvdD5cclxuICAgICAgPC9pPlxyXG5cclxuICAgICAgPGRpdiByZWY9XCJvdXRsaW5lXCIgY2xhc3M9XCJtZGMtbm90Y2hlZC1vdXRsaW5lXCIgdi1pZj1cImhhc091dGxpbmVcIj5cclxuICAgICAgICA8c3ZnPlxyXG4gICAgICAgICAgPHBhdGggY2xhc3M9XCJtZGMtbm90Y2hlZC1vdXRsaW5lX19wYXRoXCIgOmQ9XCJvdXRsaW5lUGF0aEF0dHJcIiAvPlxyXG4gICAgICAgIDwvc3ZnPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdiByZWY9XCJvdXRsaW5lSWRsZVwiIGNsYXNzPVwibWRjLW5vdGNoZWQtb3V0bGluZV9faWRsZVwiIHYtaWY9XCJoYXNPdXRsaW5lXCI+PC9kaXY+XHJcbiAgICAgIDxkaXYgcmVmPVwiYm90dG9tXCIgOmNsYXNzPVwiYm90dG9tQ2xhc3Nlc1wiIHYtaWY9XCJoYXNCb3R0b21MaW5lXCI+PC9kaXY+XHJcblxyXG4gICAgPC9kaXY+XHJcblxyXG4gICAgPHAgcmVmPVwiaGVscFwiIDppZD1cIidoZWxwLScrX3VpZFwiIDpjbGFzcz1cImhlbHBDbGFzc2VzXCJcclxuICAgICAgYXJpYS1oaWRkZW49XCJ0cnVlXCIgdi1pZj1cImhlbHB0ZXh0XCI+XHJcbiAgICAgIHt7IGhlbHB0ZXh0ICB9fVxyXG4gICAgPC9wPlxyXG5cclxuICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmltcG9ydCBNRENUZXh0ZmllbGRGb3VuZGF0aW9uIGZyb20gJ0BtYXRlcmlhbC90ZXh0ZmllbGQvZm91bmRhdGlvbic7XHJcbmltcG9ydCBNRENMaW5lUmlwcGxlRm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvbGluZS1yaXBwbGUvZm91bmRhdGlvbic7XHJcbmltcG9ydCBNRENUZXh0RmllbGRIZWxwZXJUZXh0Rm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvdGV4dGZpZWxkL2hlbHBlci10ZXh0L2ZvdW5kYXRpb24nO1xyXG5pbXBvcnQgTURDVGV4dEZpZWxkSWNvbkZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL3RleHRmaWVsZC9pY29uL2ZvdW5kYXRpb24nO1xyXG5pbXBvcnQgTURDRmxvYXRpbmdMYWJlbEZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL2Zsb2F0aW5nLWxhYmVsL2ZvdW5kYXRpb24nO1xyXG5pbXBvcnQgTURDTm90Y2hlZE91dGxpbmVGb3VuZGF0aW9uIGZyb20gJ0BtYXRlcmlhbC9ub3RjaGVkLW91dGxpbmUvZm91bmRhdGlvbic7XHJcblxyXG5pbXBvcnQge1xyXG4gIGV4dHJhY3RJY29uUHJvcCxcclxuICBEaXNwYXRjaEZvY3VzTWl4aW4sXHJcbiAgQ3VzdG9tRWxlbWVudE1peGluLFxyXG59IGZyb20gJy4uL2Jhc2UnO1xyXG5pbXBvcnQgeyBSaXBwbGVCYXNlIH0gZnJvbSAnLi4vcmlwcGxlJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBuYW1lOiAnbWRjLXRleHRmaWVsZCcsXHJcbiAgbWl4aW5zOiBbQ3VzdG9tRWxlbWVudE1peGluLCBEaXNwYXRjaEZvY3VzTWl4aW5dLFxyXG4gIG1vZGVsOiB7XHJcbiAgICBwcm9wOiAndmFsdWUnLFxyXG4gICAgZXZlbnQ6ICdtb2RlbCcsXHJcbiAgfSxcclxuICBwcm9wczoge1xyXG4gICAgdmFsdWU6IFN0cmluZyxcclxuICAgIHR5cGU6IHtcclxuICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICBkZWZhdWx0OiAndGV4dCcsXHJcbiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgWyd0ZXh0JywgJ2VtYWlsJywgJ3NlYXJjaCcsICdwYXNzd29yZCcsICd0ZWwnLCAndXJsJ10uaW5kZXhPZihcclxuICAgICAgICAgICAgdmFsdWUsXHJcbiAgICAgICAgICApICE9PSAtMVxyXG4gICAgICAgICk7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgZGVuc2U6IEJvb2xlYW4sXHJcbiAgICBsYWJlbDogU3RyaW5nLFxyXG4gICAgaGVscHRleHQ6IFN0cmluZyxcclxuICAgIGhlbHB0ZXh0UGVyc2lzdGVudDogQm9vbGVhbixcclxuICAgIGhlbHB0ZXh0VmFsaWRhdGlvbjogQm9vbGVhbixcclxuICAgIGJveDogQm9vbGVhbixcclxuICAgIG91dGxpbmU6IEJvb2xlYW4sXHJcbiAgICBkaXNhYmxlZDogQm9vbGVhbixcclxuICAgIHJlcXVpcmVkOiBCb29sZWFuLFxyXG4gICAgdmFsaWQ6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogdW5kZWZpbmVkIH0sXHJcbiAgICBmdWxsd2lkdGg6IEJvb2xlYW4sXHJcbiAgICBtdWx0aWxpbmU6IEJvb2xlYW4sXHJcbiAgICBsZWFkaW5nSWNvbjogW1N0cmluZywgQXJyYXksIE9iamVjdF0sXHJcbiAgICB0cmFpbGluZ0ljb246IFtTdHJpbmcsIEFycmF5LCBPYmplY3RdLFxyXG4gICAgc2l6ZTogeyB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLCBkZWZhdWx0OiAyMCB9LFxyXG4gICAgbWlubGVuZ3RoOiB7IHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sIGRlZmF1bHQ6IHVuZGVmaW5lZCB9LFxyXG4gICAgbWF4bGVuZ3RoOiB7IHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sIGRlZmF1bHQ6IHVuZGVmaW5lZCB9LFxyXG4gICAgcm93czogeyB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLCBkZWZhdWx0OiA4IH0sXHJcbiAgICBjb2xzOiB7IHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sIGRlZmF1bHQ6IDQwIH0sXHJcblxyXG4gICAgLy8gb3RoZXIgaW5wdXQgcHJvcHNcclxuICAgIG5hbWU6IFN0cmluZyxcclxuICAgIHJlYWRvbmx5OiBCb29sZWFuLFxyXG4gICAgYXV0b2NvbXBsZXRlOiBCb29sZWFuLFxyXG4gICAgYXV0b2ZvY3VzOiBCb29sZWFuLFxyXG4gIH0sXHJcbiAgZGF0YTogZnVuY3Rpb24oKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB0ZXh0OiB0aGlzLnZhbHVlLFxyXG4gICAgICByb290Q2xhc3Nlczoge1xyXG4gICAgICAgICdtZGMtdGV4dGZpZWxkJzogdHJ1ZSxcclxuICAgICAgICAnbWRjLXRleHQtZmllbGQnOiB0cnVlLFxyXG4gICAgICAgICdtZGMtdGV4dC1maWVsZC0tdXBncmFkZWQnOiB0cnVlLFxyXG4gICAgICAgICdtZGMtdGV4dC1maWVsZC0tZGlzYWJsZWQnOiB0aGlzLmRpc2FibGVkLFxyXG4gICAgICAgICdtZGMtdGV4dC1maWVsZC0tZGVuc2UnOiB0aGlzLmRlbnNlLFxyXG4gICAgICAgICdtZGMtdGV4dC1maWVsZC0tZnVsbHdpZHRoJzogdGhpcy5mdWxsd2lkdGgsXHJcbiAgICAgICAgJ21kYy10ZXh0LWZpZWxkLS10ZXh0YXJlYSc6IHRoaXMubXVsdGlsaW5lLFxyXG4gICAgICAgICdtZGMtdGV4dC1maWVsZC0tYm94JzogIXRoaXMuZnVsbHdpZHRoICYmIHRoaXMuYm94LFxyXG4gICAgICAgICdtZGMtdGV4dC1maWVsZC0tb3V0bGluZWQnOiAhdGhpcy5mdWxsd2lkdGggJiYgdGhpcy5vdXRsaW5lLFxyXG4gICAgICB9LFxyXG4gICAgICBpbnB1dENsYXNzZXM6IHtcclxuICAgICAgICAnbWRjLXRleHQtZmllbGRfX2lucHV0JzogdHJ1ZSxcclxuICAgICAgfSxcclxuICAgICAgbGFiZWxDbGFzc2VzOiB7XHJcbiAgICAgICAgJ21kYy1mbG9hdGluZy1sYWJlbCc6IHRydWUsXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvdHRvbUNsYXNzZXM6IHtcclxuICAgICAgICAnbWRjLWxpbmUtcmlwcGxlJzogdHJ1ZSxcclxuICAgICAgfSxcclxuICAgICAgaGVscENsYXNzZXM6IHtcclxuICAgICAgICAnbWRjLXRleHQtZmllbGQtaGVscGVyLXRleHQnOiB0cnVlLFxyXG4gICAgICAgICdtZGMtdGV4dC1maWVsZC1oZWxwZXItdGV4dC0tcGVyc2lzdGVudCc6IHRoaXMuaGVscHRleHRQZXJzaXN0ZW50LFxyXG4gICAgICAgICdtZGMtdGV4dC1maWVsZC1oZWxwZXItdGV4dC0tdmFsaWRhdGlvbi1tc2cnOiB0aGlzLmhlbHB0ZXh0VmFsaWRhdGlvbixcclxuICAgICAgfSxcclxuICAgICAgb3V0bGluZVBhdGhBdHRyOiB1bmRlZmluZWQsXHJcbiAgICB9O1xyXG4gIH0sXHJcbiAgd2F0Y2g6IHtcclxuICAgIGRpc2FibGVkKCkge1xyXG4gICAgICB0aGlzLmZvdW5kYXRpb24gJiYgdGhpcy5mb3VuZGF0aW9uLnNldERpc2FibGVkKHRoaXMuZGlzYWJsZWQpO1xyXG4gICAgfSxcclxuICAgIHJlcXVpcmVkKCkge1xyXG4gICAgICB0aGlzLiRyZWZzLmlucHV0ICYmICh0aGlzLiRyZWZzLmlucHV0LnJlcXVpcmVkID0gdGhpcy5yZXF1aXJlZCk7XHJcbiAgICB9LFxyXG4gICAgdmFsaWQoKSB7XHJcbiAgICAgIGlmICh0eXBlb2YgdGhpcy52YWxpZCAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICB0aGlzLmZvdW5kYXRpb24gJiYgdGhpcy5mb3VuZGF0aW9uLnNldFZhbGlkKHRoaXMudmFsaWQpO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgZGVuc2UoKSB7XHJcbiAgICAgIHRoaXMuJHNldCh0aGlzLnJvb3RDbGFzc2VzLCAnbWRjLXRleHQtZmllbGQtLWRlbnNlJywgdGhpcy5kZW5zZSk7XHJcbiAgICB9LFxyXG4gICAgaGVscHRleHRQZXJzaXN0ZW50KCkge1xyXG4gICAgICB0aGlzLmhlbHBlclRleHRGb3VuZGF0aW9uICYmXHJcbiAgICAgICAgdGhpcy5oZWxwZXJUZXh0Rm91bmRhdGlvbi5zZXRQZXJzaXN0ZW50KHRoaXMuaGVscHRleHRQZXJzaXN0ZW50KTtcclxuICAgIH0sXHJcbiAgICBoZWxwdGV4dFZhbGlkYXRpb24oKSB7XHJcbiAgICAgIHRoaXMuaGVscGVyVGV4dEZvdW5kYXRpb24gJiZcclxuICAgICAgICB0aGlzLmhlbHBlclRleHRGb3VuZGF0aW9uLnNldFZhbGlkYXRpb24odGhpcy5oZWxwdGV4dFZhbGlkYXRpb24pO1xyXG4gICAgfSxcclxuICAgIHZhbHVlKHZhbHVlKSB7XHJcbiAgICAgIGlmICh0aGlzLmZvdW5kYXRpb24pIHtcclxuICAgICAgICBpZiAodmFsdWUgIT09IHRoaXMuZm91bmRhdGlvbi5nZXRWYWx1ZSgpKSB7XHJcbiAgICAgICAgICB0aGlzLmZvdW5kYXRpb24uc2V0VmFsdWUodmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSxcclxuICB9LFxyXG4gIG1ldGhvZHM6IHtcclxuICAgIHVwZGF0ZVZhbHVlKHZhbHVlKSB7XHJcbiAgICAgIHRoaXMuJGVtaXQoJ21vZGVsJywgdmFsdWUpO1xyXG4gICAgfSxcclxuICAgIGZvY3VzKCkge1xyXG4gICAgICB0aGlzLiRyZWZzLmlucHV0ICYmIHRoaXMuJHJlZnMuaW5wdXQuZm9jdXMoKTtcclxuICAgIH0sXHJcbiAgICBibHVyKCkge1xyXG4gICAgICB0aGlzLiRyZWZzLmlucHV0ICYmIHRoaXMuJHJlZnMuaW5wdXQuYmx1cigpO1xyXG4gICAgfSxcclxuICB9LFxyXG4gIGNvbXB1dGVkOiB7XHJcbiAgICBpbnB1dEF0dHJzKCkge1xyXG4gICAgICBsZXQgeyBuYW1lLCByZWFkb25seSwgYXV0b2NvbXBsZXRlLCBhdXRvZm9jdXMgfSA9IHRoaXM7XHJcbiAgICAgIHJldHVybiB7IG5hbWUsIHJlYWRvbmx5LCBhdXRvY29tcGxldGUsIGF1dG9mb2N1cyB9O1xyXG4gICAgfSxcclxuICAgIGlucHV0UGxhY2VIb2xkZXIoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmZ1bGx3aWR0aCA/IHRoaXMubGFiZWwgOiB1bmRlZmluZWQ7XHJcbiAgICB9LFxyXG4gICAgaW5wdXRBcmlhQ29udHJvbHMoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmhlbHAgPyAnaGVscC0nICsgdGhpcy5fdWlkIDogdW5kZWZpbmVkO1xyXG4gICAgfSxcclxuICAgIGhhc0xhYmVsKCkge1xyXG4gICAgICByZXR1cm4gIXRoaXMuZnVsbHdpZHRoICYmIHRoaXMubGFiZWw7XHJcbiAgICB9LFxyXG4gICAgaGFzT3V0bGluZSgpIHtcclxuICAgICAgcmV0dXJuICF0aGlzLmZ1bGx3aWR0aCAmJiB0aGlzLm91dGxpbmU7XHJcbiAgICB9LFxyXG4gICAgaGFzQm90dG9tTGluZSgpIHtcclxuICAgICAgcmV0dXJuICF0aGlzLmhhc091dGxpbmUgJiYgIXRoaXMubXVsdGlsaW5lO1xyXG4gICAgfSxcclxuICAgIGhhc0xlYWRpbmdJY29uKCkge1xyXG4gICAgICBpZiAoXHJcbiAgICAgICAgKHRoaXMubGVhZGluZ0ljb24gfHwgdGhpcy4kc2xvdHNbJ2xlYWRpbmctaWNvbiddKSAmJlxyXG4gICAgICAgICEodGhpcy50cmFpbGluZ0ljb24gfHwgdGhpcy4kc2xvdHNbJ3RyYWlsaW5nLWljb24nXSlcclxuICAgICAgKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubGVhZGluZ0ljb24gPyBleHRyYWN0SWNvblByb3AodGhpcy5sZWFkaW5nSWNvbikgOiB7fTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9LFxyXG4gICAgaGFzVHJhaWxpbmdJY29uKCkge1xyXG4gICAgICBpZiAodGhpcy50cmFpbGluZ0ljb24gfHwgdGhpcy4kc2xvdHNbJ3RyYWlsaW5nLWljb24nXSkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnRyYWlsaW5nSWNvbiA/IGV4dHJhY3RJY29uUHJvcCh0aGlzLnRyYWlsaW5nSWNvbikgOiB7fTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9LFxyXG4gICAgbGFiZWxDbGFzc2VzVXBncmFkZWQoKSB7XHJcbiAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHRoaXMubGFiZWxDbGFzc2VzLCB7XHJcbiAgICAgICAgJ21kYy1mbG9hdGluZy1sYWJlbC0tZmxvYXQtYWJvdmUnOiB0aGlzLnZhbHVlLFxyXG4gICAgICB9KTtcclxuICAgIH0sXHJcbiAgfSxcclxuICBtb3VudGVkKCkge1xyXG4gICAgaWYgKHRoaXMuJHJlZnMuYm90dG9tKSB7XHJcbiAgICAgIHRoaXMuYm90dG9tTGluZUZvdW5kYXRpb24gPSBuZXcgTURDTGluZVJpcHBsZUZvdW5kYXRpb24oe1xyXG4gICAgICAgIGFkZENsYXNzOiBjbGFzc05hbWUgPT4ge1xyXG4gICAgICAgICAgdGhpcy4kc2V0KHRoaXMuYm90dG9tQ2xhc3NlcywgY2xhc3NOYW1lLCB0cnVlKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlbW92ZUNsYXNzOiBjbGFzc05hbWUgPT4ge1xyXG4gICAgICAgICAgdGhpcy4kZGVsZXRlKHRoaXMuYm90dG9tQ2xhc3NlcywgY2xhc3NOYW1lKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGhhc0NsYXNzOiBjbGFzc05hbWUgPT4ge1xyXG4gICAgICAgICAgdGhpcy4kcmVmcy5ib3R0b20uY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzTmFtZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBzZXRBdHRyOiAobmFtZSwgdmFsdWUpID0+IHtcclxuICAgICAgICAgIHRoaXMuJHJlZnMuYm90dG9tLnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICByZWdpc3RlckV2ZW50SGFuZGxlcjogKGV2dFR5cGUsIGhhbmRsZXIpID0+IHtcclxuICAgICAgICAgIHRoaXMuJHJlZnMuYm90dG9tLmFkZEV2ZW50TGlzdGVuZXIoZXZ0VHlwZSwgaGFuZGxlcik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZXJlZ2lzdGVyRXZlbnRIYW5kbGVyOiAoZXZ0VHlwZSwgaGFuZGxlcikgPT4ge1xyXG4gICAgICAgICAgdGhpcy4kcmVmcy5ib3R0b20ucmVtb3ZlRXZlbnRMaXN0ZW5lcihldnRUeXBlLCBoYW5kbGVyKTtcclxuICAgICAgICB9LFxyXG4gICAgICB9KTtcclxuICAgICAgdGhpcy5ib3R0b21MaW5lRm91bmRhdGlvbi5pbml0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRoaXMuJHJlZnMuaGVscCkge1xyXG4gICAgICB0aGlzLmhlbHBlclRleHRGb3VuZGF0aW9uID0gbmV3IE1EQ1RleHRGaWVsZEhlbHBlclRleHRGb3VuZGF0aW9uKHtcclxuICAgICAgICBhZGRDbGFzczogY2xhc3NOYW1lID0+IHtcclxuICAgICAgICAgIHRoaXMuJHNldCh0aGlzLmhlbHBDbGFzc2VzLCBjbGFzc05hbWUsIHRydWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcmVtb3ZlQ2xhc3M6IGNsYXNzTmFtZSA9PiB7XHJcbiAgICAgICAgICB0aGlzLiRkZWxldGUodGhpcy5oZWxwQ2xhc3NlcywgY2xhc3NOYW1lKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGhhc0NsYXNzOiBjbGFzc05hbWUgPT4ge1xyXG4gICAgICAgICAgcmV0dXJuIHRoaXMuJHJlZnMuaGVscC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNldEF0dHI6IChuYW1lLCB2YWx1ZSkgPT4ge1xyXG4gICAgICAgICAgdGhpcy4kcmVmcy5oZWxwLnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICByZW1vdmVBdHRyOiBuYW1lID0+IHtcclxuICAgICAgICAgIHRoaXMuJHJlZnMuaGVscC5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBzZXRDb250ZW50OiAoLypjb250ZW50Ki8pID0+IHtcclxuICAgICAgICAgIC8vIGhlbHAgdGV4dCBnZXQncyB1cGRhdGVkIGZyb20ge3toZWxwdGV4dH19XHJcbiAgICAgICAgICAvLyB0aGlzLiRyZWZzLmhlbHAudGV4dENvbnRlbnQgPSBjb250ZW50O1xyXG4gICAgICAgIH0sXHJcbiAgICAgIH0pO1xyXG4gICAgICB0aGlzLmhlbHBlclRleHRGb3VuZGF0aW9uLmluaXQoKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodGhpcy4kcmVmcy5pY29uKSB7XHJcbiAgICAgIGlmICh0aGlzLmhhc0xlYWRpbmdJY29uKSB7XHJcbiAgICAgICAgdGhpcy4kc2V0KHRoaXMucm9vdENsYXNzZXMsICdtZGMtdGV4dC1maWVsZC0td2l0aC1sZWFkaW5nLWljb24nLCB0cnVlKTtcclxuICAgICAgfSBlbHNlIGlmICh0aGlzLmhhc1RyYWlsaW5nSWNvbikge1xyXG4gICAgICAgIHRoaXMuJHNldCh0aGlzLnJvb3RDbGFzc2VzLCAnbWRjLXRleHQtZmllbGQtLXdpdGgtdHJhaWxpbmctaWNvbicsIHRydWUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLmljb25Gb3VuZGF0aW9uID0gbmV3IE1EQ1RleHRGaWVsZEljb25Gb3VuZGF0aW9uKHtcclxuICAgICAgICBzZXRBdHRyOiAoYXR0ciwgdmFsdWUpID0+IHRoaXMuJHJlZnMuaWNvbi5zZXRBdHRyaWJ1dGUoYXR0ciwgdmFsdWUpLFxyXG4gICAgICAgIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0VHlwZSwgaGFuZGxlcikgPT4ge1xyXG4gICAgICAgICAgdGhpcy4kcmVmcy5pY29uLmFkZEV2ZW50TGlzdGVuZXIoZXZ0VHlwZSwgaGFuZGxlcik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0VHlwZSwgaGFuZGxlcikgPT4ge1xyXG4gICAgICAgICAgdGhpcy4kcmVmcy5pY29uLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZ0VHlwZSwgaGFuZGxlcik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBub3RpZnlJY29uQWN0aW9uOiAoKSA9PiB0aGlzLiRlbWl0KCdpY29uLWFjdGlvbicpLFxyXG4gICAgICB9KTtcclxuICAgICAgdGhpcy5pY29uRm91bmRhdGlvbi5pbml0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRoaXMuJHJlZnMubGFiZWwpIHtcclxuICAgICAgdGhpcy5sYWJlbEZvdW5kYXRpb24gPSBuZXcgTURDRmxvYXRpbmdMYWJlbEZvdW5kYXRpb24oe1xyXG4gICAgICAgIGFkZENsYXNzOiBjbGFzc05hbWUgPT4ge1xyXG4gICAgICAgICAgdGhpcy4kc2V0KHRoaXMubGFiZWxDbGFzc2VzLCBjbGFzc05hbWUsIHRydWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcmVtb3ZlQ2xhc3M6IGNsYXNzTmFtZSA9PiB7XHJcbiAgICAgICAgICB0aGlzLiRkZWxldGUodGhpcy5sYWJlbENsYXNzZXMsIGNsYXNzTmFtZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBnZXRXaWR0aDogKCkgPT4gdGhpcy4kcmVmcy5sYWJlbC5vZmZzZXRXaWR0aCxcclxuICAgICAgICByZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKGV2dFR5cGUsIGhhbmRsZXIpID0+IHtcclxuICAgICAgICAgIHRoaXMuJHJlZnMubGFiZWwuYWRkRXZlbnRMaXN0ZW5lcihldnRUeXBlLCBoYW5kbGVyKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXI6IChldnRUeXBlLCBoYW5kbGVyKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLiRyZWZzLmxhYmVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZ0VHlwZSwgaGFuZGxlcik7XHJcbiAgICAgICAgfSxcclxuICAgICAgfSk7XHJcbiAgICAgIHRoaXMubGFiZWxGb3VuZGF0aW9uLmluaXQoKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodGhpcy4kcmVmcy5vdXRsaW5lKSB7XHJcbiAgICAgIHRoaXMub3V0bGluZUZvdW5kYXRpb24gPSBuZXcgTURDTm90Y2hlZE91dGxpbmVGb3VuZGF0aW9uKHtcclxuICAgICAgICBnZXRXaWR0aDogKCkgPT4gdGhpcy4kcmVmcy5vdXRsaW5lLm9mZnNldFdpZHRoLFxyXG4gICAgICAgIGdldEhlaWdodDogKCkgPT4gdGhpcy4kcmVmcy5vdXRsaW5lLm9mZnNldEhlaWdodCxcclxuICAgICAgICBzZXRPdXRsaW5lUGF0aEF0dHI6IHZhbHVlID0+IHtcclxuICAgICAgICAgIHRoaXMub3V0bGluZVBhdGhBdHRyID0gdmFsdWU7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBnZXRJZGxlT3V0bGluZVN0eWxlVmFsdWU6IHByb3BlcnR5TmFtZSA9PiB7XHJcbiAgICAgICAgICBjb25zdCBpZGxlT3V0bGluZUVsZW1lbnQgPSB0aGlzLiRyZWZzLm91dGxpbmVJZGxlO1xyXG4gICAgICAgICAgaWYgKGlkbGVPdXRsaW5lRWxlbWVudCkge1xyXG4gICAgICAgICAgICByZXR1cm4gd2luZG93XHJcbiAgICAgICAgICAgICAgLmdldENvbXB1dGVkU3R5bGUoaWRsZU91dGxpbmVFbGVtZW50KVxyXG4gICAgICAgICAgICAgIC5nZXRQcm9wZXJ0eVZhbHVlKHByb3BlcnR5TmFtZSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgfSk7XHJcbiAgICAgIHRoaXMub3V0bGluZUZvdW5kYXRpb24uaW5pdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZm91bmRhdGlvbiA9IG5ldyBNRENUZXh0ZmllbGRGb3VuZGF0aW9uKFxyXG4gICAgICB7XHJcbiAgICAgICAgYWRkQ2xhc3M6IGNsYXNzTmFtZSA9PiB7XHJcbiAgICAgICAgICB0aGlzLiRzZXQodGhpcy5yb290Q2xhc3NlcywgY2xhc3NOYW1lLCB0cnVlKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlbW92ZUNsYXNzOiBjbGFzc05hbWUgPT4ge1xyXG4gICAgICAgICAgdGhpcy4kZGVsZXRlKHRoaXMucm9vdENsYXNzZXMsIGNsYXNzTmFtZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBoYXNDbGFzczogY2xhc3NOYW1lID0+IHtcclxuICAgICAgICAgIHRoaXMuJHJlZnMucm9vdC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlZ2lzdGVyVGV4dEZpZWxkSW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0VHlwZSwgaGFuZGxlcikgPT4ge1xyXG4gICAgICAgICAgdGhpcy4kcmVmcy5yb290LmFkZEV2ZW50TGlzdGVuZXIoZXZ0VHlwZSwgaGFuZGxlcik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZXJlZ2lzdGVyVGV4dEZpZWxkSW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0VHlwZSwgaGFuZGxlcikgPT4ge1xyXG4gICAgICAgICAgdGhpcy4kcmVmcy5yb290LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZ0VHlwZSwgaGFuZGxlcik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBpc0ZvY3VzZWQ6ICgpID0+IHtcclxuICAgICAgICAgIHJldHVybiBkb2N1bWVudC5hY3RpdmVFbGVtZW50ID09PSB0aGlzLiRyZWZzLmlucHV0O1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgaXNSdGw6ICgpID0+XHJcbiAgICAgICAgICB3aW5kb3dcclxuICAgICAgICAgICAgLmdldENvbXB1dGVkU3R5bGUodGhpcy4kcmVmcy5yb290KVxyXG4gICAgICAgICAgICAuZ2V0UHJvcGVydHlWYWx1ZSgnZGlyZWN0aW9uJykgPT09ICdydGwnLFxyXG4gICAgICAgIGRlYWN0aXZhdGVMaW5lUmlwcGxlOiAoKSA9PiB7XHJcbiAgICAgICAgICBpZiAodGhpcy5ib3R0b20pIHtcclxuICAgICAgICAgICAgdGhpcy5ib3R0b20uZGVhY3RpdmF0ZSgpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYWN0aXZhdGVMaW5lUmlwcGxlOiAoKSA9PiB7XHJcbiAgICAgICAgICBpZiAodGhpcy5ib3R0b20pIHtcclxuICAgICAgICAgICAgdGhpcy5ib3R0b20uYWN0aXZhdGUoKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHNldExpbmVSaXBwbGVUcmFuc2Zvcm1PcmlnaW46IG5vcm1hbGl6ZWRYID0+IHtcclxuICAgICAgICAgIGlmICh0aGlzLmJvdHRvbSkge1xyXG4gICAgICAgICAgICB0aGlzLmJvdHRvbS5zZXRSaXBwbGVDZW50ZXIobm9ybWFsaXplZFgpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcmVnaXN0ZXJJbnB1dEludGVyYWN0aW9uSGFuZGxlcjogKGV2dFR5cGUsIGhhbmRsZXIpID0+IHtcclxuICAgICAgICAgIHRoaXMuJHJlZnMuaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihldnRUeXBlLCBoYW5kbGVyKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGRlcmVnaXN0ZXJJbnB1dEludGVyYWN0aW9uSGFuZGxlcjogKGV2dFR5cGUsIGhhbmRsZXIpID0+IHtcclxuICAgICAgICAgIHRoaXMuJHJlZnMuaW5wdXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldnRUeXBlLCBoYW5kbGVyKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlZ2lzdGVyVmFsaWRhdGlvbkF0dHJpYnV0ZUNoYW5nZUhhbmRsZXI6IGhhbmRsZXIgPT4ge1xyXG4gICAgICAgICAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihoYW5kbGVyKTtcclxuICAgICAgICAgIGNvbnN0IHRhcmdldE5vZGUgPSB0aGlzLiRyZWZzLmlucHV0O1xyXG4gICAgICAgICAgY29uc3QgY29uZmlnID0geyBhdHRyaWJ1dGVzOiB0cnVlIH07XHJcbiAgICAgICAgICBvYnNlcnZlci5vYnNlcnZlKHRhcmdldE5vZGUsIGNvbmZpZyk7XHJcbiAgICAgICAgICByZXR1cm4gb2JzZXJ2ZXI7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZXJlZ2lzdGVyVmFsaWRhdGlvbkF0dHJpYnV0ZUNoYW5nZUhhbmRsZXI6IG9ic2VydmVyID0+IHtcclxuICAgICAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNoYWtlTGFiZWw6IHNob3VsZFNoYWtlID0+IHtcclxuICAgICAgICAgIHRoaXMubGFiZWxGb3VuZGF0aW9uLnNoYWtlKHNob3VsZFNoYWtlKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGZsb2F0TGFiZWw6IHNob3VsZEZsb2F0ID0+IHtcclxuICAgICAgICAgIHRoaXMubGFiZWxGb3VuZGF0aW9uLmZsb2F0KHNob3VsZEZsb2F0KTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGhhc0xhYmVsOiAoKSA9PiB7XHJcbiAgICAgICAgICByZXR1cm4gISF0aGlzLiRyZWZzLmxhYmVsO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ2V0TGFiZWxXaWR0aDogKCkgPT4ge1xyXG4gICAgICAgICAgcmV0dXJuIHRoaXMubGFiZWxGb3VuZGF0aW9uLmdldFdpZHRoKCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBnZXROYXRpdmVJbnB1dDogKCkgPT4ge1xyXG4gICAgICAgICAgcmV0dXJuIHRoaXMuJHJlZnMuaW5wdXQ7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBoYXNPdXRsaW5lOiAoKSA9PiAhIXRoaXMuaGFzT3V0bGluZSxcclxuICAgICAgICB1cGRhdGVPdXRsaW5lUGF0aDogKGxhYmVsV2lkdGgsIGlzUnRsKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLm91dGxpbmVGb3VuZGF0aW9uLnVwZGF0ZVN2Z1BhdGgobGFiZWxXaWR0aCwgaXNSdGwpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBib3R0b21MaW5lOiB0aGlzLmJvdHRvbUxpbmVGb3VuZGF0aW9uLFxyXG4gICAgICAgIGhlbHBlclRleHQ6IHRoaXMuaGVscGVyVGV4dEZvdW5kYXRpb24sXHJcbiAgICAgICAgaWNvbjogdGhpcy5pY29uRm91bmRhdGlvbixcclxuICAgICAgICBsYWJlbDogdGhpcy5sYWJlbEZvdW5kYXRpb24sXHJcbiAgICAgICAgb3V0bGluZTogdGhpcy5vdXRsaW5lRm91bmRhdGlvbixcclxuICAgICAgfSxcclxuICAgICk7XHJcblxyXG4gICAgdGhpcy5mb3VuZGF0aW9uLmluaXQoKTtcclxuICAgIHRoaXMuZm91bmRhdGlvbi5zZXRWYWx1ZSh0aGlzLnZhbHVlKTtcclxuICAgIHRoaXMuZm91bmRhdGlvbi5zZXREaXNhYmxlZCh0aGlzLmRpc2FibGVkKTtcclxuICAgIHRoaXMuJHJlZnMuaW5wdXQgJiYgKHRoaXMuJHJlZnMuaW5wdXQucmVxdWlyZWQgPSB0aGlzLnJlcXVpcmVkKTtcclxuICAgIGlmICh0eXBlb2YgdGhpcy52YWxpZCAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgdGhpcy5mb3VuZGF0aW9uLnNldFZhbGlkKHRoaXMudmFsaWQpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0aGlzLnRleHRib3gpIHtcclxuICAgICAgdGhpcy5yaXBwbGUgPSBuZXcgUmlwcGxlQmFzZSh0aGlzKTtcclxuICAgICAgdGhpcy5yaXBwbGUuaW5pdCgpO1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgYmVmb3JlRGVzdHJveSgpIHtcclxuICAgIHRoaXMuZm91bmRhdGlvbiAmJiB0aGlzLmZvdW5kYXRpb24uZGVzdHJveSgpO1xyXG4gICAgdGhpcy5ib3R0b21MaW5lRm91bmRhdGlvbiAmJiB0aGlzLmJvdHRvbUxpbmVGb3VuZGF0aW9uLmRlc3Ryb3koKTtcclxuICAgIHRoaXMuaGVscGVyVGV4dEZvdW5kYXRpb24gJiYgdGhpcy5oZWxwZXJUZXh0Rm91bmRhdGlvbi5kZXN0cm95KCk7XHJcbiAgICB0aGlzLmljb25Gb3VuZGF0aW9uICYmIHRoaXMuaWNvbkZvdW5kYXRpb24uZGVzdHJveSgpO1xyXG4gICAgdGhpcy5sYWJlbEZvdW5kYXRpb24gJiYgdGhpcy5sYWJlbEZvdW5kYXRpb24uZGVzdHJveSgpO1xyXG4gICAgdGhpcy5vdXRsaW5lRm91bmRhdGlvbiAmJiB0aGlzLm91dGxpbmVGb3VuZGF0aW9uLmRlc3Ryb3koKTtcclxuICAgIHRoaXMucmlwcGxlICYmIHRoaXMucmlwcGxlLmRlc3Ryb3koKTtcclxuICB9LFxyXG59O1xyXG48L3NjcmlwdD5cclxuIiwiaW1wb3J0IHtCYXNlUGx1Z2lufSBmcm9tICcuLi9iYXNlJ1xuaW1wb3J0IG1kY1RleHRGaWVsZCBmcm9tICcuL21kYy10ZXh0ZmllbGQudnVlJ1xuXG5leHBvcnQge21kY1RleHRGaWVsZH1cblxuZXhwb3J0IGRlZmF1bHQgQmFzZVBsdWdpbih7XG4gIG1kY1RleHRGaWVsZFxufSlcbiIsIjx0ZW1wbGF0ZT5cbiAgPGN1c3RvbS1lbGVtZW50IDp0YWc9XCJ0YWdcIiBcbiAgICBjbGFzcz1cIm1kYy10aGVtZVwiXG4gICAgOmNsYXNzPVwiY2xhc3Nlc1wiPlxuICAgIDxzbG90IC8+XG4gIDwvY3VzdG9tLWVsZW1lbnQ+XG48L3RlbXBsYXRlPlxuXG5cbjxzY3JpcHQ+XG5pbXBvcnQgeyBDdXN0b21FbGVtZW50IH0gZnJvbSAnLi4vYmFzZSdcblxuXG5jb25zdCBUSEVNRV9DT0xPUlMgPSBbXG4gICdwcmltYXJ5JyxcbiAgJ3NlY29uZGFyeScsXG4gICdiYWNrZ3JvdW5kJyxcbiAgJ3ByaW1hcnktbGlnaHQnLFxuICAnc2Vjb25kYXJ5LWxpZ2h0JyxcbiAgJ3NlY29uZGFyeS1kYXJrJyxcbiAgJ3ByaW1hcnktZGFyaydcbl1cblxuY29uc3QgVEhFTUVfU1RZTEVTID0gW1xuICAndGV4dC1wcmltYXJ5JyxcbiAgJ3RleHQtc2Vjb25kYXJ5JyxcbiAgJ3RleHQtaGludCcsXG4gICd0ZXh0LWljb24nLFxuICAndGV4dC1kaXNhYmxlZCdcbl1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnbWRjLXRoZW1lJyxcbiAgY29tcG9uZW50czoge1xuICAgIEN1c3RvbUVsZW1lbnRcbiAgfSxcbiAgcHJvcHM6IHtcbiAgICB0YWc6IHt0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICdkaXYnIH0sXG4gICAgY29sb3I6IFN0cmluZyxcbiAgICBiYWNrZ3JvdW5kOiBTdHJpbmdcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBjbGFzc2VzICgpIHtcbiAgICAgIGxldCBjbGFzc2VzID0ge31cblxuICAgICAgaWYgKHRoaXMuY29sb3IgJiYgVEhFTUVfQ09MT1JTLmluZGV4T2YodGhpcy5jb2xvcikgIT09IC0xKSB7XG4gICAgICAgICAgY2xhc3Nlc1tgbWRjLXRoZW1lLS0ke3RoaXMuY29sb3J9YF0gPSB0cnVlXG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLmJhY2tncm91bmQgJiYgVEhFTUVfQ09MT1JTLmluZGV4T2YodGhpcy5iYWNrZ3JvdW5kKSAhPT0gLTEpIHtcbiAgICAgICAgY2xhc3Nlc1tgbWRjLXRoZW1lLS0ke3RoaXMuYmFja2dyb3VuZH0tYmdgXSA9IHRydWVcblxuICAgICAgICBpZiAodGhpcy5jb2xvciAmJiBUSEVNRV9TVFlMRVMuaW5kZXhPZih0aGlzLmNvbG9yKSAhPT0gLTEpIHtcbiAgICAgICAgICBjbGFzc2VzW2BtZGMtdGhlbWUtLSR7dGhpcy5jb2xvcn0tb24tJHt0aGlzLmJhY2tncm91bmR9YF0gPSB0cnVlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBjbGFzc2VzXG4gICAgfVxuICB9XG59XG48L3NjcmlwdD5cbiIsImltcG9ydCB7QmFzZVBsdWdpbn0gZnJvbSAnLi4vYmFzZSdcbmltcG9ydCBtZGNUaGVtZSBmcm9tICcuL21kYy10aGVtZS52dWUnXG5cbmV4cG9ydCB7XG4gIG1kY1RoZW1lXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJhc2VQbHVnaW4oe1xuICBtZGNUaGVtZVxufSlcbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmV4cG9ydCBjb25zdCBjc3NDbGFzc2VzID0ge1xuICBGSVhFRDogJ21kYy10b29sYmFyLS1maXhlZCcsXG4gIEZJWEVEX0xBU1RST1c6ICdtZGMtdG9vbGJhci0tZml4ZWQtbGFzdHJvdy1vbmx5JyxcbiAgRklYRURfQVRfTEFTVF9ST1c6ICdtZGMtdG9vbGJhci0tZml4ZWQtYXQtbGFzdC1yb3cnLFxuICBUT09MQkFSX1JPV19GTEVYSUJMRTogJ21kYy10b29sYmFyLS1mbGV4aWJsZScsXG4gIEZMRVhJQkxFX0RFRkFVTFRfQkVIQVZJT1I6ICdtZGMtdG9vbGJhci0tZmxleGlibGUtZGVmYXVsdC1iZWhhdmlvcicsXG4gIEZMRVhJQkxFX01BWDogJ21kYy10b29sYmFyLS1mbGV4aWJsZS1zcGFjZS1tYXhpbWl6ZWQnLFxuICBGTEVYSUJMRV9NSU46ICdtZGMtdG9vbGJhci0tZmxleGlibGUtc3BhY2UtbWluaW1pemVkJyxcbn07XG5cbmV4cG9ydCBjb25zdCBzdHJpbmdzID0ge1xuICBUSVRMRV9TRUxFQ1RPUjogJy5tZGMtdG9vbGJhcl9fdGl0bGUnLFxuICBJQ09OX1NFTEVDVE9SOiAnLm1kYy10b29sYmFyX19pY29uJyxcbiAgRklSU1RfUk9XX1NFTEVDVE9SOiAnLm1kYy10b29sYmFyX19yb3c6Zmlyc3QtY2hpbGQnLFxuICBDSEFOR0VfRVZFTlQ6ICdNRENUb29sYmFyOmNoYW5nZScsXG59O1xuXG5leHBvcnQgY29uc3QgbnVtYmVycyA9IHtcbiAgTUFYX1RJVExFX1NJWkU6IDIuMTI1LFxuICBNSU5fVElUTEVfU0laRTogMS4yNSxcbiAgVE9PTEJBUl9ST1dfSEVJR0hUOiA2NCxcbiAgVE9PTEJBUl9ST1dfTU9CSUxFX0hFSUdIVDogNTYsXG4gIFRPT0xCQVJfTU9CSUxFX0JSRUFLUE9JTlQ6IDYwMCxcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IE1EQ0ZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL2Jhc2UvZm91bmRhdGlvbic7XG5pbXBvcnQge2Nzc0NsYXNzZXMsIHN0cmluZ3MsIG51bWJlcnN9IGZyb20gJy4vY29uc3RhbnRzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTURDVG9vbGJhckZvdW5kYXRpb24gZXh0ZW5kcyBNRENGb3VuZGF0aW9uIHtcbiAgc3RhdGljIGdldCBjc3NDbGFzc2VzKCkge1xuICAgIHJldHVybiBjc3NDbGFzc2VzO1xuICB9XG5cbiAgc3RhdGljIGdldCBzdHJpbmdzKCkge1xuICAgIHJldHVybiBzdHJpbmdzO1xuICB9XG5cbiAgc3RhdGljIGdldCBudW1iZXJzKCkge1xuICAgIHJldHVybiBudW1iZXJzO1xuICB9XG5cbiAgc3RhdGljIGdldCBkZWZhdWx0QWRhcHRlcigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaGFzQ2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4gLyogYm9vbGVhbiAqLyBmYWxzZSxcbiAgICAgIGFkZENsYXNzOiAoLyogY2xhc3NOYW1lOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgcmVtb3ZlQ2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICByZWdpc3RlclNjcm9sbEhhbmRsZXI6ICgvKiBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJTY3JvbGxIYW5kbGVyOiAoLyogaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICByZWdpc3RlclJlc2l6ZUhhbmRsZXI6ICgvKiBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJSZXNpemVIYW5kbGVyOiAoLyogaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBnZXRWaWV3cG9ydFdpZHRoOiAoKSA9PiAvKiBudW1iZXIgKi8gMCxcbiAgICAgIGdldFZpZXdwb3J0U2Nyb2xsWTogKCkgPT4gLyogbnVtYmVyICovIDAsXG4gICAgICBnZXRPZmZzZXRIZWlnaHQ6ICgpID0+IC8qIG51bWJlciAqLyAwLFxuICAgICAgZ2V0Rmlyc3RSb3dFbGVtZW50T2Zmc2V0SGVpZ2h0OiAoKSA9PiAvKiBudW1iZXIgKi8gMCxcbiAgICAgIG5vdGlmeUNoYW5nZTogKC8qIGV2dERhdGE6IHtmbGV4aWJsZUV4cGFuc2lvblJhdGlvOiBudW1iZXJ9ICovKSA9PiB7fSxcbiAgICAgIHNldFN0eWxlOiAoLyogcHJvcGVydHk6IHN0cmluZywgdmFsdWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICBzZXRTdHlsZUZvclRpdGxlRWxlbWVudDogKC8qIHByb3BlcnR5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgc2V0U3R5bGVGb3JGbGV4aWJsZVJvd0VsZW1lbnQ6ICgvKiBwcm9wZXJ0eTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nICovKSA9PiB7fSxcbiAgICAgIHNldFN0eWxlRm9yRml4ZWRBZGp1c3RFbGVtZW50OiAoLyogcHJvcGVydHk6IHN0cmluZywgdmFsdWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKGFkYXB0ZXIpIHtcbiAgICBzdXBlcihPYmplY3QuYXNzaWduKE1EQ1Rvb2xiYXJGb3VuZGF0aW9uLmRlZmF1bHRBZGFwdGVyLCBhZGFwdGVyKSk7XG4gICAgdGhpcy5yZXNpemVIYW5kbGVyXyA9ICgpID0+IHRoaXMuY2hlY2tSb3dIZWlnaHRfKCk7XG4gICAgdGhpcy5zY3JvbGxIYW5kbGVyXyA9ICgpID0+IHRoaXMudXBkYXRlVG9vbGJhclN0eWxlc18oKTtcbiAgICB0aGlzLmNoZWNrUm93SGVpZ2h0RnJhbWVfID0gMDtcbiAgICB0aGlzLnNjcm9sbEZyYW1lXyA9IDA7XG4gICAgdGhpcy5leGVjdXRlZExhc3RDaGFuZ2VfID0gZmFsc2U7XG5cbiAgICB0aGlzLmNhbGN1bGF0aW9uc18gPSB7XG4gICAgICB0b29sYmFyUm93SGVpZ2h0OiAwLFxuICAgICAgLy8gQ2FsY3VsYXRlZCBIZWlnaHQgcmF0aW8uIFdlIHVzZSByYXRpbyB0byBjYWxjdWxhdGUgY29ycmVzcG9uZGluZyBoZWlnaHRzIGluIHJlc2l6ZSBldmVudC5cbiAgICAgIHRvb2xiYXJSYXRpbzogMCwgLy8gVGhlIHJhdGlvIG9mIHRvb2xiYXIgaGVpZ2h0IHRvIHJvdyBoZWlnaHRcbiAgICAgIGZsZXhpYmxlRXhwYW5zaW9uUmF0aW86IDAsIC8vIFRoZSByYXRpbyBvZiBmbGV4aWJsZSBzcGFjZSBoZWlnaHQgdG8gcm93IGhlaWdodFxuICAgICAgbWF4VHJhbnNsYXRlWVJhdGlvOiAwLCAvLyBUaGUgcmF0aW8gb2YgbWF4IHRvb2xiYXIgbW92ZSB1cCBkaXN0YW5jZSB0byByb3cgaGVpZ2h0XG4gICAgICBzY3JvbGxUaHJlc2hvbGRSYXRpbzogMCwgLy8gVGhlIHJhdGlvIG9mIG1heCBzY3JvbGxUb3AgdGhhdCB3ZSBzaG91bGQgbGlzdGVuIHRvIHRvIHJvdyBoZWlnaHRcbiAgICAgIC8vIERlcml2ZWQgSGVpZ2h0cyBiYXNlZCBvbiB0aGUgYWJvdmUga2V5IHJhdGlvcy5cbiAgICAgIHRvb2xiYXJIZWlnaHQ6IDAsXG4gICAgICBmbGV4aWJsZUV4cGFuc2lvbkhlaWdodDogMCwgLy8gRmxleGlibGUgcm93IG1pbnVzIHRvb2xiYXIgaGVpZ2h0IChkZXJpdmVkKVxuICAgICAgbWF4VHJhbnNsYXRlWURpc3RhbmNlOiAwLCAvLyBXaGVuIHRvb2xiYXIgb25seSBmaXggbGFzdCByb3cgKGRlcml2ZWQpXG4gICAgICBzY3JvbGxUaHJlc2hvbGQ6IDAsXG4gICAgfTtcbiAgICAvLyBUb29sYmFyIGZpeGVkIGJlaGF2aW9yXG4gICAgLy8gSWYgdG9vbGJhciBpcyBmaXhlZFxuICAgIHRoaXMuZml4ZWRfID0gZmFsc2U7XG4gICAgLy8gSWYgZml4ZWQgaXMgdGFyZ2V0ZWQgb25seSBhdCB0aGUgbGFzdCByb3dcbiAgICB0aGlzLmZpeGVkTGFzdHJvd18gPSBmYWxzZTtcbiAgICAvLyBUb29sYmFyIGZsZXhpYmxlIGJlaGF2aW9yXG4gICAgLy8gSWYgdGhlIGZpcnN0IHJvdyBpcyBmbGV4aWJsZVxuICAgIHRoaXMuaGFzRmxleGlibGVSb3dfID0gZmFsc2U7XG4gICAgLy8gSWYgdXNlIHRoZSBkZWZhdWx0IGJlaGF2aW9yXG4gICAgdGhpcy51c2VGbGV4RGVmYXVsdEJlaGF2aW9yXyA9IGZhbHNlO1xuICB9XG5cbiAgaW5pdCgpIHtcbiAgICB0aGlzLmZpeGVkXyA9IHRoaXMuYWRhcHRlcl8uaGFzQ2xhc3MoTURDVG9vbGJhckZvdW5kYXRpb24uY3NzQ2xhc3Nlcy5GSVhFRCk7XG4gICAgdGhpcy5maXhlZExhc3Ryb3dfID0gdGhpcy5hZGFwdGVyXy5oYXNDbGFzcyhNRENUb29sYmFyRm91bmRhdGlvbi5jc3NDbGFzc2VzLkZJWEVEX0xBU1RST1cpICYgdGhpcy5maXhlZF87XG4gICAgdGhpcy5oYXNGbGV4aWJsZVJvd18gPSB0aGlzLmFkYXB0ZXJfLmhhc0NsYXNzKE1EQ1Rvb2xiYXJGb3VuZGF0aW9uLmNzc0NsYXNzZXMuVE9PTEJBUl9ST1dfRkxFWElCTEUpO1xuICAgIGlmICh0aGlzLmhhc0ZsZXhpYmxlUm93Xykge1xuICAgICAgdGhpcy51c2VGbGV4RGVmYXVsdEJlaGF2aW9yXyA9IHRoaXMuYWRhcHRlcl8uaGFzQ2xhc3MoTURDVG9vbGJhckZvdW5kYXRpb24uY3NzQ2xhc3Nlcy5GTEVYSUJMRV9ERUZBVUxUX0JFSEFWSU9SKTtcbiAgICB9XG4gICAgdGhpcy5pbml0S2V5UmF0aW9fKCk7XG4gICAgdGhpcy5zZXRLZXlIZWlnaHRzXygpO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJSZXNpemVIYW5kbGVyKHRoaXMucmVzaXplSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJTY3JvbGxIYW5kbGVyKHRoaXMuc2Nyb2xsSGFuZGxlcl8pO1xuICB9XG5cbiAgZGVzdHJveSgpIHtcbiAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJSZXNpemVIYW5kbGVyKHRoaXMucmVzaXplSGFuZGxlcl8pO1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlclNjcm9sbEhhbmRsZXIodGhpcy5zY3JvbGxIYW5kbGVyXyk7XG4gIH1cblxuICB1cGRhdGVBZGp1c3RFbGVtZW50U3R5bGVzKCkge1xuICAgIGlmICh0aGlzLmZpeGVkXykge1xuICAgICAgdGhpcy5hZGFwdGVyXy5zZXRTdHlsZUZvckZpeGVkQWRqdXN0RWxlbWVudCgnbWFyZ2luLXRvcCcsIGAke3RoaXMuY2FsY3VsYXRpb25zXy50b29sYmFySGVpZ2h0fXB4YCk7XG4gICAgfVxuICB9XG5cbiAgZ2V0RmxleGlibGVFeHBhbnNpb25SYXRpb18oc2Nyb2xsVG9wKSB7XG4gICAgLy8gVG8gcHJldmVudCBkaXZpc2lvbiBieSB6ZXJvIHdoZW4gdGhlcmUgaXMgbm8gZmxleGlibGVFeHBhbnNpb25IZWlnaHRcbiAgICBjb25zdCBkZWx0YSA9IDAuMDAwMTtcbiAgICByZXR1cm4gTWF0aC5tYXgoMCwgMSAtIHNjcm9sbFRvcCAvICh0aGlzLmNhbGN1bGF0aW9uc18uZmxleGlibGVFeHBhbnNpb25IZWlnaHQgKyBkZWx0YSkpO1xuICB9XG5cbiAgY2hlY2tSb3dIZWlnaHRfKCkge1xuICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuY2hlY2tSb3dIZWlnaHRGcmFtZV8pO1xuICAgIHRoaXMuY2hlY2tSb3dIZWlnaHRGcmFtZV8gPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gdGhpcy5zZXRLZXlIZWlnaHRzXygpKTtcbiAgfVxuXG4gIHNldEtleUhlaWdodHNfKCkge1xuICAgIGNvbnN0IG5ld1Rvb2xiYXJSb3dIZWlnaHQgPSB0aGlzLmdldFJvd0hlaWdodF8oKTtcbiAgICBpZiAobmV3VG9vbGJhclJvd0hlaWdodCAhPT0gdGhpcy5jYWxjdWxhdGlvbnNfLnRvb2xiYXJSb3dIZWlnaHQpIHtcbiAgICAgIHRoaXMuY2FsY3VsYXRpb25zXy50b29sYmFyUm93SGVpZ2h0ID0gbmV3VG9vbGJhclJvd0hlaWdodDtcbiAgICAgIHRoaXMuY2FsY3VsYXRpb25zXy50b29sYmFySGVpZ2h0ID0gdGhpcy5jYWxjdWxhdGlvbnNfLnRvb2xiYXJSYXRpbyAqIHRoaXMuY2FsY3VsYXRpb25zXy50b29sYmFyUm93SGVpZ2h0O1xuICAgICAgdGhpcy5jYWxjdWxhdGlvbnNfLmZsZXhpYmxlRXhwYW5zaW9uSGVpZ2h0ID1cbiAgICAgICAgdGhpcy5jYWxjdWxhdGlvbnNfLmZsZXhpYmxlRXhwYW5zaW9uUmF0aW8gKiB0aGlzLmNhbGN1bGF0aW9uc18udG9vbGJhclJvd0hlaWdodDtcbiAgICAgIHRoaXMuY2FsY3VsYXRpb25zXy5tYXhUcmFuc2xhdGVZRGlzdGFuY2UgPVxuICAgICAgICB0aGlzLmNhbGN1bGF0aW9uc18ubWF4VHJhbnNsYXRlWVJhdGlvICogdGhpcy5jYWxjdWxhdGlvbnNfLnRvb2xiYXJSb3dIZWlnaHQ7XG4gICAgICB0aGlzLmNhbGN1bGF0aW9uc18uc2Nyb2xsVGhyZXNob2xkID1cbiAgICAgICAgdGhpcy5jYWxjdWxhdGlvbnNfLnNjcm9sbFRocmVzaG9sZFJhdGlvICogdGhpcy5jYWxjdWxhdGlvbnNfLnRvb2xiYXJSb3dIZWlnaHQ7XG4gICAgICB0aGlzLnVwZGF0ZUFkanVzdEVsZW1lbnRTdHlsZXMoKTtcbiAgICAgIHRoaXMudXBkYXRlVG9vbGJhclN0eWxlc18oKTtcbiAgICB9XG4gIH1cblxuICB1cGRhdGVUb29sYmFyU3R5bGVzXygpIHtcbiAgICBjYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLnNjcm9sbEZyYW1lXyk7XG4gICAgdGhpcy5zY3JvbGxGcmFtZV8gPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgY29uc3Qgc2Nyb2xsVG9wID0gdGhpcy5hZGFwdGVyXy5nZXRWaWV3cG9ydFNjcm9sbFkoKTtcbiAgICAgIGNvbnN0IGhhc1Njcm9sbGVkT3V0T2ZUaHJlc2hvbGQgPSB0aGlzLnNjcm9sbGVkT3V0T2ZUaHJlc2hvbGRfKHNjcm9sbFRvcCk7XG5cbiAgICAgIGlmIChoYXNTY3JvbGxlZE91dE9mVGhyZXNob2xkICYmIHRoaXMuZXhlY3V0ZWRMYXN0Q2hhbmdlXykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGZsZXhpYmxlRXhwYW5zaW9uUmF0aW8gPSB0aGlzLmdldEZsZXhpYmxlRXhwYW5zaW9uUmF0aW9fKHNjcm9sbFRvcCk7XG5cbiAgICAgIHRoaXMudXBkYXRlVG9vbGJhckZsZXhpYmxlU3RhdGVfKGZsZXhpYmxlRXhwYW5zaW9uUmF0aW8pO1xuICAgICAgaWYgKHRoaXMuZml4ZWRMYXN0cm93Xykge1xuICAgICAgICB0aGlzLnVwZGF0ZVRvb2xiYXJGaXhlZFN0YXRlXyhzY3JvbGxUb3ApO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMuaGFzRmxleGlibGVSb3dfKSB7XG4gICAgICAgIHRoaXMudXBkYXRlRmxleGlibGVSb3dFbGVtZW50U3R5bGVzXyhmbGV4aWJsZUV4cGFuc2lvblJhdGlvKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuZXhlY3V0ZWRMYXN0Q2hhbmdlXyA9IGhhc1Njcm9sbGVkT3V0T2ZUaHJlc2hvbGQ7XG4gICAgICB0aGlzLmFkYXB0ZXJfLm5vdGlmeUNoYW5nZSh7ZmxleGlibGVFeHBhbnNpb25SYXRpbzogZmxleGlibGVFeHBhbnNpb25SYXRpb30pO1xuICAgIH0pO1xuICB9XG5cbiAgc2Nyb2xsZWRPdXRPZlRocmVzaG9sZF8oc2Nyb2xsVG9wKSB7XG4gICAgcmV0dXJuIHNjcm9sbFRvcCA+IHRoaXMuY2FsY3VsYXRpb25zXy5zY3JvbGxUaHJlc2hvbGQ7XG4gIH1cblxuICBpbml0S2V5UmF0aW9fKCkge1xuICAgIGNvbnN0IHRvb2xiYXJSb3dIZWlnaHQgPSB0aGlzLmdldFJvd0hlaWdodF8oKTtcbiAgICBjb25zdCBmaXJzdFJvd01heFJhdGlvID0gdGhpcy5hZGFwdGVyXy5nZXRGaXJzdFJvd0VsZW1lbnRPZmZzZXRIZWlnaHQoKSAvIHRvb2xiYXJSb3dIZWlnaHQ7XG4gICAgdGhpcy5jYWxjdWxhdGlvbnNfLnRvb2xiYXJSYXRpbyA9IHRoaXMuYWRhcHRlcl8uZ2V0T2Zmc2V0SGVpZ2h0KCkgLyB0b29sYmFyUm93SGVpZ2h0O1xuICAgIHRoaXMuY2FsY3VsYXRpb25zXy5mbGV4aWJsZUV4cGFuc2lvblJhdGlvID0gZmlyc3RSb3dNYXhSYXRpbyAtIDE7XG4gICAgdGhpcy5jYWxjdWxhdGlvbnNfLm1heFRyYW5zbGF0ZVlSYXRpbyA9XG4gICAgICB0aGlzLmZpeGVkTGFzdHJvd18gPyB0aGlzLmNhbGN1bGF0aW9uc18udG9vbGJhclJhdGlvIC0gZmlyc3RSb3dNYXhSYXRpbyA6IDA7XG4gICAgdGhpcy5jYWxjdWxhdGlvbnNfLnNjcm9sbFRocmVzaG9sZFJhdGlvID1cbiAgICAgICh0aGlzLmZpeGVkTGFzdHJvd18gPyB0aGlzLmNhbGN1bGF0aW9uc18udG9vbGJhclJhdGlvIDogZmlyc3RSb3dNYXhSYXRpbykgLSAxO1xuICB9XG5cbiAgZ2V0Um93SGVpZ2h0XygpIHtcbiAgICBjb25zdCBicmVha3BvaW50ID0gTURDVG9vbGJhckZvdW5kYXRpb24ubnVtYmVycy5UT09MQkFSX01PQklMRV9CUkVBS1BPSU5UO1xuICAgIHJldHVybiB0aGlzLmFkYXB0ZXJfLmdldFZpZXdwb3J0V2lkdGgoKSA8IGJyZWFrcG9pbnQgP1xuICAgICAgTURDVG9vbGJhckZvdW5kYXRpb24ubnVtYmVycy5UT09MQkFSX1JPV19NT0JJTEVfSEVJR0hUIDogTURDVG9vbGJhckZvdW5kYXRpb24ubnVtYmVycy5UT09MQkFSX1JPV19IRUlHSFQ7XG4gIH1cblxuICB1cGRhdGVUb29sYmFyRmxleGlibGVTdGF0ZV8oZmxleGlibGVFeHBhbnNpb25SYXRpbykge1xuICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoTURDVG9vbGJhckZvdW5kYXRpb24uY3NzQ2xhc3Nlcy5GTEVYSUJMRV9NQVgpO1xuICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoTURDVG9vbGJhckZvdW5kYXRpb24uY3NzQ2xhc3Nlcy5GTEVYSUJMRV9NSU4pO1xuICAgIGlmIChmbGV4aWJsZUV4cGFuc2lvblJhdGlvID09PSAxKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmFkZENsYXNzKE1EQ1Rvb2xiYXJGb3VuZGF0aW9uLmNzc0NsYXNzZXMuRkxFWElCTEVfTUFYKTtcbiAgICB9IGVsc2UgaWYgKGZsZXhpYmxlRXhwYW5zaW9uUmF0aW8gPT09IDApIHtcbiAgICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoTURDVG9vbGJhckZvdW5kYXRpb24uY3NzQ2xhc3Nlcy5GTEVYSUJMRV9NSU4pO1xuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZVRvb2xiYXJGaXhlZFN0YXRlXyhzY3JvbGxUb3ApIHtcbiAgICBjb25zdCB0cmFuc2xhdGVEaXN0YW5jZSA9IE1hdGgubWF4KDAsIE1hdGgubWluKFxuICAgICAgc2Nyb2xsVG9wIC0gdGhpcy5jYWxjdWxhdGlvbnNfLmZsZXhpYmxlRXhwYW5zaW9uSGVpZ2h0LFxuICAgICAgdGhpcy5jYWxjdWxhdGlvbnNfLm1heFRyYW5zbGF0ZVlEaXN0YW5jZSkpO1xuICAgIHRoaXMuYWRhcHRlcl8uc2V0U3R5bGUoJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGVZKCR7LXRyYW5zbGF0ZURpc3RhbmNlfXB4KWApO1xuXG4gICAgaWYgKHRyYW5zbGF0ZURpc3RhbmNlID09PSB0aGlzLmNhbGN1bGF0aW9uc18ubWF4VHJhbnNsYXRlWURpc3RhbmNlKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmFkZENsYXNzKE1EQ1Rvb2xiYXJGb3VuZGF0aW9uLmNzc0NsYXNzZXMuRklYRURfQVRfTEFTVF9ST1cpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUNsYXNzKE1EQ1Rvb2xiYXJGb3VuZGF0aW9uLmNzc0NsYXNzZXMuRklYRURfQVRfTEFTVF9ST1cpO1xuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZUZsZXhpYmxlUm93RWxlbWVudFN0eWxlc18oZmxleGlibGVFeHBhbnNpb25SYXRpbykge1xuICAgIGlmICh0aGlzLmZpeGVkXykge1xuICAgICAgY29uc3QgaGVpZ2h0ID0gdGhpcy5jYWxjdWxhdGlvbnNfLmZsZXhpYmxlRXhwYW5zaW9uSGVpZ2h0ICogZmxleGlibGVFeHBhbnNpb25SYXRpbztcbiAgICAgIHRoaXMuYWRhcHRlcl8uc2V0U3R5bGVGb3JGbGV4aWJsZVJvd0VsZW1lbnQoJ2hlaWdodCcsXG4gICAgICAgIGAke2hlaWdodCArIHRoaXMuY2FsY3VsYXRpb25zXy50b29sYmFyUm93SGVpZ2h0fXB4YCk7XG4gICAgfVxuICAgIGlmICh0aGlzLnVzZUZsZXhEZWZhdWx0QmVoYXZpb3JfKSB7XG4gICAgICB0aGlzLnVwZGF0ZUVsZW1lbnRTdHlsZXNEZWZhdWx0QmVoYXZpb3JfKGZsZXhpYmxlRXhwYW5zaW9uUmF0aW8pO1xuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZUVsZW1lbnRTdHlsZXNEZWZhdWx0QmVoYXZpb3JfKGZsZXhpYmxlRXhwYW5zaW9uUmF0aW8pIHtcbiAgICBjb25zdCBtYXhUaXRsZVNpemUgPSBNRENUb29sYmFyRm91bmRhdGlvbi5udW1iZXJzLk1BWF9USVRMRV9TSVpFO1xuICAgIGNvbnN0IG1pblRpdGxlU2l6ZSA9IE1EQ1Rvb2xiYXJGb3VuZGF0aW9uLm51bWJlcnMuTUlOX1RJVExFX1NJWkU7XG4gICAgY29uc3QgY3VycmVudFRpdGxlU2l6ZSA9IChtYXhUaXRsZVNpemUgLSBtaW5UaXRsZVNpemUpICogZmxleGlibGVFeHBhbnNpb25SYXRpbyArIG1pblRpdGxlU2l6ZTtcblxuICAgIHRoaXMuYWRhcHRlcl8uc2V0U3R5bGVGb3JUaXRsZUVsZW1lbnQoJ2ZvbnQtc2l6ZScsIGAke2N1cnJlbnRUaXRsZVNpemV9cmVtYCk7XG4gIH1cbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmxldCBzdXBwb3J0c1Bhc3NpdmVfO1xuXG4vLyBEZXRlcm1pbmUgd2hldGhlciB0aGUgY3VycmVudCBicm93c2VyIHN1cHBvcnRzIHBhc3NpdmUgZXZlbnQgbGlzdGVuZXJzLCBhbmQgaWYgc28sIHVzZSB0aGVtLlxuZXhwb3J0IGZ1bmN0aW9uIGFwcGx5UGFzc2l2ZShnbG9iYWxPYmogPSB3aW5kb3csIGZvcmNlUmVmcmVzaCA9IGZhbHNlKSB7XG4gIGlmIChzdXBwb3J0c1Bhc3NpdmVfID09PSB1bmRlZmluZWQgfHwgZm9yY2VSZWZyZXNoKSB7XG4gICAgbGV0IGlzU3VwcG9ydGVkID0gZmFsc2U7XG4gICAgdHJ5IHtcbiAgICAgIGdsb2JhbE9iai5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd0ZXN0JywgbnVsbCwge2dldCBwYXNzaXZlKCkge1xuICAgICAgICBpc1N1cHBvcnRlZCA9IHRydWU7XG4gICAgICB9fSk7XG4gICAgfSBjYXRjaCAoZSkgeyB9XG5cbiAgICBzdXBwb3J0c1Bhc3NpdmVfID0gaXNTdXBwb3J0ZWQ7XG4gIH1cblxuICByZXR1cm4gc3VwcG9ydHNQYXNzaXZlXyA/IHtwYXNzaXZlOiB0cnVlfSA6IGZhbHNlO1xufVxuIiwiPHRlbXBsYXRlPlxuICA8aGVhZGVyIGNsYXNzPVwibWRjLXRvb2xiYXItd3JhcHBlclwiPlxuICAgIDwhLS1Ub29sYmFyLS0+XG4gICAgPGRpdiByZWY9XCJyb290XCIgOmNsYXNzPVwicm9vdENsYXNzZXNcIiA6c3R5bGU9XCJyb290U3R5bGVzXCI+XG4gICAgICAgIDxzbG90Pjwvc2xvdD5cbiAgICA8L2Rpdj5cbiAgICA8IS0tIEZpeGVkIEFkanVzdCBFbGVtZW50LS0+XG4gICAgPGRpdiByZWY9XCJmaXhlZC1hZGp1c3RcIiBjbGFzcz1cIm1kYy10b29sYmFyLWZpeGVkLWFkanVzdFwiIFxuICAgICAgOnN0eWxlPVwiYWRqdXN0U3R5bGVzXCJcbiAgICAgIHYtaWY9XCJmaXhlZCB8fCB3YXRlcmZhbGwgfHwgZml4ZWRMYXN0cm93XCI+PC9kaXY+XG4gIDwvaGVhZGVyPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbiAgaW1wb3J0IE1EQ1Rvb2xiYXJGb3VuZGF0aW9uIGZyb20gJ0BtYXRlcmlhbC90b29sYmFyL2ZvdW5kYXRpb24nXG4gIGltcG9ydCAqIGFzIHV0aWwgZnJvbSAnQG1hdGVyaWFsL3Rvb2xiYXIvdXRpbCdcblxuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgbmFtZTogJ21kYy10b29sYmFyJyxcbiAgICBwcm9wczoge1xuICAgICAgJ2ZpeGVkJzogQm9vbGVhbixcbiAgICAgICd3YXRlcmZhbGwnOiBCb29sZWFuLFxuICAgICAgJ2ZpeGVkLWxhc3Ryb3cnOiBCb29sZWFuLFxuICAgICAgJ2ZsZXhpYmxlJzogQm9vbGVhbixcbiAgICAgICdmbGV4aWJsZS1kZWZhdWx0JzogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiB0cnVlIH1cbiAgICB9LFxuICAgIGRhdGEgKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcm9vdENsYXNzZXM6IHtcbiAgICAgICAgICAnbWRjLXRvb2xiYXInOiB0cnVlLFxuICAgICAgICAgICdtZGMtdG9vbGJhci0tZml4ZWQnOiB0aGlzLmZpeGVkIHx8IHRoaXMud2F0ZXJmYWxsIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5maXhlZExhc3Ryb3csXG4gICAgICAgICAgJ21kYy10b29sYmFyLS13YXRlcmZhbGwnOiB0aGlzLndhdGVyZmFsbCxcbiAgICAgICAgICAnbWRjLXRvb2xiYXItLWZpeGVkLWxhc3Ryb3ctb25seSc6IHRoaXMuZml4ZWRMYXN0cm93LFxuICAgICAgICAgICdtZGMtdG9vbGJhci0tZmxleGlibGUnOiB0aGlzLmZsZXhpYmxlLFxuICAgICAgICAgICdtZGMtdG9vbGJhci0tZmxleGlibGUtZGVmYXVsdC1iZWhhdmlvcic6IHRoaXMuZmxleGlibGUgJiZcbiAgICAgICAgICAgIHRoaXMuZmxleGlibGVEZWZhdWx0XG4gICAgICAgIH0sXG4gICAgICAgIHJvb3RTdHlsZXM6IHt9LFxuICAgICAgICBhZGp1c3RTdHlsZXM6IHtcbiAgICAgICAgICAvLyB0byBhdm9pZCB0b3AgbWFyZ2luIGNvbGxhcHNlIHdpdGggOmFmdGVyIGVsXG4gICAgICAgICAgLy8gMC4xIHB4IHNob3VsZCBiZSByb3VuZGVkIHRvIDBweFxuICAgICAgICAgIC8vIFRPRE86IGZpbmQgYSBiZXR0ZXIgdHJpY2tcbiAgICAgICAgICAvLyBoZWlnaHQ6ICcwLjFweCdcbiAgICAgICAgfSxcbiAgICAgICAgZm91bmRhdGlvbjogbnVsbFxuICAgICAgfVxuICAgIH0sXG4gICAgbW91bnRlZCAoKSB7XG4gICAgICB0aGlzLmZvdW5kYXRpb24gPSBuZXcgTURDVG9vbGJhckZvdW5kYXRpb24oe1xuICAgICAgICBhZGRDbGFzczogKGNsYXNzTmFtZSkgPT4ge1xuICAgICAgICAgIHRoaXMuJHNldCh0aGlzLnJvb3RDbGFzc2VzLCBjbGFzc05hbWUsIHRydWUpXG4gICAgICAgIH0sXG4gICAgICAgIHJlbW92ZUNsYXNzOiAoY2xhc3NOYW1lKSA9PiB7XG4gICAgICAgICAgdGhpcy4kZGVsZXRlKHRoaXMucm9vdENsYXNzZXMsIGNsYXNzTmFtZSlcbiAgICAgICAgfSxcbiAgICAgICAgaGFzQ2xhc3M6IChjbGFzc05hbWUpID0+IHtcbiAgICAgICAgICByZXR1cm4gdGhpcy4kcmVmcy5yb290LmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpXG4gICAgICAgIH0sXG4gICAgICAgIHJlZ2lzdGVyU2Nyb2xsSGFuZGxlcjogKGhhbmRsZXIpID0+IHtcbiAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgaGFuZGxlciwgdXRpbC5hcHBseVBhc3NpdmUoKSlcbiAgICAgICAgfSxcbiAgICAgICAgZGVyZWdpc3RlclNjcm9sbEhhbmRsZXI6IChoYW5kbGVyKSA9PiB7XG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGhhbmRsZXIsIHV0aWwuYXBwbHlQYXNzaXZlKCkpXG4gICAgICAgIH0sXG4gICAgICAgIHJlZ2lzdGVyUmVzaXplSGFuZGxlcjogKGhhbmRsZXIpID0+IHtcbiAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaGFuZGxlcilcbiAgICAgICAgfSxcbiAgICAgICAgZGVyZWdpc3RlclJlc2l6ZUhhbmRsZXI6IChoYW5kbGVyKSA9PiB7XG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGhhbmRsZXIpXG4gICAgICAgIH0sXG4gICAgICAgIGdldFZpZXdwb3J0V2lkdGg6ICgpID0+IHtcbiAgICAgICAgICByZXR1cm4gd2luZG93LmlubmVyV2lkdGhcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0Vmlld3BvcnRTY3JvbGxZOiAoKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIHdpbmRvdy5wYWdlWU9mZnNldFxuICAgICAgICB9LFxuICAgICAgICBnZXRPZmZzZXRIZWlnaHQ6ICgpID0+IHtcbiAgICAgICAgICByZXR1cm4gdGhpcy4kcmVmcy5yb290Lm9mZnNldEhlaWdodFxuICAgICAgICB9LFxuICAgICAgICBnZXRGaXJzdFJvd0VsZW1lbnRPZmZzZXRIZWlnaHQ6ICgpID0+IHtcbiAgICAgICAgICBsZXQgZWwgPSB0aGlzLiRyZWZzLnJvb3QucXVlcnlTZWxlY3RvcihNRENUb29sYmFyRm91bmRhdGlvbi5zdHJpbmdzLkZJUlNUX1JPV19TRUxFQ1RPUilcbiAgICAgICAgICByZXR1cm4gKGVsKSA/IGVsLm9mZnNldEhlaWdodCA6IHVuZGVmaW5lZFxuICAgICAgICB9LFxuICAgICAgICBub3RpZnlDaGFuZ2U6IChldnREYXRhKSA9PiB7XG4gICAgICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgZXZ0RGF0YSlcbiAgICAgICAgfSxcbiAgICAgICAgc2V0U3R5bGU6IChwcm9wZXJ0eSwgdmFsdWUpID0+IHtcbiAgICAgICAgICB0aGlzLiRzZXQodGhpcy5yb290U3R5bGVzLCBwcm9wZXJ0eSwgdmFsdWUpXG4gICAgICAgIH0sXG4gICAgICAgIHNldFN0eWxlRm9yVGl0bGVFbGVtZW50OiAocHJvcGVydHksIHZhbHVlKSA9PiB7XG4gICAgICAgICAgbGV0IGVsID0gdGhpcy4kcmVmcy5yb290LnF1ZXJ5U2VsZWN0b3IoTURDVG9vbGJhckZvdW5kYXRpb24uc3RyaW5ncy5USVRMRV9TRUxFQ1RPUilcbiAgICAgICAgICBpZiAoZWwpIGVsLnN0eWxlLnNldFByb3BlcnR5KHByb3BlcnR5LCB2YWx1ZSlcbiAgICAgICAgfSxcbiAgICAgICAgc2V0U3R5bGVGb3JGbGV4aWJsZVJvd0VsZW1lbnQ6IChwcm9wZXJ0eSwgdmFsdWUpID0+IHtcbiAgICAgICAgICBsZXQgZWwgPSB0aGlzLiRyZWZzLnJvb3QucXVlcnlTZWxlY3RvcihNRENUb29sYmFyRm91bmRhdGlvbi5zdHJpbmdzLkZJUlNUX1JPV19TRUxFQ1RPUilcbiAgICAgICAgICBpZiAoZWwpIGVsLnN0eWxlLnNldFByb3BlcnR5KHByb3BlcnR5LCB2YWx1ZSlcbiAgICAgICAgfSxcbiAgICAgICAgc2V0U3R5bGVGb3JGaXhlZEFkanVzdEVsZW1lbnQ6IChwcm9wZXJ0eSwgdmFsdWUpID0+IHtcbiAgICAgICAgICB0aGlzLiRzZXQodGhpcy5hZGp1c3RTdHlsZXMsIHByb3BlcnR5LCB2YWx1ZSlcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIHRoaXMuZm91bmRhdGlvbi5pbml0KClcbiAgICB9LFxuICAgIGJlZm9yZURlc3Ryb3kgKCkge1xuICAgICAgdGhpcy5mb3VuZGF0aW9uLmRlc3Ryb3koKVxuICAgIH1cbiAgfVxuPC9zY3JpcHQ+XG4iLCI8dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJtZGMtdG9vbGJhci1yb3cgbWRjLXRvb2xiYXJfX3Jvd1wiPlxuICAgIDxzbG90Pjwvc2xvdD5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnbWRjLXRvb2xiYXItcm93J1xufVxuPC9zY3JpcHQ+XG4iLCI8dGVtcGxhdGU+XG4gIDxzZWN0aW9uIGNsYXNzPVwibWRjLXRvb2xiYXItc2VjdGlvbiBtZGMtdG9vbGJhcl9fc2VjdGlvblwiIDpjbGFzcz1cImNsYXNzZXNcIj5cbiAgICA8c2xvdD48L3Nsb3Q+XG4gIDwvc2VjdGlvbj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtdG9vbGJhci1zZWN0aW9uJyxcbiAgcHJvcHM6IHtcbiAgICAnYWxpZ24tc3RhcnQnOiBCb29sZWFuLFxuICAgICdhbGlnbi1lbmQnOiBCb29sZWFuLFxuICAgICdzaHJpbmstdG8tZml0JzogQm9vbGVhblxuICB9LFxuICBkYXRhICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgY2xhc3Nlczoge1xuICAgICAgICAnbWRjLXRvb2xiYXJfX3NlY3Rpb24tLWFsaWduLXN0YXJ0JzogdGhpcy5hbGlnblN0YXJ0LFxuICAgICAgICAnbWRjLXRvb2xiYXJfX3NlY3Rpb24tLWFsaWduLWVuZCc6IHRoaXMuYWxpZ25FbmQsXG4gICAgICAgICdtZGMtdG9vbGJhcl9fc2VjdGlvbi0tc2hyaW5rLXRvLWZpdCc6IHRoaXMuc2hyaW5rVG9GaXRcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbjwvc2NyaXB0PlxuIiwiPHRlbXBsYXRlPlxuICA8YSBjbGFzcz1cIm1kYy10b29sYmFyLW1lbnUtaWNvbiBtZGMtdG9vbGJhcl9fbWVudS1pY29uXCJcbiAgICA6Y2xhc3M9XCJ7J21hdGVyaWFsLWljb25zJzohIWljb259XCJcbiAgICBAY2xpY2s9XCJkaXNwYXRjaEV2ZW50XCI+XG4gICAgPHNsb3Q+e3tpY29ufX08L3Nsb3Q+XG4gIDwvYT5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQge0Rpc3BhdGNoRXZlbnRNaXhpbn0gZnJvbSAnLi4vYmFzZSdcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnbWRjLXRvb2xiYXItbWVudS1pY29uJyxcbiAgbWl4aW5zOiBbRGlzcGF0Y2hFdmVudE1peGluXSxcbiAgcHJvcHM6IHtcbiAgICBpY29uOiB7dHlwZTogU3RyaW5nLCAnZGVmYXVsdCc6IFwibWVudVwifVxuICB9XG59XG48L3NjcmlwdD5cbiIsIjx0ZW1wbGF0ZT5cbiAgICA8YSBjbGFzcz1cIm1kYy10b29sYmFyLXRpdGxlIG1kYy10b29sYmFyX190aXRsZVwiIEBjbGljaz1cImRpc3BhdGNoRXZlbnRcIj5cbiAgICAgICAgPHNsb3Q+PC9zbG90PlxuICAgIDwvYT5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQge0Rpc3BhdGNoRXZlbnRNaXhpbn0gZnJvbSAnLi4vYmFzZSdcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnbWRjLXRvb2xiYXItdGl0bGUnLFxuICBtaXhpbnM6IFtEaXNwYXRjaEV2ZW50TWl4aW5dXG59XG48L3NjcmlwdD5cbiIsIjx0ZW1wbGF0ZT5cbiAgPGEgY2xhc3M9XCJtZGMtdG9vbGJhci1pY29uIG1kYy10b29sYmFyX19pY29uXCIgXG4gICAgOmNsYXNzPVwieydtYXRlcmlhbC1pY29ucyc6ISFpY29ufVwiXG4gICAgQGNsaWNrPVwiZGlzcGF0Y2hFdmVudFwiPlxuICAgIDxzbG90Pnt7aWNvbn19PC9zbG90PlxuICA8L2E+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHtEaXNwYXRjaEV2ZW50TWl4aW59IGZyb20gJy4uL2Jhc2UnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy10b29sYmFyLWljb24nLFxuICBtaXhpbnM6IFtEaXNwYXRjaEV2ZW50TWl4aW5dLFxuICBwcm9wczoge1xuICAgIGljb246IFN0cmluZ1xuICB9XG59XG48L3NjcmlwdD5cbiIsImltcG9ydCB7QmFzZVBsdWdpbn0gZnJvbSAnLi4vYmFzZSdcbmltcG9ydCBtZGNUb29sYmFyIGZyb20gJy4vbWRjLXRvb2xiYXIudnVlJ1xuaW1wb3J0IG1kY1Rvb2xiYXJSb3cgZnJvbSAnLi9tZGMtdG9vbGJhci1yb3cudnVlJ1xuaW1wb3J0IG1kY1Rvb2xiYXJTZWN0aW9uIGZyb20gJy4vbWRjLXRvb2xiYXItc2VjdGlvbi52dWUnXG5pbXBvcnQgbWRjVG9vbGJhck1lbnVJY29uIGZyb20gJy4vbWRjLXRvb2xiYXItbWVudS1pY29uLnZ1ZSdcbmltcG9ydCBtZGNUb29sYmFyVGl0bGUgZnJvbSAnLi9tZGMtdG9vbGJhci10aXRsZS52dWUnXG5pbXBvcnQgbWRjVG9vbGJhckljb24gZnJvbSAnLi9tZGMtdG9vbGJhci1pY29uLnZ1ZSdcblxuZXhwb3J0IHtcbiAgbWRjVG9vbGJhcixcbiAgbWRjVG9vbGJhclJvdyxcbiAgbWRjVG9vbGJhclNlY3Rpb24sXG4gIG1kY1Rvb2xiYXJNZW51SWNvbixcbiAgbWRjVG9vbGJhclRpdGxlLFxuICBtZGNUb29sYmFySWNvblxufVxuXG5leHBvcnQgZGVmYXVsdCBCYXNlUGx1Z2luKHtcbiAgbWRjVG9vbGJhcixcbiAgbWRjVG9vbGJhclJvdyxcbiAgbWRjVG9vbGJhclNlY3Rpb24sXG4gIG1kY1Rvb2xiYXJNZW51SWNvbixcbiAgbWRjVG9vbGJhclRpdGxlLFxuICBtZGNUb29sYmFySWNvblxufSlcblxuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTggR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qKiBAZW51bSB7c3RyaW5nfSAqL1xuY29uc3Qgc3RyaW5ncyA9IHtcbiAgTkFWSUdBVElPTl9FVkVOVDogJ01EQ1RvcEFwcEJhcjpuYXYnLFxuICBST09UX1NFTEVDVE9SOiAnLm1kYy10b3AtYXBwLWJhcicsXG4gIFRJVExFX1NFTEVDVE9SOiAnLm1kYy10b3AtYXBwLWJhcl9fdGl0bGUnLFxuICBOQVZJR0FUSU9OX0lDT05fU0VMRUNUT1I6ICcubWRjLXRvcC1hcHAtYmFyX19uYXZpZ2F0aW9uLWljb24nLFxuICBBQ1RJT05fSVRFTV9TRUxFQ1RPUjogJy5tZGMtdG9wLWFwcC1iYXJfX2FjdGlvbi1pdGVtJyxcbn07XG5cbi8qKiBAZW51bSB7c3RyaW5nfSAqL1xuY29uc3QgY3NzQ2xhc3NlcyA9IHtcbiAgU0hPUlRfQ0xBU1M6ICdtZGMtdG9wLWFwcC1iYXItLXNob3J0JyxcbiAgU0hPUlRfSEFTX0FDVElPTl9JVEVNX0NMQVNTOiAnbWRjLXRvcC1hcHAtYmFyLS1zaG9ydC1oYXMtYWN0aW9uLWl0ZW0nLFxuICBTSE9SVF9DT0xMQVBTRURfQ0xBU1M6ICdtZGMtdG9wLWFwcC1iYXItLXNob3J0LWNvbGxhcHNlZCcsXG59O1xuXG5leHBvcnQge3N0cmluZ3MsIGNzc0NsYXNzZXN9O1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTggR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qIGVzbGludCBuby11bnVzZWQtdmFyczogWzIsIHtcImFyZ3NcIjogXCJub25lXCJ9XSAqL1xuXG4vKipcbiAqIEFkYXB0ZXIgZm9yIE1EQyBUb3AgQXBwIEJhclxuICpcbiAqIERlZmluZXMgdGhlIHNoYXBlIG9mIHRoZSBhZGFwdGVyIGV4cGVjdGVkIGJ5IHRoZSBmb3VuZGF0aW9uLiBJbXBsZW1lbnQgdGhpc1xuICogYWRhcHRlciB0byBpbnRlZ3JhdGUgdGhlIFRvcCBBcHAgQmFyIGludG8geW91ciBmcmFtZXdvcmsuIFNlZVxuICogaHR0cHM6Ly9naXRodWIuY29tL21hdGVyaWFsLWNvbXBvbmVudHMvbWF0ZXJpYWwtY29tcG9uZW50cy13ZWIvYmxvYi9tYXN0ZXIvZG9jcy9hdXRob3JpbmctY29tcG9uZW50cy5tZFxuICogZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKlxuICogQHJlY29yZFxuICovXG5jbGFzcyBNRENUb3BBcHBCYXJBZGFwdGVyIHtcbiAgLyoqXG4gICAqIEFkZHMgYSBjbGFzcyB0byB0aGUgcm9vdCBFbGVtZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG4gICAqL1xuICBhZGRDbGFzcyhjbGFzc05hbWUpIHt9XG5cbiAgLyoqXG4gICAqIFJlbW92ZXMgYSBjbGFzcyBmcm9tIHRoZSByb290IEVsZW1lbnQuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWVcbiAgICovXG4gIHJlbW92ZUNsYXNzKGNsYXNzTmFtZSkge31cblxuICAvKipcbiAgICogUmV0dXJucyB0cnVlIGlmIHRoZSByb290IEVsZW1lbnQgY29udGFpbnMgdGhlIGdpdmVuIGNsYXNzLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAqL1xuICBoYXNDbGFzcyhjbGFzc05hbWUpIHt9XG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVycyBhbiBldmVudCBoYW5kbGVyIG9uIHRoZSBuYXZpZ2F0aW9uIGljb24gZWxlbWVudCBmb3IgYSBnaXZlbiBldmVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcbiAgICogQHBhcmFtIHtmdW5jdGlvbighRXZlbnQpOiB1bmRlZmluZWR9IGhhbmRsZXJcbiAgICovXG4gIHJlZ2lzdGVyTmF2aWdhdGlvbkljb25JbnRlcmFjdGlvbkhhbmRsZXIodHlwZSwgaGFuZGxlcikge31cblxuICAvKipcbiAgICogRGVyZWdpc3RlcnMgYW4gZXZlbnQgaGFuZGxlciBvbiB0aGUgbmF2aWdhdGlvbiBpY29uIGVsZW1lbnQgZm9yIGEgZ2l2ZW4gZXZlbnQuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb24oIUV2ZW50KTogdW5kZWZpbmVkfSBoYW5kbGVyXG4gICAqL1xuICBkZXJlZ2lzdGVyTmF2aWdhdGlvbkljb25JbnRlcmFjdGlvbkhhbmRsZXIodHlwZSwgaGFuZGxlcikge31cblxuICAvKipcbiAgICogRW1pdHMgYW4gZXZlbnQgd2hlbiB0aGUgbmF2aWdhdGlvbiBpY29uIGlzIGNsaWNrZWQuXG4gICAqL1xuICBub3RpZnlOYXZpZ2F0aW9uSWNvbkNsaWNrZWQoKSB7fVxuXG4gIC8qKiBAcGFyYW0ge2Z1bmN0aW9uKCFFdmVudCl9IGhhbmRsZXIgKi9cbiAgcmVnaXN0ZXJTY3JvbGxIYW5kbGVyKGhhbmRsZXIpIHt9XG5cbiAgLyoqIEBwYXJhbSB7ZnVuY3Rpb24oIUV2ZW50KX0gaGFuZGxlciAqL1xuICBkZXJlZ2lzdGVyU2Nyb2xsSGFuZGxlcihoYW5kbGVyKSB7fVxuXG4gIC8qKiBAcmV0dXJuIHtudW1iZXJ9ICovXG4gIGdldFZpZXdwb3J0U2Nyb2xsWSgpIHt9XG5cbiAgLyoqIEByZXR1cm4ge251bWJlcn0gKi9cbiAgZ2V0VG90YWxBY3Rpb25JdGVtcygpIHt9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1EQ1RvcEFwcEJhckFkYXB0ZXI7XG4iLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOCBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHtzdHJpbmdzLCBjc3NDbGFzc2VzfSBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQgTURDVG9wQXBwQmFyQWRhcHRlciBmcm9tICcuL2FkYXB0ZXInO1xuaW1wb3J0IE1EQ0ZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL2Jhc2UvZm91bmRhdGlvbic7XG5cbi8qKlxuICogQGV4dGVuZHMge01EQ0ZvdW5kYXRpb248IU1EQ1RvcEFwcEJhckFkYXB0ZXI+fVxuICovXG5jbGFzcyBNRENUb3BBcHBCYXJGb3VuZGF0aW9uIGV4dGVuZHMgTURDRm91bmRhdGlvbiB7XG4gIC8qKiBAcmV0dXJuIGVudW0ge3N0cmluZ30gKi9cbiAgc3RhdGljIGdldCBzdHJpbmdzKCkge1xuICAgIHJldHVybiBzdHJpbmdzO1xuICB9XG5cbiAgLyoqIEByZXR1cm4gZW51bSB7c3RyaW5nfSAqL1xuICBzdGF0aWMgZ2V0IGNzc0NsYXNzZXMoKSB7XG4gICAgcmV0dXJuIGNzc0NsYXNzZXM7XG4gIH1cblxuICAvKipcbiAgICoge0BzZWUgTURDVG9wQXBwQmFyQWRhcHRlcn0gZm9yIHR5cGluZyBpbmZvcm1hdGlvbiBvbiBwYXJhbWV0ZXJzIGFuZCByZXR1cm5cbiAgICogdHlwZXMuXG4gICAqIEByZXR1cm4geyFNRENUb3BBcHBCYXJBZGFwdGVyfVxuICAgKi9cbiAgc3RhdGljIGdldCBkZWZhdWx0QWRhcHRlcigpIHtcbiAgICByZXR1cm4gLyoqIEB0eXBlIHshTURDVG9wQXBwQmFyQWRhcHRlcn0gKi8gKHtcbiAgICAgIGhhc0NsYXNzOiAoLyogY2xhc3NOYW1lOiBzdHJpbmcgKi8pID0+IHt9LFxuICAgICAgYWRkQ2xhc3M6ICgvKiBjbGFzc05hbWU6IHN0cmluZyAqLykgPT4ge30sXG4gICAgICByZW1vdmVDbGFzczogKC8qIGNsYXNzTmFtZTogc3RyaW5nICovKSA9PiB7fSxcbiAgICAgIHJlZ2lzdGVyTmF2aWdhdGlvbkljb25JbnRlcmFjdGlvbkhhbmRsZXI6ICgvKiB0eXBlOiBzdHJpbmcsIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi8pID0+IHt9LFxuICAgICAgZGVyZWdpc3Rlck5hdmlnYXRpb25JY29uSW50ZXJhY3Rpb25IYW5kbGVyOiAoLyogdHlwZTogc3RyaW5nLCBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIG5vdGlmeU5hdmlnYXRpb25JY29uQ2xpY2tlZDogKCkgPT4ge30sXG4gICAgICByZWdpc3RlclNjcm9sbEhhbmRsZXI6ICgvKiBoYW5kbGVyOiBFdmVudExpc3RlbmVyICovKSA9PiB7fSxcbiAgICAgIGRlcmVnaXN0ZXJTY3JvbGxIYW5kbGVyOiAoLyogaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqLykgPT4ge30sXG4gICAgICBnZXRWaWV3cG9ydFNjcm9sbFk6ICgpID0+IC8qIG51bWJlciAqLyAwLFxuICAgICAgZ2V0VG90YWxBY3Rpb25JdGVtczogKCkgPT4gLyogbnVtYmVyICovIDAsXG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHshTURDVG9wQXBwQmFyQWRhcHRlcn0gYWRhcHRlclxuICAgKi9cbiAgY29uc3RydWN0b3IoYWRhcHRlcikge1xuICAgIHN1cGVyKE9iamVjdC5hc3NpZ24oTURDVG9wQXBwQmFyRm91bmRhdGlvbi5kZWZhdWx0QWRhcHRlciwgYWRhcHRlcikpO1xuXG4gICAgdGhpcy5uYXZDbGlja0hhbmRsZXJfID0gKCkgPT4gdGhpcy5hZGFwdGVyXy5ub3RpZnlOYXZpZ2F0aW9uSWNvbkNsaWNrZWQoKTtcbiAgfVxuXG4gIGluaXQoKSB7XG4gICAgdGhpcy5hZGFwdGVyXy5yZWdpc3Rlck5hdmlnYXRpb25JY29uSW50ZXJhY3Rpb25IYW5kbGVyKCdjbGljaycsIHRoaXMubmF2Q2xpY2tIYW5kbGVyXyk7XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3Rlck5hdmlnYXRpb25JY29uSW50ZXJhY3Rpb25IYW5kbGVyKCdjbGljaycsIHRoaXMubmF2Q2xpY2tIYW5kbGVyXyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTURDVG9wQXBwQmFyRm91bmRhdGlvbjtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE4IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQge2Nzc0NsYXNzZXN9IGZyb20gJy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgTURDVG9wQXBwQmFyQWRhcHRlciBmcm9tICcuLi9hZGFwdGVyJztcbmltcG9ydCBNRENUb3BBcHBCYXJGb3VuZGF0aW9uIGZyb20gJy4uL2ZvdW5kYXRpb24nO1xuXG4vKipcbiAqIEBleHRlbmRzIHtNRENUb3BBcHBCYXJGb3VuZGF0aW9uPCFNRENTaG9ydFRvcEFwcEJhckZvdW5kYXRpb24+fVxuICogQGZpbmFsXG4gKi9cbmNsYXNzIE1EQ1Nob3J0VG9wQXBwQmFyRm91bmRhdGlvbiBleHRlbmRzIE1EQ1RvcEFwcEJhckZvdW5kYXRpb24ge1xuICAvKipcbiAgICogQHBhcmFtIHshTURDVG9wQXBwQmFyQWRhcHRlcn0gYWRhcHRlclxuICAgKi9cbiAgY29uc3RydWN0b3IoYWRhcHRlcikge1xuICAgIHN1cGVyKGFkYXB0ZXIpO1xuICAgIC8vIFN0YXRlIHZhcmlhYmxlIGZvciB0aGUgY3VycmVudCB0b3AgYXBwIGJhciBzdGF0ZVxuICAgIHRoaXMuaXNDb2xsYXBzZWQgPSBmYWxzZTtcblxuICAgIHRoaXMuc2Nyb2xsSGFuZGxlcl8gPSAoKSA9PiB0aGlzLnNob3J0QXBwQmFyU2Nyb2xsSGFuZGxlcl8oKTtcbiAgfVxuXG4gIGluaXQoKSB7XG4gICAgc3VwZXIuaW5pdCgpO1xuICAgIGNvbnN0IGlzQWx3YXlzQ29sbGFwc2VkID0gdGhpcy5hZGFwdGVyXy5oYXNDbGFzcyhjc3NDbGFzc2VzLlNIT1JUX0NPTExBUFNFRF9DTEFTUyk7XG5cbiAgICBpZiAodGhpcy5hZGFwdGVyXy5nZXRUb3RhbEFjdGlvbkl0ZW1zKCkgPiAwKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLmFkZENsYXNzKGNzc0NsYXNzZXMuU0hPUlRfSEFTX0FDVElPTl9JVEVNX0NMQVNTKTtcbiAgICB9XG5cbiAgICBpZiAoIWlzQWx3YXlzQ29sbGFwc2VkKSB7XG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlZ2lzdGVyU2Nyb2xsSGFuZGxlcih0aGlzLnNjcm9sbEhhbmRsZXJfKTtcbiAgICAgIHRoaXMuc2hvcnRBcHBCYXJTY3JvbGxIYW5kbGVyXygpO1xuICAgIH1cbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgc3VwZXIuZGVzdHJveSgpO1xuICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlclNjcm9sbEhhbmRsZXIodGhpcy5zY3JvbGxIYW5kbGVyXyk7XG4gIH1cblxuXG4gIC8qKlxuICAgKiBTY3JvbGwgaGFuZGxlciBmb3IgYXBwbHlpbmcvcmVtb3ZpbmcgdGhlIGNvbGxhcHNlZCBtb2RpZmllciBjbGFzc1xuICAgKiBvbiB0aGUgc2hvcnQgdG9wIGFwcCBiYXIuXG4gICAqL1xuICBzaG9ydEFwcEJhclNjcm9sbEhhbmRsZXJfKCkge1xuICAgIGNvbnN0IGN1cnJlbnRTY3JvbGwgPSB0aGlzLmFkYXB0ZXJfLmdldFZpZXdwb3J0U2Nyb2xsWSgpO1xuXG4gICAgaWYgKGN1cnJlbnRTY3JvbGwgPD0gMCkge1xuICAgICAgaWYgKHRoaXMuaXNDb2xsYXBzZWQpIHtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhjc3NDbGFzc2VzLlNIT1JUX0NPTExBUFNFRF9DTEFTUyk7XG4gICAgICAgIHRoaXMuaXNDb2xsYXBzZWQgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKCF0aGlzLmlzQ29sbGFwc2VkKSB7XG4gICAgICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoY3NzQ2xhc3Nlcy5TSE9SVF9DT0xMQVBTRURfQ0xBU1MpO1xuICAgICAgICB0aGlzLmlzQ29sbGFwc2VkID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTURDU2hvcnRUb3BBcHBCYXJGb3VuZGF0aW9uO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxubGV0IHN1cHBvcnRzUGFzc2l2ZV87XG5cbi8qKlxuICogRGV0ZXJtaW5lIHdoZXRoZXIgdGhlIGN1cnJlbnQgYnJvd3NlciBzdXBwb3J0cyBwYXNzaXZlIGV2ZW50IGxpc3RlbmVycywgYW5kIGlmIHNvLCB1c2UgdGhlbS5cbiAqIEBwYXJhbSB7IVdpbmRvdz19IGdsb2JhbE9ialxuICogQHBhcmFtIHtib29sZWFuPX0gZm9yY2VSZWZyZXNoXG4gKiBAcmV0dXJuIHtib29sZWFufHtwYXNzaXZlOiBib29sZWFufX1cbiAqL1xuZnVuY3Rpb24gYXBwbHlQYXNzaXZlKGdsb2JhbE9iaiA9IHdpbmRvdywgZm9yY2VSZWZyZXNoID0gZmFsc2UpIHtcbiAgaWYgKHN1cHBvcnRzUGFzc2l2ZV8gPT09IHVuZGVmaW5lZCB8fCBmb3JjZVJlZnJlc2gpIHtcbiAgICBsZXQgaXNTdXBwb3J0ZWQgPSBmYWxzZTtcbiAgICB0cnkge1xuICAgICAgZ2xvYmFsT2JqLmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Rlc3QnLCBudWxsLCB7Z2V0IHBhc3NpdmUoKSB7XG4gICAgICAgIGlzU3VwcG9ydGVkID0gdHJ1ZTtcbiAgICAgIH19KTtcbiAgICB9IGNhdGNoIChlKSB7IH1cblxuICAgIHN1cHBvcnRzUGFzc2l2ZV8gPSBpc1N1cHBvcnRlZDtcbiAgfVxuXG4gIHJldHVybiBzdXBwb3J0c1Bhc3NpdmVfID8ge3Bhc3NpdmU6IHRydWV9IDogZmFsc2U7XG59XG5cbmV4cG9ydCB7YXBwbHlQYXNzaXZlfTtcbiIsIjx0ZW1wbGF0ZT5cbjxoZWFkZXIgcmVmPVwicm9vdFwiIDpjbGFzcz1cInJvb3RDbGFzc2VzXCI+XG4gIDxkaXYgY2xhc3M9XCJtZGMtdG9wLWFwcC1iYXJfX3Jvd1wiPlxuICAgIDxzZWN0aW9uIGNsYXNzPVwibWRjLXRvcC1hcHAtYmFyX19zZWN0aW9uIG1kYy10b3AtYXBwLWJhcl9fc2VjdGlvbi0tYWxpZ24tc3RhcnRcIj5cbiAgICAgIDxhIHJlZj1cIm5hdmlnYXRpb25JY29uXCIgaHJlZj1cIiNcIiA6Y2xhc3M9XCJuYXZpY29uQ2xhc3Nlc1wiIHYtaWY9XCJoYXZlTmF2aWdhdGlvbkljb25cIiBAY2xpY2s9XCJkaXNwYXRjaEV2ZW50XCI+e3tpY29ufX08L2E+XG4gICAgICA8c3BhbiBjbGFzcz1cIm1kYy10b3AtYXBwLWJhcl9fdGl0bGVcIiB2LWlmPVwiISF0aXRsZVwiPnt7dGl0bGV9fTwvc3Bhbj5cbiAgICA8L3NlY3Rpb24+XG4gICAgPHNlY3Rpb24gY2xhc3M9XCJtZGMtdG9wLWFwcC1iYXJfX3NlY3Rpb24gbWRjLXRvcC1hcHAtYmFyX19zZWN0aW9uLS1hbGlnbi1lbmRcIiB2LWlmPVwiJHNsb3RzLmRlZmF1bHRcIj5cbiAgICAgIDxzbG90Pjwvc2xvdD5cbiAgICA8L3NlY3Rpb24+XG4gIDwvZGl2PlxuPC9oZWFkZXI+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IE1EQ1RvcEFwcEJhckZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL3RvcC1hcHAtYmFyL2ZvdW5kYXRpb24nO1xuaW1wb3J0IE1EQ1Nob3J0VG9wQXBwQmFyRm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvdG9wLWFwcC1iYXIvc2hvcnQvZm91bmRhdGlvbic7XG5pbXBvcnQgKiBhcyB1dGlsIGZyb20gJ0BtYXRlcmlhbC90b3AtYXBwLWJhci91dGlsJztcbmltcG9ydCB7IERpc3BhdGNoRXZlbnRNaXhpbiwgZW1pdEN1c3RvbUV2ZW50IH0gZnJvbSAnLi4vYmFzZSc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ21kYy10b3AtYXBwLWJhcicsXG4gIHByb3BzOiB7XG4gICAgc2hvcnQ6IEJvb2xlYW4sXG4gICAgc2hvcnRDb2xsYXBzZWQ6IEJvb2xlYW4sXG4gICAgdGl0bGU6IFN0cmluZyxcbiAgICBpY29uOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnbWVudScsXG4gICAgfSxcbiAgICBpY29uQ2xhc3NlczogT2JqZWN0LFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICByb290Q2xhc3Nlczoge1xuICAgICAgICAnbWRjLXRvcC1hcHAtYmFyJzogdHJ1ZSxcbiAgICAgICAgJ21kYy10b3AtYXBwLWJhci0tc2hvcnQnOiB0aGlzLnNob3J0LFxuICAgICAgICAnbWRjLXRvcC1hcHAtYmFyLS1zaG9ydC1jb2xsYXBzZWQnOiB0aGlzLnNob3J0Q29sbGFwc2VkLFxuICAgICAgfSxcbiAgICAgIGZvdW5kYXRpb246IG51bGwsXG4gICAgfTtcbiAgfSxcbiAgbWl4aW5zOiBbRGlzcGF0Y2hFdmVudE1peGluXSxcbiAgbW91bnRlZCgpIHtcbiAgICBjb25zdCBhZGFwdGVyID0ge1xuICAgICAgYWRkQ2xhc3M6IGNsYXNzTmFtZSA9PiB7XG4gICAgICAgIHRoaXMuJHNldCh0aGlzLnJvb3RDbGFzc2VzLCBjbGFzc05hbWUsIHRydWUpO1xuICAgICAgfSxcbiAgICAgIHJlbW92ZUNsYXNzOiBjbGFzc05hbWUgPT4ge1xuICAgICAgICB0aGlzLiRkZWxldGUodGhpcy5yb290Q2xhc3NlcywgY2xhc3NOYW1lKTtcbiAgICAgIH0sXG4gICAgICBoYXNDbGFzczogY2xhc3NOYW1lID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuJHJlZnMucm9vdC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKTtcbiAgICAgIH0sXG4gICAgICByZWdpc3Rlck5hdmlnYXRpb25JY29uSW50ZXJhY3Rpb25IYW5kbGVyOiAodHlwZSwgaGFuZGxlcikgPT4ge1xuICAgICAgICBpZiAodGhpcy4kcmVmcy5uYXZpZ2F0aW9uSWNvbikge1xuICAgICAgICAgIHRoaXMuJHJlZnMubmF2aWdhdGlvbkljb24uYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCBoYW5kbGVyKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGRlcmVnaXN0ZXJOYXZpZ2F0aW9uSWNvbkludGVyYWN0aW9uSGFuZGxlcjogKHR5cGUsIGhhbmRsZXIpID0+IHtcbiAgICAgICAgaWYgKHRoaXMuJHJlZnMubmF2aWdhdGlvbkljb24pIHtcbiAgICAgICAgICB0aGlzLiRyZWZzLm5hdmlnYXRpb25JY29uLnJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgaGFuZGxlcik7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBub3RpZnlOYXZpZ2F0aW9uSWNvbkNsaWNrZWQ6ICgpID0+IHtcbiAgICAgICAgZW1pdEN1c3RvbUV2ZW50KFxuICAgICAgICAgIHRoaXMuJGVsLFxuICAgICAgICAgIE1EQ1RvcEFwcEJhckZvdW5kYXRpb24uc3RyaW5ncy5OQVZJR0FUSU9OX0VWRU5ULFxuICAgICAgICAgIHt9LFxuICAgICAgICAgIHRydWUsXG4gICAgICAgICk7XG4gICAgICB9LFxuICAgICAgcmVnaXN0ZXJTY3JvbGxIYW5kbGVyOiBoYW5kbGVyID0+IHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGhhbmRsZXIsIHV0aWwuYXBwbHlQYXNzaXZlKCkpO1xuICAgICAgfSxcbiAgICAgIGRlcmVnaXN0ZXJTY3JvbGxIYW5kbGVyOiBoYW5kbGVyID0+IHtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGhhbmRsZXIpO1xuICAgICAgfSxcblxuICAgICAgZ2V0Vmlld3BvcnRTY3JvbGxZOiAoKSA9PiB7XG4gICAgICAgIHJldHVybiB3aW5kb3cucGFnZVlPZmZzZXQ7XG4gICAgICB9LFxuICAgICAgZ2V0VG90YWxBY3Rpb25JdGVtczogKCkgPT5cbiAgICAgICAgdGhpcy4kcmVmcy5yb290LnF1ZXJ5U2VsZWN0b3JBbGwoXG4gICAgICAgICAgTURDVG9wQXBwQmFyRm91bmRhdGlvbi5zdHJpbmdzLkFDVElPTl9JVEVNX1NFTEVDVE9SLFxuICAgICAgICApLmxlbmd0aCxcbiAgICB9O1xuXG4gICAgdGhpcy5mb3VuZGF0aW9uID0gdGhpcy5zaG9ydFxuICAgICAgPyBuZXcgTURDU2hvcnRUb3BBcHBCYXJGb3VuZGF0aW9uKGFkYXB0ZXIpXG4gICAgICA6IG5ldyBNRENUb3BBcHBCYXJGb3VuZGF0aW9uKGFkYXB0ZXIpO1xuXG4gICAgdGhpcy5mb3VuZGF0aW9uLmluaXQoKTtcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBoYXZlTmF2aWdhdGlvbkljb24oKSB7XG4gICAgICByZXR1cm4gISF0aGlzLmljb24gfHwgdGhpcy5pY29uQ2xhc3NlcztcbiAgICB9LFxuICAgIG5hdmljb25DbGFzc2VzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgJ21kYy10b3AtYXBwLWJhcl9fbmF2aWdhdGlvbi1pY29uJzogdHJ1ZSxcbiAgICAgICAgJ21hdGVyaWFsLWljb25zJzogISF0aGlzLmljb24sXG4gICAgICAgIC4uLnRoaXMuaWNvbkNsYXNzZXMsXG4gICAgICB9O1xuICAgIH0sXG4gIH0sXG4gIGJlZm9yZURlc3Ryb3koKSB7XG4gICAgdGhpcy5mb3VuZGF0aW9uLmRlc3Ryb3koKTtcbiAgfSxcbn07XG48L3NjcmlwdD5cbiIsIjx0ZW1wbGF0ZT5cbjxhIGhyZWY9XCIjXCIgY2xhc3M9XCJtZGMtdG9wLWFwcC1iYXItLWFjdGlvbiBtZGMtdG9wLWFwcC1iYXJfX2FjdGlvbi1pdGVtXCIgOmNsYXNzPVwiYWN0aW9uaWNvbkNsYXNzZXNcIiBAY2xpY2s9XCJkaXNwYXRjaEV2ZW50XCI+XG4gIDxzbG90Pnt7aWNvbn19PC9zbG90PlxuPC9hPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCB7IERpc3BhdGNoRXZlbnRNaXhpbiB9IGZyb20gJy4uL2Jhc2UnO1xuaW1wb3J0IHsgUmlwcGxlTWl4aW4gfSBmcm9tICcuLi9yaXBwbGUnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdtZGMtdG9wLWFwcC1iYXItLWFjdGlvbicsXG4gIG1peGluczogW0Rpc3BhdGNoRXZlbnRNaXhpbiwgUmlwcGxlTWl4aW5dLFxuICBwcm9wczoge1xuICAgIGljb246IFN0cmluZyxcbiAgICBpY29uQ2xhc3NlczogT2JqZWN0LFxuICB9LFxuICBjb21wdXRlZDoge1xuICAgIGFjdGlvbmljb25DbGFzc2VzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgJ21hdGVyaWFsLWljb25zJzogISF0aGlzLmljb24sXG4gICAgICAgIC4uLnRoaXMuaWNvbkNsYXNzZXMsXG4gICAgICB9O1xuICAgIH0sXG4gIH0sXG59O1xuPC9zY3JpcHQ+XG4iLCJpbXBvcnQgeyBCYXNlUGx1Z2luIH0gZnJvbSAnLi4vYmFzZSc7XG5pbXBvcnQgbWRjVG9wQXBwQmFyIGZyb20gJy4vbWRjLXRvcC1hcHAtYmFyLnZ1ZSc7XG5pbXBvcnQgbWRjVG9wQXBwQmFyQWN0aW9uIGZyb20gJy4vbWRjLXRvcC1hcHAtYmFyLS1hY3Rpb24udnVlJztcblxuZXhwb3J0IHsgbWRjVG9wQXBwQmFyLCBtZGNUb3BBcHBCYXJBY3Rpb24gfTtcblxuZXhwb3J0IGRlZmF1bHQgQmFzZVBsdWdpbih7XG4gIG1kY1RvcEFwcEJhcixcbiAgbWRjVG9wQXBwQmFyQWN0aW9uLFxufSk7XG4iLCJjb25zdCB0eXBvcyA9IFtcbiAgJ2Rpc3BsYXk0JywgXG4gICdkaXNwbGF5MycsIFxuICAnZGlzcGxheTInLCBcbiAgJ2Rpc3BsYXkxJywgXG4gICdoZWFkbGluZScsXG4gICd0aXRsZScsXG4gICdzdWJoZWFkaW5nMScsXG4gICdzdWJoZWFkaW5nMicsXG4gICdib2R5MScsXG4gICdib2R5MicsXG4gICdjYXB0aW9uJyxcbiAgJ2J1dHRvbidcbl1cblxuZXhwb3J0IGNvbnN0IG1kY1R5cG9NaXhpbiA9IChuYW1lKSA9PiB7XG4gIHJldHVybiB7XG4gICAgcmVuZGVyIChjcmVhdGVFbGVtZW50KSB7XG4gICAgICByZXR1cm4gY3JlYXRlRWxlbWVudCh0aGlzLnRhZywge1xuICAgICAgICAnY2xhc3MnOiB7XG4gICAgICAgICAgJ21kYy10eXBvJzogdHJ1ZSxcbiAgICAgICAgICBbbmFtZV06IHRydWUsXG4gICAgICAgICAgW2BtZGMtdHlwb2dyYXBoeS0tJHt0aGlzLnR5cG99YF06IHRydWUsXG4gICAgICAgICAgJ21kYy10eXBvZ3JhcGh5LS1hZGp1c3QtbWFyZ2luJzogdGhpcy5hZGp1c3RNYXJnaW5cbiAgICAgICAgfSxcbiAgICAgICAgJ2F0dHJzJzogdGhpcy4kYXR0cnMsXG4gICAgICAgICdvbic6IHRoaXMuJGxpc3RlbmVyc1xuICAgICAgfSxcbiAgICAgIHRoaXMuJHNsb3RzLmRlZmF1bHQgKVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbWRjVHlwb1Byb3BNaXhpbihkZWZhdWx0VGFnLCBkZWZhdWx0VHlwbywgdmFsaWRUeXBvcykge1xuICByZXR1cm4gIHtcbiAgICBwcm9wczoge1xuICAgICAgJ3RhZyc6IHsgXG4gICAgICAgIHR5cGU6IFN0cmluZywgXG4gICAgICAgIGRlZmF1bHQ6IGRlZmF1bHRUYWcgXG4gICAgICB9LFxuICAgICAgJ3R5cG8nOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgZGVmYXVsdDogZGVmYXVsdFR5cG8sXG4gICAgICAgIHZhbGlkYXRvcjogICh2YWx1ZSkgPT4gdmFsaWRUeXBvcy5pbmRleE9mKHZhbHVlKSAhPT0gLTFcbiAgICAgIH0sXG4gICAgICAnYWRqdXN0LW1hcmdpbic6IHsgXG4gICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgIGRlZmF1bHQ6IGZhbHNlXG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBtZGNUZXh0U2VjdGlvbiA9IHtcbiAgbmFtZTogJ21kYy10ZXh0LXNlY3Rpb24nLFxuICBwcm9wczoge1xuICAgICd0YWcnOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsIFxuICAgICAgZGVmYXVsdDogJ3NlY3Rpb24nIFxuICAgIH0sXG4gIH0sXG4gIHJlbmRlciAoY3JlYXRlRWxlbWVudCkge1xuICAgIHJldHVybiBjcmVhdGVFbGVtZW50KHRoaXMudGFnLCB7XG4gICAgICAnY2xhc3MnOiB7XG4gICAgICAgICdtZGMtdHlwb2dyYXBoeSc6IHRydWUsXG4gICAgICAgICdtZGMtdGV4dC1zZWN0aW9uJzogdHJ1ZSxcbiAgICAgIH0sXG4gICAgICAnYXR0cnMnOiB0aGlzLiRhdHRycyxcbiAgICAgICdvbic6IHRoaXMuJGxpc3RlbmVyc1xuICAgIH0sIHRoaXMuJHNsb3RzLmRlZmF1bHQgKVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBtZGNUZXh0ID0ge1xuICBuYW1lOiAnbWRjLXRleHQnLFxuICBtaXhpbnM6IFtcbiAgICBtZGNUeXBvTWl4aW4oJ21kYy10ZXh0JyksIFxuICAgIG1kY1R5cG9Qcm9wTWl4aW4oJ3AnLCAnYm9keTEnLCB0eXBvcylcbiAgXSxcbn1cblxuZXhwb3J0IGNvbnN0IG1kY0Rpc3BsYXkgPSB7XG4gIG5hbWU6ICdtZGMtZGlzcGxheScsXG4gIG1peGluczogWyBcbiAgICBtZGNUeXBvTWl4aW4oJ21kYy1kaXNwbGF5JyksIFxuICAgIG1kY1R5cG9Qcm9wTWl4aW4oJ2gxJywgJ2Rpc3BsYXkxJywgWydkaXNwbGF5NCcsICdkaXNwbGF5MycsICdkaXNwbGF5MicsICdkaXNwbGF5MSddKV0sXG59XG5cbmV4cG9ydCBjb25zdCBtZGNIZWFkbGluZSA9IHtcbiAgbmFtZTogJ21kYy1oZWFkbGluZScsXG4gIG1peGluczogWyBcbiAgICBtZGNUeXBvTWl4aW4oJ21kYy1oZWFkbGluZScpLCBcbiAgICBtZGNUeXBvUHJvcE1peGluKCdoMicsICdoZWFkbGluZScsIFsnaGVhZGxpbmUnXSldLFxufVxuXG5leHBvcnQgY29uc3QgbWRjVGl0bGUgPSB7XG4gIG5hbWU6ICdtZGMtdGl0bGUnLFxuICBtaXhpbnM6IFsgXG4gICAgbWRjVHlwb01peGluKCdtZGMtdGl0bGUnKSwgXG4gICAgbWRjVHlwb1Byb3BNaXhpbignaDMnLCAndGl0bGUnLCBbJ3RpdGxlJ10pXSxcbn1cblxuZXhwb3J0IGNvbnN0IG1kY1N1YkhlYWRpbmcgPSB7XG4gIG5hbWU6ICdtZGMtc3ViaGVhZGluZycsXG4gIG1peGluczogWyBcbiAgICBtZGNUeXBvTWl4aW4oJ21kYy1zdWJoZWFkaW5nJyksIFxuICAgIG1kY1R5cG9Qcm9wTWl4aW4oJ2g0JywgJ3N1YmhlYWRpbmcyJywgWydzdWJoZWFkaW5nMScsICdzdWJoZWFkaW5nMiddKV0sXG59XG5cbmV4cG9ydCBjb25zdCAgbWRjQm9keSA9IHtcbiAgbmFtZTogJ21kYy1ib2R5JyxcbiAgbWl4aW5zOiBbXG4gICAgbWRjVHlwb01peGluKCdtZGMtYm9keScpLCBcbiAgICBtZGNUeXBvUHJvcE1peGluKCdwJywgJ2JvZHkxJywgWydib2R5MScsICdib2R5MiddKV0sXG59XG5cbmV4cG9ydCBjb25zdCBtZGNDYXB0aW9uID0ge1xuICBuYW1lOiAnbWRjLWNhcHRpb24nLFxuICBtaXhpbnM6IFtcbiAgICBtZGNUeXBvTWl4aW4oJ21kYy1jYXB0aW9uJyksIFxuICAgIG1kY1R5cG9Qcm9wTWl4aW4oJ3NwYW4nLCAnY2FwdGlvbicsIFsnY2FwdGlvbiddKV0sXG59XG4iLCJpbXBvcnQge0Jhc2VQbHVnaW59IGZyb20gJy4uL2Jhc2UnXG5pbXBvcnQgeyAgXG4gIG1kY1RleHRTZWN0aW9uLFxuICBtZGNUZXh0LFxuICBtZGNCb2R5LFxuICBtZGNDYXB0aW9uLFxuICBtZGNEaXNwbGF5LFxuICBtZGNIZWFkbGluZSxcbiAgbWRjU3ViSGVhZGluZyxcbiAgbWRjVGl0bGVcbn0gZnJvbSAnLi9tZGMtdHlwb2dyYXBoeS5qcydcblxuZXhwb3J0IHtcbiAgbWRjVGV4dFNlY3Rpb24sXG4gIG1kY1RleHQsXG4gIG1kY0JvZHksXG4gIG1kY0NhcHRpb24sXG4gIG1kY0Rpc3BsYXksXG4gIG1kY0hlYWRsaW5lLFxuICBtZGNTdWJIZWFkaW5nLFxuICBtZGNUaXRsZVxufVxuXG5leHBvcnQgZGVmYXVsdCBCYXNlUGx1Z2luKHtcbiAgbWRjVGV4dFNlY3Rpb24sXG4gIG1kY1RleHQsXG4gIG1kY0JvZHksXG4gIG1kY0NhcHRpb24sXG4gIG1kY0Rpc3BsYXksXG4gIG1kY0hlYWRsaW5lLFxuICBtZGNTdWJIZWFkaW5nLFxuICBtZGNUaXRsZVxufSlcbiIsIi8vXG4vLyB2dWUgUGx1Z0luXG4vL1xuaW1wb3J0IFZ1ZU1EQ0J1dHRvbiBmcm9tICcuL2J1dHRvbic7XG5pbXBvcnQgVnVlTURDQ2FyZCBmcm9tICcuL2NhcmQnO1xuaW1wb3J0IFZ1ZU1EQ0NoZWNrYm94IGZyb20gJy4vY2hlY2tib3gnO1xuaW1wb3J0IFZ1ZU1EQ0NoaXBTZXQgZnJvbSAnLi9jaGlwcyc7XG5pbXBvcnQgVnVlTURDRGlhbG9nIGZyb20gJy4vZGlhbG9nJztcbmltcG9ydCBWdWVNRENEcmF3ZXIgZnJvbSAnLi9kcmF3ZXInO1xuaW1wb3J0IFZ1ZU1EQ0VsZXZhdGlvbiBmcm9tICcuL2VsZXZhdGlvbic7XG5pbXBvcnQgVnVlTURDRmFiIGZyb20gJy4vZmFiJztcbmltcG9ydCBWdWVNRENHcmlkTGlzdCBmcm9tICcuL2dyaWQtbGlzdCc7XG5pbXBvcnQgVnVlTURDSWNvbiBmcm9tICcuL2ljb24nO1xuaW1wb3J0IFZ1ZU1EQ0ljb25Ub2dnbGUgZnJvbSAnLi9pY29uLXRvZ2dsZSc7XG5pbXBvcnQgVnVlTURDTGF5b3V0QXBwIGZyb20gJy4vbGF5b3V0LWFwcCc7XG5pbXBvcnQgVnVlTURDTGF5b3V0R3JpZCBmcm9tICcuL2xheW91dC1ncmlkJztcbmltcG9ydCBWdWVNRENMaW5lYXJQcm9ncmVzcyBmcm9tICcuL2xpbmVhci1wcm9ncmVzcyc7XG5pbXBvcnQgVnVlTURDTGlzdCBmcm9tICcuL2xpc3QnO1xuaW1wb3J0IFZ1ZU1EQ01lbnUgZnJvbSAnLi9tZW51JztcbmltcG9ydCBWdWVNRENSYWRpbyBmcm9tICcuL3JhZGlvJztcbmltcG9ydCBWdWVNRENSaXBwbGUgZnJvbSAnLi9yaXBwbGUnO1xuaW1wb3J0IFZ1ZU1EQ1NlbGVjdCBmcm9tICcuL3NlbGVjdCc7XG5pbXBvcnQgVnVlTURDU2xpZGVyIGZyb20gJy4vc2xpZGVyJztcbmltcG9ydCBWdWVNRENTbmFja2JhciBmcm9tICcuL3NuYWNrYmFyJztcbmltcG9ydCBWdWVNRENTd2l0Y2ggZnJvbSAnLi9zd2l0Y2gnO1xuaW1wb3J0IFZ1ZU1EQ1RhYnMgZnJvbSAnLi90YWJzJztcbmltcG9ydCBWdWVNRENUZXh0ZmllbGQgZnJvbSAnLi90ZXh0ZmllbGQnO1xuaW1wb3J0IFZ1ZU1EQ1RoZW1lIGZyb20gJy4vdGhlbWUnO1xuaW1wb3J0IFZ1ZU1EQ1Rvb2xiYXIgZnJvbSAnLi90b29sYmFyJztcbmltcG9ydCBWdWVNRENUb3BBcHBCYXIgZnJvbSAnLi90b3AtYXBwLWJhcic7XG5pbXBvcnQgVnVlTURDVHlwb2dyYXBoeSBmcm9tICcuL3R5cG9ncmFwaHknO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHZlcnNpb246ICdfX1ZFUlNJT05fXycsXG4gIGluc3RhbGwodm0pIHtcbiAgICB2bS51c2UoVnVlTURDQnV0dG9uKTtcbiAgICB2bS51c2UoVnVlTURDQ2FyZCk7XG4gICAgdm0udXNlKFZ1ZU1EQ0NoZWNrYm94KTtcbiAgICB2bS51c2UoVnVlTURDQ2hpcFNldCk7XG4gICAgdm0udXNlKFZ1ZU1EQ0RpYWxvZyk7XG4gICAgdm0udXNlKFZ1ZU1EQ0RyYXdlcik7XG4gICAgdm0udXNlKFZ1ZU1EQ0VsZXZhdGlvbik7XG4gICAgdm0udXNlKFZ1ZU1EQ0ZhYik7XG4gICAgdm0udXNlKFZ1ZU1EQ0dyaWRMaXN0KTtcbiAgICB2bS51c2UoVnVlTURDSWNvbik7XG4gICAgdm0udXNlKFZ1ZU1EQ0ljb25Ub2dnbGUpO1xuICAgIHZtLnVzZShWdWVNRENMYXlvdXRBcHApO1xuICAgIHZtLnVzZShWdWVNRENMYXlvdXRHcmlkKTtcbiAgICB2bS51c2UoVnVlTURDTGluZWFyUHJvZ3Jlc3MpO1xuICAgIHZtLnVzZShWdWVNRENMaXN0KTtcbiAgICB2bS51c2UoVnVlTURDTWVudSk7XG4gICAgdm0udXNlKFZ1ZU1EQ1JhZGlvKTtcbiAgICB2bS51c2UoVnVlTURDUmlwcGxlKTtcbiAgICB2bS51c2UoVnVlTURDU2VsZWN0KTtcbiAgICB2bS51c2UoVnVlTURDU2xpZGVyKTtcbiAgICB2bS51c2UoVnVlTURDU25hY2tiYXIpO1xuICAgIHZtLnVzZShWdWVNRENTd2l0Y2gpO1xuICAgIHZtLnVzZShWdWVNRENUYWJzKTtcbiAgICB2bS51c2UoVnVlTURDVGV4dGZpZWxkKTtcbiAgICB2bS51c2UoVnVlTURDVGhlbWUpO1xuICAgIHZtLnVzZShWdWVNRENUb29sYmFyKTtcbiAgICB2bS51c2UoVnVlTURDVG9wQXBwQmFyKTtcbiAgICB2bS51c2UoVnVlTURDVHlwb2dyYXBoeSk7XG4gIH0sXG59O1xuIiwiaW1wb3J0ICcuL3N0eWxlcy5zY3NzJ1xuaW1wb3J0IHthdXRvSW5pdH0gZnJvbSAnLi9iYXNlJ1xuaW1wb3J0IHBsdWdpbiBmcm9tICcuL2luZGV4LmpzJ1xuZXhwb3J0IGRlZmF1bHQgcGx1Z2luXG5cbmF1dG9Jbml0KHBsdWdpbilcbiJdLCJuYW1lcyI6WyJhdXRvSW5pdCIsInBsdWdpbiIsIl9WdWUiLCJ3aW5kb3ciLCJWdWUiLCJnbG9iYWwiLCJ1c2UiLCJCYXNlUGx1Z2luIiwiY29tcG9uZW50cyIsInZlcnNpb24iLCJpbnN0YWxsIiwidm0iLCJrZXkiLCJjb21wb25lbnQiLCJuYW1lIiwiQ3VzdG9tRWxlbWVudCIsImZ1bmN0aW9uYWwiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwiY29udGV4dCIsInByb3BzIiwiaXMiLCJ0YWciLCJkYXRhIiwiY2hpbGRyZW4iLCJDdXN0b21FbGVtZW50TWl4aW4iLCJDdXN0b21MaW5rIiwidHlwZSIsIlN0cmluZyIsImRlZmF1bHQiLCJsaW5rIiwiT2JqZWN0IiwiaCIsImVsZW1lbnQiLCJiYWJlbEhlbHBlcnMuZXh0ZW5kcyIsInBhcmVudCIsIiRyb3V0ZXIiLCIkcm9vdCIsIiRvcHRpb25zIiwib24iLCJjbGljayIsIm5hdGl2ZU9uIiwiQ3VzdG9tTGlua01peGluIiwidG8iLCJleGFjdCIsIkJvb2xlYW4iLCJhcHBlbmQiLCJyZXBsYWNlIiwiYWN0aXZlQ2xhc3MiLCJleGFjdEFjdGl2ZUNsYXNzIiwiY29tcHV0ZWQiLCJlbWl0Q3VzdG9tRXZlbnQiLCJlbCIsImV2dFR5cGUiLCJldnREYXRhIiwic2hvdWxkQnViYmxlIiwiZXZ0IiwiQ3VzdG9tRXZlbnQiLCJkZXRhaWwiLCJidWJibGVzIiwiZG9jdW1lbnQiLCJjcmVhdGVFdmVudCIsImluaXRDdXN0b21FdmVudCIsImRpc3BhdGNoRXZlbnQiLCJDdXN0b21CdXR0b24iLCJhdHRycyIsInJvbGUiLCJocmVmIiwiQ3VzdG9tQnV0dG9uTWl4aW4iLCJkaXNhYmxlZCIsImV4dHJhY3RJY29uUHJvcCIsImljb25Qcm9wIiwiY2xhc3NlcyIsImNvbnRlbnQiLCJBcnJheSIsInJlZHVjZSIsInJlc3VsdCIsInZhbHVlIiwiY2xhc3NOYW1lIiwic3BsaXQiLCJ0ZXh0Q29udGVudCIsIkRpc3BhdGNoRXZlbnRNaXhpbiIsIm1ldGhvZHMiLCIkZW1pdCIsImV2ZW50IiwidGFyZ2V0IiwiZXZlbnRUYXJnZXQiLCJhcmdzIiwiZXZlbnRBcmdzIiwiRGlzcGF0Y2hGb2N1c01peGluIiwiaGFzRm9jdXMiLCJvbk1vdXNlRG93biIsIl9hY3RpdmUiLCJvbk1vdXNlVXAiLCJvbkZvY3VzRXZlbnQiLCJzZXRUaW1lb3V0IiwiZGlzcGF0Y2hGb2N1c0V2ZW50Iiwib25CbHVyRXZlbnQiLCIkZWwiLCJhY3RpdmVFbGVtZW50IiwiY29udGFpbnMiLCJtb3VudGVkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImJlZm9yZURlc3Ryb3kiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiTURDRm91bmRhdGlvbiIsImFkYXB0ZXIiLCJhZGFwdGVyXyIsIk1EQ1JpcHBsZUFkYXB0ZXIiLCJoYW5kbGVyIiwidmFyTmFtZSIsImNzc0NsYXNzZXMiLCJST09UIiwiVU5CT1VOREVEIiwiQkdfRk9DVVNFRCIsIkZHX0FDVElWQVRJT04iLCJGR19ERUFDVElWQVRJT04iLCJzdHJpbmdzIiwiVkFSX0xFRlQiLCJWQVJfVE9QIiwiVkFSX0ZHX1NJWkUiLCJWQVJfRkdfU0NBTEUiLCJWQVJfRkdfVFJBTlNMQVRFX1NUQVJUIiwiVkFSX0ZHX1RSQU5TTEFURV9FTkQiLCJudW1iZXJzIiwiUEFERElORyIsIklOSVRJQUxfT1JJR0lOX1NDQUxFIiwiREVBQ1RJVkFUSU9OX1RJTUVPVVRfTVMiLCJGR19ERUFDVElWQVRJT05fTVMiLCJUQVBfREVMQVlfTVMiLCJzdXBwb3J0c0Nzc1ZhcmlhYmxlc18iLCJzdXBwb3J0c1Bhc3NpdmVfIiwiZGV0ZWN0RWRnZVBzZXVkb1ZhckJ1ZyIsIndpbmRvd09iaiIsIm5vZGUiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJjb21wdXRlZFN0eWxlIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImhhc1BzZXVkb1ZhckJ1ZyIsImJvcmRlclRvcFN0eWxlIiwicmVtb3ZlIiwic3VwcG9ydHNDc3NWYXJpYWJsZXMiLCJmb3JjZVJlZnJlc2giLCJzdXBwb3J0c0Z1bmN0aW9uUHJlc2VudCIsIkNTUyIsInN1cHBvcnRzIiwiZXhwbGljaXRseVN1cHBvcnRzQ3NzVmFycyIsIndlQXJlRmVhdHVyZURldGVjdGluZ1NhZmFyaTEwcGx1cyIsImFwcGx5UGFzc2l2ZSIsImdsb2JhbE9iaiIsInVuZGVmaW5lZCIsImlzU3VwcG9ydGVkIiwicGFzc2l2ZSIsImUiLCJnZXRNYXRjaGVzUHJvcGVydHkiLCJIVE1MRWxlbWVudFByb3RvdHlwZSIsImZpbHRlciIsInAiLCJwb3AiLCJnZXROb3JtYWxpemVkRXZlbnRDb29yZHMiLCJldiIsInBhZ2VPZmZzZXQiLCJjbGllbnRSZWN0IiwieCIsInkiLCJkb2N1bWVudFgiLCJsZWZ0IiwiZG9jdW1lbnRZIiwidG9wIiwibm9ybWFsaXplZFgiLCJub3JtYWxpemVkWSIsImNoYW5nZWRUb3VjaGVzIiwicGFnZVgiLCJwYWdlWSIsIkFDVElWQVRJT05fRVZFTlRfVFlQRVMiLCJQT0lOVEVSX0RFQUNUSVZBVElPTl9FVkVOVF9UWVBFUyIsImFjdGl2YXRlZFRhcmdldHMiLCJNRENSaXBwbGVGb3VuZGF0aW9uIiwiYnJvd3NlclN1cHBvcnRzQ3NzVmFycyIsImlzVW5ib3VuZGVkIiwiaXNTdXJmYWNlQWN0aXZlIiwiaXNTdXJmYWNlRGlzYWJsZWQiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwiY29udGFpbnNFdmVudFRhcmdldCIsInJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyIiwiZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlciIsInJlZ2lzdGVyRG9jdW1lbnRJbnRlcmFjdGlvbkhhbmRsZXIiLCJkZXJlZ2lzdGVyRG9jdW1lbnRJbnRlcmFjdGlvbkhhbmRsZXIiLCJyZWdpc3RlclJlc2l6ZUhhbmRsZXIiLCJkZXJlZ2lzdGVyUmVzaXplSGFuZGxlciIsInVwZGF0ZUNzc1ZhcmlhYmxlIiwiY29tcHV0ZUJvdW5kaW5nUmVjdCIsImdldFdpbmRvd1BhZ2VPZmZzZXQiLCJkZWZhdWx0QWRhcHRlciIsImxheW91dEZyYW1lXyIsImZyYW1lXyIsIndpZHRoIiwiaGVpZ2h0IiwiYWN0aXZhdGlvblN0YXRlXyIsImRlZmF1bHRBY3RpdmF0aW9uU3RhdGVfIiwiaW5pdGlhbFNpemVfIiwibWF4UmFkaXVzXyIsImFjdGl2YXRlSGFuZGxlcl8iLCJhY3RpdmF0ZV8iLCJkZWFjdGl2YXRlSGFuZGxlcl8iLCJkZWFjdGl2YXRlXyIsImZvY3VzSGFuZGxlcl8iLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJibHVySGFuZGxlcl8iLCJyZXNpemVIYW5kbGVyXyIsImxheW91dCIsInVuYm91bmRlZENvb3Jkc18iLCJmZ1NjYWxlXyIsImFjdGl2YXRpb25UaW1lcl8iLCJmZ0RlYWN0aXZhdGlvblJlbW92YWxUaW1lcl8iLCJhY3RpdmF0aW9uQW5pbWF0aW9uSGFzRW5kZWRfIiwiYWN0aXZhdGlvblRpbWVyQ2FsbGJhY2tfIiwicnVuRGVhY3RpdmF0aW9uVVhMb2dpY0lmUmVhZHlfIiwicHJldmlvdXNBY3RpdmF0aW9uRXZlbnRfIiwiaXNBY3RpdmF0ZWQiLCJoYXNEZWFjdGl2YXRpb25VWFJ1biIsIndhc0FjdGl2YXRlZEJ5UG9pbnRlciIsIndhc0VsZW1lbnRNYWRlQWN0aXZlIiwiYWN0aXZhdGlvbkV2ZW50IiwiaXNQcm9ncmFtbWF0aWMiLCJpc1N1cHBvcnRlZF8iLCJyZWdpc3RlclJvb3RIYW5kbGVyc18iLCJsYXlvdXRJbnRlcm5hbF8iLCJkZXJlZ2lzdGVyUm9vdEhhbmRsZXJzXyIsImRlcmVnaXN0ZXJEZWFjdGl2YXRpb25IYW5kbGVyc18iLCJyZW1vdmVDc3NWYXJzXyIsImZvckVhY2giLCJrZXlzIiwiayIsImluZGV4T2YiLCJhY3RpdmF0aW9uU3RhdGUiLCJwcmV2aW91c0FjdGl2YXRpb25FdmVudCIsImlzU2FtZUludGVyYWN0aW9uIiwiaGFzQWN0aXZhdGVkQ2hpbGQiLCJsZW5ndGgiLCJzb21lIiwicmVzZXRBY3RpdmF0aW9uU3RhdGVfIiwicHVzaCIsInJlZ2lzdGVyRGVhY3RpdmF0aW9uSGFuZGxlcnNfIiwiYW5pbWF0ZUFjdGl2YXRpb25fIiwidHJhbnNsYXRlU3RhcnQiLCJ0cmFuc2xhdGVFbmQiLCJnZXRGZ1RyYW5zbGF0aW9uQ29vcmRpbmF0ZXNfIiwic3RhcnRQb2ludCIsImVuZFBvaW50IiwiY2xlYXJUaW1lb3V0Iiwicm1Cb3VuZGVkQWN0aXZhdGlvbkNsYXNzZXNfIiwiYWN0aXZhdGlvbkhhc0VuZGVkIiwic3RhdGUiLCJldnRPYmplY3QiLCJhbmltYXRlRGVhY3RpdmF0aW9uXyIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwibWF4RGltIiwiTWF0aCIsIm1heCIsImdldEJvdW5kZWRSYWRpdXMiLCJoeXBvdGVudXNlIiwic3FydCIsInBvdyIsInVwZGF0ZUxheW91dENzc1ZhcnNfIiwicm91bmQiLCJ1bmJvdW5kZWQiLCJSaXBwbGVCYXNlIiwicmVmIiwiTUFUQ0hFUyIsIl9tYXRjaGVzIiwiSFRNTEVsZW1lbnQiLCJwcm90b3R5cGUiLCJvcHRpb25zIiwiJHNldCIsIiRkZWxldGUiLCJkb2N1bWVudEVsZW1lbnQiLCJzdHlsZXMiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJwYWdlWE9mZnNldCIsInBhZ2VZT2Zmc2V0IiwiUmlwcGxlTWl4aW4iLCJyaXBwbGUiLCJpbml0IiwiZGVzdHJveSIsIm1peGlucyIsIm1kY1JpcHBsZSIsImV4dGVuZHMiLCJtZGNCdXR0b25CYXNlIiwicmFpc2VkIiwidW5lbGV2YXRlZCIsInN0cm9rZWQiLCJkZW5zZSIsImFjY2VudCIsIndhdGNoIiwibWRjQnV0dG9uIiwic3JjIiwiYmFja2dyb3VuZEltYWdlIiwic3F1YXJlIiwiZnVsbEJsZWVkIiwiY29tcGFjdCIsImljb24iLCJtZGNDYXJkIiwibWRjQ2FyZFByaW1hcnlBY3Rpb24iLCJtZGNDYXJkTWVkaWEiLCJtZGNDYXJkSGVhZGVyIiwibWRjQ2FyZFRpdGxlIiwibWRjQ2FyZFN1YnRpdGxlIiwibWRjQ2FyZFRleHQiLCJtZGNDYXJkQWN0aW9ucyIsIm1kY0NhcmRBY3Rpb25CdXR0b25zIiwibWRjQ2FyZEFjdGlvbkJ1dHRvbiIsIm1kY0NhcmRBY3Rpb25JY29ucyIsIm1kY0NhcmRBY3Rpb25JY29uIiwiTURDQ29tcG9uZW50Iiwicm9vdCIsImZvdW5kYXRpb24iLCJyb290XyIsImluaXRpYWxpemUiLCJmb3VuZGF0aW9uXyIsImdldERlZmF1bHRGb3VuZGF0aW9uIiwiaW5pdGlhbFN5bmNXaXRoRE9NIiwiRXJyb3IiLCJNRENSaXBwbGUiLCJ1bmJvdW5kZWRfIiwic2V0VW5ib3VuZGVkIiwiYWN0aXZhdGUiLCJkZWFjdGl2YXRlIiwiY3JlYXRlQWRhcHRlciIsImRhdGFzZXQiLCJzZXRVbmJvdW5kZWRfIiwiaW5zdGFuY2UiLCJ1dGlsIiwiY2xhc3NMaXN0IiwiYWRkIiwic3R5bGUiLCJzZXRQcm9wZXJ0eSIsIk1EQ1NlbGVjdGlvbkNvbnRyb2wiLCJNRENDaGVja2JveEFkYXB0ZXIiLCJhdHRyIiwiVVBHUkFERUQiLCJDSEVDS0VEIiwiSU5ERVRFUk1JTkFURSIsIkRJU0FCTEVEIiwiQU5JTV9VTkNIRUNLRURfQ0hFQ0tFRCIsIkFOSU1fVU5DSEVDS0VEX0lOREVURVJNSU5BVEUiLCJBTklNX0NIRUNLRURfVU5DSEVDS0VEIiwiQU5JTV9DSEVDS0VEX0lOREVURVJNSU5BVEUiLCJBTklNX0lOREVURVJNSU5BVEVfQ0hFQ0tFRCIsIkFOSU1fSU5ERVRFUk1JTkFURV9VTkNIRUNLRUQiLCJOQVRJVkVfQ09OVFJPTF9TRUxFQ1RPUiIsIlRSQU5TSVRJT05fU1RBVEVfSU5JVCIsIlRSQU5TSVRJT05fU1RBVEVfQ0hFQ0tFRCIsIlRSQU5TSVRJT05fU1RBVEVfVU5DSEVDS0VEIiwiVFJBTlNJVElPTl9TVEFURV9JTkRFVEVSTUlOQVRFIiwiQVJJQV9DSEVDS0VEX0FUVFIiLCJBUklBX0NIRUNLRURfSU5ERVRFUk1JTkFURV9WQUxVRSIsIkFOSU1fRU5EX0xBVENIX01TIiwiQ0JfUFJPVE9fUFJPUFMiLCJNRENDaGVja2JveEZvdW5kYXRpb24iLCJzZXROYXRpdmVDb250cm9sQXR0ciIsInJlbW92ZU5hdGl2ZUNvbnRyb2xBdHRyIiwicmVnaXN0ZXJBbmltYXRpb25FbmRIYW5kbGVyIiwiZGVyZWdpc3RlckFuaW1hdGlvbkVuZEhhbmRsZXIiLCJyZWdpc3RlckNoYW5nZUhhbmRsZXIiLCJkZXJlZ2lzdGVyQ2hhbmdlSGFuZGxlciIsImdldE5hdGl2ZUNvbnRyb2wiLCJmb3JjZUxheW91dCIsImlzQXR0YWNoZWRUb0RPTSIsImN1cnJlbnRDaGVja1N0YXRlXyIsImN1cnJlbnRBbmltYXRpb25DbGFzc18iLCJhbmltRW5kTGF0Y2hUaW1lcl8iLCJhbmltRW5kSGFuZGxlcl8iLCJoYW5kbGVBbmltYXRpb25FbmQiLCJjaGFuZ2VIYW5kbGVyXyIsImhhbmRsZUNoYW5nZSIsImRldGVybWluZUNoZWNrU3RhdGVfIiwiZ2V0TmF0aXZlQ29udHJvbF8iLCJpbnN0YWxsUHJvcGVydHlDaGFuZ2VIb29rc18iLCJ1bmluc3RhbGxQcm9wZXJ0eUNoYW5nZUhvb2tzXyIsImNoZWNrZWQiLCJpbmRldGVybWluYXRlIiwidHJhbnNpdGlvbkNoZWNrU3RhdGVfIiwibmF0aXZlQ2IiLCJjYlByb3RvIiwiZ2V0UHJvdG90eXBlT2YiLCJjb250cm9sU3RhdGUiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidmFsaWREZXNjcmlwdG9yIiwibmF0aXZlQ2JEZXNjIiwiZ2V0Iiwic2V0IiwiY2FsbCIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJkZWZpbmVQcm9wZXJ0eSIsIm9sZFN0YXRlIiwibmV3U3RhdGUiLCJpc0luZGV0ZXJtaW5hdGUiLCJnZXRUcmFuc2l0aW9uQW5pbWF0aW9uQ2xhc3NfIiwiaW5wdXRQcm9wRGVzYyIsIk1EQ0Zvcm1GaWVsZEFkYXB0ZXIiLCJMQUJFTF9TRUxFQ1RPUiIsIk1EQ0Zvcm1GaWVsZEZvdW5kYXRpb24iLCJhY3RpdmF0ZUlucHV0UmlwcGxlIiwiZGVhY3RpdmF0ZUlucHV0UmlwcGxlIiwiY2xpY2tIYW5kbGVyXyIsImhhbmRsZUNsaWNrXyIsImV2ZW50VHlwZU1hcCIsIm5vUHJlZml4Iiwid2Via2l0UHJlZml4Iiwic3R5bGVQcm9wZXJ0eSIsImNzc1Byb3BlcnR5TWFwIiwiaGFzUHJvcGVyU2hhcGUiLCJldmVudEZvdW5kSW5NYXBzIiwiZXZlbnRUeXBlIiwiZ2V0SmF2YVNjcmlwdEV2ZW50TmFtZSIsIm1hcCIsImdldEFuaW1hdGlvbk5hbWUiLCJldmVudE5hbWUiLCJ0cmFuc2Zvcm1TdHlsZVByb3BlcnRpZXMiLCJnZXRDb3JyZWN0RXZlbnROYW1lIiwiZ2V0Q29ycmVjdFByb3BlcnR5TmFtZSIsIm1vZGVsIiwicHJvcCIsImxhYmVsIiwiaGFzTGFiZWwiLCIkc2xvdHMiLCJmb3JtRmllbGRDbGFzc2VzIiwiYWxpZ25FbmQiLCJzZXRDaGVja2VkIiwic2V0RGlzYWJsZWQiLCJzZXRJbmRldGVybWluYXRlIiwiJHJlZnMiLCJjb250cm9sIiwic2V0QXR0cmlidXRlIiwicmVtb3ZlQXR0cmlidXRlIiwib2Zmc2V0V2lkdGgiLCJwYXJlbnROb2RlIiwiZm9ybUZpZWxkIiwib25DaGFuZ2UiLCJpc0NoZWNrZWQiLCJtZGNDaGVja2JveCIsIk1EQ0NoaXBBZGFwdGVyIiwiSU5URVJBQ1RJT05fRVZFTlQiLCJMRUFESU5HX0lDT05fU0VMRUNUT1IiLCJUUkFJTElOR19JQ09OX0lOVEVSQUNUSU9OX0VWRU5UIiwiVFJBSUxJTkdfSUNPTl9TRUxFQ1RPUiIsIkNIRUNLTUFSSyIsIkhJRERFTl9MRUFESU5HX0lDT04iLCJMRUFESU5HX0lDT04iLCJTRUxFQ1RFRCIsIk1EQ0NoaXBGb3VuZGF0aW9uIiwiaGFzQ2xhc3MiLCJhZGRDbGFzc1RvTGVhZGluZ0ljb24iLCJyZW1vdmVDbGFzc0Zyb21MZWFkaW5nSWNvbiIsImV2ZW50VGFyZ2V0SGFzQ2xhc3MiLCJyZWdpc3RlckV2ZW50SGFuZGxlciIsImRlcmVnaXN0ZXJFdmVudEhhbmRsZXIiLCJyZWdpc3RlclRyYWlsaW5nSWNvbkludGVyYWN0aW9uSGFuZGxlciIsImRlcmVnaXN0ZXJUcmFpbGluZ0ljb25JbnRlcmFjdGlvbkhhbmRsZXIiLCJub3RpZnlJbnRlcmFjdGlvbiIsIm5vdGlmeVRyYWlsaW5nSWNvbkludGVyYWN0aW9uIiwiaW50ZXJhY3Rpb25IYW5kbGVyXyIsImhhbmRsZUludGVyYWN0aW9uXyIsInRyYW5zaXRpb25FbmRIYW5kbGVyXyIsImhhbmRsZVRyYW5zaXRpb25FbmRfIiwidHJhaWxpbmdJY29uSW50ZXJhY3Rpb25IYW5kbGVyXyIsImhhbmRsZVRyYWlsaW5nSWNvbkludGVyYWN0aW9uXyIsImtleUNvZGUiLCJwcm9wZXJ0eU5hbWUiLCJzdG9wUHJvcGFnYXRpb24iLCJsZWFkaW5nSWNvbiIsInRyYWlsaW5nSWNvbiIsImxlYWRpbmdJY29uQ2xhc3NlcyIsInRyYWlsaW5nSWNvbkNsYXNzZXMiLCJpbmplY3QiLCJ0b2dnbGVTZWxlY3RlZCIsImhhdmVsZWFkaW5nSWNvbiIsImNoaXAiLCJpc0ZpbHRlciIsIm1kY0NoaXBTZXQiLCJoYXZldHJhaWxpbmdJY29uIiwibGVhZGluZ0NsYXNzZXMiLCJ0cmFpbGluZ0NsYXNzZXMiLCJNRENDaGlwU2V0QWRhcHRlciIsIk1EQ0NoaXAiLCJsZWFkaW5nSWNvbl8iLCJxdWVyeVNlbGVjdG9yIiwicmlwcGxlXyIsInRyYWlsaW5nSWNvbkVsIiwiZW1pdCIsIkNISVBfU0VMRUNUT1IiLCJDSE9JQ0UiLCJGSUxURVIiLCJNRENDaGlwU2V0Rm91bmRhdGlvbiIsInNlbGVjdGVkQ2hpcHNfIiwiY2hpcEludGVyYWN0aW9uSGFuZGxlcl8iLCJoYW5kbGVDaGlwSW50ZXJhY3Rpb25fIiwiaW5kZXgiLCJzcGxpY2UiLCJjaG9pY2UiLCJwcm92aWRlIiwibWRjQ2hpcCIsIk9QRU4iLCJBTklNQVRJTkciLCJCQUNLRFJPUCIsIlNDUk9MTF9MT0NLIiwiQUNDRVBUX0JUTiIsIkNBTkNFTF9CVE4iLCJPUEVOX0RJQUxPR19TRUxFQ1RPUiIsIkRJQUxPR19TVVJGQUNFX1NFTEVDVE9SIiwiQUNDRVBUX1NFTEVDVE9SIiwiQUNDRVBUX0VWRU5UIiwiQ0FOQ0VMX0VWRU5UIiwiTURDRGlhbG9nRm91bmRhdGlvbiIsImFkZEJvZHlDbGFzcyIsInJlbW92ZUJvZHlDbGFzcyIsInJlZ2lzdGVyU3VyZmFjZUludGVyYWN0aW9uSGFuZGxlciIsImRlcmVnaXN0ZXJTdXJmYWNlSW50ZXJhY3Rpb25IYW5kbGVyIiwicmVnaXN0ZXJEb2N1bWVudEtleWRvd25IYW5kbGVyIiwiZGVyZWdpc3RlckRvY3VtZW50S2V5ZG93bkhhbmRsZXIiLCJyZWdpc3RlclRyYW5zaXRpb25FbmRIYW5kbGVyIiwiZGVyZWdpc3RlclRyYW5zaXRpb25FbmRIYW5kbGVyIiwibm90aWZ5QWNjZXB0Iiwibm90aWZ5Q2FuY2VsIiwidHJhcEZvY3VzT25TdXJmYWNlIiwidW50cmFwRm9jdXNPblN1cmZhY2UiLCJpc0RpYWxvZyIsImxheW91dEZvb3RlclJpcHBsZXMiLCJpc09wZW5fIiwiY29tcG9uZW50Q2xpY2tIYW5kbGVyXyIsImNhbmNlbCIsImRpYWxvZ0NsaWNrSGFuZGxlcl8iLCJoYW5kbGVEaWFsb2dDbGlja18iLCJkb2N1bWVudEtleWRvd25IYW5kbGVyXyIsImVuYWJsZVNjcm9sbF8iLCJkaXNhYmxlU2Nyb2xsXyIsInNob3VsZE5vdGlmeSIsImNsb3NlIiwiYWNjZXB0IiwibW9kdWxlIiwiZWxlbWVudERvY3VtZW50Iiwib3duZXJEb2N1bWVudCIsImJhc2ljVGFiYmFibGVzIiwib3JkZXJlZFRhYmJhYmxlcyIsImlzVW5hdmFpbGFibGUiLCJjcmVhdGVJc1VuYXZhaWxhYmxlIiwiY2FuZGlkYXRlU2VsZWN0b3JzIiwiY2FuZGlkYXRlcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJqb2luIiwiaW5jbHVkZUNvbnRhaW5lciIsIm1hdGNoZXMiLCJFbGVtZW50IiwibXNNYXRjaGVzU2VsZWN0b3IiLCJ3ZWJraXRNYXRjaGVzU2VsZWN0b3IiLCJjYW5kaWRhdGVTZWxlY3RvciIsInNsaWNlIiwiYXBwbHkiLCJ1bnNoaWZ0IiwiY2FuZGlkYXRlIiwiY2FuZGlkYXRlSW5kZXgiLCJpIiwibCIsInBhcnNlSW50IiwiZ2V0QXR0cmlidXRlIiwidGFiSW5kZXgiLCJ0YWdOYW1lIiwidGFiYmFibGVOb2RlcyIsInNvcnQiLCJhIiwiYiIsImlzT2ZmQ2FjaGUiLCJpc09mZiIsIm5vZGVDb21wdXRlZFN0eWxlIiwiZGVmYXVsdFZpZXciLCJkaXNwbGF5IiwidmlzaWJpbGl0eSIsImxpc3RlbmluZ0ZvY3VzVHJhcCIsImZvY3VzVHJhcCIsInVzZXJPcHRpb25zIiwiZmlyc3RUYWJiYWJsZU5vZGUiLCJsYXN0VGFiYmFibGVOb2RlIiwibm9kZUZvY3VzZWRCZWZvcmVBY3RpdmF0aW9uIiwiYWN0aXZlIiwicGF1c2VkIiwidGFiRXZlbnQiLCJjb250YWluZXIiLCJjb25maWciLCJyZXR1cm5Gb2N1c09uRGVhY3RpdmF0ZSIsImVzY2FwZURlYWN0aXZhdGVzIiwidHJhcCIsInBhdXNlIiwidW5wYXVzZSIsImFjdGl2YXRlT3B0aW9ucyIsImRlZmF1bHRlZEFjdGl2YXRlT3B0aW9ucyIsIm9uQWN0aXZhdGUiLCJkZWFjdGl2YXRlT3B0aW9ucyIsImRlZmF1bHRlZERlYWN0aXZhdGVPcHRpb25zIiwicmV0dXJuRm9jdXMiLCJvbkRlYWN0aXZhdGUiLCJhZGRMaXN0ZW5lcnMiLCJmaXJzdEZvY3VzTm9kZSIsImNoZWNrRm9jdXMiLCJjaGVja0NsaWNrIiwiY2hlY2tQb2ludGVyRG93biIsImNoZWNrS2V5IiwicmVtb3ZlTGlzdGVuZXJzIiwiZ2V0Tm9kZUZvck9wdGlvbiIsIm9wdGlvbk5hbWUiLCJvcHRpb25WYWx1ZSIsImNsaWNrT3V0c2lkZURlYWN0aXZhdGVzIiwicHJldmVudERlZmF1bHQiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJibHVyIiwiaXNFc2NhcGVFdmVudCIsImhhbmRsZVRhYiIsImhhc0F0dHJpYnV0ZSIsIk51bWJlciIsImN1cnJlbnRGb2N1c0luZGV4Iiwic2hpZnRLZXkiLCJ0cnlGb2N1cyIsInVwZGF0ZVRhYmJhYmxlTm9kZXMiLCJ0YWJiYWJsZSIsInJlYWRqdXN0Rm9jdXMiLCJmb2N1cyIsInRvTG93ZXJDYXNlIiwic2VsZWN0IiwiY3JlYXRlRm9jdXNUcmFwSW5zdGFuY2UiLCJzdXJmYWNlRWwiLCJhY2NlcHRCdXR0b25FbCIsImZvY3VzVHJhcEZhY3RvcnkiLCJjcmVhdGVGb2N1c1RyYXAiLCJpbml0aWFsRm9jdXMiLCJ0aXRsZSIsInJlcXVpcmVkIiwiYWNjZXB0RGlzYWJsZWQiLCJzY3JvbGxhYmxlIiwiZGFyayIsInN1cmZhY2VDbGFzc2VzIiwiYm9keUNsYXNzZXMiLCJzdXJmYWNlIiwib25DYW5jZWwiLCJvbkFjY2VwdCIsIiRsaXN0ZW5lcnMiLCJub3RpZnkiLCJzaG93Iiwib3BlbiIsIm1kY0RpYWxvZyIsIkZPQ1VTQUJMRV9FTEVNRU5UUyIsIk1EQ1NsaWRhYmxlRHJhd2VyRm91bmRhdGlvbiIsImhhc05lY2Vzc2FyeURvbSIsInJlZ2lzdGVyRHJhd2VySW50ZXJhY3Rpb25IYW5kbGVyIiwiZGVyZWdpc3RlckRyYXdlckludGVyYWN0aW9uSGFuZGxlciIsInNldFRyYW5zbGF0ZVgiLCJnZXRGb2N1c2FibGVFbGVtZW50cyIsInNhdmVFbGVtZW50VGFiU3RhdGUiLCJyZXN0b3JlRWxlbWVudFRhYlN0YXRlIiwibWFrZUVsZW1lbnRVbnRhYmJhYmxlIiwibm90aWZ5T3BlbiIsIm5vdGlmeUNsb3NlIiwiaXNSdGwiLCJnZXREcmF3ZXJXaWR0aCIsInJvb3RDc3NDbGFzcyIsImFuaW1hdGluZ0Nzc0NsYXNzIiwib3BlbkNzc0NsYXNzIiwicm9vdENzc0NsYXNzXyIsImFuaW1hdGluZ0Nzc0NsYXNzXyIsIm9wZW5Dc3NDbGFzc18iLCJpbmVydF8iLCJjb21wb25lbnRUb3VjaFN0YXJ0SGFuZGxlcl8iLCJoYW5kbGVUb3VjaFN0YXJ0XyIsImNvbXBvbmVudFRvdWNoTW92ZUhhbmRsZXJfIiwiaGFuZGxlVG91Y2hNb3ZlXyIsImNvbXBvbmVudFRvdWNoRW5kSGFuZGxlcl8iLCJoYW5kbGVUb3VjaEVuZF8iLCJkZXRhYmluYXRlXyIsInJldGFiaW5hdGVfIiwiZWxlbWVudHMiLCJwb2ludGVyVHlwZSIsImRpcmVjdGlvbl8iLCJkcmF3ZXJXaWR0aF8iLCJzdGFydFhfIiwidG91Y2hlcyIsImN1cnJlbnRYXyIsInVwZGF0ZVJhZl8iLCJ1cGRhdGVEcmF3ZXJfIiwiYmluZCIsInByZXBhcmVGb3JUb3VjaEVuZF8iLCJhYnMiLCJuZXdQb3NpdGlvbl8iLCJpc1Jvb3RUcmFuc2l0aW9uaW5nRXZlbnRUYXJnZXRfIiwibmV3UG9zIiwibWluIiwiRFJBV0VSX1NFTEVDVE9SIiwiT1BFTl9FVkVOVCIsIkNMT1NFX0VWRU5UIiwiTURDUGVyc2lzdGVudERyYXdlckZvdW5kYXRpb24iLCJpc0RyYXdlciIsIlRBQl9EQVRBIiwiVEFCX0RBVEFfSEFORExFRCIsInN0b3JlZFRyYW5zZm9ybVByb3BlcnR5TmFtZV8iLCJyZW1hcEV2ZW50IiwiZ2V0VHJhbnNmb3JtUHJvcGVydHlOYW1lIiwidHJhbnNmb3JtUHJvcGVydHlOYW1lIiwic3VwcG9ydHNDc3NDdXN0b21Qcm9wZXJ0aWVzIiwiX3JlZnJlc2giLCJkcmF3ZXIiLCJnZXRQcm9wZXJ0eVZhbHVlIiwiT1BBQ0lUWV9WQVJfTkFNRSIsIk1EQ1RlbXBvcmFyeURyYXdlckZvdW5kYXRpb24iLCJuZXdPcGFjaXR5IiwibWVkaWEiLCJfc21hbGwiLCJtYXRjaE1lZGlhIiwiX2xhcmdlIiwicGVybWFuZW50IiwicGVyc2lzdGVudCIsInRlbXBvcmFyeSIsImRyYXdlclR5cGUiLCJ2YWxpZGF0b3IiLCJ2YWwiLCJ0b29sYmFyU3BhY2VyIiwidG9nZ2xlT24iLCJ0b2dnbGVPblNvdXJjZSIsIm9wZW5PbiIsIm9wZW5PblNvdXJjZSIsImNsb3NlT24iLCJjbG9zZU9uU291cmNlIiwibWRjRHJhd2VyIiwic21hbGwiLCJsYXJnZSIsIm9wZW5fIiwibWRjUGVybWFuZW50RHJhd2VyIiwibWRjUGVyc2lzdGVudERyYXdlciIsIm1kY1RlbXBvcmFyeURyYXdlciIsImlzUGVybWFuZW50IiwiaXNQZXJzaXN0ZW50IiwiaXNUZW1wb3JhcnkiLCJpc1Jlc3BvbnNpdmUiLCJ0b2dnbGUiLCJpc09wZW4iLCJyZWZyZXNoTWVkaWEiLCJjcmVhdGVkIiwic291cmNlIiwiJG9uIiwiYWRkTGlzdGVuZXIiLCIkbmV4dFRpY2siLCJyZW1vdmVMaXN0ZW5lciIsInN0YXJ0SWNvbiIsInRlbXBvcmFyeUNsb3NlIiwiYWN0aXZhdGVkIiwiaXRlbUNsYXNzZXMiLCJoYXNTdGFydERldGFpbCIsIm9uQ2xpY2siLCJtZGNEcmF3ZXJMYXlvdXQiLCJtZGNEcmF3ZXJIZWFkZXIiLCJtZGNEcmF3ZXJMaXN0IiwibWRjRHJhd2VySXRlbSIsIm1kY0RyYXdlckRpdmlkZXIiLCJtZGNFbGV2YXRpb24iLCJtaW5pIiwiYWJzb2x1dGUiLCJmaXhlZCIsIm1kY0ZBQiIsIlRJTEVTX1NFTEVDVE9SIiwiVElMRV9TRUxFQ1RPUiIsIk1EQ0dyaWRMaXN0Rm91bmRhdGlvbiIsImdldE9mZnNldFdpZHRoIiwiZ2V0TnVtYmVyT2ZUaWxlcyIsImdldE9mZnNldFdpZHRoRm9yVGlsZUF0SW5kZXgiLCJzZXRTdHlsZUZvclRpbGVzRWxlbWVudCIsImFsaWduQ2VudGVyIiwicmVzaXplRnJhbWVfIiwiYWxpZ25DZW50ZXJfIiwiZ3JpZFdpZHRoIiwiaXRlbVdpZHRoIiwidGlsZXNXaWR0aCIsImZsb29yIiwibWRjR3JpZCIsIm5hcnJvd0d1dHRlciIsImhlYWRlckNhcHRpb24iLCJyYXRpbyIsImljb25BbGlnblN0YXJ0IiwiaWNvbkFsaWduRW5kIiwid2l0aFN1cHBvcnRUZXh0IiwiaW50ZXJhY3RpdmUiLCJkZWZhdWx0V2lkdGgiLCJwcm9wZXJ0eSIsInNlbGVjdGVkIiwiaXNJbnRlcmFjdGl2ZSIsImhhc0VuZERldGFpbCIsImVuZEljb24iLCJhZGRSaXBwbGUiLCJyZW1vdmVSaXBwbGUiLCJtZGNHcmlkTGlzdCIsIm1kY0dyaWRUaWxlIiwibWRjSWNvbiIsIk1EQ0ljb25Ub2dnbGVBZGFwdGVyIiwidGV4dCIsIkRBVEFfVE9HR0xFX09OIiwiREFUQV9UT0dHTEVfT0ZGIiwiQVJJQV9QUkVTU0VEIiwiQVJJQV9ESVNBQkxFRCIsIkFSSUFfTEFCRUwiLCJDSEFOR0VfRVZFTlQiLCJNRENJY29uVG9nZ2xlRm91bmRhdGlvbiIsInNldFRleHQiLCJnZXRUYWJJbmRleCIsInNldFRhYkluZGV4IiwiZ2V0QXR0ciIsInNldEF0dHIiLCJybUF0dHIiLCJub3RpZnlDaGFuZ2UiLCJvbl8iLCJkaXNhYmxlZF8iLCJzYXZlZFRhYkluZGV4XyIsInRvZ2dsZU9uRGF0YV8iLCJ0b2dnbGVPZmZEYXRhXyIsInRvZ2dsZUZyb21FdnRfIiwiaXNIYW5kbGluZ0tleWRvd25fIiwia2V5ZG93bkhhbmRsZXJfIiwiaXNTcGFjZSIsImtleXVwSGFuZGxlcl8iLCJyZWZyZXNoVG9nZ2xlRGF0YSIsInBhcnNlSnNvbkRhdGFBdHRyXyIsImlzT24iLCJjbGFzc1RvUmVtb3ZlIiwiY3NzQ2xhc3MiLCJkYXRhQXR0ciIsIkpTT04iLCJwYXJzZSIsImlzRGlzYWJsZWQiLCJrZXlib2FyZEtleSIsInRvZ2dsZU9mZiIsImljb25DbGFzc2VzIiwidG9nZ2xlT25EYXRhIiwidG9nZ2xlT2ZmRGF0YSIsInN0cmluZ2lmeSIsImlzS2V5Ym9hcmRBY3RpdmF0ZWQiLCJtZGNJQ29uVG9nZ2xlIiwibWRjTGF5b3V0QXBwIiwiZml4ZWRDb2x1bW5XaWR0aCIsInNwYW5PcHRpb25zIiwibnVtIiwiaXNGaW5pdGUiLCJzcGFuIiwib3JkZXIiLCJwaG9uZSIsInRhYmxldCIsImRlc2t0b3AiLCJhbGlnbiIsIm1kY0xheW91dEdyaWQiLCJtZGNMYXlvdXRDZWxsIiwibWRjTGF5b3V0SW5uZXJHcmlkIiwiQ0xPU0VEX0NMQVNTIiwiSU5ERVRFUk1JTkFURV9DTEFTUyIsIlJFVkVSU0VEX0NMQVNTIiwiUFJJTUFSWV9CQVJfU0VMRUNUT1IiLCJCVUZGRVJfU0VMRUNUT1IiLCJNRENMaW5lYXJQcm9ncmVzc0ZvdW5kYXRpb24iLCJnZXRQcmltYXJ5QmFyIiwiZ2V0QnVmZmVyIiwic2V0U3R5bGUiLCJkZXRlcm1pbmF0ZV8iLCJyZXZlcnNlXyIsInByb2dyZXNzXyIsImlzRGV0ZXJtaW5hdGUiLCJzZXRTY2FsZV8iLCJpc1JldmVyc2VkIiwic2NhbGVWYWx1ZSIsInRyYW5zZm9ybVN0eWxlUHJvcGVydHkiLCJQcm9ncmVzc1Byb3BUeXBlIiwicHJvZ3Jlc3MiLCJzZXRQcm9ncmVzcyIsImJ1ZmZlciIsInNldEJ1ZmZlciIsInNldERldGVybWluYXRlIiwicmV2ZXJzZSIsInNldFJldmVyc2UiLCJwcmltYXJ5IiwibWRjTGluZWFyUHJvZ3Jlc3MiLCJhdmF0YXJMaXN0IiwidHdvTGluZSIsImJvcmRlcmVkIiwibWRjTGlzdCIsImhhc1NlY29uZGFyeSIsImluc2V0IiwicGFkZGVkIiwibWRjTGlzdEl0ZW0iLCJtZGNMaXN0RGl2aWRlciIsIm1kY0xpc3RHcm91cCIsIm1kY0xpc3RHcm91cEhlYWRlciIsIm1kY0xpc3RHcm91cERpdmlkZXIiLCJNRENNZW51QWRhcHRlciIsImF0dHJpYnV0ZU5hbWUiLCJvcmlnaW4iLCJwb3NpdGlvbiIsIkFOSU1BVElOR19PUEVOIiwiQU5JTUFUSU5HX0NMT1NFRCIsIlNFTEVDVEVEX0xJU1RfSVRFTSIsIklURU1TX1NFTEVDVE9SIiwiU0VMRUNURURfRVZFTlQiLCJBUklBX0RJU0FCTEVEX0FUVFIiLCJTRUxFQ1RFRF9UUklHR0VSX0RFTEFZIiwiVFJBTlNJVElPTl9PUEVOX0RVUkFUSU9OIiwiVFJBTlNJVElPTl9DTE9TRV9EVVJBVElPTiIsIk1BUkdJTl9UT19FREdFIiwiQU5DSE9SX1RPX01FTlVfV0lEVEhfUkFUSU8iLCJPRkZTRVRfVE9fTUVOVV9IRUlHSFRfUkFUSU8iLCJDb3JuZXJCaXQiLCJCT1RUT00iLCJDRU5URVIiLCJSSUdIVCIsIkZMSVBfUlRMIiwiQ29ybmVyIiwiVE9QX0xFRlQiLCJUT1BfUklHSFQiLCJCT1RUT01fTEVGVCIsIkJPVFRPTV9SSUdIVCIsIlRPUF9TVEFSVCIsIlRPUF9FTkQiLCJCT1RUT01fU1RBUlQiLCJCT1RUT01fRU5EIiwiTURDTWVudUZvdW5kYXRpb24iLCJnZXRBdHRyaWJ1dGVGb3JFdmVudFRhcmdldCIsImdldElubmVyRGltZW5zaW9ucyIsImhhc0FuY2hvciIsImdldEFuY2hvckRpbWVuc2lvbnMiLCJnZXRXaW5kb3dEaW1lbnNpb25zIiwiZ2V0TnVtYmVyT2ZJdGVtcyIsInJlZ2lzdGVyQm9keUNsaWNrSGFuZGxlciIsImRlcmVnaXN0ZXJCb2R5Q2xpY2tIYW5kbGVyIiwiZ2V0SW5kZXhGb3JFdmVudFRhcmdldCIsIm5vdGlmeVNlbGVjdGVkIiwic2F2ZUZvY3VzIiwicmVzdG9yZUZvY3VzIiwiaXNGb2N1c2VkIiwiZ2V0Rm9jdXNlZEl0ZW1JbmRleCIsImZvY3VzSXRlbUF0SW5kZXgiLCJzZXRUcmFuc2Zvcm1PcmlnaW4iLCJzZXRQb3NpdGlvbiIsInNldE1heEhlaWdodCIsInNldEF0dHJGb3JPcHRpb25BdEluZGV4Iiwicm1BdHRyRm9yT3B0aW9uQXRJbmRleCIsImFkZENsYXNzRm9yT3B0aW9uQXRJbmRleCIsInJtQ2xhc3NGb3JPcHRpb25BdEluZGV4IiwiaGFuZGxlUG9zc2libGVTZWxlY3RlZF8iLCJoYW5kbGVLZXlib2FyZERvd25fIiwiaGFuZGxlS2V5Ym9hcmRVcF8iLCJkb2N1bWVudENsaWNrSGFuZGxlcl8iLCJoYW5kbGVEb2N1bWVudENsaWNrXyIsIm9wZW5BbmltYXRpb25FbmRUaW1lcklkXyIsImNsb3NlQW5pbWF0aW9uRW5kVGltZXJJZF8iLCJzZWxlY3RlZFRyaWdnZXJUaW1lcklkXyIsImFuaW1hdGlvblJlcXVlc3RJZF8iLCJkaW1lbnNpb25zXyIsIml0ZW1IZWlnaHRfIiwiYW5jaG9yQ29ybmVyXyIsImFuY2hvck1hcmdpbl8iLCJyaWdodCIsImJvdHRvbSIsIm1lYXN1cmVzXyIsInNlbGVjdGVkSW5kZXhfIiwicmVtZW1iZXJTZWxlY3Rpb25fIiwicXVpY2tPcGVuXyIsImtleURvd25XaXRoaW5NZW51XyIsImNvcm5lciIsIm1hcmdpbiIsInJlbWVtYmVyU2VsZWN0aW9uIiwic2V0U2VsZWN0ZWRJbmRleCIsInF1aWNrT3BlbiIsImZvY3VzSW5kZXgiLCJhbHRLZXkiLCJjdHJsS2V5IiwibWV0YUtleSIsImlzVGFiIiwiaXNBcnJvd1VwIiwiaXNBcnJvd0Rvd24iLCJpc0VudGVyIiwiZm9jdXNlZEl0ZW1JbmRleCIsImxhc3RJdGVtSW5kZXgiLCJpc0VzY2FwZSIsInRhcmdldEluZGV4IiwiYW5jaG9yUmVjdCIsInZpZXdwb3J0Iiwidmlld3BvcnREaXN0YW5jZSIsImFuY2hvckhlaWdodCIsImFuY2hvcldpZHRoIiwibWVudUhlaWdodCIsIm1lbnVXaWR0aCIsImlzQm90dG9tQWxpZ25lZCIsImF2YWlsYWJsZVRvcCIsImF2YWlsYWJsZUJvdHRvbSIsInRvcE92ZXJmbG93IiwiYm90dG9tT3ZlcmZsb3ciLCJpc0ZsaXBSdGwiLCJhdm9pZEhvcml6b250YWxPdmVybGFwIiwiaXNBbGlnbmVkUmlnaHQiLCJhdmFpbGFibGVMZWZ0IiwiYXZhaWxhYmxlUmlnaHQiLCJsZWZ0T3ZlcmZsb3ciLCJyaWdodE92ZXJmbG93IiwiaXNSaWdodEFsaWduZWQiLCJyaWdodE9mZnNldCIsImxlZnRPZmZzZXQiLCJhdm9pZFZlcnRpY2FsT3ZlcmxhcCIsImNhbk92ZXJsYXBWZXJ0aWNhbGx5IiwibWF4SGVpZ2h0IiwiZ2V0QXV0b0xheW91dE1lYXN1cmVtZW50c18iLCJnZXRPcmlnaW5Db3JuZXJfIiwibWF4TWVudUhlaWdodCIsImdldE1lbnVNYXhIZWlnaHRfIiwidmVydGljYWxBbGlnbm1lbnQiLCJob3Jpem9udGFsQWxpZ25tZW50IiwiaG9yaXpvbnRhbE9mZnNldCIsImdldEhvcml6b250YWxPcmlnaW5PZmZzZXRfIiwidmVydGljYWxPZmZzZXQiLCJnZXRWZXJ0aWNhbE9yaWdpbk9mZnNldF8iLCJ2ZXJ0aWNhbE9mZnNldFBlcmNlbnQiLCJvcmlnaW5QZXJjZW50IiwiYXV0b1Bvc2l0aW9uXyIsImZvY3VzT25PcGVuXyIsInRhcmdldElzRGlzYWJsZWQiLCJwcmV2U2VsZWN0ZWRJbmRleCIsIm9wZW5Gcm9tVG9wTGVmdCIsIm9wZW5Gcm9tVG9wUmlnaHQiLCJvcGVuRnJvbUJvdHRvbUxlZnQiLCJvcGVuRnJvbUJvdHRvbVJpZ2h0IiwiaXRlbXMiLCJoaWRlIiwicmVmcmVzaEl0ZW1zIiwic2xvdE9ic2VydmVyIiwiTXV0YXRpb25PYnNlcnZlciIsIm9ic2VydmUiLCJjaGlsZExpc3QiLCJzdWJ0cmVlIiwiX3ByZXZpb3VzRm9jdXMiLCJvZmZzZXRIZWlnaHQiLCJwYXJlbnRFbGVtZW50IiwiaW5uZXJXaWR0aCIsImlubmVySGVpZ2h0IiwiaXRlbSIsImFuY2hvckNvcm5lciIsInNldEFuY2hvckNvcm5lciIsImFuY2hvck1hcmdpbiIsInNldEFuY2hvck1hcmdpbiIsIm52Iiwic2V0UXVpY2tPcGVuIiwiZGlzY29ubmVjdCIsIm1kY01lbnUiLCJtZGNNZW51SXRlbSIsIm1kY01lbnVEaXZpZGVyIiwibWRjTWVudUFuY2hvciIsIk1EQ1JhZGlvQWRhcHRlciIsIk1EQ1JhZGlvRm91bmRhdGlvbiIsInNldFZhbHVlIiwicGlja2VkIiwiZ2V0VmFsdWUiLCJzeW5jIiwibWRjUmFkaW8iLCJuZXdWYWx1ZSIsIkJPWCIsIkJPVFRPTV9MSU5FX1NFTEVDVE9SIiwiTUVOVV9TRUxFQ1RPUiIsIlNVUkZBQ0VfU0VMRUNUT1IiLCJTRUxFQ1RFRF9URVhUX1NFTEVDVE9SIiwiTURDTWVudSIsInByZXZpb3VzRm9jdXNfIiwiaXRlbXNDb250YWluZXJfIiwiaXRlbXNDb250YWluZXIiLCJnZXRTZWxlY3RlZEluZGV4Iiwic2V0UmVtZW1iZXJTZWxlY3Rpb24iLCJPUEVORVJfS0VZUyIsImZvclR5cGUiLCJNRENTZWxlY3RGb3VuZGF0aW9uIiwiZmxvYXRMYWJlbCIsImFjdGl2YXRlQm90dG9tTGluZSIsImRlYWN0aXZhdGVCb3R0b21MaW5lIiwibWFrZVRhYmJhYmxlIiwibWFrZVVudGFiYmFibGUiLCJnZXRDb21wdXRlZFN0eWxlVmFsdWUiLCJjcmVhdGUyZFJlbmRlcmluZ0NvbnRleHQiLCJmb250IiwibWVhc3VyZVRleHQiLCJzZXRNZW51RWxTdHlsZSIsInNldE1lbnVFbEF0dHIiLCJybU1lbnVFbEF0dHIiLCJnZXRNZW51RWxPZmZzZXRIZWlnaHQiLCJvcGVuTWVudSIsImlzTWVudU9wZW4iLCJzZXRTZWxlY3RlZFRleHRDb250ZW50IiwiZ2V0TnVtYmVyT2ZPcHRpb25zIiwiZ2V0VGV4dEZvck9wdGlvbkF0SW5kZXgiLCJnZXRWYWx1ZUZvck9wdGlvbkF0SW5kZXgiLCJnZXRPZmZzZXRUb3BGb3JPcHRpb25BdEluZGV4IiwicmVnaXN0ZXJNZW51SW50ZXJhY3Rpb25IYW5kbGVyIiwiZGVyZWdpc3Rlck1lbnVJbnRlcmFjdGlvbkhhbmRsZXIiLCJnZXRXaW5kb3dJbm5lckhlaWdodCIsImN0eF8iLCJpc0ZvY3VzZWRfIiwiZGlzcGxheUhhbmRsZXJfIiwiZGlzcGxheVZpYUtleWJvYXJkSGFuZGxlcl8iLCJoYW5kbGVEaXNwbGF5VmlhS2V5Ym9hcmRfIiwic2VsZWN0aW9uSGFuZGxlcl8iLCJjbG9zZV8iLCJjYW5jZWxIYW5kbGVyXyIsInJlc2l6ZSIsInNlbGVjdGVkVGV4dENvbnRlbnQiLCJ0cmltIiwibGV0dGVyU3BhY2luZyIsInBhcnNlRmxvYXQiLCJwcmltYXJ5Rm9udEZhbWlseSIsImZvbnRTaXplIiwibWF4VGV4dExlbmd0aCIsInN1cmZhY2VQYWRkaW5nUmlnaHQiLCJzdXJmYWNlUGFkZGluZ0xlZnQiLCJzZWxlY3RCb3hBZGRlZFBhZGRpbmciLCJ0eHQiLCJhZGRlZFNwYWNlIiwiY2VpbCIsInNldE1lbnVTdHlsZXNGb3JPcGVuQXRJbmRleF8iLCJpdGVtT2Zmc2V0VG9wIiwiYWRqdXN0ZWRUb3AiLCJvdmVyZmxvd3NUb3AiLCJvdmVyZmxvd3NCb3R0b20iLCJFVkVOVF9QSEFTRV9BVF9UQVJHRVQiLCJldmVudFBoYXNlIiwiaXNTcGFjZURvd24iLCJpc09wZW5lcktleSIsIk1EQ1NlbGVjdEJvdHRvbUxpbmVBZGFwdGVyIiwiQk9UVE9NX0xJTkVfQUNUSVZFIiwiTURDU2VsZWN0Qm90dG9tTGluZUZvdW5kYXRpb24iLCJNRENTZWxlY3RMYWJlbEFkYXB0ZXIiLCJMQUJFTF9GTE9BVF9BQk9WRSIsIk1EQ1NlbGVjdExhYmVsRm91bmRhdGlvbiIsImdldFdpZHRoIiwibXVsdGlwbGUiLCJib3giLCJsYWJlbENsYXNzZXMiLCJib3R0b21MaW5lQ2xhc3NlcyIsInN1cmZhY2VTdHlsZXMiLCJyZWZyZXNoSW5kZXgiLCJtZW51IiwibGFiZWxGb3VuZGF0aW9uIiwiYm90dG9tTGluZUZvdW5kYXRpb24iLCJzdHlsZUZsb2F0IiwiZ2V0Q29udGV4dCIsIm9mZnNldFRvcCIsImxhYmVsVHh0IiwibWF4U2l6ZSIsInNpemUiLCJjb3VudCIsInNjcm9sbCIsInJlZnJlc2hTaXplIiwiX21vYmlsZSIsIm5hdGl2ZSIsIm1kY1NlbGVjdCIsIk1EQ05hdGl2ZVNlbGVjdCIsIk1EQ01lbnVTZWxlY3QiLCJNRENNdWx0aVNlbGVjdCIsIm1vYmlsZSIsImlzTmF0aXZlIiwiYmVmb3JlTW91bnQiLCJoYXNWYWx1ZSIsIk1EQ05hdGl2ZU9wdGlvbiIsIk1EQ011bHRpT3B0aW9uIiwiTURDTWVudU9wdGlvbiIsIm1kY09wdGlvbiIsIkFDVElWRSIsIkRJU0NSRVRFIiwiRk9DVVMiLCJJTl9UUkFOU0lUIiwiSVNfRElTQ1JFVEUiLCJIQVNfVFJBQ0tfTUFSS0VSIiwiVFJBQ0tfU0VMRUNUT1IiLCJUUkFDS19NQVJLRVJfQ09OVEFJTkVSX1NFTEVDVE9SIiwiTEFTVF9UUkFDS19NQVJLRVJfU0VMRUNUT1IiLCJUSFVNQl9DT05UQUlORVJfU0VMRUNUT1IiLCJQSU5fVkFMVUVfTUFSS0VSX1NFTEVDVE9SIiwiQVJJQV9WQUxVRU1JTiIsIkFSSUFfVkFMVUVNQVgiLCJBUklBX1ZBTFVFTk9XIiwiU1RFUF9EQVRBX0FUVFIiLCJJTlBVVF9FVkVOVCIsIlBBR0VfRkFDVE9SIiwiTURDU2xpZGVyQWRhcHRlciIsIm51bU1hcmtlcnMiLCJLRVlfSURTIiwiQVJST1dfTEVGVCIsIkFSUk9XX1JJR0hUIiwiQVJST1dfVVAiLCJBUlJPV19ET1dOIiwiSE9NRSIsIkVORCIsIlBBR0VfVVAiLCJQQUdFX0RPV04iLCJNT1ZFX0VWRU5UX01BUCIsIkRPV05fRVZFTlRTIiwiVVBfRVZFTlRTIiwiTURDU2xpZGVyRm91bmRhdGlvbiIsInJlZ2lzdGVyVGh1bWJDb250YWluZXJJbnRlcmFjdGlvbkhhbmRsZXIiLCJkZXJlZ2lzdGVyVGh1bWJDb250YWluZXJJbnRlcmFjdGlvbkhhbmRsZXIiLCJyZWdpc3RlckJvZHlJbnRlcmFjdGlvbkhhbmRsZXIiLCJkZXJlZ2lzdGVyQm9keUludGVyYWN0aW9uSGFuZGxlciIsIm5vdGlmeUlucHV0Iiwic2V0VGh1bWJDb250YWluZXJTdHlsZVByb3BlcnR5Iiwic2V0VHJhY2tTdHlsZVByb3BlcnR5Iiwic2V0TWFya2VyVmFsdWUiLCJhcHBlbmRUcmFja01hcmtlcnMiLCJyZW1vdmVUcmFja01hcmtlcnMiLCJzZXRMYXN0VHJhY2tNYXJrZXJzU3R5bGVQcm9wZXJ0eSIsImlzUlRMIiwicmVjdF8iLCJOYU4iLCJhY3RpdmVfIiwiaW5UcmFuc2l0XyIsImlzRGlzY3JldGVfIiwiaGFzVHJhY2tNYXJrZXJfIiwiaGFuZGxpbmdUaHVtYlRhcmdldEV2dF8iLCJtaW5fIiwibWF4XyIsInN0ZXBfIiwidmFsdWVfIiwicHJldmVudEZvY3VzU3RhdGVfIiwidXBkYXRlVUlGcmFtZV8iLCJ0aHVtYkNvbnRhaW5lclBvaW50ZXJIYW5kbGVyXyIsImludGVyYWN0aW9uU3RhcnRIYW5kbGVyXyIsImhhbmRsZURvd25fIiwiaGFuZGxlS2V5ZG93bl8iLCJoYW5kbGVGb2N1c18iLCJoYW5kbGVCbHVyXyIsImV2dE5hbWUiLCJnZXRTdGVwIiwiZ2V0TWluIiwiZ2V0TWF4Iiwic3RlcCIsImluZGl2aXNpYmxlIiwibGFzdFN0ZXBSYXRpbyIsImZsZXgiLCJ1cGRhdGVVSUZvckN1cnJlbnRWYWx1ZV8iLCJzZXRWYWx1ZV8iLCJzZXR1cFRyYWNrTWFya2VyIiwidG9nZ2xlQ2xhc3NfIiwiaXNOYU4iLCJzZXRJblRyYW5zaXRfIiwic2V0QWN0aXZlXyIsIm1vdmVIYW5kbGVyIiwiaGFuZGxlTW92ZV8iLCJ1cEhhbmRsZXIiLCJoYW5kbGVVcF8iLCJzZXRWYWx1ZUZyb21FdnRfIiwidGFyZ2V0VG91Y2hlcyIsImdldFBhZ2VYXyIsImNvbXB1dGVWYWx1ZUZyb21QYWdlWF8iLCJ4UG9zIiwicGN0Q29tcGxldGUiLCJrZXlJZCIsImdldEtleUlkXyIsImdldFZhbHVlRm9yS2V5SWRfIiwia2JkRXZ0IiwiZGVsdGEiLCJ2YWx1ZU5lZWRzVG9CZUZsaXBwZWQiLCJzaG91bGRGaXJlSW5wdXQiLCJmb3JjZSIsInZhbHVlU2V0VG9Cb3VuZGFyeSIsInF1YW50aXplXyIsIm51bVN0ZXBzIiwicXVhbnRpemVkVmFsIiwidHJhbnNsYXRlUHgiLCJ0cmFuc2Zvcm1Qcm9wIiwidHJhbnNpdGlvbmVuZEV2dE5hbWUiLCJvblRyYW5zaXRpb25FbmQiLCJpblRyYW5zaXQiLCJzaG91bGRCZVByZXNlbnQiLCJkaXNwbGF5TWFya2VycyIsImxheW91dE9uIiwibGF5b3V0T25Tb3VyY2UiLCJ0cmFja1N0eWxlcyIsImxhc3RUcmFja01hcmtlcnNTdHlsZXMiLCJ0aHVtYlN0eWxlcyIsIm1hcmtlclZhbHVlIiwiaXNEaXNjcmV0ZSIsImhhc01hcmtlcnMiLCJzZXRNaW4iLCJzZXRNYXgiLCJzZXRTdGVwIiwidGh1bWJDb250YWluZXIiLCJtZGNTbGlkZXIiLCJURVhUIiwiQUNUSU9OX1dSQVBQRVIiLCJBQ1RJT05fQlVUVE9OIiwiTVVMVElMSU5FIiwiQUNUSU9OX09OX0JPVFRPTSIsIlRFWFRfU0VMRUNUT1IiLCJBQ1RJT05fV1JBUFBFUl9TRUxFQ1RPUiIsIkFDVElPTl9CVVRUT05fU0VMRUNUT1IiLCJTSE9XX0VWRU5UIiwiSElERV9FVkVOVCIsIk1FU1NBR0VfVElNRU9VVCIsIk1EQ1NuYWNrYmFyRm91bmRhdGlvbiIsInNldEFyaWFIaWRkZW4iLCJ1bnNldEFyaWFIaWRkZW4iLCJzZXRBY3Rpb25BcmlhSGlkZGVuIiwidW5zZXRBY3Rpb25BcmlhSGlkZGVuIiwic2V0QWN0aW9uVGV4dCIsInNldE1lc3NhZ2VUZXh0Iiwic2V0Rm9jdXMiLCJ2aXNpYmlsaXR5SXNIaWRkZW4iLCJyZWdpc3RlckNhcHR1cmVkQmx1ckhhbmRsZXIiLCJkZXJlZ2lzdGVyQ2FwdHVyZWRCbHVySGFuZGxlciIsInJlZ2lzdGVyVmlzaWJpbGl0eUNoYW5nZUhhbmRsZXIiLCJkZXJlZ2lzdGVyVmlzaWJpbGl0eUNoYW5nZUhhbmRsZXIiLCJyZWdpc3RlckNhcHR1cmVkSW50ZXJhY3Rpb25IYW5kbGVyIiwiZGVyZWdpc3RlckNhcHR1cmVkSW50ZXJhY3Rpb25IYW5kbGVyIiwicmVnaXN0ZXJBY3Rpb25DbGlja0hhbmRsZXIiLCJkZXJlZ2lzdGVyQWN0aW9uQ2xpY2tIYW5kbGVyIiwibm90aWZ5U2hvdyIsIm5vdGlmeUhpZGUiLCJhY3Rpb25XYXNDbGlja2VkXyIsImRpc21pc3NPbkFjdGlvbl8iLCJmaXJzdEZvY3VzXyIsInBvaW50ZXJEb3duUmVjb2duaXplZF8iLCJzbmFja2Jhckhhc0ZvY3VzXyIsInNuYWNrYmFyRGF0YV8iLCJxdWV1ZV8iLCJhY3Rpb25DbGlja0hhbmRsZXJfIiwiaW52b2tlQWN0aW9uXyIsInZpc2liaWxpdHljaGFuZ2VIYW5kbGVyXyIsInRpbWVvdXRJZF8iLCJjbGVhbnVwXyIsInRpbWVvdXQiLCJoYW5kbGVQb3NzaWJsZVRhYktleWJvYXJkRm9jdXNfIiwiZGlzbWlzc09uQWN0aW9uIiwibWVzc2FnZSIsImFjdGlvbkhhbmRsZXIiLCJhY3Rpb25UZXh0IiwibXVsdGlsaW5lIiwiYWN0aW9uT25Cb3R0b20iLCJhY3Rpb25IYW5kbGVyXyIsInNldEFjdGlvbkhpZGRlbl8iLCJoaWphY2tGb2N1cyIsInNldEZvY3VzT25BY3Rpb25fIiwiYWxsb3dEaXNtaXNzYWwiLCJzaG93TmV4dF8iLCJzaGlmdCIsImlzSGlkZGVuIiwiYWxpZ25TdGFydCIsImhpZGRlbiIsImFjdGlvbkhpZGRlbiIsImJ1dHRvbiIsImV2ZW50U291cmNlIiwic2V0RGlzbWlzc09uQWN0aW9uIiwiZGlzbWlzc2VzT25BY3Rpb24iLCJtZGNTbmFja2JhciIsIm9uQ2hhbmdlZCIsIm1kY1N3aXRjaCIsIk1EQ1RhYkZvdW5kYXRpb24iLCJnZXRPZmZzZXRMZWZ0IiwiY29tcHV0ZWRXaWR0aF8iLCJjb21wdXRlZExlZnRfIiwiaXNBY3RpdmVfIiwicHJldmVudERlZmF1bHRPbkNsaWNrXyIsImlzQWN0aXZlIiwicHJldmVudERlZmF1bHRPbkNsaWNrIiwiaGFzSWNvbiIsImhhc1RleHQiLCJnZXRDb21wdXRlZFdpZHRoIiwiZ2V0Q29tcHV0ZWRMZWZ0Iiwic2V0QWN0aXZlIiwiaXNEZWZhdWx0UHJldmVudGVkT25DbGljayIsInByZXZlbnRzRGVmYXVsdE9uQ2xpY2siLCJzZXRQcmV2ZW50RGVmYXVsdE9uQ2xpY2siLCJtZWFzdXJlU2VsZiIsIm9mZnNldExlZnQiLCJ0YWIiLCJUQUJfU0VMRUNUT1IiLCJJTkRJQ0FUT1JfU0VMRUNUT1IiLCJNRENUYWJCYXJGb3VuZGF0aW9uIiwiYmluZE9uTURDVGFiU2VsZWN0ZWRFdmVudCIsInVuYmluZE9uTURDVGFiU2VsZWN0ZWRFdmVudCIsInNldFN0eWxlRm9ySW5kaWNhdG9yIiwiZ2V0T2Zmc2V0V2lkdGhGb3JJbmRpY2F0b3IiLCJnZXROdW1iZXJPZlRhYnMiLCJpc1RhYkFjdGl2ZUF0SW5kZXgiLCJzZXRUYWJBY3RpdmVBdEluZGV4IiwiaXNEZWZhdWx0UHJldmVudGVkT25DbGlja0ZvclRhYkF0SW5kZXgiLCJzZXRQcmV2ZW50RGVmYXVsdE9uQ2xpY2tGb3JUYWJBdEluZGV4IiwibWVhc3VyZVRhYkF0SW5kZXgiLCJnZXRDb21wdXRlZFdpZHRoRm9yVGFiQXRJbmRleCIsImdldENvbXB1dGVkTGVmdEZvclRhYkF0SW5kZXgiLCJpc0luZGljYXRvclNob3duXyIsImFjdGl2ZVRhYkluZGV4XyIsImFjdGl2ZVRhYkluZGV4IiwiZmluZEFjdGl2ZVRhYkluZGV4XyIsImZvckVhY2hUYWJJbmRleF8iLCJsYXlvdXRJbmRpY2F0b3JfIiwiaXNJbmRpY2F0b3JGaXJzdFJlbmRlciIsInRyYW5zbGF0ZUFtdEZvckFjdGl2ZVRhYkxlZnQiLCJzY2FsZUFtdEZvckFjdGl2ZVRhYldpZHRoIiwidHJhbnNmb3JtVmFsdWUiLCJpdGVyYXRvciIsIm51bVRhYnMiLCJzaG91bGRCcmVhayIsInByZXZBY3RpdmVUYWJJbmRleCIsImluZGljYXRvclByaW1hcnkiLCJpbmRpY2F0b3JBY2NlbnQiLCJpbmRpY2F0b3JTdHlsZXMiLCJ0YWJzIiwib25TZWxlY3QiLCJzd2l0Y2hUb1RhYkF0SW5kZXgiLCJpbmRpY2F0b3IiLCJyZXNldFRhYnMiLCJ0YWJFbGVtZW50cyIsIl9fdnVlX18iLCJnZXRBY3RpdmVUYWJJbmRleCIsIm1kY1RhYiIsIm1kY1RhYkJhciIsIk1EQ1RleHRGaWVsZEhlbHBlclRleHRBZGFwdGVyIiwiQVJJQV9ISURERU4iLCJST0xFIiwiSEVMUEVSX1RFWFRfUEVSU0lTVEVOVCIsIkhFTFBFUl9URVhUX1ZBTElEQVRJT05fTVNHIiwiTURDVGV4dEZpZWxkSGVscGVyVGV4dEZvdW5kYXRpb24iLCJyZW1vdmVBdHRyIiwic2V0Q29udGVudCIsImlzVmFsaWRhdGlvbiIsImlucHV0SXNWYWxpZCIsImhlbHBlclRleHRJc1BlcnNpc3RlbnQiLCJoZWxwZXJUZXh0SXNWYWxpZGF0aW9uTXNnIiwidmFsaWRhdGlvbk1zZ05lZWRzRGlzcGxheSIsImhpZGVfIiwiTURDVGV4dEZpZWxkSWNvbkFkYXB0ZXIiLCJJQ09OX0VWRU5UIiwiTURDVGV4dEZpZWxkSWNvbkZvdW5kYXRpb24iLCJub3RpZnlJY29uQWN0aW9uIiwiaGFuZGxlSW50ZXJhY3Rpb24iLCJNRENUZXh0RmllbGRBZGFwdGVyIiwib2JzZXJ2ZXIiLCJzaG91bGRTaGFrZSIsInNob3VsZEZsb2F0IiwibGFiZWxXaWR0aCIsIk1EQ0xpbmVSaXBwbGVBZGFwdGVyIiwiTElORV9SSVBQTEVfQUNUSVZFIiwiTElORV9SSVBQTEVfREVBQ1RJVkFUSU5HIiwiTURDTGluZVJpcHBsZUZvdW5kYXRpb24iLCJoYW5kbGVUcmFuc2l0aW9uRW5kIiwieENvb3JkaW5hdGUiLCJhdHRyaWJ1dGVTdHJpbmciLCJpc0RlYWN0aXZhdGluZyIsIk1EQ0Zsb2F0aW5nTGFiZWxBZGFwdGVyIiwiTEFCRUxfU0hBS0UiLCJNRENGbG9hdGluZ0xhYmVsRm91bmRhdGlvbiIsInNoYWtlQW5pbWF0aW9uRW5kSGFuZGxlcl8iLCJoYW5kbGVTaGFrZUFuaW1hdGlvbkVuZF8iLCJNRENOb3RjaGVkT3V0bGluZUFkYXB0ZXIiLCJQQVRIX1NFTEVDVE9SIiwiSURMRV9PVVRMSU5FX1NFTEVDVE9SIiwiTURDTm90Y2hlZE91dGxpbmVGb3VuZGF0aW9uIiwiZ2V0SGVpZ2h0Iiwic2V0T3V0bGluZVBhdGhBdHRyIiwiZ2V0SWRsZU91dGxpbmVTdHlsZVZhbHVlIiwibm90Y2hXaWR0aCIsInJhZGl1c1N0eWxlVmFsdWUiLCJyYWRpdXMiLCJjb3JuZXJXaWR0aCIsImxlYWRpbmdTdHJva2VMZW5ndGgiLCJwYWRkZWROb3RjaFdpZHRoIiwicGF0aE1pZGRsZSIsInBhdGgiLCJBUklBX0NPTlRST0xTIiwiSU5QVVRfU0VMRUNUT1IiLCJJQ09OX1NFTEVDVE9SIiwiT1VUTElORV9TRUxFQ1RPUiIsIkRFTlNFIiwiRk9DVVNFRCIsIklOVkFMSUQiLCJPVVRMSU5FRCIsIkxBQkVMX1NDQUxFIiwiREVOU0VfTEFCRUxfU0NBTEUiLCJWQUxJREFUSU9OX0FUVFJfV0hJVEVMSVNUIiwiTURDVGV4dEZpZWxkRm91bmRhdGlvbiIsImlzVmFsaWQiLCJpc0JhZElucHV0XyIsInJlZ2lzdGVyVGV4dEZpZWxkSW50ZXJhY3Rpb25IYW5kbGVyIiwiZGVyZWdpc3RlclRleHRGaWVsZEludGVyYWN0aW9uSGFuZGxlciIsInJlZ2lzdGVySW5wdXRJbnRlcmFjdGlvbkhhbmRsZXIiLCJkZXJlZ2lzdGVySW5wdXRJbnRlcmFjdGlvbkhhbmRsZXIiLCJyZWdpc3RlclZhbGlkYXRpb25BdHRyaWJ1dGVDaGFuZ2VIYW5kbGVyIiwiZGVyZWdpc3RlclZhbGlkYXRpb25BdHRyaWJ1dGVDaGFuZ2VIYW5kbGVyIiwiZ2V0TmF0aXZlSW5wdXQiLCJhY3RpdmF0ZUxpbmVSaXBwbGUiLCJkZWFjdGl2YXRlTGluZVJpcHBsZSIsInNldExpbmVSaXBwbGVUcmFuc2Zvcm1PcmlnaW4iLCJzaGFrZUxhYmVsIiwiZ2V0TGFiZWxXaWR0aCIsImhhc091dGxpbmUiLCJ1cGRhdGVPdXRsaW5lUGF0aCIsImZvdW5kYXRpb25NYXAiLCJoZWxwZXJUZXh0XyIsImhlbHBlclRleHQiLCJpY29uXyIsInJlY2VpdmVkVXNlcklucHV0XyIsInVzZUN1c3RvbVZhbGlkaXR5Q2hlY2tpbmdfIiwiaXNWYWxpZF8iLCJpbnB1dEZvY3VzSGFuZGxlcl8iLCJhY3RpdmF0ZUZvY3VzIiwiaW5wdXRCbHVySGFuZGxlcl8iLCJkZWFjdGl2YXRlRm9jdXMiLCJpbnB1dElucHV0SGFuZGxlcl8iLCJhdXRvQ29tcGxldGVGb2N1cyIsInNldFBvaW50ZXJYT2Zmc2V0XyIsInRleHRGaWVsZEludGVyYWN0aW9uSGFuZGxlcl8iLCJoYW5kbGVUZXh0RmllbGRJbnRlcmFjdGlvbiIsInZhbGlkYXRpb25BdHRyaWJ1dGVDaGFuZ2VIYW5kbGVyXyIsIm11dGF0aW9ucyIsImhhbmRsZVZhbGlkYXRpb25BdHRyaWJ1dGVNdXRhdGlvbl8iLCJ2YWxpZGF0aW9uT2JzZXJ2ZXJfIiwibXV0YXRpb25zTGlzdCIsIm11dGF0aW9uIiwic3R5bGVWYWxpZGl0eV8iLCJpc0RlbnNlIiwibGFiZWxTY2FsZSIsInN0eWxlRm9jdXNlZF8iLCJ1cGRhdGVPdXRsaW5lIiwic2hvd1RvU2NyZWVuUmVhZGVyIiwidGFyZ2V0Q2xpZW50UmVjdCIsImV2dENvb3JkcyIsImNsaWVudFgiLCJjbGllbnRZIiwiaW5wdXQiLCJnZXROYXRpdmVJbnB1dF8iLCJzaG91bGRSZW1vdmVMYWJlbEZsb2F0IiwiaXNOYXRpdmVJbnB1dFZhbGlkXyIsInN0eWxlRGlzYWJsZWRfIiwidmFsaWRpdHkiLCJiYWRJbnB1dCIsInZhbGlkIiwic2V0VmFsaWRpdHkiLCJoZWxwdGV4dCIsImhlbHB0ZXh0UGVyc2lzdGVudCIsImhlbHB0ZXh0VmFsaWRhdGlvbiIsIm91dGxpbmUiLCJmdWxsd2lkdGgiLCJtaW5sZW5ndGgiLCJtYXhsZW5ndGgiLCJyb3dzIiwiY29scyIsInJlYWRvbmx5IiwiYXV0b2NvbXBsZXRlIiwiYXV0b2ZvY3VzIiwicm9vdENsYXNzZXMiLCJpbnB1dENsYXNzZXMiLCJib3R0b21DbGFzc2VzIiwiaGVscENsYXNzZXMiLCJvdXRsaW5lUGF0aEF0dHIiLCJzZXRWYWxpZCIsImhlbHBlclRleHRGb3VuZGF0aW9uIiwic2V0UGVyc2lzdGVudCIsInNldFZhbGlkYXRpb24iLCJ1cGRhdGVWYWx1ZSIsImlucHV0QXR0cnMiLCJpbnB1dFBsYWNlSG9sZGVyIiwiaW5wdXRBcmlhQ29udHJvbHMiLCJoZWxwIiwiX3VpZCIsImhhc0JvdHRvbUxpbmUiLCJoYXNMZWFkaW5nSWNvbiIsImhhc1RyYWlsaW5nSWNvbiIsImxhYmVsQ2xhc3Nlc1VwZ3JhZGVkIiwiaWNvbkZvdW5kYXRpb24iLCJvdXRsaW5lRm91bmRhdGlvbiIsImlkbGVPdXRsaW5lRWxlbWVudCIsIm91dGxpbmVJZGxlIiwiTURDVGV4dGZpZWxkRm91bmRhdGlvbiIsInNldFJpcHBsZUNlbnRlciIsInRhcmdldE5vZGUiLCJhdHRyaWJ1dGVzIiwic2hha2UiLCJmbG9hdCIsInVwZGF0ZVN2Z1BhdGgiLCJib3R0b21MaW5lIiwidGV4dGJveCIsIm1kY1RleHRGaWVsZCIsIlRIRU1FX0NPTE9SUyIsIlRIRU1FX1NUWUxFUyIsImNvbG9yIiwiYmFja2dyb3VuZCIsIm1kY1RoZW1lIiwiRklYRUQiLCJGSVhFRF9MQVNUUk9XIiwiRklYRURfQVRfTEFTVF9ST1ciLCJUT09MQkFSX1JPV19GTEVYSUJMRSIsIkZMRVhJQkxFX0RFRkFVTFRfQkVIQVZJT1IiLCJGTEVYSUJMRV9NQVgiLCJGTEVYSUJMRV9NSU4iLCJUSVRMRV9TRUxFQ1RPUiIsIkZJUlNUX1JPV19TRUxFQ1RPUiIsIk1BWF9USVRMRV9TSVpFIiwiTUlOX1RJVExFX1NJWkUiLCJUT09MQkFSX1JPV19IRUlHSFQiLCJUT09MQkFSX1JPV19NT0JJTEVfSEVJR0hUIiwiVE9PTEJBUl9NT0JJTEVfQlJFQUtQT0lOVCIsIk1EQ1Rvb2xiYXJGb3VuZGF0aW9uIiwicmVnaXN0ZXJTY3JvbGxIYW5kbGVyIiwiZGVyZWdpc3RlclNjcm9sbEhhbmRsZXIiLCJnZXRWaWV3cG9ydFdpZHRoIiwiZ2V0Vmlld3BvcnRTY3JvbGxZIiwiZ2V0T2Zmc2V0SGVpZ2h0IiwiZ2V0Rmlyc3RSb3dFbGVtZW50T2Zmc2V0SGVpZ2h0Iiwic2V0U3R5bGVGb3JUaXRsZUVsZW1lbnQiLCJzZXRTdHlsZUZvckZsZXhpYmxlUm93RWxlbWVudCIsInNldFN0eWxlRm9yRml4ZWRBZGp1c3RFbGVtZW50IiwiY2hlY2tSb3dIZWlnaHRfIiwic2Nyb2xsSGFuZGxlcl8iLCJ1cGRhdGVUb29sYmFyU3R5bGVzXyIsImNoZWNrUm93SGVpZ2h0RnJhbWVfIiwic2Nyb2xsRnJhbWVfIiwiZXhlY3V0ZWRMYXN0Q2hhbmdlXyIsImNhbGN1bGF0aW9uc18iLCJ0b29sYmFyUm93SGVpZ2h0IiwidG9vbGJhclJhdGlvIiwiZmxleGlibGVFeHBhbnNpb25SYXRpbyIsIm1heFRyYW5zbGF0ZVlSYXRpbyIsInNjcm9sbFRocmVzaG9sZFJhdGlvIiwidG9vbGJhckhlaWdodCIsImZsZXhpYmxlRXhwYW5zaW9uSGVpZ2h0IiwibWF4VHJhbnNsYXRlWURpc3RhbmNlIiwic2Nyb2xsVGhyZXNob2xkIiwiZml4ZWRfIiwiZml4ZWRMYXN0cm93XyIsImhhc0ZsZXhpYmxlUm93XyIsInVzZUZsZXhEZWZhdWx0QmVoYXZpb3JfIiwiaW5pdEtleVJhdGlvXyIsInNldEtleUhlaWdodHNfIiwic2Nyb2xsVG9wIiwibmV3VG9vbGJhclJvd0hlaWdodCIsImdldFJvd0hlaWdodF8iLCJ1cGRhdGVBZGp1c3RFbGVtZW50U3R5bGVzIiwiaGFzU2Nyb2xsZWRPdXRPZlRocmVzaG9sZCIsInNjcm9sbGVkT3V0T2ZUaHJlc2hvbGRfIiwiZ2V0RmxleGlibGVFeHBhbnNpb25SYXRpb18iLCJ1cGRhdGVUb29sYmFyRmxleGlibGVTdGF0ZV8iLCJ1cGRhdGVUb29sYmFyRml4ZWRTdGF0ZV8iLCJ1cGRhdGVGbGV4aWJsZVJvd0VsZW1lbnRTdHlsZXNfIiwiZmlyc3RSb3dNYXhSYXRpbyIsImJyZWFrcG9pbnQiLCJ0cmFuc2xhdGVEaXN0YW5jZSIsInVwZGF0ZUVsZW1lbnRTdHlsZXNEZWZhdWx0QmVoYXZpb3JfIiwibWF4VGl0bGVTaXplIiwibWluVGl0bGVTaXplIiwiY3VycmVudFRpdGxlU2l6ZSIsIndhdGVyZmFsbCIsImZpeGVkTGFzdHJvdyIsImZsZXhpYmxlIiwiZmxleGlibGVEZWZhdWx0Iiwicm9vdFN0eWxlcyIsImFkanVzdFN0eWxlcyIsInNocmlua1RvRml0IiwibWRjVG9vbGJhciIsIm1kY1Rvb2xiYXJSb3ciLCJtZGNUb29sYmFyU2VjdGlvbiIsIm1kY1Rvb2xiYXJNZW51SWNvbiIsIm1kY1Rvb2xiYXJUaXRsZSIsIm1kY1Rvb2xiYXJJY29uIiwiTkFWSUdBVElPTl9FVkVOVCIsIlJPT1RfU0VMRUNUT1IiLCJOQVZJR0FUSU9OX0lDT05fU0VMRUNUT1IiLCJBQ1RJT05fSVRFTV9TRUxFQ1RPUiIsIlNIT1JUX0NMQVNTIiwiU0hPUlRfSEFTX0FDVElPTl9JVEVNX0NMQVNTIiwiU0hPUlRfQ09MTEFQU0VEX0NMQVNTIiwiTURDVG9wQXBwQmFyQWRhcHRlciIsIk1EQ1RvcEFwcEJhckZvdW5kYXRpb24iLCJyZWdpc3Rlck5hdmlnYXRpb25JY29uSW50ZXJhY3Rpb25IYW5kbGVyIiwiZGVyZWdpc3Rlck5hdmlnYXRpb25JY29uSW50ZXJhY3Rpb25IYW5kbGVyIiwibm90aWZ5TmF2aWdhdGlvbkljb25DbGlja2VkIiwiZ2V0VG90YWxBY3Rpb25JdGVtcyIsIm5hdkNsaWNrSGFuZGxlcl8iLCJNRENTaG9ydFRvcEFwcEJhckZvdW5kYXRpb24iLCJpc0NvbGxhcHNlZCIsInNob3J0QXBwQmFyU2Nyb2xsSGFuZGxlcl8iLCJpc0Fsd2F5c0NvbGxhcHNlZCIsImN1cnJlbnRTY3JvbGwiLCJzaG9ydCIsInNob3J0Q29sbGFwc2VkIiwibmF2aWdhdGlvbkljb24iLCJoYXZlTmF2aWdhdGlvbkljb24iLCJuYXZpY29uQ2xhc3NlcyIsImFjdGlvbmljb25DbGFzc2VzIiwibWRjVG9wQXBwQmFyIiwibWRjVG9wQXBwQmFyQWN0aW9uIiwidHlwb3MiLCJtZGNUeXBvTWl4aW4iLCJ0eXBvIiwiYWRqdXN0TWFyZ2luIiwiJGF0dHJzIiwibWRjVHlwb1Byb3BNaXhpbiIsImRlZmF1bHRUYWciLCJkZWZhdWx0VHlwbyIsInZhbGlkVHlwb3MiLCJtZGNUZXh0U2VjdGlvbiIsIm1kY1RleHQiLCJtZGNEaXNwbGF5IiwibWRjSGVhZGxpbmUiLCJtZGNUaXRsZSIsIm1kY1N1YkhlYWRpbmciLCJtZGNCb2R5IiwibWRjQ2FwdGlvbiIsIlZ1ZU1EQ0J1dHRvbiIsIlZ1ZU1EQ0NhcmQiLCJWdWVNRENDaGVja2JveCIsIlZ1ZU1EQ0NoaXBTZXQiLCJWdWVNRENEaWFsb2ciLCJWdWVNRENEcmF3ZXIiLCJWdWVNRENFbGV2YXRpb24iLCJWdWVNRENGYWIiLCJWdWVNRENHcmlkTGlzdCIsIlZ1ZU1EQ0ljb24iLCJWdWVNRENJY29uVG9nZ2xlIiwiVnVlTURDTGF5b3V0QXBwIiwiVnVlTURDTGF5b3V0R3JpZCIsIlZ1ZU1EQ0xpbmVhclByb2dyZXNzIiwiVnVlTURDTGlzdCIsIlZ1ZU1EQ01lbnUiLCJWdWVNRENSYWRpbyIsIlZ1ZU1EQ1JpcHBsZSIsIlZ1ZU1EQ1NlbGVjdCIsIlZ1ZU1EQ1NsaWRlciIsIlZ1ZU1EQ1NuYWNrYmFyIiwiVnVlTURDU3dpdGNoIiwiVnVlTURDVGFicyIsIlZ1ZU1EQ1RleHRmaWVsZCIsIlZ1ZU1EQ1RoZW1lIiwiVnVlTURDVG9vbGJhciIsIlZ1ZU1EQ1RvcEFwcEJhciIsIlZ1ZU1EQ1R5cG9ncmFwaHkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBQU8sU0FBU0EsUUFBVCxDQUFtQkMsTUFBbkIsRUFBMkI7RUFDaEM7RUFDQSxNQUFJQyxPQUFPLElBQVg7RUFDQSxNQUFJLE9BQU9DLE1BQVAsS0FBa0IsV0FBdEIsRUFBbUM7RUFDakNELFdBQU9DLE9BQU9DLEdBQWQ7RUFDRCxHQUZELE1BRU8sSUFBSSxPQUFPQyxNQUFQLEtBQWtCLFdBQXRCLEVBQW1DO0VBQ3hDO0VBQ0FILFdBQU9HLE9BQU9ELEdBQWQ7RUFDRDtFQUNELE1BQUlGLElBQUosRUFBVTtFQUNSQSxTQUFLSSxHQUFMLENBQVNMLE1BQVQ7RUFDRDtFQUNGOztFQ1pNLFNBQVNNLFVBQVQsQ0FBcUJDLFVBQXJCLEVBQWlDO0VBQ3RDLFNBQU87RUFDTEMsYUFBUyxRQURKO0VBRUxDLGFBQVMsaUJBQUNDLEVBQUQsRUFBUTtFQUNmLFdBQUssSUFBSUMsR0FBVCxJQUFnQkosVUFBaEIsRUFBNEI7RUFDMUIsWUFBSUssWUFBWUwsV0FBV0ksR0FBWCxDQUFoQjtFQUNFRCxXQUFHRSxTQUFILENBQWFBLFVBQVVDLElBQXZCLEVBQTRCRCxTQUE1QjtFQUNIO0VBQ0YsS0FQ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
